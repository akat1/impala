cscope 15 /mnt/linux/takeshi/OS/trunk/czysty/usr/bin/sh/shh/sh               0000342263
	@alias.c

33 #i‚de‡
löt


35 
	gsccsid
[] = "@(#)alias.c 8.3 (Berkeley) 5/4/95";

38 
	~<sys/cdefs.h
>

39 
__FBSDID
("$FreeBSD: src/bin/sh/alias.c,v 1.20.6.1 2008/11/25 02:59:29 kensmith Exp $");

41 
	~<°dlib.h
>

42 
	~"shñl.h
"

43 
	~"öput.h
"

44 
	~"ouçut.h
"

45 
	~"îr‹.h
"

46 
	~"memÆloc.h
"

47 
	~"my°rög.h
"

48 
	~"Æüs.h
"

49 
	~"›ti⁄s.h
"

51 
	#ATABSIZE
 39

	)

53 
STATIC
 
Æüs
 *
	g©ab
[
ATABSIZE
];

55 
STATIC
 
£èlüs
(*, *);

56 
STATIC
 
u«lüs
(*);

57 
STATIC
 
Æüs
 **
hashÆüs
(*);

59 
STATIC


61 
	$£èlüs
(*
«me
, *
vÆ
)

63 
Æüs
 *
≠
, **
≠p
;

65 
≠p
 = 
	`hashÆüs
(
«me
);

66 
≠
 = *
≠p
;áp;á∞≠->
√xt
) {

67 i‡(
	`equÆ
(
«me
, 
≠
->name)) {

68 
INTOFF
;

69 
	`ck‰ì
(
≠
->
vÆ
);

70 
≠
->
vÆ
 = 
	`ßve°r
(val);

71 
INTON
;

76 
INTOFF
;

77 
≠
 = 
	`ckmÆloc
( (
Æüs
));

78 
≠
->
«me
 = 
	`ßve°r
(name);

96 #ifde‡
nŸyë


97 
≠
->
vÆ
 = 
	`ßve°r
(val);

100 
Àn
 = 
	`°æí
(
vÆ
);

101 
≠
->
vÆ
 = 
	`ckmÆloc
(
Àn
 + 2);

102 
	`mem˝y
(
≠
->
vÆ
, vÆ, 
Àn
);

103 
≠
->
vÆ
[
Àn
] = ' ';

104 
≠
->
vÆ
[
Àn
+1] = '\0';

107 
≠
->
Êag
 = 0;

108 
≠
->
√xt
 = *
≠p
;

109 *
≠p
 = 
≠
;

110 
INTON
;

111 
	}
}

113 
STATIC
 

114 
	$u«lüs
(*
«me
)

116 
Æüs
 *
≠
, **
≠p
;

118 
≠p
 = 
	`hashÆüs
(
«me
);

120 
≠
 = *
≠p
;áp;áµ = &◊p->
√xt
),áp =áp->next) {

121 i‡(
	`equÆ
(
«me
, 
≠
->name)) {

129 i‡(
≠
->
Êag
 & 
ALIASINUSE
)

130 *
≠
->
«me
 = '\0';

132 
INTOFF
;

133 *
≠p
 = 
≠
->
√xt
;

134 
	`ck‰ì
(
≠
->
«me
);

135 
	`ck‰ì
(
≠
->
vÆ
);

136 
	`ck‰ì
(
≠
);

137 
INTON
;

144 
	}
}

146 #ifde‡
mköô


147 
MKINIT
 
rmÆü£s
();

149 
	gSHELLPROC
 {

150 
rmÆü£s
();

155 
	$rmÆü£s
()

157 
Æüs
 *
≠
, *
tmp
;

158 
i
;

160 
INTOFF
;

161 
i
 = 0; i < 
ATABSIZE
; i++) {

162 
≠
 = 
©ab
[
i
];

163 
©ab
[
i
] = 
NULL
;

164 
≠
) {

165 
	`ck‰ì
(
≠
->
«me
);

166 
	`ck‰ì
(
≠
->
vÆ
);

167 
tmp
 = 
≠
;

168 
≠
 =áp->
√xt
;

169 
	`ck‰ì
(
tmp
);

172 
INTON
;

173 
	}
}

175 
Æüs
 *

176 
	$looku∑lüs
(*
«me
, 
check
)

178 
Æüs
 *
≠
 = *
	`hashÆüs
(
«me
);

180 ; 
≠
;á∞≠->
√xt
) {

181 i‡(
	`equÆ
(
«me
, 
≠
->name)) {

182 i‡(
check
 && (
≠
->
Êag
 & 
ALIASINUSE
))

183  (
NULL
);

184  (
≠
);

188  (
NULL
);

189 
	}
}

195 
	$Æüscmd
(
¨gc
, **
¨gv
)

197 *
n
, *
v
;

198 
ªt
 = 0;

199 
Æüs
 *
≠
;

201 i‡(
¨gc
 == 1) {

202 
i
;

204 
i
 = 0; i < 
ATABSIZE
; i++)

205 
≠
 = 
©ab
[
i
];áp;á∞≠->
√xt
) {

206 i‡(*
≠
->
«me
 != '\0') {

207 
	`out1fmt
("Æü†%s=", 
≠
->
«me
);

208 
	`out1q°r
(
≠
->
vÆ
);

209 
	`out1c
('\n');

214 (
n
 = *++
¨gv
Ë!
NULL
) {

215 i‡((
v
 = 
	`°rchr
(
n
+1, '=')Ë=
NULL
)

216 i‡((
≠
 = 
	`looku∑lüs
(
n
, 0)Ë=
NULL
) {

217 
	`outfmt
(
out2
, "Æüs: %†nŸ found\n", 
n
);

218 
ªt
 = 1;

220 
	`out1fmt
("Æü†%s=", 
n
);

221 
	`out1q°r
(
≠
->
vÆ
);

222 
	`out1c
('\n');

225 *
v
++ = '\0';

226 
	`£èlüs
(
n
, 
v
);

230  (
ªt
);

231 
	}
}

234 
	$u«lüscmd
(
¨gc
 
__unu£d
, **
¨gv
 __unused)

236 
i
;

238 (
i
 = 
	`√xt›t
("a")) != '\0') {

239 i‡(
i
 == 'a') {

240 
	`rmÆü£s
();

244 
i
 = 0; *
¨g±r
;árgptr++)

245 
i
 |
	`u«lüs
(*
¨g±r
);

247  (
i
);

248 
	}
}

250 
STATIC
 
Æüs
 **

251 
	$hashÆüs
(*
p
)

253 
hashvÆ
;

255 
hashvÆ
 = *
p
 << 4;

256 *
p
)

257 
hashvÆ
+*
p
++;

258  &
©ab
[
hashvÆ
 % 
ATABSIZE
];

259 
	}
}

	@alias.h

36 
	#ALIASINUSE
 1

	)

38 
	sÆüs
 {

39 
Æüs
 *
	m√xt
;

40 *
	m«me
;

41 *
	mvÆ
;

42 
	mÊag
;

45 
Æüs
 *
looku∑lüs
(*, );

46 
Æüscmd
(, **);

47 
u«lüscmd
(, **);

48 
rmÆü£s
();

	@arith.h

33 
	~"shñl.h
"

35 
	#DIGITS
(
v¨
Ë(3 + (2 + 
CHAR_BIT
 * ((v¨))Ë/ 3)

	)

37 *
¨ôh_buf
, *
¨ôh_°¨tbuf
;

39 
¨ôh_t
 
¨ôh
(*);

40 
¨ôh_Àx_ª£t
();

41 
expcmd
(, **);

	@arith.y

35 #i‚de‡
löt


36 
	gsccsid
[] = "@(#)arith.y 8.3 (Berkeley) 5/4/95";

40 
	~<sys/cdefs.h
>

41 
__FBSDID
("$FreeBSD: src/bin/sh/arith.y,v 1.21.2.1.2.1 2008/11/25 02:59:29 kensmith Exp $");

43 
	~<limôs.h
>

44 
	~<°dio.h
>

46 
	~"¨ôh.h
"

47 
	~"shñl.h
"

48 
	~"v¨.h
"

51 
¨ôh_t
 
l_vÆue
;

52 * 
s_vÆue
;

54 %
tokí
 <
l_vÆue
> 
ARITH_NUM
 
ARITH_LPAREN
 
ARITH_RPAREN


55 %
tokí
 <
s_vÆue
> 
ARITH_VAR


57 %
ty≥
 <
l_vÆue
> 
ex¥


58 %
right
 
ARITH_ASSIGN


59 %
right
 
ARITH_ADDASSIGN
 
ARITH_SUBASSIGN


60 %
right
 
ARITH_MULASSIGN
 
ARITH_DIVASSIGN
 
ARITH_REMASSIGN


61 %
right
 
ARITH_RSHASSIGN
 
ARITH_LSHASSIGN


62 %
right
 
ARITH_BANDASSIGN
 
ARITH_BXORASSIGN
 
ARITH_BORASSIGN


63 %
À·
 
ARITH_OR


64 %
À·
 
ARITH_AND


65 %
À·
 
ARITH_BOR


66 %
À·
 
ARITH_BXOR


67 %
À·
 
ARITH_BAND


68 %
À·
 
ARITH_EQ
 
ARITH_NE


69 %
À·
 
ARITH_LT
 
ARITH_GT
 
ARITH_GE
 
ARITH_LE


70 %
À·
 
ARITH_LSHIFT
 
ARITH_RSHIFT


71 %
À·
 
ARITH_ADD
 
ARITH_SUB


72 %
À·
 
ARITH_MUL
 
ARITH_DIV
 
ARITH_REM


73 %
À·
 
ARITH_UNARYMINUS
 
ARITH_UNARYPLUS
 
ARITH_NOT
 
ARITH_BNOT


74 %% /* 
	$yy∑r£
 */ 
	`yyÀx
()

76 
exp
:

77 
ex¥


79 *
YYPARSE_PARAM
 = 
$1
;

84 
ex¥
:

85 
ARITH_LPAREN
 
ex¥
 
ARITH_RPAREN


86 { 
$$
 = 
$2
; } |

87 
ex¥
 
ARITH_OR
Éxpr

88 { 
$$
 = 
$1
 ? $1 : 
$3
 ? $3 : 0; } |

89 
ex¥
 
ARITH_AND
Éxpr

90 { 
$$
 = 
$1
 ? ( 
$3
 ? $3 : 0 ) : 0; } |

91 
ex¥
 
ARITH_BOR
Éxpr

92 { 
$$
 = 
$1
 | 
$3
; } |

93 
ex¥
 
ARITH_BXOR
Éxpr

94 { 
$$
 = 
$1
 ^ 
$3
; } |

95 
ex¥
 
ARITH_BAND
Éxpr

96 { 
$$
 = 
$1
 & 
$3
; } |

97 
ex¥
 
ARITH_EQ
Éxpr

98 { 
$$
 = 
$1
 =
$3
; } |

99 
ex¥
 
ARITH_GT
Éxpr

100 { 
$$
 = 
$1
 > 
$3
; } |

101 
ex¥
 
ARITH_GE
Éxpr

102 { 
$$
 = 
$1
 >
$3
; } |

103 
ex¥
 
ARITH_LT
Éxpr

104 { 
$$
 = 
$1
 < 
$3
; } |

105 
ex¥
 
ARITH_LE
Éxpr

106 { 
$$
 = 
$1
 <
$3
; } |

107 
ex¥
 
ARITH_NE
Éxpr

108 { 
$$
 = 
$1
 !
$3
; } |

109 
ex¥
 
ARITH_LSHIFT
Éxpr

110 { 
$$
 = 
$1
 << 
$3
; } |

111 
ex¥
 
ARITH_RSHIFT
Éxpr

112 { 
$$
 = 
$1
 >> 
$3
; } |

113 
ex¥
 
ARITH_ADD
Éxpr

114 { 
$$
 = 
$1
 + 
$3
; } |

115 
ex¥
 
ARITH_SUB
Éxpr

116 { 
$$
 = 
$1
 - 
$3
; } |

117 
ex¥
 
ARITH_MUL
Éxpr

118 { 
$$
 = 
$1
 * 
$3
; } |

119 
ex¥
 
ARITH_DIV
Éxpr

121 i‡(
$3
 == 0)

122 
	`yyîr‹
("division by zero");

123 
$$
 = 
$1
 / 
$3
;

125 
ex¥
 
ARITH_REM
Éxpr

127 i‡(
$3
 == 0)

128 
	`yyîr‹
("division by zero");

129 
$$
 = 
$1
 % 
$3
;

131 
ARITH_NOT
 
ex¥


132 { 
$$
 = !(
$2
); } |

133 
ARITH_BNOT
 
ex¥


134 { 
$$
 = ~(
$2
); } |

135 
ARITH_SUB
 
ex¥
 %
¥ec
 
ARITH_UNARYMINUS


136 { 
$$
 = -(
$2
); } |

137 
ARITH_ADD
 
ex¥
 %
¥ec
 
ARITH_UNARYPLUS


138 { 
$$
 = 
$2
; } |

139 
ARITH_NUM
 |

140 
ARITH_VAR


142 *
p
;

143 
¨ôh_t
 
¨ôh_vÆ
;

144 *
°r_vÆ
;

146 i‡(
	`lookupv¨
(
$1
Ë=
NULL
)

147 
	`£tv¨ß„
(
$1
, "0", 0);

148 
°r_vÆ
 = 
	`lookupv¨
(
$1
);

149 
¨ôh_vÆ
 = 
	`°πﬂrôh_t
(
°r_vÆ
, &
p
, 0);

154 i‡(*
p
 != '\0')

155 
	`yyîr‹
("variable conversionÉrror");

156 
$$
 = 
¨ôh_vÆ
;

158 
ARITH_VAR
 
ARITH_ASSIGN
 
ex¥


160 i‡(
	`¨ôh_assign
(
$1
, 
$3
) != 0)

161 
	`yyîr‹
("variableássignmentÉrror");

162 
$$
 = 
$3
;

164 
ARITH_VAR
 
ARITH_ADDASSIGN
 
ex¥


166 
¨ôh_t
 
vÆue
;

168 
vÆue
 = 
	`©ﬂrôh_t
(
	`lookupv¨
(
$1
)Ë+ 
$3
;

169 i‡(
	`¨ôh_assign
(
$1
, 
vÆue
) != 0)

170 
	`yyîr‹
("variableássignmentÉrror");

171 
$$
 = 
vÆue
;

173 
ARITH_VAR
 
ARITH_SUBASSIGN
 
ex¥


175 
¨ôh_t
 
vÆue
;

177 
vÆue
 = 
	`©ﬂrôh_t
(
	`lookupv¨
(
$1
)Ë- 
$3
;

178 i‡(
	`¨ôh_assign
(
$1
, 
vÆue
) != 0)

179 
	`yyîr‹
("variableássignmentÉrror");

180 
$$
 = 
vÆue
;

182 
ARITH_VAR
 
ARITH_MULASSIGN
 
ex¥


184 
¨ôh_t
 
vÆue
;

186 
vÆue
 = 
	`©ﬂrôh_t
(
	`lookupv¨
(
$1
)Ë* 
$3
;

187 i‡(
	`¨ôh_assign
(
$1
, 
vÆue
) != 0)

188 
	`yyîr‹
("variableássignmentÉrror");

189 
$$
 = 
vÆue
;

191 
ARITH_VAR
 
ARITH_DIVASSIGN
 
ex¥


193 
¨ôh_t
 
vÆue
;

195 i‡(
$3
 == 0)

196 
	`yyîr‹
("division by zero");

198 
vÆue
 = 
	`©ﬂrôh_t
(
	`lookupv¨
(
$1
)Ë/ 
$3
;

199 i‡(
	`¨ôh_assign
(
$1
, 
vÆue
) != 0)

200 
	`yyîr‹
("variableássignmentÉrror");

201 
$$
 = 
vÆue
;

203 
ARITH_VAR
 
ARITH_REMASSIGN
 
ex¥


205 
¨ôh_t
 
vÆue
;

207 i‡(
$3
 == 0)

208 
	`yyîr‹
("division by zero");

210 
vÆue
 = 
	`©ﬂrôh_t
(
	`lookupv¨
(
$1
)Ë% 
$3
;

211 i‡(
	`¨ôh_assign
(
$1
, 
vÆue
) != 0)

212 
	`yyîr‹
("variableássignmentÉrror");

213 
$$
 = 
vÆue
;

215 
ARITH_VAR
 
ARITH_RSHASSIGN
 
ex¥


217 
¨ôh_t
 
vÆue
;

219 
vÆue
 = 
	`©ﬂrôh_t
(
	`lookupv¨
(
$1
)Ë>> 
$3
;

220 i‡(
	`¨ôh_assign
(
$1
, 
vÆue
) != 0)

221 
	`yyîr‹
("variableássignmentÉrror");

222 
$$
 = 
vÆue
;

224 
ARITH_VAR
 
ARITH_LSHASSIGN
 
ex¥


226 
¨ôh_t
 
vÆue
;

228 
vÆue
 = 
	`©ﬂrôh_t
(
	`lookupv¨
(
$1
)Ë<< 
$3
;

229 i‡(
	`¨ôh_assign
(
$1
, 
vÆue
) != 0)

230 
	`yyîr‹
("variableássignmentÉrror");

231 
$$
 = 
vÆue
;

233 
ARITH_VAR
 
ARITH_BANDASSIGN
 
ex¥


235 
¨ôh_t
 
vÆue
;

237 
vÆue
 = 
	`©ﬂrôh_t
(
	`lookupv¨
(
$1
)Ë& 
$3
;

238 i‡(
	`¨ôh_assign
(
$1
, 
vÆue
) != 0)

239 
	`yyîr‹
("variableássignmentÉrror");

240 
$$
 = 
vÆue
;

242 
ARITH_VAR
 
ARITH_BXORASSIGN
 
ex¥


244 
¨ôh_t
 
vÆue
;

246 
vÆue
 = 
	`©ﬂrôh_t
(
	`lookupv¨
(
$1
)Ë^ 
$3
;

247 i‡(
	`¨ôh_assign
(
$1
, 
vÆue
) != 0)

248 
	`yyîr‹
("variableássignmentÉrror");

249 
$$
 = 
vÆue
;

251 
ARITH_VAR
 
ARITH_BORASSIGN
 
ex¥


253 
¨ôh_t
 
vÆue
;

255 
vÆue
 = 
	`©ﬂrôh_t
(
	`lookupv¨
(
$1
)Ë| 
$3
;

256 i‡(
	`¨ôh_assign
(
$1
, 
vÆue
) != 0)

257 
	`yyîr‹
("variableássignmentÉrror");

258 
$$
 = 
vÆue
;

260 
	}
%%

261 
	~"îr‹.h
"

262 
	~"ouçut.h
"

263 
	~"memÆloc.h
"

265 
	#YYPARSE_PARAM_TYPE
 
¨ôh_t
 *

	)

266 
	#YYPARSE_PARAM
 
ªsu…


	)

268 *
	g¨ôh_buf
, *
	g¨ôh_°¨tbuf
;

270 
yyÀx
();

271 
yy∑r£
(
YYPARSE_PARAM_TYPE
);

274 
	$¨ôh_assign
(*
«me
, 
¨ôh_t
 
vÆue
)

276 *
°r
;

277 
ªt
;

279 
°r
 = (*)
	`ckmÆloc
(
	`DIGITS
(
vÆue
));

280 
	`•rötf
(
°r
, 
ARITH_FORMAT_STR
, 
vÆue
);

281 
ªt
 = 
	`£tv¨ß„
(
«me
, 
°r
, 0);

282 
	`‰ì
(
°r
);

283  
ªt
;

284 
	}
}

286 
¨ôh_t


287 
	$¨ôh
(*
s
)

289 
¨ôh_t
 
ªsu…
;

291 
¨ôh_buf
 = 
¨ôh_°¨tbuf
 = 
s
;

293 
INTOFF
;

294 
	`yy∑r£
(&
ªsu…
);

295 
	`¨ôh_Àx_ª£t
();

296 
INTON
;

298  
ªsu…
;

299 
	}
}

302 
	$yyîr‹
(*
s
)

305 
yyîrok
;

306 
yy˛órö
;

307 
	`¨ôh_Àx_ª£t
();

308 
	`îr‹
("¨ôhmëi¯ex¥essi⁄: %s: \"%s\"", 
s
, 
¨ôh_°¨tbuf
);

309 
	}
}

315 
	$expcmd
(
¨gc
, **
¨gv
)

317 *
p
;

318 *
c⁄ˇt
;

319 **
≠
;

320 
¨ôh_t
 
i
;

322 i‡(
¨gc
 > 1) {

323 
p
 = 
¨gv
[1];

324 i‡(
¨gc
 > 2) {

328 
	`STARTSTACKSTR
(
c⁄ˇt
);

329 
≠
 = 
¨gv
 + 2;

331 *
p
)

332 
	`STPUTC
(*
p
++, 
c⁄ˇt
);

333 i‡((
p
 = *
≠
++Ë=
NULL
)

335 
	`STPUTC
(' ', 
c⁄ˇt
);

337 
	`STPUTC
('\0', 
c⁄ˇt
);

338 
p
 = 
	`gøb°ack°r
(
c⁄ˇt
);

341 
p
 = "";

343 
i
 = 
	`¨ôh
(
p
);

345 
	`out1fmt
(
ARITH_FORMAT_STR
 "\n", 
i
);

346  !
i
;

347 
	}
}

350 #ifde‡
TEST_ARITH


351 
	~<°dio.h
>

352 
	$maö
(
¨gc
, *
¨gv
[])

354 
	`¥ötf
("%d\n", 
	`exp
(
¨gv
[1]));

355 
	}
}

357 
	$îr‹
(*
s
)

359 
	`Ârötf
(
°dîr
, "exp: %s\n", 
s
);

360 
	`exô
(1);

361 
	}
}

	@arith_lex.l

35 #i‚de‡
löt


36 
	gsccsid
[] = "@(#)arith_lex.l 8.3 (Berkeley) 5/4/95";

40 
	~<sys/cdefs.h
>

41 
__FBSDID
("$FreeBSD: src/bin/sh/arith_lex.l,v 1.24.6.1 2008/11/25 02:59:29 kensmith Exp $");

43 
	~<°rög.h
>

45 
	~"¨ôh.h
"

46 
	~"shñl.h
"

47 
	~"y.èb.h
"

48 
	~"îr‹.h
"

49 
	~"memÆloc.h
"

50 
	~"v¨.h
"

52 
yyÀx
();

54 #unde‡
YY_INPUT


55 
	#YY_INPUT
(
buf
,
ªsu…
,
max
) \

56 
ªsu…
 = (*
buf
 = *
¨ôh_buf
++Ë? 1 : 
YY_NULL
;

	)

57 
	#YY_NO_UNPUT


	)

60 %% /* 
	$yyÀx
 */

61 [ \
t
\
n
] { ; }

63 0x[
a
-
fA
-
F0
-9]+ {

64 
yylvÆ
.
l_vÆue
 = 
	`°πﬂrôh_t
(
yyãxt
, 
NULL
, 16);

65  
ARITH_NUM
;

69 
yylvÆ
.
l_vÆue
 = 
	`°πﬂrôh_t
(
yyãxt
, 
NULL
, 8);

70  
ARITH_NUM
;

74 
yylvÆ
.
l_vÆue
 = 
	`°πﬂrôh_t
(
yyãxt
, 
NULL
, 10);

75  
ARITH_NUM
;

78 [
A
-
Za
-
z
][A-Za-
z0
-9
_
]* {

83 *
ãmp
;

84 i‡(
	`lookupv¨
(
yyãxt
Ë=
NULL
)

85 
	`£tv¨ß„
(
yyãxt
, "0", 0);

86 
ãmp
 = (*)
	`ckmÆloc
(
	`°æí
(
yyãxt
) + 1);

87 
yylvÆ
.
s_vÆue
 = 
	`°r˝y
(
ãmp
, 
yyãxt
);

89  
ARITH_VAR
;

92 "(" {  
ARITH_LPAREN
; }

93 ")" {  
ARITH_RPAREN
; }

94 "||" {  
ARITH_OR
; }

95 "&&" {  
ARITH_AND
; }

96 "|" {  
ARITH_BOR
; }

97 "^" {  
ARITH_BXOR
; }

98 "&" {  
ARITH_BAND
; }

99 "==" {  
ARITH_EQ
; }

100 "!=" {  
ARITH_NE
; }

101 ">" {  
ARITH_GT
; }

102 ">=" {  
ARITH_GE
; }

103 "<" {  
ARITH_LT
; }

104 "<=" {  
ARITH_LE
; }

105 "<<" {  
ARITH_LSHIFT
; }

106 ">>" {  
ARITH_RSHIFT
; }

107 "*" {  
ARITH_MUL
; }

108 "/" {  
ARITH_DIV
; }

109 "%" {  
ARITH_REM
; }

110 "+" {  
ARITH_ADD
; }

111 "-" {  
ARITH_SUB
; }

112 "~" {  
ARITH_BNOT
; }

113 "!" {  
ARITH_NOT
; }

114 "=" {  
ARITH_ASSIGN
; }

115 "+=" {  
ARITH_ADDASSIGN
; }

116 "-=" {  
ARITH_SUBASSIGN
; }

117 "*=" {  
ARITH_MULASSIGN
; }

118 "/=" {  
ARITH_DIVASSIGN
; }

119 "%=" {  
ARITH_REMASSIGN
; }

120 ">>=" {  
ARITH_RSHASSIGN
; }

121 "<<=" {  
ARITH_LSHASSIGN
; }

122 "&=" {  
ARITH_BANDASSIGN
; }

123 "^=" {  
ARITH_BXORASSIGN
; }

124 "|=" {  
ARITH_BORASSIGN
; }

126 
	`îr‹
("¨ôh: sy¡axÉº‹: \"%s\"\n", 
¨ôh_°¨tbuf
);

128 
	}
%%

131 
	$¨ôh_Àx_ª£t
()

133 
YY_NEW_FILE
;

134 
	}
}

	@bltin/bltin.h

42 
	~"../shñl.h
"

43 
	~"../my°rög.h
"

44 #ifde‡
SHELL


45 
	~"../ouçut.h
"

46 #unde‡
°dout


47 
	#°dout
 
out1


	)

48 #unde‡
°dîr


49 
	#°dîr
 
out2


	)

50 
	#¥ötf
 
out1fmt


	)

51 #unde‡
putc


52 
	#putc
(
c
, 
fûe
Ë
	`outc
(c, fûe)

	)

53 #unde‡
putch¨


54 
	#putch¨
(
c
Ë
	`out1c
(c)

	)

55 
	#Ârötf
 
outfmt


	)

56 
	#Âuts
 
out°r


	)

57 
	#fÊush
 
Êushout


	)

58 
	#INITARGS
(
¨gv
)

	)

59 
	#w¨nx1
(
a
, 
b
, 
c
) { \

60 
buf
[64]; \

61 ()
	`¢¥ötf
(
buf
, (buf), 
a
); \

62 
	`îr‹
("%s", 
buf
); \

63 }

	)

64 
	#w¨nx2
(
a
, 
b
, 
c
) { \

65 
buf
[64]; \

66 ()
	`¢¥ötf
(
buf
, (buf), 
a
, 
b
); \

67 
	`îr‹
("%s", 
buf
); \

68 }

	)

69 
	#w¨nx3
(
a
, 
b
, 
c
) { \

70 
buf
[64]; \

71 ()
	`¢¥ötf
(
buf
, (buf), 
a
, 
b
, 
c
); \

72 
	`îr‹
("%s", 
buf
); \

73 }

	)

76 #unde‡
NULL


77 
	~<°dio.h
>

78 #unde‡
maö


79 
	#INITARGS
(
¨gv
Ëi‡((
comm™d«me
 =árgv[0]Ë=
NULL
Ë{
	`Âuts
("Arg¯i†zîo\n", 
°dîr
); 
	`exô
(2);} 

	)

82 
poöãr
 
°Æloc
();

83 
	$îr‹
(c⁄° *, ...Ë
	`__¥ötf0like
(1, 2);

85 
	`echocmd
(, **);

86 
	`ã°cmd
(, **);

88 *
comm™d«me
;

	@bltin/echo.c

35 
	~<sys/cdefs.h
>

36 
__FBSDID
("$FreeBSD: src/bin/sh/bltin/echo.c,v 1.14.26.1 2008/11/25 02:59:29 kensmith Exp $");

42 
	#maö
 
echocmd


	)

44 
	~"b…ö.h
"

49 
	$maö
(
¨gc
, *
¨gv
[])

51 **
≠
;

52 *
p
;

53 
c
;

54 
cou¡
;

55 
nÊag
 = 0;

56 #i‚de‡
eÊag


57 
eÊag
 = 0;

60 
≠
 = 
¨gv
;

61 i‡(
¨gc
)

62 
≠
++;

63 i‡((
p
 = *
≠
Ë!
NULL
) {

64 i‡(
	`equÆ
(
p
, "-n")) {

65 
nÊag
++;

66 
≠
++;

67 } i‡(
	`equÆ
(
p
, "-e")) {

68 #i‚de‡
eÊag


69 
eÊag
++;

71 
≠
++;

74 (
p
 = *
≠
++Ë!
NULL
) {

75 (
c
 = *
p
++) != '\0') {

76 i‡(
c
 ='\\' && 
eÊag
) {

77 *
p
++) {

78 'a': 
c
 = '\a'; ;

79 'b': 
c
 = '\b'; ;

81 'e': 
c
 = '\033'; ;

82 'f': 
c
 = '\f'; ;

83 'n': 
c
 = '\n'; ;

84 'r': 
c
 = '\r'; ;

85 't': 
c
 = '\t'; ;

86 'v': 
c
 = '\v'; ;

89 
c
 = 0;

90 
cou¡
 = 3;

91 --
cou¡
 >0 && ()(*
p
 - '0') < 8)

92 
c
 = (¯<< 3Ë+ (*
p
++ - '0');

95 
p
--;

99 
	`putch¨
(
c
);

101 i‡(*
≠
)

102 
	`putch¨
(' ');

104 i‡(! 
nÊag
)

105 
	`putch¨
('\n');

107 
	}
}

	@builtins.c

5 
	~<°dlib.h
>

6 
	~"shñl.h
"

7 
	~"buûtös.h
"

9 
b…öcmd
(, **);

10 
Æüscmd
(, **);

11 
bgcmd
(, **);

12 
bödcmd
(, **);

13 
bªakcmd
(, **);

14 
cdcmd
(, **);

15 
comm™dcmd
(, **);

16 
dŸcmd
(, **);

17 
echocmd
(, **);

18 
evÆcmd
(, **);

19 
execcmd
(, **);

20 
exôcmd
(, **);

21 
expcmd
(, **);

22 
exp‹tcmd
(, **);

23 
Ál£cmd
(, **);

24 
fgcmd
(, **);

25 
gë›tscmd
(, **);

26 
hashcmd
(, **);

27 
hi°cmd
(, **);

28 
jobidcmd
(, **);

29 
jobscmd
(, **);

30 
loˇlcmd
(, **);

31 
pwdcmd
(, **);

32 
ªadcmd
(, **);

33 
ªtu∫cmd
(, **);

34 
£tcmd
(, **);

35 
£tv¨cmd
(, **);

36 
shi·cmd
(, **);

37 
ã°cmd
(, **);

38 
timescmd
(, **);

39 
å≠cmd
(, **);

40 
åuecmd
(, **);

41 
ty≥cmd
(, **);

42 
ulimôcmd
(, **);

43 
umaskcmd
(, **);

44 
u«lüscmd
(, **);

45 
un£tcmd
(, **);

46 
waôcmd
(, **);

47 
w‹dexpcmd
(, **);

49 (*c⁄° 
buûtöfunc
[])(, **) = {

50 
b…öcmd
,

51 
Æüscmd
,

52 
bgcmd
,

53 
bödcmd
,

54 
bªakcmd
,

55 
cdcmd
,

56 
comm™dcmd
,

57 
dŸcmd
,

58 
echocmd
,

59 
evÆcmd
,

60 
execcmd
,

61 
exôcmd
,

62 
expcmd
,

63 
exp‹tcmd
,

64 
Ál£cmd
,

65 
fgcmd
,

66 
gë›tscmd
,

67 
hashcmd
,

68 
hi°cmd
,

69 
jobidcmd
,

70 
jobscmd
,

71 
loˇlcmd
,

72 
pwdcmd
,

73 
ªadcmd
,

74 
ªtu∫cmd
,

75 
£tcmd
,

76 
£tv¨cmd
,

77 
shi·cmd
,

78 
ã°cmd
,

79 
timescmd
,

80 
å≠cmd
,

81 
åuecmd
,

82 
ty≥cmd
,

83 
ulimôcmd
,

84 
umaskcmd
,

85 
u«lüscmd
,

86 
un£tcmd
,

87 
waôcmd
,

88 
w‹dexpcmd
,

89 
	}
};

91 c⁄° 
buûtöcmd
 
	gbuûtöcmd
[] = {

137 { 
NULL
, 0, 0 }

	@builtins.h

5 
	~<sys/cdefs.h
>

6 
	#BLTINCMD
 0

	)

7 
	#ALIASCMD
 1

	)

8 
	#BGCMD
 2

	)

9 
	#BINDCMD
 3

	)

10 
	#BREAKCMD
 4

	)

11 
	#CDCMD
 5

	)

12 
	#COMMANDCMD
 6

	)

13 
	#DOTCMD
 7

	)

14 
	#ECHOCMD
 8

	)

15 
	#EVALCMD
 9

	)

16 
	#EXECCMD
 10

	)

17 
	#EXITCMD
 11

	)

18 
	#EXPCMD
 12

	)

19 
	#EXPORTCMD
 13

	)

20 
	#FALSECMD
 14

	)

21 
	#FGCMD
 15

	)

22 
	#GETOPTSCMD
 16

	)

23 
	#HASHCMD
 17

	)

24 
	#HISTCMD
 18

	)

25 
	#JOBIDCMD
 19

	)

26 
	#JOBSCMD
 20

	)

27 
	#LOCALCMD
 21

	)

28 
	#PWDCMD
 22

	)

29 
	#READCMD
 23

	)

30 
	#RETURNCMD
 24

	)

31 
	#SETCMD
 25

	)

32 
	#SETVARCMD
 26

	)

33 
	#SHIFTCMD
 27

	)

34 
	#TESTCMD
 28

	)

35 
	#TIMESCMD
 29

	)

36 
	#TRAPCMD
 30

	)

37 
	#TRUECMD
 31

	)

38 
	#TYPECMD
 32

	)

39 
	#ULIMITCMD
 33

	)

40 
	#UMASKCMD
 34

	)

41 
	#UNALIASCMD
 35

	)

42 
	#UNSETCMD
 36

	)

43 
	#WAITCMD
 37

	)

44 
	#WORDEXPCMD
 38

	)

46 
	sbuûtöcmd
 {

47 *
	m«me
;

48 
	mcode
;

49 
	m•ecül
;

52 (*c⁄° 
buûtöfunc
[])(, **);

53 c⁄° 
buûtöcmd
 builtincmd[];

	@cd.c

33 #i‚de‡
löt


35 
	gsccsid
[] = "@(#)cd.c 8.2 (Berkeley) 5/4/95";

38 
	~<sys/cdefs.h
>

39 
__FBSDID
("$FreeBSD: src/bin/sh/cd.c,v 1.35.2.1.2.1 2008/11/25 02:59:29 kensmith Exp $");

41 
	~<sys/ty≥s.h
>

42 
	~<sys/°©.h
>

43 
	~<°dlib.h
>

44 
	~<°rög.h
>

45 
	~<uni°d.h
>

46 
	~<î∫o.h
>

47 
	~<limôs.h
>

53 
	~"shñl.h
"

54 
	~"v¨.h
"

55 
	~"nodes.h
"

56 
	~"jobs.h
"

57 
	~"›ti⁄s.h
"

58 
	~"ouçut.h
"

59 
	~"memÆloc.h
"

60 
	~"îr‹.h
"

61 
	~"exec.h
"

62 
	~"ªdú.h
"

63 
	~"my°rög.h
"

64 
	~"show.h
"

65 
	~"cd.h
"

67 
STATIC
 
cdlogiˇl
(*);

68 
STATIC
 
cdphysiˇl
(*);

69 
STATIC
 
docd
(*, , );

70 
STATIC
 *
gëcomp⁄ít
();

71 
STATIC
 *
födcwd
(*);

72 
STATIC
 
upd©ïwd
(*);

73 
STATIC
 *
gëpwd2
(*, 
size_t
);

75 
STATIC
 *
	gcurdú
 = 
NULL
;

76 
STATIC
 *
	g¥evdú
;

77 
STATIC
 *
	gcdcomµ©h
;

80 
	$cdcmd
(
¨gc
, **
¨gv
)

82 *
de°
;

83 *
∑th
;

84 *
p
;

85 
°©
 
°©b
;

86 
ch
, 
phys
, 
¥öt
 = 0;

88 
›åe£t
 = 1; 
›töd
 = 1; 
›ãº
 = 0;

89 
phys
 = 
PÊag
;

90 (
ch
 = 
	`gë›t
(
¨gc
, 
¨gv
, "LP")) != -1) {

91 
ch
) {

93 
phys
 = 0;

96 
phys
 = 1;

99 
	`îr‹
("unknow¿›ti⁄: -%c", 
›t›t
);

103 
¨gc
 -
›töd
;

104 
¨gv
 +
›töd
;

106 i‡(
¨gc
 > 1)

107 
	`îr‹
("too manyárguments");

109 i‡((
de°
 = *
¨gv
Ë=
NULL
 && (de° = 
	`b…ölookup
("HOME", 1)) == NULL)

110 
	`îr‹
("HOMEÇot set");

111 i‡(*
de°
 == '\0')

112 
de°
 = ".";

113 i‡(
de°
[0] == '-' && dest[1] == '\0') {

114 
de°
 = 
¥evdú
 ?Öªvdú : 
curdú
;

115 i‡(
de°
)

116 
¥öt
 = 1;

118 
de°
 = ".";

120 i‡(*
de°
 ='/' || (
∑th
 = 
	`b…ölookup
("CDPATH", 1)Ë=
NULL
)

121 
∑th
 = 
nuŒ°r
;

122 (
p
 = 
	`∑dv™˚
(&
∑th
, 
de°
)Ë!
NULL
) {

123 i‡(
	`°©
(
p
, &
°©b
Ë>0 && 
	`S_ISDIR
(°©b.
°_mode
)) {

124 i‡(!
¥öt
) {

128 i‡(
p
[0] == '.' &&Ö[1] == '/' &&Ö[2] != '\0')

129 
¥öt
 = 
	`°rcmp
(
p
 + 2, 
de°
);

131 
¥öt
 = 
	`°rcmp
(
p
, 
de°
);

133 i‡(
	`docd
(
p
, 
¥öt
, 
phys
) >= 0)

137 
	`îr‹
("ˇn'àcdÅÿ%s", 
de°
);

140 
	}
}

147 
STATIC
 

148 
	$docd
(*
de°
, 
¥öt
, 
phys
)

151 
	`TRACE
(("docd(\"%s\", %d, %dËˇŒed\n", 
de°
, 
¥öt
, 
phys
));

154 i‡((
phys
 || 
	`cdlogiˇl
(
de°
Ë< 0Ë&& 
	`cdphysiˇl
(dest) < 0)

157 i‡(
¥öt
 && 
iÊag
 && 
curdú
)

158 
	`out1fmt
("%s\n", 
curdú
);

161 
	}
}

163 
STATIC
 

164 
	$cdlogiˇl
(*
de°
)

166 *
p
;

167 *
q
;

168 *
comp⁄ít
;

169 
°©
 
°©b
;

170 
fú°
;

171 
bad°©
;

178 
bad°©
 = 0;

179 
cdcomµ©h
 = 
	`°Æloc
(
	`°æí
(
de°
) + 1);

180 
	`sc›y
(
de°
, 
cdcomµ©h
);

181 
	`STARTSTACKSTR
(
p
);

182 i‡(*
de°
 == '/') {

183 
	`STPUTC
('/', 
p
);

184 
cdcomµ©h
++;

186 
fú°
 = 1;

187 (
q
 = 
	`gëcomp⁄ít
()Ë!
NULL
) {

188 i‡(
q
[0] == '\0' || (q[0] == '.' && q[1] == '\0'))

190 i‡(! 
fú°
)

191 
	`STPUTC
('/', 
p
);

192 
fú°
 = 0;

193 
comp⁄ít
 = 
q
;

194 *
q
)

195 
	`STPUTC
(*
q
++, 
p
);

196 i‡(
	`equÆ
(
comp⁄ít
, ".."))

198 
	`STACKSTRNUL
(
p
);

199 i‡(
	`l°©
(
	`°ackblock
(), &
°©b
) < 0) {

200 
bad°©
 = 1;

205 
INTOFF
;

206 i‡((
p
 = 
	`födcwd
(
bad°©
 ? 
NULL
 : 
de°
)Ë=NULL || 
	`chdú
(p) < 0) {

207 
INTON
;

210 
	`upd©ïwd
(
p
);

211 
INTON
;

213 
	}
}

215 
STATIC
 

216 
	$cdphysiˇl
(*
de°
)

218 *
p
;

220 
INTOFF
;

221 i‡(
	`chdú
(
de°
Ë< 0 || (
p
 = 
	`födcwd
(
NULL
)) == NULL) {

222 
INTON
;

225 
	`upd©ïwd
(
p
);

226 
INTON
;

228 
	}
}

234 
STATIC
 *

235 
	$gëcomp⁄ít
()

237 *
p
;

238 *
°¨t
;

240 i‡((
p
 = 
cdcomµ©h
Ë=
NULL
)

241  
NULL
;

242 
°¨t
 = 
cdcomµ©h
;

243 *
p
 != '/' && *p != '\0')

244 
p
++;

245 i‡(*
p
 == '\0') {

246 
cdcomµ©h
 = 
NULL
;

248 *
p
++ = '\0';

249 
cdcomµ©h
 = 
p
;

251  
°¨t
;

252 
	}
}

255 
STATIC
 *

256 
	$födcwd
(*
dú
)

258 *
√w
;

259 *
p
;

266 i‡(
dú
 =
NULL
 || 
curdú
 == NULL) {

267 
p
 = 
	`°Æloc
(
PATH_MAX
);

268  
	`gëpwd2
(
p
, 
PATH_MAX
);

270 
cdcomµ©h
 = 
	`°Æloc
(
	`°æí
(
dú
) + 1);

271 
	`sc›y
(
dú
, 
cdcomµ©h
);

272 
	`STARTSTACKSTR
(
√w
);

273 i‡(*
dú
 != '/') {

274 
p
 = 
curdú
;

275 *
p
)

276 
	`STPUTC
(*
p
++, 
√w
);

277 i‡(
p
[-1] == '/')

278 
	`STUNPUTC
(
√w
);

280 (
p
 = 
	`gëcomp⁄ít
()Ë!
NULL
) {

281 i‡(
	`equÆ
(
p
, "..")) {

282 
√w
 > 
	`°ackblock
(Ë&& (
	`STUNPUTC
(new), *new) != '/');

283 } i‡(*
p
 !'\0' && ! 
	`equÆ
(p, ".")) {

284 
	`STPUTC
('/', 
√w
);

285 *
p
)

286 
	`STPUTC
(*
p
++, 
√w
);

289 i‡(
√w
 =
	`°ackblock
())

290 
	`STPUTC
('/', 
√w
);

291 
	`STACKSTRNUL
(
√w
);

292  
	`°ackblock
();

293 
	}
}

300 
STATIC
 

301 
	$upd©ïwd
(*
dú
)

303 
	`hashcd
();

305 i‡(
¥evdú
)

306 
	`ck‰ì
(
¥evdú
);

307 
¥evdú
 = 
curdú
;

308 
curdú
 = 
	`ßve°r
(
dú
);

309 
	`£tv¨
("PWD", 
curdú
, 
VEXPORT
);

310 
	`£tv¨
("OLDPWD", 
¥evdú
, 
VEXPORT
);

311 
	}
}

314 
	$pwdcmd
(
¨gc
, **
¨gv
)

316 
buf
[
PATH_MAX
];

317 
ch
, 
phys
;

319 
›åe£t
 = 1; 
›töd
 = 1; 
›ãº
 = 0;

320 
phys
 = 
PÊag
;

321 (
ch
 = 
	`gë›t
(
¨gc
, 
¨gv
, "LP")) != -1) {

322 
ch
) {

324 
phys
 = 0;

327 
phys
 = 1;

330 
	`îr‹
("unknow¿›ti⁄: -%c", 
›t›t
);

334 
¨gc
 -
›töd
;

335 
¨gv
 +
›töd
;

337 i‡(
¨gc
 != 0)

338 
	`îr‹
("too manyárguments");

340 i‡(!
phys
 && 
	`gëpwd
()) {

341 
	`out1°r
(
curdú
);

342 
	`out1c
('\n');

344 i‡(
	`gëcwd
(
buf
, (buf)Ë=
NULL
)

345 
	`îr‹
(".: %s", 
	`°ªº‹
(
î∫o
));

346 
	`out1°r
(
buf
);

347 
	`out1c
('\n');

351 
	}
}

357 
	$gëpwd
()

359 
buf
[
PATH_MAX
];

360 *
p
;

362 i‡(
curdú
)

363  
curdú
;

365 
p
 = 
	`gëpwd2
(
buf
, (buf));

366 i‡(
p
 !
NULL
)

367 
curdú
 = 
	`ßve°r
(
p
);

369  
curdú
;

370 
	}
}

375 
STATIC
 *

376 
	$gëpwd2
(*
buf
, 
size_t
 
size
)

378 i‡(
	`gëcwd
(
buf
, 
size
Ë=
NULL
) {

379 *
pwd
 = 
	`gëív
("PWD");

380 
°©
 
°dŸ
, 
°pwd
;

382 i‡(
pwd
 && *pwd ='/' && 
	`°©
(".", &
°dŸ
) != -1 &&

383 
	`°©
(
pwd
, &
°pwd
) != -1 &&

384 
°dŸ
.
°_dev
 =
°pwd
.st_dev &&

385 
°dŸ
.
°_öo
 =
°pwd
.st_ino) {

386  
pwd
;

388  
NULL
;

390  
buf
;

391 
	}
}

	@cd.h

32 *
gëpwd
();

33 
cdcmd
 (, **);

34 
pwdcmd
(, **);

	@error.c

33 #i‚de‡
löt


35 
	gsccsid
[] = "@(#)error.c 8.2 (Berkeley) 5/4/95";

38 
	~<sys/cdefs.h
>

39 
__FBSDID
("$FreeBSD: src/bin/sh/error.c,v 1.26.6.1 2008/11/25 02:59:29 kensmith Exp $");

45 
	~"shñl.h
"

46 
	~"maö.h
"

47 
	~"›ti⁄s.h
"

48 
	~"ouçut.h
"

49 
	~"îr‹.h
"

50 
	~"nodes.h
"

51 
	~"show.h
"

52 
	~"å≠.h
"

53 
	~<sig«l.h
>

54 
	~<°dlib.h
>

55 
	~<uni°d.h
>

56 
	~<î∫o.h
>

63 
jm∂oc
 *
	gh™dÀr
;

64 vﬁ©ûê
sig_©omic_t
 
	gex˚±i⁄
;

65 vﬁ©ûê
sig_©omic_t
 
	gsuµªssöt
;

66 vﬁ©ûê
sig_©omic_t
 
	göçídög
;

67 *
	gcomm™d«me
;

70 
	$exvîr‹
(, c⁄° *, 
va_li°
Ë
	`__¥ötf0like
(2, 0);

79 
	$exøi£
(
e
)

81 i‡(
h™dÀr
 =
NULL
)

82 
	`ab‹t
();

83 
ex˚±i⁄
 = 
e
;

84 
	`l⁄gjmp
(
h™dÀr
->
loc
, 1);

85 
	}
}

99 
	$⁄öt
()

101 
sig£t_t
 
sig£t
;

109 i‡(
suµªssöt
 && !
ö_dŸøp
) {

110 
öçídög
++;

113 
öçídög
 = 0;

114 
	`sigem±y£t
(&
sig£t
);

115 
	`sig¥ocmask
(
SIG_SETMASK
, &
sig£t
, 
NULL
);

121 i‡(
	`tcgëpgΩ
(0Ë=
	`gëpid
())

122 
	`wrôe
(
STDERR_FILENO
, "\n", 1);

124 i‡(
roŸshñl
 && 
iÊag
)

125 
	`exøi£
(
EXINT
);

127 
	`sig«l
(
SIGINT
, 
SIG_DFL
);

128 
	`kûl
(
	`gëpid
(), 
SIGINT
);

130 
	}
}

139 
	$exvîr‹
(
c⁄d
, c⁄° *
msg
, 
va_li°
 
≠
)

141 
CLEAR_PENDING_INT
;

142 
INTOFF
;

144 #ifde‡
DEBUG


145 i‡(
msg
)

146 
	`TRACE
(("exvîr‹(%d, \"%s\"Ëpid=%d\n", 
c⁄d
, 
msg
, 
	`gëpid
()));

148 
	`TRACE
(("exvîr‹(%d, NULLËpid=%d\n", 
c⁄d
, 
	`gëpid
()));

150 i‡(
msg
) {

151 i‡(
comm™d«me
)

152 
	`outfmt
(&
îrout
, "%s: ", 
comm™d«me
);

153 
	`dof‹m©
(&
îrout
, 
msg
, 
≠
);

154 
	`out2c
('\n');

156 
	`ÊushÆl
();

157 
	`exøi£
(
c⁄d
);

158 
	}
}

162 
	$îr‹
(c⁄° *
msg
, ...)

164 
va_li°
 
≠
;

165 
	`va_°¨t
(
≠
, 
msg
);

166 
	`exvîr‹
(
EXERROR
, 
msg
, 
≠
);

167 
	`va_íd
(
≠
);

168 
	}
}

172 
	$exîr‹
(
c⁄d
, c⁄° *
msg
, ...)

174 
va_li°
 
≠
;

175 
	`va_°¨t
(
≠
, 
msg
);

176 
	`exvîr‹
(
c⁄d
, 
msg
, 
≠
);

177 
	`va_íd
(
≠
);

178 
	}
}

	@error.h

46 
	~<£tjmp.h
>

47 
	~<sig«l.h
>

48 
	~<°d¨g.h
>

50 
	sjm∂oc
 {

51 
jmp_buf
 
	mloc
;

54 
jm∂oc
 *
h™dÀr
;

55 vﬁ©ûê
sig_©omic_t
 
ex˚±i⁄
;

58 
	#EXINT
 0

	)

59 
	#EXERROR
 1

	)

60 
	#EXSHELLPROC
 2

	)

61 
	#EXEXEC
 3

	)

71 vﬁ©ûê
sig_©omic_t
 
suµªssöt
;

72 vﬁ©ûê
sig_©omic_t
 
öçídög
;

74 
	#INTOFF
 
suµªssöt
++

	)

75 
	#INTON
 { i‡(--
suµªssöt
 =0 && 
öçídög
Ë
	`⁄öt
(); }

	)

76 
	#FORCEINTON
 {
suµªssöt
 = 0; i‡(
öçídög
Ë
	`⁄öt
();}

	)

77 
	#CLEAR_PENDING_INT
 
öçídög
 = 0

	)

78 
	#öt_≥ndög
(Ë
öçídög


	)

80 
exøi£
();

81 
⁄öt
();

82 
	$îr‹
(c⁄° *, ...Ë
	`__¥ötf0like
(1, 2);

83 
	$exîr‹
(, c⁄° *, ...Ë
	`__¥ötf0like
(2, 3);

91 
	#£tjmp
(
jm∂oc
Ë
	`_£tjmp
(jm∂oc)

	)

92 
	#l⁄gjmp
(
jm∂oc
, 
vÆ
Ë
	`_l⁄gjmp
(jm∂oc, vÆ)

	)

	@eval.c

33 #i‚de‡
löt


35 
	gsccsid
[] = "@(#)eval.c 8.9 (Berkeley) 6/8/95";

38 
	~<sys/cdefs.h
>

39 
__FBSDID
("$FreeBSD: src/bin/sh/eval.c,v 1.54.2.1.2.1 2008/11/25 02:59:29 kensmith Exp $");

41 
	~<∑ths.h
>

42 
	~<sig«l.h
>

43 
	~<°dlib.h
>

44 
	~<uni°d.h
>

45 
	~<sys/ªsour˚.h
>

46 
	~<sys/waô.h
>

47 
	~<î∫o.h
>

53 
	~"shñl.h
"

54 
	~"nodes.h
"

55 
	~"sy¡ax.h
"

56 
	~"ex∑nd.h
"

57 
	~"∑r£r.h
"

58 
	~"jobs.h
"

59 
	~"evÆ.h
"

60 
	~"buûtös.h
"

61 
	~"›ti⁄s.h
"

62 
	~"exec.h
"

63 
	~"ªdú.h
"

64 
	~"öput.h
"

65 
	~"ouçut.h
"

66 
	~"å≠.h
"

67 
	~"v¨.h
"

68 
	~"memÆloc.h
"

69 
	~"îr‹.h
"

70 
	~"show.h
"

71 
	~"my°rög.h
"

72 #i‚de‡
NO_HISTORY


73 
	~"myhi°edô.h
"

78 
	#EV_EXIT
 01

	)

79 
	#EV_TESTED
 02

	)

80 
	#EV_BACKCMD
 04

	)

82 
MKINIT
 
	gevÆskù
;

83 
STATIC
 
	gskùcou¡
;

84 
MKINIT
 
	glo›√°
;

85 
	gfun˙e°
;

88 *
	gcomm™d«me
;

89 
°æi°
 *
	gcmdívú⁄
;

90 
	gexô°©us
;

91 
	g€xô°©us
;

94 
STATIC
 
evÆlo›
(
node
 *, );

95 
STATIC
 
evÆf‹
(
node
 *, );

96 
STATIC
 
evÆˇ£
(
node
 *, );

97 
STATIC
 
evÆsubshñl
(
node
 *, );

98 
STATIC
 
ex¥edú
(
node
 *);

99 
STATIC
 
evÆpùe
(
node
 *);

100 
STATIC
 
evÆcomm™d
(
node
 *, , 
backcmd
 *);

101 
STATIC
 
¥ehash
(
node
 *);

108 #ifde‡
mköô


109 
	gINCLUDE
 "eval.h"

111 
	gRESET
 {

112 
	gevÆskù
 = 0;

113 
	glo›√°
 = 0;

114 
	gfun˙e°
 = 0;

117 
	gSHELLPROC
 {

118 
	gexô°©us
 = 0;

129 
	$evÆcmd
(
¨gc
, **
¨gv
)

131 *
p
;

132 *
c⁄ˇt
;

133 **
≠
;

135 i‡(
¨gc
 > 1) {

136 
p
 = 
¨gv
[1];

137 i‡(
¨gc
 > 2) {

138 
	`STARTSTACKSTR
(
c⁄ˇt
);

139 
≠
 = 
¨gv
 + 2;

141 *
p
)

142 
	`STPUTC
(*
p
++, 
c⁄ˇt
);

143 i‡((
p
 = *
≠
++Ë=
NULL
)

145 
	`STPUTC
(' ', 
c⁄ˇt
);

147 
	`STPUTC
('\0', 
c⁄ˇt
);

148 
p
 = 
	`gøb°ack°r
(
c⁄ˇt
);

150 
	`evÆ°rög
(
p
);

152  
exô°©us
;

153 
	}
}

161 
	$evÆ°rög
(*
s
)

163 
node
 *
n
;

164 
°ackm¨k
 
sm¨k
;

166 
	`£t°ackm¨k
(&
sm¨k
);

167 
	`£töput°rög
(
s
, 1);

168 (
n
 = 
	`∑r£cmd
(0)Ë!
NEOF
) {

169 
	`evÆåì
(
n
, 0);

170 
	`p›°ackm¨k
(&
sm¨k
);

172 
	`p›fûe
();

173 
	`p›°ackm¨k
(&
sm¨k
);

174 
	}
}

184 
	$evÆåì
(
node
 *
n
, 
Êags
)

186 
do_ëe°
;

188 
do_ëe°
 = 0;

189 i‡(
n
 =
NULL
) {

190 
	`TRACE
(("evaltree(NULL) called\n"));

191 
exô°©us
 = 0;

192 
out
;

194 #i‚de‡
NO_HISTORY


195 
di•œyhi°
 = 1;

197 
	`TRACE
(("evÆåì(%p: %dËˇŒed\n", (*)
n
,Ç->
ty≥
));

198 
n
->
ty≥
) {

199 
NSEMI
:

200 
	`evÆåì
(
n
->
nbö¨y
.
ch1
, 
Êags
 & ~
EV_EXIT
);

201 i‡(
evÆskù
)

202 
out
;

203 
	`evÆåì
(
n
->
nbö¨y
.
ch2
, 
Êags
);

205 
NAND
:

206 
	`evÆåì
(
n
->
nbö¨y
.
ch1
, 
EV_TESTED
);

207 i‡(
evÆskù
 || 
exô°©us
 != 0) {

208 
out
;

210 
	`evÆåì
(
n
->
nbö¨y
.
ch2
, 
Êags
);

212 
NOR
:

213 
	`evÆåì
(
n
->
nbö¨y
.
ch1
, 
EV_TESTED
);

214 i‡(
evÆskù
 || 
exô°©us
 == 0)

215 
out
;

216 
	`evÆåì
(
n
->
nbö¨y
.
ch2
, 
Êags
);

218 
NREDIR
:

219 
	`ex¥edú
(
n
->
ƒedú
.
ªdúe˘
);

220 
	`ªdúe˘
(
n
->
ƒedú
.
ªdúe˘
, 
REDIR_PUSH
);

221 
	`evÆåì
(
n
->
ƒedú
.n, 
Êags
);

222 
	`p›ªdú
();

224 
NSUBSHELL
:

225 
	`evÆsubshñl
(
n
, 
Êags
);

226 
do_ëe°
 = !(
Êags
 & 
EV_TESTED
);

228 
NBACKGND
:

229 
	`evÆsubshñl
(
n
, 
Êags
);

231 
NIF
: {

232 
	`evÆåì
(
n
->
nif
.
ã°
, 
EV_TESTED
);

233 i‡(
evÆskù
)

234 
out
;

235 i‡(
exô°©us
 == 0)

236 
	`evÆåì
(
n
->
nif
.
iÂ¨t
, 
Êags
);

237 i‡(
n
->
nif
.
ñ£∑π
)

238 
	`evÆåì
(
n
->
nif
.
ñ£∑π
, 
Êags
);

240 
exô°©us
 = 0;

243 
NWHILE
:

244 
NUNTIL
:

245 
	`evÆlo›
(
n
, 
Êags
 & ~
EV_EXIT
);

247 
NFOR
:

248 
	`evÆf‹
(
n
, 
Êags
 & ~
EV_EXIT
);

250 
NCASE
:

251 
	`evÆˇ£
(
n
, 
Êags
);

253 
NDEFUN
:

254 
	`defun
(
n
->
«rg
.
ãxt
,Ç->«rg.
√xt
);

255 
exô°©us
 = 0;

257 
NNOT
:

258 
	`evÆåì
(
n
->
¬Ÿ
.
com
, 
EV_TESTED
);

259 
exô°©us
 = !exitstatus;

262 
NPIPE
:

263 
	`evÆpùe
(
n
);

264 
do_ëe°
 = !(
Êags
 & 
EV_TESTED
);

266 
NCMD
:

267 
	`evÆcomm™d
(
n
, 
Êags
, (
backcmd
 *)
NULL
);

268 
do_ëe°
 = !(
Êags
 & 
EV_TESTED
);

271 
	`out1fmt
("Nodêty≥ = %d\n", 
n
->
ty≥
);

272 
	`Êushout
(&
ouçut
);

275 
out
:

276 i‡(
≥ndögsigs
)

277 
	`dŸøp
();

278 i‡((
Êags
 & 
EV_EXIT
Ë|| (
eÊag
 && 
exô°©us
 !0 && 
do_ëe°
))

279 
	`exôshñl
(
exô°©us
);

280 
	}
}

283 
STATIC
 

284 
	$evÆlo›
(
node
 *
n
, 
Êags
)

286 
°©us
;

288 
lo›√°
++;

289 
°©us
 = 0;

291 
	`evÆåì
(
n
->
nbö¨y
.
ch1
, 
EV_TESTED
);

292 i‡(
evÆskù
) {

293 
skùpög
: i‡(
evÆskù
 =
SKIPCONT
 && --
skùcou¡
 <= 0) {

294 
evÆskù
 = 0;

297 i‡(
evÆskù
 =
SKIPBREAK
 && --
skùcou¡
 <= 0)

298 
evÆskù
 = 0;

301 i‡(
n
->
ty≥
 =
NWHILE
) {

302 i‡(
exô°©us
 != 0)

305 i‡(
exô°©us
 == 0)

308 
	`evÆåì
(
n
->
nbö¨y
.
ch2
, 
Êags
);

309 
°©us
 = 
exô°©us
;

310 i‡(
evÆskù
)

311 
skùpög
;

313 
lo›√°
--;

314 
exô°©us
 = 
°©us
;

315 
	}
}

319 
STATIC
 

320 
	$evÆf‹
(
node
 *
n
, 
Êags
)

322 
¨gli°
árglist;

323 
node
 *
¨gp
;

324 
°æi°
 *
•
;

325 
°ackm¨k
 
sm¨k
;

327 
	`£t°ackm¨k
(&
sm¨k
);

328 
¨gli°
.
œ°p
 = &¨gli°.
li°
;

329 
¨gp
 = 
n
->
nf‹
.
¨gs
 ;árg∞;árg∞¨gp->
«rg
.
√xt
) {

330 
€xô°©us
 = 
exô°©us
;

331 
	`ex∑nd¨g
(
¨gp
, &
¨gli°
, 
EXP_FULL
 | 
EXP_TILDE
);

332 i‡(
evÆskù
)

333 
out
;

335 *
¨gli°
.
œ°p
 = 
NULL
;

337 
exô°©us
 = 0;

338 
lo›√°
++;

339 
•
 = 
¨gli°
.
li°
 ; s∞; s∞•->
√xt
) {

340 
	`£tv¨
(
n
->
nf‹
.
v¨
, 
•
->
ãxt
, 0);

341 
	`evÆåì
(
n
->
nf‹
.
body
, 
Êags
);

342 i‡(
evÆskù
) {

343 i‡(
evÆskù
 =
SKIPCONT
 && --
skùcou¡
 <= 0) {

344 
evÆskù
 = 0;

347 i‡(
evÆskù
 =
SKIPBREAK
 && --
skùcou¡
 <= 0)

348 
evÆskù
 = 0;

352 
lo›√°
--;

353 
out
:

354 
	`p›°ackm¨k
(&
sm¨k
);

355 
	}
}

359 
STATIC
 

360 
	$evÆˇ£
(
node
 *
n
, 
Êags
)

362 
node
 *
˝
;

363 
node
 *
∑ç
;

364 
¨gli°
árglist;

365 
°ackm¨k
 
sm¨k
;

367 
	`£t°ackm¨k
(&
sm¨k
);

368 
¨gli°
.
œ°p
 = &¨gli°.
li°
;

369 
€xô°©us
 = 
exô°©us
;

370 
exô°©us
 = 0;

371 
	`ex∑nd¨g
(
n
->
nˇ£
.
ex¥
, &
¨gli°
, 
EXP_TILDE
);

372 
˝
 = 
n
->
nˇ£
.
ˇ£s
 ; c∞&& 
evÆskù
 =0 ; c∞˝->
n˛i°
.
√xt
) {

373 
∑ç
 = 
˝
->
n˛i°
.
∑âîn
 ;Ö©∞;Ö©∞∑ç->
«rg
.
√xt
) {

374 i‡(
	`ˇ£m©ch
(
∑ç
, 
¨gli°
.
li°
->
ãxt
)) {

375 i‡(
evÆskù
 == 0) {

376 
	`evÆåì
(
˝
->
n˛i°
.
body
, 
Êags
);

378 
out
;

382 
out
:

383 
	`p›°ackm¨k
(&
sm¨k
);

384 
	}
}

392 
STATIC
 

393 
	$evÆsubshñl
(
node
 *
n
, 
Êags
)

395 
job
 *
jp
;

396 
backgnd
 = (
n
->
ty≥
 =
NBACKGND
);

398 
	`ex¥edú
(
n
->
ƒedú
.
ªdúe˘
);

399 
jp
 = 
	`makejob
(
n
, 1);

400 i‡(
	`f‹kshñl
(
jp
, 
n
, 
backgnd
) == 0) {

401 i‡(
backgnd
)

402 
Êags
 &=~ 
EV_TESTED
;

403 
	`ªdúe˘
(
n
->
ƒedú
.
ªdúe˘
, 0);

404 
	`evÆåì
(
n
->
ƒedú
.n, 
Êags
 | 
EV_EXIT
);

406 i‡(! 
backgnd
) {

407 
INTOFF
;

408 
exô°©us
 = 
	`waôf‹job
(
jp
, (*)
NULL
);

409 
INTON
;

411 
	}
}

419 
STATIC
 

420 
	$ex¥edú
(
node
 *
n
)

422 
node
 *
ªdú
;

424 
ªdú
 = 
n
 ;Ñedú ;Ñedú =Ñedú->
nfûe
.
√xt
) {

425 
¨gli°
 
‚
;

426 
‚
.
œ°p
 = &‚.
li°
;

427 
€xô°©us
 = 
exô°©us
;

428 
ªdú
->
ty≥
) {

429 
NFROM
:

430 
NTO
:

431 
NFROMTO
:

432 
NAPPEND
:

433 
NCLOBBER
:

434 
	`ex∑nd¨g
(
ªdú
->
nfûe
.
‚ame
, &
‚
, 
EXP_TILDE
 | 
EXP_REDIR
);

435 
ªdú
->
nfûe
.
exp‚ame
 = 
‚
.
li°
->
ãxt
;

437 
NFROMFD
:

438 
NTOFD
:

439 i‡(
ªdú
->
ndup
.
v«me
) {

440 
	`ex∑nd¨g
(
ªdú
->
ndup
.
v«me
, &
‚
, 
EXP_TILDE
 | 
EXP_REDIR
);

441 
	`fixªdú
(
ªdú
, 
‚
.
li°
->
ãxt
, 1);

446 
	}
}

457 
STATIC
 

458 
	$evÆpùe
(
node
 *
n
)

460 
job
 *
jp
;

461 
nodñi°
 *
Õ
;

462 
pùñí
;

463 
¥evfd
;

464 
pù
[2];

466 
	`TRACE
(("evÆpùe(%pËˇŒed\n", (*)
n
));

467 
pùñí
 = 0;

468 
Õ
 = 
n
->
≈ùe
.
cmdli°
 ;Ü∞;Ü∞Õ->
√xt
)

469 
pùñí
++;

470 
INTOFF
;

471 
jp
 = 
	`makejob
(
n
, 
pùñí
);

472 
¥evfd
 = -1;

473 
Õ
 = 
n
->
≈ùe
.
cmdli°
 ;Ü∞;Ü∞Õ->
√xt
) {

474 
	`¥ehash
(
Õ
->
n
);

475 
pù
[1] = -1;

476 i‡(
Õ
->
√xt
) {

477 i‡(
	`pùe
(
pù
) < 0) {

478 
	`˛o£
(
¥evfd
);

479 
	`îr‹
("PùêˇŒ faûed: %s", 
	`°ªº‹
(
î∫o
));

482 i‡(
	`f‹kshñl
(
jp
, 
Õ
->
n
,Ç->
≈ùe
.
backgnd
) == 0) {

483 
INTON
;

484 i‡(
¥evfd
 > 0) {

485 
	`dup2
(
¥evfd
, 0);

486 
	`˛o£
(
¥evfd
);

488 i‡(
pù
[1] >= 0) {

489 i‡(!(
¥evfd
 >0 && 
pù
[0] == 0))

490 
	`˛o£
(
pù
[0]);

491 i‡(
pù
[1] != 1) {

492 
	`dup2
(
pù
[1], 1);

493 
	`˛o£
(
pù
[1]);

496 
	`evÆåì
(
Õ
->
n
, 
EV_EXIT
);

498 i‡(
¥evfd
 >= 0)

499 
	`˛o£
(
¥evfd
);

500 
¥evfd
 = 
pù
[0];

501 
	`˛o£
(
pù
[1]);

503 
INTON
;

504 i‡(
n
->
≈ùe
.
backgnd
 == 0) {

505 
INTOFF
;

506 
exô°©us
 = 
	`waôf‹job
(
jp
, (*)
NULL
);

507 
	`TRACE
(("evÆpùe: job d⁄êexô sètu†%d\n", 
exô°©us
));

508 
INTON
;

510 
	}
}

522 
	$evÆbackcmd
(
node
 *
n
, 
backcmd
 *
ªsu…
)

524 
pù
[2];

525 
job
 *
jp
;

526 
°ackm¨k
 
sm¨k
;

528 
	`£t°ackm¨k
(&
sm¨k
);

529 
ªsu…
->
fd
 = -1;

530 
ªsu…
->
buf
 = 
NULL
;

531 
ªsu…
->
∆e·
 = 0;

532 
ªsu…
->
jp
 = 
NULL
;

533 i‡(
n
 =
NULL
) {

534 
exô°©us
 = 0;

535 
out
;

537 i‡(
n
->
ty≥
 =
NCMD
) {

538 
exô°©us
 = 
€xô°©us
;

539 
	`evÆcomm™d
(
n
, 
EV_BACKCMD
, 
ªsu…
);

541 
exô°©us
 = 0;

542 i‡(
	`pùe
(
pù
) < 0)

543 
	`îr‹
("PùêˇŒ faûed: %s", 
	`°ªº‹
(
î∫o
));

544 
jp
 = 
	`makejob
(
n
, 1);

545 i‡(
	`f‹kshñl
(
jp
, 
n
, 
FORK_NOJOB
) == 0) {

546 
FORCEINTON
;

547 
	`˛o£
(
pù
[0]);

548 i‡(
pù
[1] != 1) {

549 
	`dup2
(
pù
[1], 1);

550 
	`˛o£
(
pù
[1]);

552 
	`evÆåì
(
n
, 
EV_EXIT
);

554 
	`˛o£
(
pù
[1]);

555 
ªsu…
->
fd
 = 
pù
[0];

556 
ªsu…
->
jp
 = jp;

558 
out
:

559 
	`p›°ackm¨k
(&
sm¨k
);

560 
	`TRACE
(("evalbackcmd done: fd=%d buf=%pÇleft=%d jp=%p\n",

561 
ªsu…
->
fd
,Ñesu…->
buf
,Ñesu…->
∆e·
,Ñesu…->
jp
));

562 
	}
}

570 
STATIC
 

571 
	$evÆcomm™d
(
node
 *
cmd
, 
Êags
, 
backcmd
 *backcmd)

573 
°ackm¨k
 
sm¨k
;

574 
node
 *
¨gp
;

575 
¨gli°
árglist;

576 
¨gli°
 
v¨li°
;

577 **
¨gv
;

578 
¨gc
;

579 **
ívp
;

580 
v¨Êag
;

581 
°æi°
 *
•
;

582 
mode
;

583 
pù
[2];

584 
cmdíåy
 cmdentry;

585 
job
 *
jp
;

586 
jm∂oc
 jmploc;

587 
jm∂oc
 *vﬁ©ûê
ßveh™dÀr
;

588 *vﬁ©ûê
ßvecmd«me
;

589 vﬁ©ûê
sh∑øm
 
ßvï¨am
;

590 
loˇlv¨
 *vﬁ©ûê
ßvñoˇlv¨s
;

591 vﬁ©ûê
e
;

592 *
œ°¨g
;

593 
ªÆ°©us
;

594 
do_˛órcmdíåy
;

595 #i‡
__GNUC__


597 (Ë&
¨gv
;

598 (Ë&
¨gc
;

599 (Ë&
œ°¨g
;

600 (Ë&
Êags
;

601 (Ë&
do_˛órcmdíåy
;

605 
	`TRACE
(("evÆcomm™d(%p, %dËˇŒed\n", (*)
cmd
, 
Êags
));

606 
	`£t°ackm¨k
(&
sm¨k
);

607 
¨gli°
.
œ°p
 = &¨gli°.
li°
;

608 
v¨li°
.
œ°p
 = &v¨li°.
li°
;

609 
v¨Êag
 = 1;

610 
do_˛órcmdíåy
 = 0;

611 
€xô°©us
 = 
exô°©us
;

612 
exô°©us
 = 0;

613 
¨gp
 = 
cmd
->
ncmd
.
¨gs
 ;árg∞;árg∞¨gp->
«rg
.
√xt
) {

614 *
p
 = 
¨gp
->
«rg
.
ãxt
;

615 i‡(
v¨Êag
 && 
	`is_«me
(*
p
)) {

617 
p
++;

618 } 
	`is_ö_«me
(*
p
));

619 i‡(*
p
 == '=') {

620 
	`ex∑nd¨g
(
¨gp
, &
v¨li°
, 
EXP_VARTILDE
);

624 
	`ex∑nd¨g
(
¨gp
, &
¨gli°
, 
EXP_FULL
 | 
EXP_TILDE
);

625 
v¨Êag
 = 0;

627 *
¨gli°
.
œ°p
 = 
NULL
;

628 *
v¨li°
.
œ°p
 = 
NULL
;

629 
	`ex¥edú
(
cmd
->
ncmd
.
ªdúe˘
);

630 
¨gc
 = 0;

631 
•
 = 
¨gli°
.
li°
 ; s∞; s∞•->
√xt
)

632 
¨gc
++;

633 
¨gv
 = 
	`°Æloc
( (*Ë* (
¨gc
 + 1));

635 
•
 = 
¨gli°
.
li°
 ; s∞; s∞•->
√xt
) {

636 
	`TRACE
(("evÆcomm™dárg: %s\n", 
•
->
ãxt
));

637 *
¨gv
++ = 
•
->
ãxt
;

639 *
¨gv
 = 
NULL
;

640 
œ°¨g
 = 
NULL
;

641 i‡(
iÊag
 && 
fun˙e°
 =0 && 
¨gc
 > 0)

642 
œ°¨g
 = 
¨gv
[-1];

643 
¨gv
 -
¨gc
;

646 i‡(
xÊag
) {

647 
£p
 = 0;

648 
	`out2°r
(
	`ps4vÆ
());

649 
•
 = 
v¨li°
.
li°
 ; s∞; s∞•->
√xt
) {

650 i‡(
£p
 != 0)

651 
	`outc
(' ', &
îrout
);

652 
	`out2°r
(
•
->
ãxt
);

653 
£p
 = ' ';

655 
•
 = 
¨gli°
.
li°
 ; s∞; s∞•->
√xt
) {

656 i‡(
£p
 != 0)

657 
	`outc
(' ', &
îrout
);

658 
	`out2°r
(
•
->
ãxt
);

659 
£p
 = ' ';

661 
	`outc
('\n', &
îrout
);

662 
	`Êushout
(&
îrout
);

666 i‡(
¨gc
 == 0) {

668 
cmdíåy
.
cmdty≥
 = 
CMDBUILTIN
;

669 
cmdíåy
.
u
.
ödex
 = 
BLTINCMD
;

670 
cmdíåy
.
•ecül
 = 1;

672 c⁄° 
PATH
[] = "PATH=";

673 *
∑th
 = 
	`∑thvÆ
();

679 
•
 = 
v¨li°
.
li°
 ; s∞; s∞•->
√xt
)

680 i‡(
	`°∫cmp
(
•
->
ãxt
, 
PATH
, (PATH) - 1) == 0) {

681 
∑th
 = 
•
->
ãxt
 + (
PATH
) - 1;

700 
	`˛órcmdíåy
(0);

701 
do_˛órcmdíåy
 = 1;

704 
	`föd_comm™d
(
¨gv
[0], &
cmdíåy
, 1, 
∑th
);

705 i‡(
cmdíåy
.
cmdty≥
 =
CMDUNKNOWN
) {

706 
exô°©us
 = 127;

707 
	`Êushout
(&
îrout
);

711 i‡(
cmdíåy
.
cmdty≥
 =
CMDBUILTIN
 && cmdíåy.
u
.
ödex
 =
BLTINCMD
) {

713 
¨gv
++;

714 i‡(--
¨gc
 == 0)

716 i‡((
cmdíåy
.
u
.
ödex
 = 
	`föd_buûtö
(*
¨gv
,

717 &
cmdíåy
.
•ecül
)) < 0) {

718 
	`outfmt
(&
îrout
, "%s:ÇŸ found\n", *
¨gv
);

719 
exô°©us
 = 127;

720 
	`Êushout
(&
îrout
);

723 i‡(
cmdíåy
.
u
.
ödex
 !
BLTINCMD
)

730 i‡(
cmd
->
ncmd
.
backgnd


731 || (
cmdíåy
.
cmdty≥
 =
CMDNORMAL


732 && ((
Êags
 & 
EV_EXIT
Ë=0 || 
TÊag
))

733 || ((
Êags
 & 
EV_BACKCMD
) != 0

734 && (
cmdíåy
.
cmdty≥
 !
CMDBUILTIN


735 || 
cmdíåy
.
u
.
ödex
 =
CDCMD


736 || 
cmdíåy
.
u
.
ödex
 =
DOTCMD


737 || 
cmdíåy
.
u
.
ödex
 =
EVALCMD
))

738 || (
cmdíåy
.
cmdty≥
 =
CMDBUILTIN
 &&

739 
cmdíåy
.
u
.
ödex
 =
COMMANDCMD
)) {

740 
jp
 = 
	`makejob
(
cmd
, 1);

741 
mode
 = 
cmd
->
ncmd
.
backgnd
;

742 i‡(
Êags
 & 
EV_BACKCMD
) {

743 
mode
 = 
FORK_NOJOB
;

744 i‡(
	`pùe
(
pù
) < 0)

745 
	`îr‹
("PùêˇŒ faûed: %s", 
	`°ªº‹
(
î∫o
));

747 i‡(
	`f‹kshñl
(
jp
, 
cmd
, 
mode
) != 0)

748 
∑ª¡
;

749 i‡(
Êags
 & 
EV_BACKCMD
) {

750 
FORCEINTON
;

751 
	`˛o£
(
pù
[0]);

752 i‡(
pù
[1] != 1) {

753 
	`dup2
(
pù
[1], 1);

754 
	`˛o£
(
pù
[1]);

757 
Êags
 |
EV_EXIT
;

762 i‡(
cmdíåy
.
cmdty≥
 =
CMDFUNCTION
) {

763 #ifde‡
DEBUG


764 
	`åputs
("Shñ»fun˘i⁄: "); 
	`å¨gs
(
¨gv
);

766 
	`ªdúe˘
(
cmd
->
ncmd
.
ªdúe˘
, 
REDIR_PUSH
);

767 
ßvï¨am
 = 
shñÕ¨am
;

768 
shñÕ¨am
.
mÆloc
 = 0;

769 
shñÕ¨am
.
ª£t
 = 1;

770 
shñÕ¨am
.
≈¨am
 = 
¨gc
 - 1;

771 
shñÕ¨am
.
p
 = 
¨gv
 + 1;

772 
shñÕ¨am
.
›äext
 = 
NULL
;

773 
INTOFF
;

774 
ßvñoˇlv¨s
 = 
loˇlv¨s
;

775 
loˇlv¨s
 = 
NULL
;

776 
INTON
;

777 i‡(
	`£tjmp
(
jm∂oc
.
loc
)) {

778 i‡(
ex˚±i⁄
 =
EXSHELLPROC
)

779 
	`‰ì∑øm
((
sh∑øm
 *)&
ßvï¨am
);

781 
	`‰ì∑øm
(&
shñÕ¨am
);

782 
shñÕ¨am
 = 
ßvï¨am
;

784 
	`p›loˇlv¨s
();

785 
loˇlv¨s
 = 
ßvñoˇlv¨s
;

786 
h™dÀr
 = 
ßveh™dÀr
;

787 
	`l⁄gjmp
(
h™dÀr
->
loc
, 1);

789 
ßveh™dÀr
 = 
h™dÀr
;

790 
h™dÀr
 = &
jm∂oc
;

791 
•
 = 
v¨li°
.
li°
 ; s∞; s∞•->
√xt
)

792 
	`mkloˇl
(
•
->
ãxt
);

793 
fun˙e°
++;

794 i‡(
Êags
 & 
EV_TESTED
)

795 
	`evÆåì
(
cmdíåy
.
u
.
func
, 
EV_TESTED
);

797 
	`evÆåì
(
cmdíåy
.
u
.
func
, 0);

798 
fun˙e°
--;

799 
INTOFF
;

800 
	`p›loˇlv¨s
();

801 
loˇlv¨s
 = 
ßvñoˇlv¨s
;

802 
	`‰ì∑øm
(&
shñÕ¨am
);

803 
shñÕ¨am
 = 
ßvï¨am
;

804 
h™dÀr
 = 
ßveh™dÀr
;

805 
	`p›ªdú
();

806 
INTON
;

807 i‡(
evÆskù
 =
SKIPFUNC
) {

808 
evÆskù
 = 0;

809 
skùcou¡
 = 0;

811 i‡(
Êags
 & 
EV_EXIT
)

812 
	`exôshñl
(
exô°©us
);

813 } i‡(
cmdíåy
.
cmdty≥
 =
CMDBUILTIN
) {

814 #ifde‡
DEBUG


815 
	`åputs
("buûtö comm™d: "); 
	`å¨gs
(
¨gv
);

817 
mode
 = (
cmdíåy
.
u
.
ödex
 =
EXECCMD
)? 0 : 
REDIR_PUSH
;

818 i‡(
Êags
 =
EV_BACKCMD
) {

819 
memout
.
∆e·
 = 0;

820 
memout
.
√xtc
 = memout.
buf
;

821 
memout
.
bufsize
 = 64;

822 
mode
 |
REDIR_BACKQ
;

824 
ßvecmd«me
 = 
comm™d«me
;

825 
cmdívú⁄
 = 
v¨li°
.
li°
;

826 
e
 = -1;

827 i‡(
	`£tjmp
(
jm∂oc
.
loc
)) {

828 
e
 = 
ex˚±i⁄
;

829 
exô°©us
 = (
e
 =
EXINT
)? 
SIGINT
+128 : 2;

830 
cmdd⁄e
;

832 
ßveh™dÀr
 = 
h™dÀr
;

833 
h™dÀr
 = &
jm∂oc
;

834 
	`ªdúe˘
(
cmd
->
ncmd
.
ªdúe˘
, 
mode
);

835 i‡(
cmdíåy
.
•ecül
)

836 
	`li°£tv¨
(
cmdívú⁄
);

837 
comm™d«me
 = 
¨gv
[0];

838 
¨g±r
 = 
¨gv
 + 1;

839 
›çå
 = 
NULL
;

840 
exô°©us
 = (*
buûtöfunc
[
cmdíåy
.
u
.
ödex
])(
¨gc
, 
¨gv
);

841 
	`ÊushÆl
();

842 
cmdd⁄e
:

843 
cmdívú⁄
 = 
NULL
;

844 
out1
 = &
ouçut
;

845 
out2
 = &
îrout
;

846 
	`‰ì°dout
();

847 i‡(
e
 !
EXSHELLPROC
) {

848 
comm™d«me
 = 
ßvecmd«me
;

849 i‡(
Êags
 & 
EV_EXIT
) {

850 
	`exôshñl
(
exô°©us
);

853 
h™dÀr
 = 
ßveh™dÀr
;

854 i‡(
e
 != -1) {

855 i‡((
e
 !
EXERROR
 &&É !
EXEXEC
)

856 || 
cmdíåy
.
•ecül
)

857 
	`exøi£
(
e
);

858 
FORCEINTON
;

860 i‡(
cmdíåy
.
u
.
ödex
 !
EXECCMD
)

861 
	`p›ªdú
();

862 i‡(
Êags
 =
EV_BACKCMD
) {

863 
backcmd
->
buf
 = 
memout
.buf;

864 
backcmd
->
∆e·
 = 
memout
.
√xtc
 - memout.
buf
;

865 
memout
.
buf
 = 
NULL
;

868 #ifde‡
DEBUG


869 
	`åputs
("n‹mÆ comm™d: "); 
	`å¨gs
(
¨gv
);

871 
	`˛óºedú
();

872 
	`ªdúe˘
(
cmd
->
ncmd
.
ªdúe˘
, 0);

873 
•
 = 
v¨li°
.
li°
 ; s∞; s∞•->
√xt
)

874 
	`£tv¨eq
(
•
->
ãxt
, 
VEXPORT
|
VSTACK
);

875 
ívp
 = 
	`ívú⁄mít
();

876 
	`shñÀxec
(
¨gv
, 
ívp
, 
	`∑thvÆ
(), 
cmdíåy
.
u
.
ödex
);

879 
out
;

881 
∑ª¡
:

882 i‡(
mode
 == 0) {

883 
INTOFF
;

884 
exô°©us
 = 
	`waôf‹job
(
jp
, &
ªÆ°©us
);

885 
INTON
;

886 i‡(
iÊag
 && 
lo›√°
 > 0 && 
	`WIFSIGNALED
(
ªÆ°©us
)) {

887 
evÆskù
 = 
SKIPBREAK
;

888 
skùcou¡
 = 
lo›√°
;

890 } i‡(
mode
 == 2) {

891 
backcmd
->
fd
 = 
pù
[0];

892 
	`˛o£
(
pù
[1]);

893 
backcmd
->
jp
 = jp;

896 
out
:

897 i‡(
œ°¨g
)

898 
	`£tv¨
("_", 
œ°¨g
, 0);

899 i‡(
do_˛órcmdíåy
)

900 
	`˛órcmdíåy
(0);

901 
	`p›°ackm¨k
(&
sm¨k
);

902 
	}
}

913 
STATIC
 

914 
	$¥ehash
(
node
 *
n
)

916 
cmdíåy
 
íåy
;

918 i‡(
n
 &&Ç->
ty≥
 =
NCMD
 &&Ç->
ncmd
.
¨gs
)

919 i‡(
	`good«me
(
n
->
ncmd
.
¨gs
->
«rg
.
ãxt
))

920 
	`föd_comm™d
(
n
->
ncmd
.
¨gs
->
«rg
.
ãxt
, &
íåy
, 0,

921 
	`∑thvÆ
());

922 
	}
}

936 
	$b…öcmd
(
¨gc
 
__unu£d
, **
¨gv
 __unused)

942  
exô°©us
;

943 
	}
}

958 
	$bªakcmd
(
¨gc
, **
¨gv
)

960 
n
 = 
¨gc
 > 1 ? 
	`numbî
(
¨gv
[1]) : 1;

962 i‡(
n
 > 
lo›√°
)

963 
n
 = 
lo›√°
;

964 i‡(
n
 > 0) {

965 
evÆskù
 = (**
¨gv
 ='c')? 
SKIPCONT
 : 
SKIPBREAK
;

966 
skùcou¡
 = 
n
;

969 
	}
}

975 
	$comm™dcmd
(
¨gc
, **
¨gv
)

977 
°d∑th
[] = 
_PATH_STDPATH
;

978 
jm∂oc
 
loc
, *
ﬁd
;

979 
°æi°
 *
•
;

980 *
∑th
;

981 
ch
;

982 
cmd
 = -1;

984 
•
 = 
cmdívú⁄
; s∞; s∞•->
√xt
)

985 
	`£tv¨eq
(
•
->
ãxt
, 
VEXPORT
|
VSTACK
);

986 
∑th
 = 
	`∑thvÆ
();

988 
›töd
 = 
›åe£t
 = 1;

989 
›ãº
 = 0;

990 (
ch
 = 
	`gë›t
(
¨gc
, 
¨gv
, "pvV")) != -1) {

991 
ch
) {

993 
∑th
 = 
°d∑th
;

996 
cmd
 = 
TYPECMD_SMALLV
;

999 
cmd
 = 
TYPECMD_BIGV
;

1003 
	`îr‹
("unknow¿›ti⁄: -%c", 
›t›t
);

1006 
¨gc
 -
›töd
;

1007 
¨gv
 +
›töd
;

1009 i‡(
cmd
 != -1) {

1010 i‡(
¨gc
 != 1)

1011 
	`îr‹
("wrongÇumber ofárguments");

1012  
	`ty≥cmd_im∂
(2, 
¨gv
 - 1, 
cmd
);

1014 i‡(
¨gc
 != 0) {

1015 
ﬁd
 = 
h™dÀr
;

1016 
h™dÀr
 = &
loc
;

1017 i‡(
	`£tjmp
(
h™dÀr
->
loc
) == 0)

1018 
	`shñÀxec
(
¨gv
, 
	`ívú⁄mít
(), 
∑th
, 0);

1019 
h™dÀr
 = 
ﬁd
;

1020 i‡(
ex˚±i⁄
 =
EXEXEC
)

1021 
	`exô
(
exî∫o
);

1022 
	`exøi£
(
ex˚±i⁄
);

1029 
	`exô
(0);

1030 
	}
}

1038 
	$ªtu∫cmd
(
¨gc
, **
¨gv
)

1040 
ªt
 = 
¨gc
 > 1 ? 
	`numbî
(
¨gv
[1]Ë: 
€xô°©us
;

1042 i‡(
fun˙e°
) {

1043 
evÆskù
 = 
SKIPFUNC
;

1044 
skùcou¡
 = 1;

1047 
evÆskù
 = 
SKIPFILE
;

1048 
skùcou¡
 = 1;

1050  
ªt
;

1051 
	}
}

1055 
	$Ál£cmd
(
¨gc
 
__unu£d
, **
¨gv
 __unused)

1058 
	}
}

1062 
	$åuecmd
(
¨gc
 
__unu£d
, **
¨gv
 __unused)

1065 
	}
}

1069 
	$execcmd
(
¨gc
, **
¨gv
)

1071 i‡(
¨gc
 > 1) {

1072 
°æi°
 *
•
;

1074 
iÊag
 = 0;

1075 
mÊag
 = 0;

1076 
	`›tsch™ged
();

1077 
•
 = 
cmdívú⁄
; s∞; s∞•->
√xt
)

1078 
	`£tv¨eq
(
•
->
ãxt
, 
VEXPORT
|
VSTACK
);

1079 
	`shñÀxec
(
¨gv
 + 1, 
	`ívú⁄mít
(), 
	`∑thvÆ
(), 0);

1083 
	}
}

1087 
	$timescmd
(
¨gc
 
__unu£d
, **
¨gv
 __unused)

1089 
rußge
 
ru
;

1090 
shumös
, 
shsmös
, 
chumös
, 
chsmös
;

1091 
shu£cs
, 
shs£cs
, 
chu£cs
, 
chs£cs
;

1093 i‡(
	`gërußge
(
RUSAGE_SELF
, &
ru
) < 0)

1095 
shumös
 = 
ru
.
ru_utime
.
tv_£c
 / 60;

1096 
shu£cs
 = 
ru
.
ru_utime
.
tv_£c
 % 60 +Ñu.ru_utime.
tv_u£c
 / 1000000.;

1097 
shsmös
 = 
ru
.
ru_°ime
.
tv_£c
 / 60;

1098 
shs£cs
 = 
ru
.
ru_°ime
.
tv_£c
 % 60 +Ñu.ru_°ime.
tv_u£c
 / 1000000.;

1099 i‡(
	`gërußge
(
RUSAGE_CHILDREN
, &
ru
) < 0)

1101 
chumös
 = 
ru
.
ru_utime
.
tv_£c
 / 60;

1102 
chu£cs
 = 
ru
.
ru_utime
.
tv_£c
 % 60 +Ñu.ru_utime.
tv_u£c
 / 1000000.;

1103 
chsmös
 = 
ru
.
ru_°ime
.
tv_£c
 / 60;

1104 
chs£cs
 = 
ru
.
ru_°ime
.
tv_£c
 % 60 +Ñu.ru_°ime.
tv_u£c
 / 1000000.;

1105 
	`out1fmt
("%ldm%.3f†%ldm%.3fs\n%ldm%.3f†%ldm%.3fs\n", 
shumös
,

1106 
shu£cs
, 
shsmös
, 
shs£cs
, 
chumös
, 
chu£cs
, 
chsmös
, 
chs£cs
);

1108 
	}
}

	@eval.h

36 *
comm™d«me
;

37 
exô°©us
;

38 
°æi°
 *
cmdívú⁄
;

41 
	sbackcmd
 {

42 
	mfd
;

43 *
	mbuf
;

44 
	m∆e·
;

45 
job
 *
	mjp
;

48 
evÆcmd
(, **);

49 
evÆ°rög
(*);

50 
	gnode
;

51 
evÆåì
(
node
 *, );

52 
evÆbackcmd
(
node
 *, 
backcmd
 *);

53 
b…öcmd
(, **);

54 
bªakcmd
(, **);

55 
ªtu∫cmd
(, **);

56 
Ál£cmd
(, **);

57 
åuecmd
(, **);

58 
execcmd
(, **);

59 
timescmd
(, **);

60 
comm™dcmd
(, **);

63 
	#ö_fun˘i⁄
(Ë
fun˙e°


	)

64 
fun˙e°
;

65 
evÆskù
;

68 
	#SKIPBREAK
 1

	)

69 
	#SKIPCONT
 2

	)

70 
	#SKIPFUNC
 3

	)

71 
	#SKIPFILE
 4

	)

	@exec.c

33 #i‚de‡
löt


35 
	gsccsid
[] = "@(#)exec.c 8.4 (Berkeley) 6/8/95";

38 
	~<sys/cdefs.h
>

39 
__FBSDID
("$FreeBSD: src/bin/sh/exec.c,v 1.31.6.1 2008/11/25 02:59:29 kensmith Exp $");

41 
	~<sys/ty≥s.h
>

42 
	~<sys/°©.h
>

43 
	~<uni°d.h
>

44 
	~<f˙é.h
>

45 
	~<î∫o.h
>

46 
	~<°dlib.h
>

57 
	~"shñl.h
"

58 
	~"maö.h
"

59 
	~"nodes.h
"

60 
	~"∑r£r.h
"

61 
	~"ªdú.h
"

62 
	~"evÆ.h
"

63 
	~"exec.h
"

64 
	~"buûtös.h
"

65 
	~"v¨.h
"

66 
	~"›ti⁄s.h
"

67 
	~"öput.h
"

68 
	~"ouçut.h
"

69 
	~"sy¡ax.h
"

70 
	~"memÆloc.h
"

71 
	~"îr‹.h
"

72 
	~"öô.h
"

73 
	~"my°rög.h
"

74 
	~"show.h
"

75 
	~"jobs.h
"

76 
	~"Æüs.h
"

79 
	#CMDTABLESIZE
 31

	)

80 
	#ARB
 1

	)

84 
	stbÀ¡ry
 {

85 
tbÀ¡ry
 *
	m√xt
;

86 
∑øm
 
	m∑øm
;

87 
	m•ecül
;

88 
	mcmdty≥
;

89 
	mªhash
;

90 
	mcmd«me
[
ARB
];

94 
STATIC
 
tbÀ¡ry
 *
	gcmdèbÀ
[
CMDTABLESIZE
];

95 
STATIC
 
	gbuûtöloc
 = -1;

96 
	gexî∫o
 = 0;

99 
STATIC
 
åyexec
(*, **, **);

100 
STATIC
 
¥öã¡ry
(
tbÀ¡ry
 *, );

101 
STATIC
 
tbÀ¡ry
 *
cmdlookup
(*, );

102 
STATIC
 
dñëe_cmd_íåy
();

112 
	$shñÀxec
(**
¨gv
, **
ívp
, *
∑th
, 
ödex
)

114 *
cmd«me
;

115 
e
;

117 i‡(
	`°rchr
(
¨gv
[0], '/'Ë!
NULL
) {

118 
	`åyexec
(
¨gv
[0],árgv, 
ívp
);

119 
e
 = 
î∫o
;

121 
e
 = 
ENOENT
;

122 (
cmd«me
 = 
	`∑dv™˚
(&
∑th
, 
¨gv
[0])Ë!
NULL
) {

123 i‡(--
ödex
 < 0 && 
∑th›t
 =
NULL
) {

124 
	`åyexec
(
cmd«me
, 
¨gv
, 
ívp
);

125 i‡(
î∫o
 !
ENOENT
 &&Éºnÿ!
ENOTDIR
)

126 
e
 = 
î∫o
;

128 
	`°u«Œoc
(
cmd«me
);

133 
e
) {

134 
EACCES
:

135 
exî∫o
 = 126;

137 
ENOENT
:

138 
exî∫o
 = 127;

141 
exî∫o
 = 2;

144 i‡(
e
 =
ENOENT
 ||É =
ENOTDIR
)

145 
	`exîr‹
(
EXEXEC
, "%s:ÇŸ found", 
¨gv
[0]);

146 
	`exîr‹
(
EXEXEC
, "%s: %s", 
¨gv
[0], 
	`°ªº‹
(
e
));

147 
	}
}

150 
STATIC
 

151 
	$åyexec
(*
cmd
, **
¨gv
, **
ívp
)

153 
e
;

155 
	`execve
(
cmd
, 
¨gv
, 
ívp
);

156 
e
 = 
î∫o
;

157 i‡(
e
 =
ENOEXEC
) {

158 
	`öôshñÕroc
();

159 
	`£töputfûe
(
cmd
, 0);

160 
comm™d«me
 = 
¨g0
 = 
	`ßve°r
(
¨gv
[0]);

161 
	`£ç¨am
(
¨gv
 + 1);

162 
	`exøi£
(
EXSHELLPROC
);

165 
î∫o
 = 
e
;

166 
	}
}

178 *
	g∑th›t
;

181 
	$∑dv™˚
(**
∑th
, *
«me
)

183 *
p
, *
q
;

184 *
°¨t
;

185 
Àn
;

187 i‡(*
∑th
 =
NULL
)

188  
NULL
;

189 
°¨t
 = *
∑th
;

190 
p
 = 
°¨t
 ; *p && *p != ':' && *p != '%' ;Ö++);

191 
Àn
 = 
p
 - 
°¨t
 + 
	`°æí
(
«me
) + 2;

192 
	`°ackblocksize
(Ë< 
Àn
)

193 
	`grow°ackblock
();

194 
q
 = 
	`°ackblock
();

195 i‡(
p
 !
°¨t
) {

196 
	`mem˝y
(
q
, 
°¨t
, 
p
 - start);

197 
q
 +
p
 - 
°¨t
;

198 *
q
++ = '/';

200 
	`°r˝y
(
q
, 
«me
);

201 
∑th›t
 = 
NULL
;

202 i‡(*
p
 == '%') {

203 
∑th›t
 = ++
p
;

204 *
p
 && *p != ':')Ö++;

206 i‡(*
p
 == ':')

207 *
∑th
 = 
p
 + 1;

209 *
∑th
 = 
NULL
;

210  
	`°Æloc
(
Àn
);

211 
	}
}

219 
	$hashcmd
(
¨gc
 
__unu£d
, **
¨gv
 __unused)

221 
tbÀ¡ry
 **
µ
;

222 
tbÀ¡ry
 *
cmdp
;

223 
c
;

224 
vîbo£
;

225 
cmdíåy
 
íåy
;

226 *
«me
;

228 
vîbo£
 = 0;

229 (
c
 = 
	`√xt›t
("rv")) != '\0') {

230 i‡(
c
 == 'r') {

231 
	`˛órcmdíåy
(0);

232 } i‡(
c
 == 'v') {

233 
vîbo£
++;

236 i‡(*
¨g±r
 =
NULL
) {

237 
µ
 = 
cmdèbÀ
 ;Ö∞< &cmdèbÀ[
CMDTABLESIZE
] ;Öp++) {

238 
cmdp
 = *
µ
 ; cmd∞; cmd∞cmdp->
√xt
) {

239 i‡(
cmdp
->
cmdty≥
 =
CMDNORMAL
)

240 
	`¥öã¡ry
(
cmdp
, 
vîbo£
);

245 (
«me
 = *
¨g±r
Ë!
NULL
) {

246 i‡((
cmdp
 = 
	`cmdlookup
(
«me
, 0)Ë!
NULL


247 && (
cmdp
->
cmdty≥
 =
CMDNORMAL


248 || (
cmdp
->
cmdty≥
 =
CMDBUILTIN
 && 
buûtöloc
 >= 0)))

249 
	`dñëe_cmd_íåy
();

250 
	`föd_comm™d
(
«me
, &
íåy
, 1, 
	`∑thvÆ
());

251 i‡(
vîbo£
) {

252 i‡(
íåy
.
cmdty≥
 !
CMDUNKNOWN
) {

253 
cmdp
 = 
	`cmdlookup
(
«me
, 0);

254 i‡(
cmdp
 !
NULL
)

255 
	`¥öã¡ry
(
cmdp
, 
vîbo£
);

257 
	`outfmt
(&
îrout
, "%s:ÇŸ found\n", 
«me
);

259 
	`ÊushÆl
();

261 
¨g±r
++;

264 
	}
}

267 
STATIC
 

268 
	$¥öã¡ry
(
tbÀ¡ry
 *
cmdp
, 
vîbo£
)

270 
ödex
;

271 *
∑th
;

272 *
«me
;

274 i‡(
cmdp
->
cmdty≥
 =
CMDNORMAL
) {

275 
ödex
 = 
cmdp
->
∑øm
.index;

276 
∑th
 = 
	`∑thvÆ
();

278 
«me
 = 
	`∑dv™˚
(&
∑th
, 
cmdp
->
cmd«me
);

279 
	`°u«Œoc
(
«me
);

280 } --
ödex
 >= 0);

281 
	`out1°r
(
«me
);

282 } i‡(
cmdp
->
cmdty≥
 =
CMDBUILTIN
) {

283 
	`out1fmt
("buûtö %s", 
cmdp
->
cmd«me
);

284 } i‡(
cmdp
->
cmdty≥
 =
CMDFUNCTION
) {

285 
	`out1fmt
("fun˘i⁄ %s", 
cmdp
->
cmd«me
);

286 i‡(
vîbo£
) {

287 
INTOFF
;

288 
«me
 = 
	`comm™dãxt
(
cmdp
->
∑øm
.
func
);

289 
	`out1c
(' ');

290 
	`out1°r
(
«me
);

291 
	`ck‰ì
(
«me
);

292 
INTON
;

294 #ifde‡
DEBUG


296 
	`îr‹
("öã∫ÆÉº‹: cmdty≥ %d", 
cmdp
->
cmdty≥
);

299 i‡(
cmdp
->
ªhash
)

300 
	`out1c
('*');

301 
	`out1c
('\n');

302 
	}
}

312 
	$föd_comm™d
(*
«me
, 
cmdíåy
 *
íåy
, 
¥öãº
, *
∑th
)

314 
tbÀ¡ry
 *
cmdp
;

315 
ödex
;

316 
¥ev
;

317 *
fuŒ«me
;

318 
°©
 
°©b
;

319 
e
;

320 
i
;

321 
•ec
;

324 i‡(
	`°rchr
(
«me
, '/'Ë!
NULL
) {

325 
íåy
->
cmdty≥
 = 
CMDNORMAL
;

326 
íåy
->
u
.
ödex
 = 0;

331 i‡((
cmdp
 = 
	`cmdlookup
(
«me
, 0)Ë!
NULL
 && cmdp->
ªhash
 == 0)

332 
suc˚ss
;

335 i‡(
buûtöloc
 < 0 && (
i
 = 
	`föd_buûtö
(
«me
, &
•ec
)) >= 0) {

336 
INTOFF
;

337 
cmdp
 = 
	`cmdlookup
(
«me
, 1);

338 
cmdp
->
cmdty≥
 = 
CMDBUILTIN
;

339 
cmdp
->
∑øm
.
ödex
 = 
i
;

340 
cmdp
->
•ecül
 = 
•ec
;

341 
INTON
;

342 
suc˚ss
;

346 
¥ev
 = -1;

347 i‡(
cmdp
) {

348 i‡(
cmdp
->
cmdty≥
 =
CMDBUILTIN
)

349 
¥ev
 = 
buûtöloc
;

351 
¥ev
 = 
cmdp
->
∑øm
.
ödex
;

354 
e
 = 
ENOENT
;

355 
ödex
 = -1;

356 
lo›
:

357 (
fuŒ«me
 = 
	`∑dv™˚
(&
∑th
, 
«me
)Ë!
NULL
) {

358 
	`°u«Œoc
(
fuŒ«me
);

359 
ödex
++;

360 i‡(
∑th›t
) {

361 i‡(
	`¥efix
("buûtö", 
∑th›t
)) {

362 i‡((
i
 = 
	`föd_buûtö
(
«me
, &
•ec
)) < 0)

363 
lo›
;

364 
INTOFF
;

365 
cmdp
 = 
	`cmdlookup
(
«me
, 1);

366 
cmdp
->
cmdty≥
 = 
CMDBUILTIN
;

367 
cmdp
->
∑øm
.
ödex
 = 
i
;

368 
cmdp
->
•ecül
 = 
•ec
;

369 
INTON
;

370 
suc˚ss
;

371 } i‡(
	`¥efix
("func", 
∑th›t
)) {

374 
lo›
;

378 i‡(
fuŒ«me
[0] ='/' && 
ödex
 <
¥ev
) {

379 i‡(
ödex
 < 
¥ev
)

380 
lo›
;

381 
	`TRACE
(("£¨chexe¯\"%s\":Çÿch™ge\n", 
«me
));

382 
suc˚ss
;

384 i‡(
	`°©
(
fuŒ«me
, &
°©b
) < 0) {

385 i‡(
î∫o
 !
ENOENT
 &&Éºnÿ!
ENOTDIR
)

386 
e
 = 
î∫o
;

387 
lo›
;

389 
e
 = 
EACCES
;

390 i‡(!
	`S_ISREG
(
°©b
.
°_mode
))

391 
lo›
;

392 i‡(
∑th›t
) {

393 
	`°Æloc
(
	`°æí
(
fuŒ«me
) + 1);

394 
	`ªadcmdfûe
(
fuŒ«me
);

395 i‡((
cmdp
 = 
	`cmdlookup
(
«me
, 0)Ë=
NULL
 || cmdp->
cmdty≥
 !
CMDFUNCTION
)

396 
	`îr‹
("%†nŸ deföed i¿%s", 
«me
, 
fuŒ«me
);

397 
	`°u«Œoc
(
fuŒ«me
);

398 
suc˚ss
;

400 #ifde‡
nŸdef


401 i‡(
°©b
.
°_uid
 =
	`gëeuid
()) {

402 i‡((
°©b
.
°_mode
 & 0100) == 0)

403 
lo›
;

404 } i‡(
°©b
.
°_gid
 =
	`gëegid
()) {

405 i‡((
°©b
.
°_mode
 & 010) == 0)

406 
lo›
;

408 i‡((
°©b
.
°_mode
 & 01) == 0)

409 
lo›
;

412 
	`TRACE
(("£¨chexe¯\"%s\"Ñëu∫†\"%s\"\n", 
«me
, 
fuŒ«me
));

413 
INTOFF
;

414 
cmdp
 = 
	`cmdlookup
(
«me
, 1);

415 
cmdp
->
cmdty≥
 = 
CMDNORMAL
;

416 
cmdp
->
∑øm
.
ödex
 = index;

417 
INTON
;

418 
suc˚ss
;

422 i‡(
cmdp
)

423 
	`dñëe_cmd_íåy
();

424 i‡(
¥öãº
) {

425 i‡(
e
 =
ENOENT
 ||É =
ENOTDIR
)

426 
	`outfmt
(
out2
, "%s:ÇŸ found\n", 
«me
);

428 
	`outfmt
(
out2
, "%s: %s\n", 
«me
, 
	`°ªº‹
(
e
));

430 
íåy
->
cmdty≥
 = 
CMDUNKNOWN
;

433 
suc˚ss
:

434 
cmdp
->
ªhash
 = 0;

435 
íåy
->
cmdty≥
 = 
cmdp
->cmdtype;

436 
íåy
->
u
 = 
cmdp
->
∑øm
;

437 
íåy
->
•ecül
 = 
cmdp
->special;

438 
	}
}

447 
	$föd_buûtö
(*
«me
, *
•ecül
)

449 c⁄° 
buûtöcmd
 *
bp
;

451 
bp
 = 
buûtöcmd
 ; bp->
«me
 ; bp++) {

452 i‡(*
bp
->
«me
 =*«mê&& 
	`equÆ
(bp->name,Çame)) {

453 *
•ecül
 = 
bp
->special;

454  
bp
->
code
;

458 
	}
}

468 
	$hashcd
()

470 
tbÀ¡ry
 **
µ
;

471 
tbÀ¡ry
 *
cmdp
;

473 
µ
 = 
cmdèbÀ
 ;Ö∞< &cmdèbÀ[
CMDTABLESIZE
] ;Öp++) {

474 
cmdp
 = *
µ
 ; cmd∞; cmd∞cmdp->
√xt
) {

475 i‡(
cmdp
->
cmdty≥
 =
CMDNORMAL


476 || (
cmdp
->
cmdty≥
 =
CMDBUILTIN
 && 
buûtöloc
 >= 0))

477 
cmdp
->
ªhash
 = 1;

480 
	}
}

491 
	$ch™gï©h
(c⁄° *
√wvÆ
)

493 c⁄° *
ﬁd
, *
√w
;

494 
ödex
;

495 
fú°ch™ge
;

496 
b…ö
;

498 
ﬁd
 = 
	`∑thvÆ
();

499 
√w
 = 
√wvÆ
;

500 
fú°ch™ge
 = 9999;

501 
ödex
 = 0;

502 
b…ö
 = -1;

504 i‡(*
ﬁd
 !*
√w
) {

505 
fú°ch™ge
 = 
ödex
;

506 i‡((*
ﬁd
 ='\0' && *
√w
 == ':')

507 || (*
ﬁd
 =':' && *
√w
 == '\0'))

508 
fú°ch™ge
++;

509 
ﬁd
 = 
√w
;

511 i‡(*
√w
 == '\0')

513 i‡(*
√w
 ='%' && 
b…ö
 < 0 && 
	`¥efix
("builtin",Çew + 1))

514 
b…ö
 = 
ödex
;

515 i‡(*
√w
 == ':') {

516 
ödex
++;

518 
√w
++, 
ﬁd
++;

520 i‡(
buûtöloc
 < 0 && 
b…ö
 >= 0)

521 
buûtöloc
 = 
b…ö
;

522 i‡(
buûtöloc
 >0 && 
b…ö
 < 0)

523 
fú°ch™ge
 = 0;

524 
	`˛órcmdíåy
(
fú°ch™ge
);

525 
buûtöloc
 = 
b…ö
;

526 
	}
}

535 
	$˛órcmdíåy
(
fú°ch™ge
)

537 
tbÀ¡ry
 **
tbÕ
;

538 
tbÀ¡ry
 **
µ
;

539 
tbÀ¡ry
 *
cmdp
;

541 
INTOFF
;

542 
tbÕ
 = 
cmdèbÀ
 ;ÅbÕ < &cmdèbÀ[
CMDTABLESIZE
] ;Åblp++) {

543 
µ
 = 
tbÕ
;

544 (
cmdp
 = *
µ
Ë!
NULL
) {

545 i‡((
cmdp
->
cmdty≥
 =
CMDNORMAL
 &&

546 
cmdp
->
∑øm
.
ödex
 >
fú°ch™ge
)

547 || (
cmdp
->
cmdty≥
 =
CMDBUILTIN
 &&

548 
buûtöloc
 >
fú°ch™ge
)) {

549 *
µ
 = 
cmdp
->
√xt
;

550 
	`ck‰ì
(
cmdp
);

552 
µ
 = &
cmdp
->
√xt
;

556 
INTON
;

557 
	}
}

564 #ifde‡
mköô


565 
MKINIT
 
dñëefuncs
();

567 
	gSHELLPROC
 {

568 
dñëefuncs
();

573 
	$dñëefuncs
()

575 
tbÀ¡ry
 **
tbÕ
;

576 
tbÀ¡ry
 **
µ
;

577 
tbÀ¡ry
 *
cmdp
;

579 
INTOFF
;

580 
tbÕ
 = 
cmdèbÀ
 ;ÅbÕ < &cmdèbÀ[
CMDTABLESIZE
] ;Åblp++) {

581 
µ
 = 
tbÕ
;

582 (
cmdp
 = *
µ
Ë!
NULL
) {

583 i‡(
cmdp
->
cmdty≥
 =
CMDFUNCTION
) {

584 *
µ
 = 
cmdp
->
√xt
;

585 
	`‰ìfunc
(
cmdp
->
∑øm
.
func
);

586 
	`ck‰ì
(
cmdp
);

588 
µ
 = &
cmdp
->
√xt
;

592 
INTON
;

593 
	}
}

605 
STATIC
 
tbÀ¡ry
 **
	gœ°cmdíåy
;

608 
STATIC
 
tbÀ¡ry
 *

609 
	$cmdlookup
(*
«me
, 
add
)

611 
hashvÆ
;

612 *
p
;

613 
tbÀ¡ry
 *
cmdp
;

614 
tbÀ¡ry
 **
µ
;

616 
p
 = 
«me
;

617 
hashvÆ
 = *
p
 << 4;

618 *
p
)

619 
hashvÆ
 +*
p
++;

620 
hashvÆ
 &= 0x7FFF;

621 
µ
 = &
cmdèbÀ
[
hashvÆ
 % 
CMDTABLESIZE
];

622 
cmdp
 = *
µ
 ; cmd∞; cmd∞cmdp->
√xt
) {

623 i‡(
	`equÆ
(
cmdp
->
cmd«me
, 
«me
))

625 
µ
 = &
cmdp
->
√xt
;

627 i‡(
add
 && 
cmdp
 =
NULL
) {

628 
INTOFF
;

629 
cmdp
 = *
µ
 = 
	`ckmÆloc
( (
tbÀ¡ry
Ë- 
ARB


630 + 
	`°æí
(
«me
) + 1);

631 
cmdp
->
√xt
 = 
NULL
;

632 
cmdp
->
cmdty≥
 = 
CMDUNKNOWN
;

633 
cmdp
->
ªhash
 = 0;

634 
	`°r˝y
(
cmdp
->
cmd«me
, 
«me
);

635 
INTON
;

637 
œ°cmdíåy
 = 
µ
;

638  
cmdp
;

639 
	}
}

645 
STATIC
 

646 
	$dñëe_cmd_íåy
()

648 
tbÀ¡ry
 *
cmdp
;

650 
INTOFF
;

651 
cmdp
 = *
œ°cmdíåy
;

652 *
œ°cmdíåy
 = 
cmdp
->
√xt
;

653 
	`ck‰ì
(
cmdp
);

654 
INTON
;

655 
	}
}

665 
	$addcmdíåy
(*
«me
, 
cmdíåy
 *
íåy
)

667 
tbÀ¡ry
 *
cmdp
;

669 
INTOFF
;

670 
cmdp
 = 
	`cmdlookup
(
«me
, 1);

671 i‡(
cmdp
->
cmdty≥
 =
CMDFUNCTION
) {

672 
	`‰ìfunc
(
cmdp
->
∑øm
.
func
);

674 
cmdp
->
cmdty≥
 = 
íåy
->cmdtype;

675 
cmdp
->
∑øm
 = 
íåy
->
u
;

676 
INTON
;

677 
	}
}

685 
	$defun
(*
«me
, 
node
 *
func
)

687 
cmdíåy
 
íåy
;

689 
INTOFF
;

690 
íåy
.
cmdty≥
 = 
CMDFUNCTION
;

691 
íåy
.
u
.
func
 = 
	`c›yfunc
(func);

692 
	`addcmdíåy
(
«me
, &
íåy
);

693 
INTON
;

694 
	}
}

702 
	$un£tfunc
(*
«me
)

704 
tbÀ¡ry
 *
cmdp
;

706 i‡((
cmdp
 = 
	`cmdlookup
(
«me
, 0)Ë!
NULL
 && cmdp->
cmdty≥
 =
CMDFUNCTION
) {

707 
	`‰ìfunc
(
cmdp
->
∑øm
.
func
);

708 
	`dñëe_cmd_íåy
();

712 
	}
}

720 
	$ty≥cmd_im∂
(
¨gc
, **
¨gv
, 
cmd
)

722 
cmdíåy
 
íåy
;

723 
tbÀ¡ry
 *
cmdp
;

724 **
µ
;

725 
Æüs
 *
≠
;

726 
i
;

727 
îr‹
 = 0;

728 *c⁄° 
∑r£kwd
[];

730 
i
 = 1; i < 
¨gc
; i++) {

731 i‡(
cmd
 !
TYPECMD_SMALLV
)

732 
	`out1°r
(
¨gv
[
i
]);

735 
µ
 = (**)
∑r£kwd
; *pp;Öp++)

736 i‡(**
µ
 =*
¨gv
[
i
] && 
	`equÆ
(*pp,árgv[i]))

739 i‡(*
µ
) {

740 i‡(
cmd
 =
TYPECMD_SMALLV
)

741 
	`out1fmt
("%s\n", 
¨gv
[
i
]);

743 
	`out1°r
(" isá shell keyword\n");

748 i‡((
≠
 = 
	`looku∑lüs
(
¨gv
[
i
], 1)Ë!
NULL
) {

749 i‡(
cmd
 =
TYPECMD_SMALLV
)

750 
	`out1fmt
("Æü†%s='%s'\n", 
¨gv
[
i
], 
≠
->
vÆ
);

752 
	`out1fmt
(" i†™álü†f‹ %s\n", 
≠
->
vÆ
);

757 i‡((
cmdp
 = 
	`cmdlookup
(
¨gv
[
i
], 0)Ë!
NULL
) {

758 
íåy
.
cmdty≥
 = 
cmdp
->cmdtype;

759 
íåy
.
u
 = 
cmdp
->
∑øm
;

763 
	`föd_comm™d
(
¨gv
[
i
], &
íåy
, 0, 
	`∑thvÆ
());

766 
íåy
.
cmdty≥
) {

767 
CMDNORMAL
: {

768 i‡(
	`°rchr
(
¨gv
[
i
], '/'Ë=
NULL
) {

769 *
∑th
 = 
	`∑thvÆ
(), *
«me
;

770 
j
 = 
íåy
.
u
.
ödex
;

772 
«me
 = 
	`∑dv™˚
(&
∑th
, 
¨gv
[
i
]);

773 
	`°u«Œoc
(
«me
);

774 } --
j
 >= 0);

775 i‡(
cmd
 =
TYPECMD_SMALLV
)

776 
	`out1fmt
("%s\n", 
«me
);

778 
	`out1fmt
(" is%s %s\n",

779 (
cmdp
 && 
cmd
 =
TYPECMD_TYPE
) ?

781 
«me
);

783 i‡(
	`óc˚ss
(
¨gv
[
i
], 
X_OK
) == 0) {

784 i‡(
cmd
 =
TYPECMD_SMALLV
)

785 
	`out1fmt
("%s\n", 
¨gv
[
i
]);

787 
	`out1fmt
(" i†%s\n", 
¨gv
[
i
]);

789 i‡(
cmd
 !
TYPECMD_SMALLV
)

790 
	`out1fmt
(": %s\n",

791 
	`°ªº‹
(
î∫o
));

792 
îr‹
 |= 127;

797 
CMDFUNCTION
:

798 i‡(
cmd
 =
TYPECMD_SMALLV
)

799 
	`out1fmt
("%s\n", 
¨gv
[
i
]);

801 
	`out1°r
(" isá shell function\n");

804 
CMDBUILTIN
:

805 i‡(
cmd
 =
TYPECMD_SMALLV
)

806 
	`out1fmt
("%s\n", 
¨gv
[
i
]);

808 
	`out1°r
(" isá shell builtin\n");

812 i‡(
cmd
 !
TYPECMD_SMALLV
)

813 
	`out1°r
(":Çot found\n");

814 
îr‹
 |= 127;

818  
îr‹
;

819 
	}
}

826 
	$ty≥cmd
(
¨gc
, **
¨gv
)

828  
	`ty≥cmd_im∂
(
¨gc
, 
¨gv
, 
TYPECMD_TYPE
);

829 
	}
}

	@exec.h

37 
	#CMDUNKNOWN
 -1

	)

38 
	#CMDNORMAL
 0

	)

39 
	#CMDBUILTIN
 1

	)

40 
	#CMDFUNCTION
 2

	)

44 
	mTYPECMD_SMALLV
,

45 
	mTYPECMD_BIGV
,

46 
	mTYPECMD_TYPE


49 
	scmdíåy
 {

50 
	mcmdty≥
;

51 
	u∑øm
 {

52 
	mödex
;

53 
node
 *
	mfunc
;

54 } 
	mu
;

55 
	m•ecül
;

59 *
∑th›t
;

60 
exî∫o
;

62 
shñÀxec
(**, **, *, );

63 *
∑dv™˚
(**, *);

64 
hashcmd
(, **);

65 
föd_comm™d
(*, 
cmdíåy
 *, , *);

66 
föd_buûtö
(*, *);

67 
hashcd
();

68 
ch™gï©h
(const *);

69 
dñëefuncs
();

70 
addcmdíåy
(*, 
cmdíåy
 *);

71 
defun
(*, 
node
 *);

72 
un£tfunc
(*);

73 
ty≥cmd_im∂
(, **, );

74 
ty≥cmd
(, **);

75 
˛órcmdíåy
();

	@expand.c

33 #i‚de‡
löt


35 
	gsccsid
[] = "@(#)expand.c 8.5 (Berkeley) 5/15/95";

38 
	~<sys/cdefs.h
>

39 
__FBSDID
("$FreeBSD: src/bin/sh/expand.c,v 1.51.2.2.2.1 2008/11/25 02:59:29 kensmith Exp $");

41 
	~<sys/ty≥s.h
>

42 
	~<sys/time.h
>

43 
	~<sys/°©.h
>

44 
	~<î∫o.h
>

45 
	~<dúít.h
>

46 
	~<uni°d.h
>

47 
	~<pwd.h
>

48 
	~<°dlib.h
>

49 
	~<limôs.h
>

50 
	~<°dio.h
>

51 
	~<°rög.h
>

58 
	~"shñl.h
"

59 
	~"maö.h
"

60 
	~"nodes.h
"

61 
	~"evÆ.h
"

62 
	~"ex∑nd.h
"

63 
	~"sy¡ax.h
"

64 
	~"∑r£r.h
"

65 
	~"jobs.h
"

66 
	~"›ti⁄s.h
"

67 
	~"v¨.h
"

68 
	~"öput.h
"

69 
	~"ouçut.h
"

70 
	~"memÆloc.h
"

71 
	~"îr‹.h
"

72 
	~"my°rög.h
"

73 
	~"¨ôh.h
"

74 
	~"show.h
"

81 
	sif§egi⁄
 {

82 
if§egi⁄
 *
	m√xt
;

83 
	mbegoff
;

84 
	mídoff
;

85 
	mnul⁄ly
;

89 
STATIC
 *
	gexpde°
;

90 
STATIC
 
nodñi°
 *
	g¨gbackq
;

91 
STATIC
 
if§egi⁄
 
	gifsfú°
;

92 
STATIC
 
if§egi⁄
 *
	gif¶a°p
;

93 
STATIC
 
¨gli°
 
	gex∑rg
;

95 
STATIC
 
¨g°r
(*, );

96 
STATIC
 *
ex±ûde
(*, );

97 
STATIC
 
expbackq
(
node
 *, , );

98 
STATIC
 
subevÆv¨
(*, *, , , , );

99 
STATIC
 *
evÆv¨
(*, );

100 
STATIC
 
v¨is£t
(*, );

101 
STATIC
 
v¨vÆue
(*, , , );

102 
STATIC
 
ªc‹dªgi⁄
(, , );

103 
STATIC
 
ªmovîec‹dªgi⁄s
();

104 
STATIC
 
ifsbªakup
(*, 
¨gli°
 *);

105 
STATIC
 
ex∑ndmëa
(
°æi°
 *, );

106 
STATIC
 
expmëa
(*, *);

107 
STATIC
 
add‚ame
(*);

108 
STATIC
 
°æi°
 *
exps‹t
(strlist *);

109 
STATIC
 
°æi°
 *
ms‹t
(strlist *, );

110 
STATIC
 
pm©ch
(*, *, );

111 
STATIC
 *
cväum
(, *);

112 
STATIC
 
cﬁœã_ønge_cmp
(, );

114 
STATIC
 

115 
	$cﬁœã_ønge_cmp
(
c1
, 
c2
)

117 
s1
[2], 
s2
[2];

119 
s1
[0] = 
c1
;

120 
s2
[0] = 
c2
;

121  (
	`°rcﬁl
(
s1
, 
s2
));

122 
	}
}

131 
	$ex∑ndhîe
(
node
 *
¨g
, 
fd
)

133 
hîefd
 = 
fd
;

134 
	`ex∑nd¨g
(
¨g
, (
¨gli°
 *)
NULL
, 0);

135 
	`xwrôe
(
fd
, 
	`°ackblock
(), 
expde°
 - stackblock());

136 
	}
}

147 
	$ex∑nd¨g
(
node
 *
¨g
, 
¨gli°
 *¨gli°, 
Êag
)

149 
°æi°
 *
•
;

150 *
p
;

152 
¨gbackq
 = 
¨g
->
«rg
.
backquŸe
;

153 
	`STARTSTACKSTR
(
expde°
);

154 
ifsfú°
.
√xt
 = 
NULL
;

155 
if¶a°p
 = 
NULL
;

156 
	`¨g°r
(
¨g
->
«rg
.
ãxt
, 
Êag
);

157 i‡(
¨gli°
 =
NULL
) {

160 
	`STPUTC
('\0', 
expde°
);

161 
p
 = 
	`gøb°ack°r
(
expde°
);

162 
ex∑rg
.
œ°p
 = &ex∑rg.
li°
;

166 i‡(
Êag
 & 
EXP_FULL
) {

167 
	`ifsbªakup
(
p
, &
ex∑rg
);

168 *
ex∑rg
.
œ°p
 = 
NULL
;

169 
ex∑rg
.
œ°p
 = &ex∑rg.
li°
;

170 
	`ex∑ndmëa
(
ex∑rg
.
li°
, 
Êag
);

172 i‡(
Êag
 & 
EXP_REDIR
)

173 
	`rmesˇ≥s
(
p
);

174 
•
 = (
°æi°
 *)
	`°Æloc
( (strlist));

175 
•
->
ãxt
 = 
p
;

176 *
ex∑rg
.
œ°p
 = 
•
;

177 
ex∑rg
.
œ°p
 = &
•
->
√xt
;

179 
ifsfú°
.
√xt
 !
NULL
) {

180 
if§egi⁄
 *
if•
;

181 
INTOFF
;

182 
if•
 = 
ifsfú°
.
√xt
->next;

183 
	`ck‰ì
(
ifsfú°
.
√xt
);

184 
ifsfú°
.
√xt
 = 
if•
;

185 
INTON
;

187 *
ex∑rg
.
œ°p
 = 
NULL
;

188 i‡(
ex∑rg
.
li°
) {

189 *
¨gli°
->
œ°p
 = 
ex∑rg
.
li°
;

190 
¨gli°
->
œ°p
 = 
ex∑rg
.lastp;

192 
	}
}

202 
STATIC
 

203 
	$¨g°r
(*
p
, 
Êag
)

205 
c
;

206 
quŸes
 = 
Êag
 & (
EXP_FULL
 | 
EXP_CASE
 | 
EXP_REDIR
);

207 
fú°eq
 = 1;

209 i‡(*
p
 ='~' && (
Êag
 & (
EXP_TILDE
 | 
EXP_VARTILDE
)))

210 
p
 = 
	`ex±ûde
’, 
Êag
);

212 
c
 = *
p
++) {

214 
CTLENDVAR
:

215 
bªaklo›
;

216 
CTLQUOTEMARK
:

218 i‡(
p
[0] =
CTLVAR
 &&Ö[2] == '@' &&Ö[3] == '=')

220 i‡((
Êag
 & 
EXP_FULL
) != 0)

221 
	`STPUTC
(
c
, 
expde°
);

223 
CTLESC
:

224 i‡(
quŸes
)

225 
	`STPUTC
(
c
, 
expde°
);

226 
c
 = *
p
++;

227 
	`STPUTC
(
c
, 
expde°
);

229 
CTLVAR
:

230 
p
 = 
	`evÆv¨
’, 
Êag
);

232 
CTLBACKQ
:

233 
CTLBACKQ
|
CTLQUOTE
:

234 
	`expbackq
(
¨gbackq
->
n
, 
c
 & 
CTLQUOTE
, 
Êag
);

235 
¨gbackq
 =árgbackq->
√xt
;

237 
CTLENDARI
:

238 
	`ex∑ri
(
Êag
);

246 
	`STPUTC
(
c
, 
expde°
);

247 i‡(
Êag
 & 
EXP_VARTILDE
 && *
p
 == '~') {

248 i‡(
c
 == '=') {

249 i‡(
fú°eq
)

250 
fú°eq
 = 0;

254 
p
 = 
	`ex±ûde
’, 
Êag
);

258 
	`STPUTC
(
c
, 
expde°
);

261 
bªaklo›
:;

262 
	}
}

264 
STATIC
 *

265 
	$ex±ûde
(*
p
, 
Êag
)

267 
c
, *
°¨ç
 = 
p
;

268 
∑sswd
 *
pw
;

269 *
home
;

270 
quŸes
 = 
Êag
 & (
EXP_FULL
 | 
EXP_CASE
 | 
EXP_REDIR
);

272 (
c
 = *
p
) != '\0') {

273 
c
) {

274 
CTLESC
:

275  (
°¨ç
);

276 
CTLQUOTEMARK
:

277  (
°¨ç
);

279 i‡(
Êag
 & 
EXP_VARTILDE
)

280 
d⁄e
;

283 
d⁄e
;

285 
p
++;

287 
d⁄e
:

288 *
p
 = '\0';

289 i‡(*(
°¨ç
+1) == '\0') {

290 i‡((
home
 = 
	`lookupv¨
("HOME")Ë=
NULL
)

291 
lo£
;

293 i‡((
pw
 = 
	`gëpw«m
(
°¨ç
+1)Ë=
NULL
)

294 
lo£
;

295 
home
 = 
pw
->
pw_dú
;

297 i‡(*
home
 == '\0')

298 
lo£
;

299 *
p
 = 
c
;

300 (
c
 = *
home
++) != '\0') {

301 i‡(
quŸes
 && 
SQSYNTAX
[()
c
] =
CCTL
)

302 
	`STPUTC
(
CTLESC
, 
expde°
);

303 
	`STPUTC
(
c
, 
expde°
);

305  (
p
);

306 
lo£
:

307 *
p
 = 
c
;

308  (
°¨ç
);

309 
	}
}

312 
STATIC
 

313 
	$ªmovîec‹dªgi⁄s
(
ídoff
)

315 i‡(
if¶a°p
 =
NULL
)

318 i‡(
ifsfú°
.
ídoff
 >Éndoff) {

319 
ifsfú°
.
√xt
 !
NULL
) {

320 
if§egi⁄
 *
if•
;

321 
INTOFF
;

322 
if•
 = 
ifsfú°
.
√xt
->next;

323 
	`ck‰ì
(
ifsfú°
.
√xt
);

324 
ifsfú°
.
√xt
 = 
if•
;

325 
INTON
;

327 i‡(
ifsfú°
.
begoff
 > 
ídoff
)

328 
if¶a°p
 = 
NULL
;

330 
if¶a°p
 = &
ifsfú°
;

331 
ifsfú°
.
ídoff
 =Éndoff;

336 
if¶a°p
 = &
ifsfú°
;

337 
if¶a°p
->
√xt
 && if¶a°p->√xt->
begoff
 < 
ídoff
)

338 
if¶a°p
=if¶a°p->
√xt
;

339 
if¶a°p
->
√xt
 !
NULL
) {

340 
if§egi⁄
 *
if•
;

341 
INTOFF
;

342 
if•
 = 
if¶a°p
->
√xt
->next;

343 
	`ck‰ì
(
if¶a°p
->
√xt
);

344 
if¶a°p
->
√xt
 = 
if•
;

345 
INTON
;

347 i‡(
if¶a°p
->
ídoff
 >Éndoff)

348 
if¶a°p
->
ídoff
 =Éndoff;

349 
	}
}

356 
	$ex∑ri
(
Êag
)

358 *
p
, *
°¨t
;

359 
¨ôh_t
 
ªsu…
;

360 
begoff
;

361 
quŸes
 = 
Êag
 & (
EXP_FULL
 | 
EXP_CASE
 | 
EXP_REDIR
);

362 
quŸed
;

375 
	`CHECKSTRSPACE
(
	`DIGITS
(
ªsu…
Ë- 2, 
expde°
);

376 
	`USTPUTC
('\0', 
expde°
);

377 
°¨t
 = 
	`°ackblock
();

378 
p
 = 
expde°
 - 2;

379 
p
 >
°¨t
 && *∞!
CTLARI
)

380 --
p
;

381 i‡(
p
 < 
°¨t
 || *∞!
CTLARI
)

382 
	`îr‹
("missing CTLARI (shouldn't happen)");

383 i‡(
p
 > 
°¨t
 && *’ - 1Ë=
CTLESC
)

384 
p
 = 
°¨t
; *∞!
CTLARI
;Ö++)

385 i‡(*
p
 =
CTLESC
)

386 
p
++;

388 i‡(
p
[1] == '"')

389 
quŸed
=1;

391 
quŸed
=0;

392 
begoff
 = 
p
 - 
°¨t
;

393 
	`ªmovîec‹dªgi⁄s
(
begoff
);

394 i‡(
quŸes
)

395 
	`rmesˇ≥s
(
p
+2);

396 
ªsu…
 = 
	`¨ôh
(
p
+2);

397 
	`fmt°r
(
p
, 
	`DIGITS
(
ªsu…
), 
ARITH_FORMAT_STR
,Ñesult);

398 *
p
++)

400 i‡(
quŸed
 == 0)

401 
	`ªc‹dªgi⁄
(
begoff
, 
p
 - 1 - 
°¨t
, 0);

402 
ªsu…
 = 
expde°
 - 
p
 + 1;

403 
	`STADJUST
(-
ªsu…
, 
expde°
);

404 
	}
}

411 
STATIC
 

412 
	$expbackq
(
node
 *
cmd
, 
quŸed
, 
Êag
)

414 
backcmd
 
ö
;

415 
i
;

416 
buf
[128];

417 *
p
;

418 *
de°
 = 
expde°
;

419 
if§egi⁄
 
ßveifs
, *
ßvña°p
;

420 
nodñi°
 *
ßvórgbackq
;

421 
œ°c
;

422 
°¨éoc
 = 
de°
 - 
	`°ackblock
();

423 c⁄° *
sy¡ax
 = 
quŸed
? 
DQSYNTAX
 : 
BASESYNTAX
;

424 
ßvehîefd
;

425 
quŸes
 = 
Êag
 & (
EXP_FULL
 | 
EXP_CASE
 | 
EXP_REDIR
);

426 
¬l
;

428 
INTOFF
;

429 
ßveifs
 = 
ifsfú°
;

430 
ßvña°p
 = 
if¶a°p
;

431 
ßvórgbackq
 = 
¨gbackq
;

432 
ßvehîefd
 = 
hîefd
;

433 
hîefd
 = -1;

434 
p
 = 
	`gøb°ack°r
(
de°
);

435 
	`evÆbackcmd
(
cmd
, &
ö
);

436 
	`ungøb°ack°r
(
p
, 
de°
);

437 
ifsfú°
 = 
ßveifs
;

438 
if¶a°p
 = 
ßvña°p
;

439 
¨gbackq
 = 
ßvórgbackq
;

440 
hîefd
 = 
ßvehîefd
;

442 
p
 = 
ö
.
buf
;

443 
œ°c
 = '\0';

444 
¬l
 = 0;

447 i‡(--
ö
.
∆e·
 < 0) {

448 i‡(
ö
.
fd
 < 0)

450 (
i
 = 
	`ªad
(
ö
.
fd
, 
buf
,  buf)Ë< 0 && 
î∫o
 =
EINTR
);

451 
	`TRACE
(("expbackq:ÑódÑëu∫†%d\n", 
i
));

452 i‡(
i
 <= 0)

454 
p
 = 
buf
;

455 
ö
.
∆e·
 = 
i
 - 1;

457 
œ°c
 = *
p
++;

458 i‡(
œ°c
 != '\0') {

459 i‡(
quŸes
 && 
sy¡ax
[()
œ°c
] =
CCTL
)

460 
	`STPUTC
(
CTLESC
, 
de°
);

461 i‡(
œ°c
 == '\n') {

462 
¬l
++;

464 
¬l
 > 0) {

465 
¬l
--;

466 
	`STPUTC
('\n', 
de°
);

468 
	`STPUTC
(
œ°c
, 
de°
);

473 i‡(
ö
.
fd
 >= 0)

474 
	`˛o£
(
ö
.
fd
);

475 i‡(
ö
.
buf
)

476 
	`ck‰ì
(
ö
.
buf
);

477 i‡(
ö
.
jp
)

478 
exô°©us
 = 
	`waôf‹job
(
ö
.
jp
, (*)
NULL
);

479 i‡(
quŸed
 == 0)

480 
	`ªc‹dªgi⁄
(
°¨éoc
, 
de°
 - 
	`°ackblock
(), 0);

481 
	`TRACE
(("evalbackq: size=%d: \"%.*s\"\n",

482 (
de°
 - 
	`°ackblock
()Ë- 
°¨éoc
,

483 (
de°
 - 
	`°ackblock
()Ë- 
°¨éoc
,

484 
	`°ackblock
(Ë+ 
°¨éoc
));

485 
expde°
 = 
de°
;

486 
INTON
;

487 
	}
}

491 
STATIC
 

492 
	$subevÆv¨
(*
p
, *
°r
, 
°æoc
, 
subty≥
, 
°¨éoc
,

493 
v¨Êags
)

495 *
°¨ç
;

496 *
loc
 = 
NULL
;

497 *
q
;

498 
c
 = 0;

499 
ßvehîefd
 = 
hîefd
;

500 
nodñi°
 *
ßvórgbackq
 = 
¨gbackq
;

501 
amou¡
;

503 
hîefd
 = -1;

504 
	`¨g°r
(
p
, 0);

505 
	`STACKSTRNUL
(
expde°
);

506 
hîefd
 = 
ßvehîefd
;

507 
¨gbackq
 = 
ßvórgbackq
;

508 
°¨ç
 = 
	`°ackblock
(Ë+ 
°¨éoc
;

509 i‡(
°r
 =
NULL
)

510 
°r
 = 
	`°ackblock
(Ë+ 
°æoc
;

512 
subty≥
) {

513 
VSASSIGN
:

514 
	`£tv¨
(
°r
, 
°¨ç
, 0);

515 
amou¡
 = 
°¨ç
 - 
expde°
;

516 
	`STADJUST
(
amou¡
, 
expde°
);

517 
v¨Êags
 &~
VSNUL
;

518 i‡(
c
 != 0)

519 *
loc
 = 
c
;

522 
VSQUESTION
:

523 i‡(*
p
 !
CTLENDVAR
) {

524 
	`outfmt
(&
îrout
, "%s\n", 
°¨ç
);

525 
	`îr‹
((*)
NULL
);

527 
	`îr‹
("%.*s:Ö¨amëî %¢Ÿ së", ()(
p
 - 
°r
 - 1),

528 
°r
, (
v¨Êags
 & 
VSNUL
) ? "null or "

529 : 
nuŒ°r
);

532 
VSTRIMLEFT
:

533 
loc
 = 
°¨ç
;Üo¯< 
°r
;Üoc++) {

534 
c
 = *
loc
;

535 *
loc
 = '\0';

536 i‡(
	`∑tm©ch
(
°r
, 
°¨ç
, 
v¨Êags
 & 
VSQUOTE
)) {

537 *
loc
 = 
c
;

538 
ªc‹dÀ·
;

540 *
loc
 = 
c
;

541 i‡((
v¨Êags
 & 
VSQUOTE
Ë&& *
loc
 =
CTLESC
)

542 
loc
++;

546 
VSTRIMLEFTMAX
:

547 
loc
 = 
°r
 - 1;Üo¯>
°¨ç
;) {

548 
c
 = *
loc
;

549 *
loc
 = '\0';

550 i‡(
	`∑tm©ch
(
°r
, 
°¨ç
, 
v¨Êags
 & 
VSQUOTE
)) {

551 *
loc
 = 
c
;

552 
ªc‹dÀ·
;

554 *
loc
 = 
c
;

555 
loc
--;

556 i‡((
v¨Êags
 & 
VSQUOTE
Ë&& 
loc
 > 
°¨ç
 &&

557 *(
loc
 - 1Ë=
CTLESC
) {

558 
q
 = 
°¨ç
; q < 
loc
; q++)

559 i‡(*
q
 =
CTLESC
)

560 
q
++;

561 i‡(
q
 > 
loc
)

562 
loc
--;

567 
VSTRIMRIGHT
:

568 
loc
 = 
°r
 - 1;Üo¯>
°¨ç
;) {

569 i‡(
	`∑tm©ch
(
°r
, 
loc
, 
v¨Êags
 & 
VSQUOTE
)) {

570 
amou¡
 = 
loc
 - 
expde°
;

571 
	`STADJUST
(
amou¡
, 
expde°
);

574 
loc
--;

575 i‡((
v¨Êags
 & 
VSQUOTE
Ë&& 
loc
 > 
°¨ç
 &&

576 *(
loc
 - 1Ë=
CTLESC
) {

577 
q
 = 
°¨ç
; q < 
loc
; q++)

578 i‡(*
q
 =
CTLESC
)

579 
q
++;

580 i‡(
q
 > 
loc
)

581 
loc
--;

586 
VSTRIMRIGHTMAX
:

587 
loc
 = 
°¨ç
;Üo¯< 
°r
 - 1;Üoc++) {

588 i‡(
	`∑tm©ch
(
°r
, 
loc
, 
v¨Êags
 & 
VSQUOTE
)) {

589 
amou¡
 = 
loc
 - 
expde°
;

590 
	`STADJUST
(
amou¡
, 
expde°
);

593 i‡((
v¨Êags
 & 
VSQUOTE
Ë&& *
loc
 =
CTLESC
)

594 
loc
++;

600 
	`ab‹t
();

603 
ªc‹dÀ·
:

604 
amou¡
 = ((
°r
 - 1Ë- (
loc
 - 
°¨ç
)Ë- 
expde°
;

605 
	`STADJUST
(
amou¡
, 
expde°
);

606 
loc
 !
°r
 - 1)

607 *
°¨ç
++ = *
loc
++;

609 
	}
}

617 
STATIC
 *

618 
	$evÆv¨
(*
p
, 
Êag
)

620 
subty≥
;

621 
v¨Êags
;

622 *
v¨
;

623 *
vÆ
;

624 
∑éoc
;

625 
c
;

626 
£t
;

627 
•ecül
;

628 
°¨éoc
;

629 
v¨Àn
;

630 
ósy
;

631 
quŸes
 = 
Êag
 & (
EXP_FULL
 | 
EXP_CASE
 | 
EXP_REDIR
);

633 
v¨Êags
 = ()*
p
++;

634 
subty≥
 = 
v¨Êags
 & 
VSTYPE
;

635 
v¨
 = 
p
;

636 
•ecül
 = 0;

637 i‡(! 
	`is_«me
(*
p
))

638 
•ecül
 = 1;

639 
p
 = 
	`°rchr
(p, '=') + 1;

640 
agaö
:

641 i‡(
v¨Êags
 & 
VSLINENO
) {

642 
£t
 = 1;

643 
•ecül
 = 0;

644 
vÆ
 = 
v¨
;

645 
p
[-1] = '\0';

647 } i‡(
•ecül
) {

648 
£t
 = 
	`v¨is£t
(
v¨
, 
v¨Êags
 & 
VSNUL
);

649 
vÆ
 = 
NULL
;

651 
vÆ
 = 
	`b…ölookup
(
v¨
, 1);

652 i‡(
vÆ
 =
NULL
 || ((
v¨Êags
 & 
VSNUL
) && val[0] == '\0')) {

653 
vÆ
 = 
NULL
;

654 
£t
 = 0;

656 
£t
 = 1;

658 
v¨Àn
 = 0;

659 
°¨éoc
 = 
expde°
 - 
	`°ackblock
();

660 i‡(!
£t
 && 
uÊag
) {

661 
subty≥
) {

662 
VSNORMAL
:

663 
VSTRIMLEFT
:

664 
VSTRIMLEFTMAX
:

665 
VSTRIMRIGHT
:

666 
VSTRIMRIGHTMAX
:

667 
VSLENGTH
:

668 
	`îr‹
("%.*s:Ö¨amëîÇŸ së", ()(
p
 - 
v¨
 - 1),

669 
v¨
);

672 i‡(
£t
 && 
subty≥
 !
VSPLUS
) {

674 i‡(
•ecül
) {

675 
	`v¨vÆue
(
v¨
, 
v¨Êags
 & 
VSQUOTE
, 
subty≥
, 
Êag
);

676 i‡(
subty≥
 =
VSLENGTH
) {

677 
v¨Àn
 = 
expde°
 - 
	`°ackblock
(Ë- 
°¨éoc
;

678 
	`STADJUST
(-
v¨Àn
, 
expde°
);

681 c⁄° *
sy¡ax
 = (
v¨Êags
 & 
VSQUOTE
Ë? 
DQSYNTAX


682 : 
BASESYNTAX
;

684 i‡(
subty≥
 =
VSLENGTH
) {

685 ;*
vÆ
; val++)

686 
v¨Àn
++;

689 *
vÆ
) {

690 i‡(
quŸes
 &&

691 
sy¡ax
[()*
vÆ
] =
CCTL
)

692 
	`STPUTC
(
CTLESC
, 
expde°
);

693 
	`STPUTC
(*
vÆ
++, 
expde°
);

700 i‡(
subty≥
 =
VSPLUS
)

701 
£t
 = ! set;

703 
ósy
 = ((
v¨Êags
 & 
VSQUOTE
) == 0 ||

704 (*
v¨
 ='@' && 
shñÕ¨am
.
≈¨am
 != 1));

707 
subty≥
) {

708 
VSLENGTH
:

709 
expde°
 = 
	`cväum
(
v¨Àn
,Éxpdest);

710 
ªc‹d
;

712 
VSNORMAL
:

713 i‡(!
ósy
)

715 
ªc‹d
:

716 
	`ªc‹dªgi⁄
(
°¨éoc
, 
expde°
 - 
	`°ackblock
(),

717 
v¨Êags
 & 
VSQUOTE
);

720 
VSPLUS
:

721 
VSMINUS
:

722 i‡(!
£t
) {

723 
	`¨g°r
(
p
, 
Êag
);

726 i‡(
ósy
)

727 
ªc‹d
;

730 
VSTRIMLEFT
:

731 
VSTRIMLEFTMAX
:

732 
VSTRIMRIGHT
:

733 
VSTRIMRIGHTMAX
:

734 i‡(!
£t
)

740 
	`STPUTC
('\0', 
expde°
);

741 
∑éoc
 = 
expde°
 - 
	`°ackblock
();

742 i‡(
	`subevÆv¨
(
p
, 
NULL
, 
∑éoc
, 
subty≥
,

743 
°¨éoc
, 
v¨Êags
) == 0) {

744 
amou¡
 = (
expde°
 - 
	`°ackblock
(Ë- 
∑éoc
) + 1;

745 
	`STADJUST
(-
amou¡
, 
expde°
);

748 
	`ªmovîec‹dªgi⁄s
(
°¨éoc
);

749 
ªc‹d
;

751 
VSASSIGN
:

752 
VSQUESTION
:

753 i‡(!
£t
) {

754 i‡(
	`subevÆv¨
(
p
, 
v¨
, 0, 
subty≥
, 
°¨éoc
, 
v¨Êags
)) {

755 
v¨Êags
 &~
VSNUL
;

760 
	`ªmovîec‹dªgi⁄s
(
°¨éoc
);

761 
agaö
;

765 i‡(
ósy
)

766 
ªc‹d
;

769 
VSERROR
:

770 
c
 = 
p
 - 
v¨
 - 1;

771 
	`îr‹
("${%.*s%s}: Bad sub°ôuti⁄", 
c
, 
v¨
,

772 (
c
 > 0 && *
p
 !
CTLENDVAR
) ? "..." : "");

775 
	`ab‹t
();

777 
p
[-1] = '=';

779 i‡(
subty≥
 !
VSNORMAL
) {

780 
√°ög
 = 1;

782 i‡((
c
 = *
p
++Ë=
CTLESC
)

783 
p
++;

784 i‡(
c
 =
CTLBACKQ
 || c =(CTLBACKQ|
CTLQUOTE
)) {

785 i‡(
£t
)

786 
¨gbackq
 =árgbackq->
√xt
;

787 } i‡(
c
 =
CTLVAR
) {

788 i‡((*
p
++ & 
VSTYPE
Ë!
VSNORMAL
)

789 
√°ög
++;

790 } i‡(
c
 =
CTLENDVAR
) {

791 i‡(--
√°ög
 == 0)

796  
p
;

797 
	}
}

805 
STATIC
 

806 
	$v¨is£t
(*
«me
, 
nulok
)

809 i‡(*
«me
 == '!')

810  
backgndpid
 != -1;

811 i‡(*
«me
 == '@' || *name == '*') {

812 i‡(*
shñÕ¨am
.
p
 =
NULL
)

815 i‡(
nulok
) {

816 **
av
;

818 
av
 = 
shñÕ¨am
.
p
; *av;áv++)

819 i‡(**
av
 != '\0')

823 } i‡(
	`is_digô
(*
«me
)) {

824 *
≠
;

825 
num
 = 
	`©oi
(
«me
);

827 i‡(
num
 > 
shñÕ¨am
.
≈¨am
)

830 i‡(
num
 == 0)

831 
≠
 = 
¨g0
;

833 
≠
 = 
shñÕ¨am
.
p
[
num
 - 1];

835 i‡(
nulok
 && (
≠
 =
NULL
 || *ap == '\0'))

839 
	}
}

847 
STATIC
 

848 
	$v¨vÆue
(*
«me
, 
quŸed
, 
subty≥
, 
Êag
)

850 
num
;

851 *
p
;

852 
i
;

853 
€xô°©us
;

854 
£p
;

855 **
≠
;

856 c⁄° *
sy¡ax
;

858 
	#STRTODEST
(
p
) \

860 i‡(
Êag
 & (
EXP_FULL
 | 
EXP_CASE
Ë&& 
subty≥
 !
VSLENGTH
) { \

861 
sy¡ax
 = 
quŸed
? 
DQSYNTAX
 : 
BASESYNTAX
; \

862 *
p
) { \

863 i‡(
sy¡ax
[()*
p
] =
CCTL
) \

864 
	`STPUTC
(
CTLESC
, 
expde°
); \

865 
	`STPUTC
(*
p
++, 
expde°
); \

868 *
p
) \

869 
	`STPUTC
(*
p
++, 
expde°
); \

870 } 0)

	)

873 *
«me
) {

875 
num
 = 
roŸpid
;

876 
numv¨
;

878 
num
 = 
€xô°©us
;

879 
numv¨
;

881 
num
 = 
shñÕ¨am
.
≈¨am
;

882 
numv¨
;

884 
num
 = 
backgndpid
;

885 
numv¨
:

886 
expde°
 = 
	`cväum
(
num
,Éxpdest);

889 
i
 = 0 ; i < 
NOPTS
 ; i++) {

890 i‡(
›éi°
[
i
].
vÆ
)

891 
	`STPUTC
(
›éi°
[
i
].
Àâî
, 
expde°
);

895 i‡(
Êag
 & 
EXP_FULL
 && 
quŸed
) {

896 
≠
 = 
shñÕ¨am
.
p
 ; (∞*≠++Ë!
NULL
 ; ) {

897 
	`STRTODEST
(
p
);

898 i‡(*
≠
)

899 
	`STPUTC
('\0', 
expde°
);

905 i‡(
	`ifs£t
())

906 
£p
 = 
	`ifsvÆ
()[0];

908 
£p
 = ' ';

909 
≠
 = 
shñÕ¨am
.
p
 ; (∞*≠++Ë!
NULL
 ; ) {

910 
	`STRTODEST
(
p
);

911 i‡(*
≠
 && 
£p
)

912 
	`STPUTC
(
£p
, 
expde°
);

916 
p
 = 
¨g0
;

917 
	`STRTODEST
(
p
);

920 i‡(
	`is_digô
(*
«me
)) {

921 
num
 = 
	`©oi
(
«me
);

922 i‡(
num
 > 0 &&Çum <
shñÕ¨am
.
≈¨am
) {

923 
p
 = 
shñÕ¨am
.p[
num
 - 1];

924 
	`STRTODEST
(
p
);

929 
	}
}

938 
STATIC
 

939 
	$ªc‹dªgi⁄
(
°¨t
, 
íd
, 
nul⁄ly
)

941 
if§egi⁄
 *
if•
;

943 i‡(
if¶a°p
 =
NULL
) {

944 
if•
 = &
ifsfú°
;

946 
if•
 = (
if§egi⁄
 *)
	`ckmÆloc
( (ifsregion));

947 
if¶a°p
->
√xt
 = 
if•
;

949 
if¶a°p
 = 
if•
;

950 
if¶a°p
->
√xt
 = 
NULL
;

951 
if¶a°p
->
begoff
 = 
°¨t
;

952 
if¶a°p
->
ídoff
 = 
íd
;

953 
if¶a°p
->
nul⁄ly
 =Çulonly;

954 
	}
}

963 
STATIC
 

964 
	$ifsbªakup
(*
°rög
, 
¨gli°
 *arglist)

966 
if§egi⁄
 *
if•
;

967 
°æi°
 *
•
;

968 *
°¨t
;

969 *
p
;

970 *
q
;

971 *
ifs
;

972 
ifs•c
;

973 
nul⁄ly
;

976 
°¨t
 = 
°rög
;

977 
ifs•c
 = 0;

978 
nul⁄ly
 = 0;

979 i‡(
if¶a°p
 !
NULL
) {

980 
if•
 = &
ifsfú°
;

982 
p
 = 
°rög
 + 
if•
->
begoff
;

983 
nul⁄ly
 = 
if•
->nulonly;

984 
ifs
 = 
nul⁄ly
 ? 
nuŒ°r
 :

985 –
	`ifs£t
(Ë? 
	`ifsvÆ
() : " \t\n" );

986 
ifs•c
 = 0;

987 
p
 < 
°rög
 + 
if•
->
ídoff
) {

988 
q
 = 
p
;

989 i‡(*
p
 =
CTLESC
)

990 
p
++;

991 i‡(
	`°rchr
(
ifs
, *
p
)) {

992 i‡(!
nul⁄ly
)

993 
ifs•c
 = (
	`°rchr
(" \t\n", *
p
Ë!
NULL
);

995 i‡(
q
 =
°¨t
 && 
ifs•c
) {

996 
p
++;

997 
°¨t
 = 
p
;

1000 *
q
 = '\0';

1001 
•
 = (
°æi°
 *)
	`°Æloc
( *sp);

1002 
•
->
ãxt
 = 
°¨t
;

1003 *
¨gli°
->
œ°p
 = 
•
;

1004 
¨gli°
->
œ°p
 = &
•
->
√xt
;

1005 
p
++;

1006 i‡(!
nul⁄ly
) {

1008 i‡(
p
 >
°rög
 + 
if•
->
ídoff
) {

1011 
q
 = 
p
;

1012 i‡(*
p
 =
CTLESC
)

1013 
p
++;

1014 i‡(
	`°rchr
(
ifs
, *
p
Ë=
NULL
 ) {

1015 
p
 = 
q
;

1017 } i‡(
	`°rchr
(" \t\n",*
p
Ë=
NULL
) {

1018 i‡(
ifs•c
) {

1019 
p
++;

1020 
ifs•c
 = 0;

1022 
p
 = 
q
;

1026 
p
++;

1029 
°¨t
 = 
p
;

1031 
p
++;

1033 } (
if•
 = if•->
√xt
Ë!
NULL
);

1034 i‡(*
°¨t
 || (!
ifs•c
 && sèπ > 
°rög
)) {

1035 
•
 = (
°æi°
 *)
	`°Æloc
( *sp);

1036 
•
->
ãxt
 = 
°¨t
;

1037 *
¨gli°
->
œ°p
 = 
•
;

1038 
¨gli°
->
œ°p
 = &
•
->
√xt
;

1041 
•
 = (
°æi°
 *)
	`°Æloc
( *sp);

1042 
•
->
ãxt
 = 
°¨t
;

1043 *
¨gli°
->
œ°p
 = 
•
;

1044 
¨gli°
->
œ°p
 = &
•
->
√xt
;

1046 
	}
}

1055 
STATIC
 *
	gexpdú
;

1058 
STATIC
 

1059 
	$ex∑ndmëa
(
°æi°
 *
°r
, 
Êag
 
__unu£d
)

1061 *
p
;

1062 
°æi°
 **
ßvña°p
;

1063 
°æi°
 *
•
;

1064 
c
;

1067 
°r
) {

1068 i‡(
fÊag
)

1069 
nomëa
;

1070 
p
 = 
°r
->
ãxt
;

1072 i‡((
c
 = *
p
++) == '\0')

1073 
nomëa
;

1074 i‡(
c
 == '*' || c == '?' || c == '[' || c == '!')

1077 
ßvña°p
 = 
ex∑rg
.
œ°p
;

1078 
INTOFF
;

1079 i‡(
expdú
 =
NULL
) {

1080 
i
 = 
	`°æí
(
°r
->
ãxt
);

1081 
expdú
 = 
	`ckmÆloc
(
i
 < 2048 ? 2048 : i);

1084 
	`expmëa
(
expdú
, 
°r
->
ãxt
);

1085 
	`ck‰ì
(
expdú
);

1086 
expdú
 = 
NULL
;

1087 
INTON
;

1088 i‡(
ex∑rg
.
œ°p
 =
ßvña°p
) {

1092 
nomëa
:

1093 *
ex∑rg
.
œ°p
 = 
°r
;

1094 
	`rmesˇ≥s
(
°r
->
ãxt
);

1095 
ex∑rg
.
œ°p
 = &
°r
->
√xt
;

1097 *
ex∑rg
.
œ°p
 = 
NULL
;

1098 *
ßvña°p
 = 
•
 = 
	`exps‹t
(*savelastp);

1099 
•
->
√xt
 !
NULL
)

1100 
•
 = sp->
√xt
;

1101 
ex∑rg
.
œ°p
 = &
•
->
√xt
;

1103 
°r
 = så->
√xt
;

1105 
	}
}

1112 
STATIC
 

1113 
	$expmëa
(*
íddú
, *
«me
)

1115 *
p
;

1116 *
q
;

1117 *
°¨t
;

1118 *
íd«me
;

1119 
mëaÊag
;

1120 
°©
 
°©b
;

1121 
DIR
 *
dúp
;

1122 
dúít
 *
dp
;

1123 
©íd
;

1124 
m©chdŸ
;

1126 
mëaÊag
 = 0;

1127 
°¨t
 = 
«me
;

1128 
p
 = 
«me
 ; ;Ö++) {

1129 i‡(*
p
 == '*' || *p == '?')

1130 
mëaÊag
 = 1;

1131 i‡(*
p
 == '[') {

1132 
q
 = 
p
 + 1;

1133 i‡(*
q
 == '!' || *q == '^')

1134 
q
++;

1136 *
q
 =
CTLQUOTEMARK
)

1137 
q
++;

1138 i‡(*
q
 =
CTLESC
)

1139 
q
++;

1140 i‡(*
q
 == '/' || *q == '\0')

1142 i‡(*++
q
 == ']') {

1143 
mëaÊag
 = 1;

1147 } i‡(*
p
 ='!' &&Ö[1] ='!' && (∞=
«me
 ||Ö[-1] == '/')) {

1148 
mëaÊag
 = 1;

1149 } i‡(*
p
 == '\0')

1151 i‡(*
p
 =
CTLQUOTEMARK
)

1153 i‡(*
p
 =
CTLESC
)

1154 
p
++;

1155 i‡(*
p
 == '/') {

1156 i‡(
mëaÊag
)

1158 
°¨t
 = 
p
 + 1;

1161 i‡(
mëaÊag
 == 0) {

1162 i‡(
íddú
 !
expdú
)

1163 
mëaÊag
++;

1164 
p
 = 
«me
 ; ;Ö++) {

1165 i‡(*
p
 =
CTLQUOTEMARK
)

1167 i‡(*
p
 =
CTLESC
)

1168 
p
++;

1169 *
íddú
++ = *
p
;

1170 i‡(*
p
 == '\0')

1173 i‡(
mëaÊag
 =0 || 
	`l°©
(
expdú
, &
°©b
) >= 0)

1174 
	`add‚ame
(
expdú
);

1177 
íd«me
 = 
p
;

1178 i‡(
°¨t
 !
«me
) {

1179 
p
 = 
«me
;

1180 
p
 < 
°¨t
) {

1181 *
p
 =
CTLQUOTEMARK
)

1182 
p
++;

1183 i‡(*
p
 =
CTLESC
)

1184 
p
++;

1185 *
íddú
++ = *
p
++;

1188 i‡(
íddú
 =
expdú
) {

1189 
p
 = ".";

1190 } i‡(
íddú
 =
expdú
 + 1 && *expdir == '/') {

1191 
p
 = "/";

1193 
p
 = 
expdú
;

1194 
íddú
[-1] = '\0';

1196 i‡((
dúp
 = 
	`›ídú
(
p
)Ë=
NULL
)

1198 i‡(
íddú
 !
expdú
)

1199 
íddú
[-1] = '/';

1200 i‡(*
íd«me
 == 0) {

1201 
©íd
 = 1;

1203 
©íd
 = 0;

1204 *
íd«me
++ = '\0';

1206 
m©chdŸ
 = 0;

1207 
p
 = 
°¨t
;

1208 *
p
 =
CTLQUOTEMARK
)

1209 
p
++;

1210 i‡(*
p
 =
CTLESC
)

1211 
p
++;

1212 i‡(*
p
 == '.')

1213 
m©chdŸ
++;

1214 ! 
	`öt_≥ndög
(Ë&& (
dp
 = 
	`ªaddú
(
dúp
)Ë!
NULL
) {

1215 i‡(
dp
->
d_«me
[0] ='.' && ! 
m©chdŸ
)

1217 i‡(
	`∑tm©ch
(
°¨t
, 
dp
->
d_«me
, 0)) {

1218 i‡(
©íd
) {

1219 
	`sc›y
(
dp
->
d_«me
, 
íddú
);

1220 
	`add‚ame
(
expdú
);

1222 
p
 = 
íddú
, 
q
 = 
dp
->
d_«me
;

1223 (*
p
++ = *
q
++) != '\0';)

1225 
p
[-1] = '/';

1226 
	`expmëa
(
p
, 
íd«me
);

1230 
	`˛o£dú
(
dúp
);

1231 i‡(! 
©íd
)

1232 
íd«me
[-1] = '/';

1233 
	}
}

1240 
STATIC
 

1241 
	$add‚ame
(*
«me
)

1243 *
p
;

1244 
°æi°
 *
•
;

1246 
p
 = 
	`°Æloc
(
	`°æí
(
«me
) + 1);

1247 
	`sc›y
(
«me
, 
p
);

1248 
•
 = (
°æi°
 *)
	`°Æloc
( *sp);

1249 
•
->
ãxt
 = 
p
;

1250 *
ex∑rg
.
œ°p
 = 
•
;

1251 
ex∑rg
.
œ°p
 = &
•
->
√xt
;

1252 
	}
}

1261 
STATIC
 
°æi°
 *

1262 
	$exps‹t
(
°æi°
 *
°r
)

1264 
Àn
;

1265 
°æi°
 *
•
;

1267 
Àn
 = 0;

1268 
•
 = 
°r
 ; s∞; s∞•->
√xt
)

1269 
Àn
++;

1270  
	`ms‹t
(
°r
, 
Àn
);

1271 
	}
}

1274 
STATIC
 
°æi°
 *

1275 
	$ms‹t
(
°æi°
 *
li°
, 
Àn
)

1277 
°æi°
 *
p
, *
q
 = 
NULL
;

1278 
°æi°
 **
Õp
;

1279 
hÆf
;

1280 
n
;

1282 i‡(
Àn
 <= 1)

1283  
li°
;

1284 
hÆf
 = 
Àn
 >> 1;

1285 
p
 = 
li°
;

1286 
n
 = 
hÆf
 ; --n >= 0 ; ) {

1287 
q
 = 
p
;

1288 
p
 =Ö->
√xt
;

1290 
q
->
√xt
 = 
NULL
;

1291 
q
 = 
	`ms‹t
(
li°
, 
hÆf
);

1292 
p
 = 
	`ms‹t
’, 
Àn
 - 
hÆf
);

1293 
Õp
 = &
li°
;

1295 i‡(
	`°rcmp
(
p
->
ãxt
, 
q
->text) < 0) {

1296 *
Õp
 = 
p
;

1297 
Õp
 = &
p
->
√xt
;

1298 i‡((
p
 = *
Õp
Ë=
NULL
) {

1299 *
Õp
 = 
q
;

1303 *
Õp
 = 
q
;

1304 
Õp
 = &
q
->
√xt
;

1305 i‡((
q
 = *
Õp
Ë=
NULL
) {

1306 *
Õp
 = 
p
;

1311  
li°
;

1312 
	}
}

1321 
	$∑tm©ch
(*
∑âîn
, *
°rög
, 
squŸed
)

1323 #ifde‡
nŸdef


1324 i‡(
∑âîn
[0] == '!' &&Öattern[1] == '!')

1325  1 - 
	`pm©ch
(
∑âîn
 + 2, 
°rög
);

1328  
	`pm©ch
(
∑âîn
, 
°rög
, 
squŸed
);

1329 
	}
}

1332 
STATIC
 

1333 
	$pm©ch
(*
∑âîn
, *
°rög
, 
squŸed
)

1335 *
p
, *
q
;

1336 
c
;

1338 
p
 = 
∑âîn
;

1339 
q
 = 
°rög
;

1341 
c
 = *
p
++) {

1343 
bªaklo›
;

1344 
CTLESC
:

1345 i‡(
squŸed
 && *
q
 =
CTLESC
)

1346 
q
++;

1347 i‡(*
q
++ !*
p
++)

1350 
CTLQUOTEMARK
:

1353 i‡(
squŸed
 && *
q
 =
CTLESC
)

1354 
q
++;

1355 i‡(*
q
++ == '\0')

1359 
c
 = *
p
;

1360 
c
 =
CTLQUOTEMARK
 || c == '*')

1361 
c
 = *++
p
;

1362 i‡(
c
 !
CTLESC
 && c !
CTLQUOTEMARK
 &&

1363 
c
 != '?' && c != '*' && c != '[') {

1364 *
q
 !
c
) {

1365 i‡(
squŸed
 && *
q
 =
CTLESC
 &&

1366 
q
[1] =
c
)

1368 i‡(*
q
 == '\0')

1370 i‡(
squŸed
 && *
q
 =
CTLESC
)

1371 
q
++;

1372 
q
++;

1376 i‡(
	`pm©ch
(
p
, 
q
, 
squŸed
))

1378 i‡(
squŸed
 && *
q
 =
CTLESC
)

1379 
q
++;

1380 } *
q
++ != '\0');

1383 *
ídp
;

1384 
övît
, 
found
;

1385 
chr
;

1387 
ídp
 = 
p
;

1388 i‡(*
ídp
 == '!' || *endp == '^')

1389 
ídp
++;

1391 *
ídp
 =
CTLQUOTEMARK
)

1392 
ídp
++;

1393 i‡(*
ídp
 == '\0')

1394 
d·
;

1395 i‡(*
ídp
 =
CTLESC
)

1396 
ídp
++;

1397 i‡(*++
ídp
 == ']')

1400 
övît
 = 0;

1401 i‡(*
p
 == '!' || *p == '^') {

1402 
övît
++;

1403 
p
++;

1405 
found
 = 0;

1406 
chr
 = *
q
++;

1407 i‡(
squŸed
 && 
chr
 =
CTLESC
)

1408 
chr
 = *
q
++;

1409 i‡(
chr
 == '\0')

1411 
c
 = *
p
++;

1413 i‡(
c
 =
CTLQUOTEMARK
)

1415 i‡(
c
 =
CTLESC
)

1416 
c
 = *
p
++;

1417 i‡(*
p
 == '-' &&Ö[1] != ']') {

1418 
p
++;

1419 *
p
 =
CTLQUOTEMARK
)

1420 
p
++;

1421 i‡(*
p
 =
CTLESC
)

1422 
p
++;

1423 i‡–
	`cﬁœã_ønge_cmp
(
chr
, 
c
) >= 0

1424 && 
	`cﬁœã_ønge_cmp
(
chr
, *
p
) <= 0

1426 
found
 = 1;

1427 
p
++;

1429 i‡(
chr
 =
c
)

1430 
found
 = 1;

1432 } (
c
 = *
p
++) != ']');

1433 i‡(
found
 =
övît
)

1437 
d·
: :

1438 i‡(
squŸed
 && *
q
 =
CTLESC
)

1439 
q
++;

1440 i‡(*
q
++ !
c
)

1445 
bªaklo›
:

1446 i‡(*
q
 != '\0')

1449 
	}
}

1458 
	$rmesˇ≥s
(*
°r
)

1460 *
p
, *
q
;

1462 
p
 = 
°r
;

1463 *
p
 !
CTLESC
 && *∞!
CTLQUOTEMARK
) {

1464 i‡(*
p
++ == '\0')

1467 
q
 = 
p
;

1468 *
p
) {

1469 i‡(*
p
 =
CTLQUOTEMARK
) {

1470 
p
++;

1473 i‡(*
p
 =
CTLESC
)

1474 
p
++;

1475 *
q
++ = *
p
++;

1477 *
q
 = '\0';

1478 
	}
}

1487 
	$ˇ£m©ch
(
node
 *
∑âîn
, *
vÆ
)

1489 
°ackm¨k
 
sm¨k
;

1490 
ªsu…
;

1491 *
p
;

1493 
	`£t°ackm¨k
(&
sm¨k
);

1494 
¨gbackq
 = 
∑âîn
->
«rg
.
backquŸe
;

1495 
	`STARTSTACKSTR
(
expde°
);

1496 
if¶a°p
 = 
NULL
;

1497 
	`¨g°r
(
∑âîn
->
«rg
.
ãxt
, 
EXP_TILDE
 | 
EXP_CASE
);

1498 
	`STPUTC
('\0', 
expde°
);

1499 
p
 = 
	`gøb°ack°r
(
expde°
);

1500 
ªsu…
 = 
	`∑tm©ch
(
p
, 
vÆ
, 0);

1501 
	`p›°ackm¨k
(&
sm¨k
);

1502  
ªsu…
;

1503 
	}
}

1509 
STATIC
 *

1510 
	$cväum
(
num
, *
buf
)

1512 
ãmp
[32];

1513 
√g
 = 
num
 < 0;

1514 *
p
 = 
ãmp
 + 31;

1516 
ãmp
[31] = '\0';

1519 *--
p
 = 
num
 % 10 + '0';

1520 } (
num
 /= 10) != 0);

1522 i‡(
√g
)

1523 *--
p
 = '-';

1525 *
p
)

1526 
	`STPUTC
(*
p
++, 
buf
);

1527  
buf
;

1528 
	}
}

1535 
	$w‹dexpcmd
(
¨gc
, **
¨gv
)

1537 
size_t
 
Àn
;

1538 
i
;

1540 
	`out1fmt
("%08x", 
¨gc
 - 1);

1541 
i
 = 1, 
Àn
 = 0; i < 
¨gc
; i++)

1542 
Àn
 +
	`°æí
(
¨gv
[
i
]);

1543 
	`out1fmt
("%08x", ()
Àn
);

1544 
i
 = 1; i < 
¨gc
; i++) {

1545 
	`out1°r
(
¨gv
[
i
]);

1546 
	`out1c
('\0');

1549 
	}
}

	@expand.h

36 
	s°æi°
 {

37 
°æi°
 *
	m√xt
;

38 *
	mãxt
;

42 
	s¨gli°
 {

43 
°æi°
 *
	mli°
;

44 
°æi°
 **
	mœ°p
;

50 
	#EXP_FULL
 0x1

	)

51 
	#EXP_TILDE
 0x2

	)

52 
	#EXP_VARTILDE
 0x4

	)

53 
	#EXP_REDIR
 0x8

	)

54 
	#EXP_CASE
 0x10

	)

57 
	gnode
;

58 
ex∑ndhîe
(
node
 *, );

59 
ex∑nd¨g
(
node
 *, 
¨gli°
 *, );

60 
ex∑ri
();

61 
∑tm©ch
(*, *, );

62 
rmesˇ≥s
(*);

63 
ˇ£m©ch
(
node
 *, *);

64 
w‹dexpcmd
(, **);

	@histedit.c

33 #i‚de‡
löt


35 
	gsccsid
[] = "@(#)histedit.c 8.2 (Berkeley) 5/4/95";

38 
	~<sys/cdefs.h
>

39 
__FBSDID
("$FreeBSD: src/bin/sh/histedit.c,v 1.29.6.1 2008/11/25 02:59:29 kensmith Exp $");

41 
	~<sys/∑øm.h
>

42 
	~<limôs.h
>

43 
	~<∑ths.h
>

44 
	~<°dio.h
>

45 
	~<°dlib.h
>

46 
	~<uni°d.h
>

50 
	~"shñl.h
"

51 
	~"∑r£r.h
"

52 
	~"v¨.h
"

53 
	~"›ti⁄s.h
"

54 
	~"maö.h
"

55 
	~"ouçut.h
"

56 
	~"my°rög.h
"

57 #i‚de‡
NO_HISTORY


58 
	~"myhi°edô.h
"

59 
	~"îr‹.h
"

60 
	~"evÆ.h
"

61 
	~"memÆloc.h
"

63 
	#MAXHISTLOOPS
 4

	)

64 
	#DEFEDITOR
 "ed"

	)

66 
Hi°‹y
 *
	ghi°
;

67 
EdôLöe
 *
	gñ
;

68 
	gdi•œyhi°
;

69 
FILE
 *
	gñ_ö
, *
	gñ_out
, *
	gñ_îr
;

71 
STATIC
 *
fc_ª∂a˚
(const *, *, *);

78 
	$hi°edô
()

81 
	#edôög
 (
EÊag
 || 
VÊag
)

	)

83 i‡(
iÊag
) {

84 i‡(!
hi°
) {

88 
INTOFF
;

89 
hi°
 = 
	`hi°‹y_öô
();

90 
INTON
;

92 i‡(
hi°
 !
NULL
)

93 
	`£thi°size
(
	`hi°sizevÆ
());

95 
	`out2°r
("sh: can't initialize history\n");

97 i‡(
edôög
 && !
ñ
 && 
	`ißây
(0)) {

101 
INTOFF
;

102 i‡(
ñ_ö
 =
NULL
)

103 
ñ_ö
 = 
	`fd›í
(0, "r");

104 i‡(
ñ_îr
 =
NULL
)

105 
ñ_îr
 = 
	`fd›í
(1, "w");

106 i‡(
ñ_out
 =
NULL
)

107 
ñ_out
 = 
	`fd›í
(2, "w");

108 i‡(
ñ_ö
 =
NULL
 || 
ñ_îr
 =NULL || 
ñ_out
 == NULL)

109 
bad
;

110 
ñ
 = 
	`ñ_öô
(
¨g0
, 
ñ_ö
, 
ñ_out
, 
ñ_îr
);

111 i‡(
ñ
 !
NULL
) {

112 i‡(
hi°
)

113 
	`ñ_£t
(
ñ
, 
EL_HIST
, 
hi°‹y
, 
hi°
);

114 
	`ñ_£t
(
ñ
, 
EL_PROMPT
, 
gë¥om±
);

116 
bad
:

117 
	`out2°r
("sh: can't initializeÉditing\n");

119 
INTON
;

120 } i‡(!
edôög
 && 
ñ
) {

121 
INTOFF
;

122 
	`ñ_íd
(
ñ
);

123 
ñ
 = 
NULL
;

124 
INTON
;

126 i‡(
ñ
) {

127 i‡(
VÊag
)

128 
	`ñ_£t
(
ñ
, 
EL_EDITOR
, "vi");

129 i‡(
EÊag
)

130 
	`ñ_£t
(
ñ
, 
EL_EDITOR
, "emacs");

131 
	`ñ_sour˚
(
ñ
, 
NULL
);

134 
INTOFF
;

135 i‡(
ñ
) {

136 
	`ñ_íd
(
ñ
);

137 
ñ
 = 
NULL
;

139 i‡(
hi°
) {

140 
	`hi°‹y_íd
(
hi°
);

141 
hi°
 = 
NULL
;

143 
INTON
;

145 
	}
}

149 
	$£thi°size
(
hs
)

150 c⁄° *
hs
;

152 
hi°size
;

153 
Hi°Evít
 
he
;

155 i‡(
hi°
 !
NULL
) {

156 i‡(
hs
 =
NULL
 || *hs == '\0' ||

157 (
hi°size
 = 
	`©oi
(
hs
)) < 0)

158 
hi°size
 = 100;

159 
	`hi°‹y
(
hi°
, &
he
, 
H_SETSIZE
, 
hi°size
);

161 
	}
}

164 
	$hi°cmd
(
¨gc
, **
¨gv
)

166 
ch
;

167 *
edô‹
 = 
NULL
;

168 
Hi°Evít
 
he
;

169 
lÊg
 = 0, 
nÊg
 = 0, 
rÊg
 = 0, 
sÊg
 = 0;

170 
i
, 
ªtvÆ
;

171 *
fú°°r
, *
œ°°r
;

172 
fú°
, 
œ°
, 
dúe˘i⁄
;

173 *
∑t
 = 
NULL
, *
ª∂
;

174 
a˘ive
 = 0;

175 
jm∂oc
 jmploc;

176 
jm∂oc
 *vﬁ©ûê
ßveh™dÀr
;

177 
edôfûe
[
PATH_MAX
];

178 
FILE
 *
eÂ
;

179 
ﬁdhi°num
;

180 #ifde‡
__GNUC__


182 (Ë&
edô‹
;

183 (Ë&
lÊg
;

184 (Ë&
nÊg
;

185 (Ë&
rÊg
;

186 (Ë&
sÊg
;

187 (Ë&
fú°°r
;

188 (Ë&
œ°°r
;

189 (Ë&
∑t
;

190 (Ë&
ª∂
;

191 (Ë&
eÂ
;

192 (Ë&
¨gc
;

193 (Ë&
¨gv
;

196 i‡(
hi°
 =
NULL
)

197 
	`îr‹
("historyÇotáctive");

199 i‡(
¨gc
 == 1)

200 
	`îr‹
("missing historyárgument");

202 
›åe£t
 = 1; 
›töd
 = 1;

203 
›ãº
 = 0;

204 
	`nŸ_f˙umbî
(
¨gv
[
›töd
]) &&

205 (
ch
 = 
	`gë›t
(
¨gc
, 
¨gv
, ":e:lnrs")) != -1)

206 ()
ch
) {

208 
edô‹
 = 
›èrg
;

211 
lÊg
 = 1;

214 
nÊg
 = 1;

217 
rÊg
 = 1;

220 
sÊg
 = 1;

223 
	`îr‹
("›ti⁄ -%¯ex≥˘†¨gumít", 
›t›t
);

226 
	`îr‹
("unknow¿›ti⁄: -%c", 
›t›t
);

228 
¨gc
 -
›töd
, 
¨gv
 += optind;

233 i‡(
lÊg
 =0 || 
edô‹
 || 
sÊg
) {

234 
lÊg
 = 0;

235 
edôfûe
[0] = '\0';

240 i‡(
	`£tjmp
(
jm∂oc
.
loc
)) {

241 
a˘ive
 = 0;

242 i‡(*
edôfûe
)

243 
	`u∆ök
(
edôfûe
);

244 
h™dÀr
 = 
ßveh™dÀr
;

245 
	`l⁄gjmp
(
h™dÀr
->
loc
, 1);

247 
ßveh™dÀr
 = 
h™dÀr
;

248 
h™dÀr
 = &
jm∂oc
;

249 i‡(++
a˘ive
 > 
MAXHISTLOOPS
) {

250 
a˘ive
 = 0;

251 
di•œyhi°
 = 0;

252 
	`îr‹
("calledÑecursivelyÅoo manyÅimes");

257 i‡(
sÊg
 == 0) {

258 i‡(
edô‹
 =
NULL
 &&

259 (
edô‹
 = 
	`b…ölookup
("FCEDIT", 1)Ë=
NULL
 &&

260 (
edô‹
 = 
	`b…ölookup
("EDITOR", 1)Ë=
NULL
)

261 
edô‹
 = 
DEFEDITOR
;

262 i‡(
edô‹
[0] == '-' &&Éditor[1] == '\0') {

263 
sÊg
 = 1;

264 
edô‹
 = 
NULL
;

272 i‡(
lÊg
 =0 && 
¨gc
 > 0 &&

273 ((
ª∂
 = 
	`°rchr
(
¨gv
[0], '=')Ë!
NULL
)) {

274 
∑t
 = 
¨gv
[0];

275 *
ª∂
++ = '\0';

276 
¨gc
--, 
¨gv
++;

281 
¨gc
) {

283 
fú°°r
 = 
lÊg
 ? "-16" : "-1";

284 
œ°°r
 = "-1";

287 
fú°°r
 = 
¨gv
[0];

288 
œ°°r
 = 
lÊg
 ? "-1" : 
¨gv
[0];

291 
fú°°r
 = 
¨gv
[0];

292 
œ°°r
 = 
¨gv
[1];

295 
	`îr‹
("too manyárgs");

300 
fú°
 = 
	`°r_to_evít
(
fú°°r
, 0);

301 
œ°
 = 
	`°r_to_evít
(
œ°°r
, 1);

303 i‡(
rÊg
) {

304 
i
 = 
œ°
;

305 
œ°
 = 
fú°
;

306 
fú°
 = 
i
;

313 
dúe˘i⁄
 = 
fú°
 < 
œ°
 ? 
H_PREV
 : 
H_NEXT
;

318 i‡(
edô‹
) {

319 
fd
;

320 
INTOFF
;

321 
	`•rötf
(
edôfûe
, "%s/_shXXXXXX", 
_PATH_TMP
);

322 i‡((
fd
 = 
	`mk°emp
(
edôfûe
)) < 0)

323 
	`îr‹
("ˇn'à¸óãÅemp‹¨y fûê%s", 
edôfûe
);

324 i‡((
eÂ
 = 
	`fd›í
(
fd
, "w")Ë=
NULL
) {

325 
	`˛o£
(
fd
);

326 
	`îr‹
("can'tállocate stdio buffer forÅemp");

338 
	`hi°‹y
(
hi°
, &
he
, 
H_FIRST
);

339 
ªtvÆ
 = 
	`hi°‹y
(
hi°
, &
he
, 
H_NEXT_EVENT
, 
fú°
);

340 ;
ªtvÆ
 !-1;ÑëvÆ = 
	`hi°‹y
(
hi°
, &
he
, 
dúe˘i⁄
)) {

341 i‡(
lÊg
) {

342 i‡(!
nÊg
)

343 
	`out1fmt
("%5d ", 
he
.
num
);

344 
	`out1°r
(
he
.
°r
);

346 *
s
 = 
∑t
 ?

347 
	`fc_ª∂a˚
(
he
.
°r
, 
∑t
, 
ª∂
) : (*)he.str;

349 i‡(
sÊg
) {

350 i‡(
di•œyhi°
) {

351 
	`out2°r
(
s
);

353 
	`evÆ°rög
(
s
);

354 i‡(
di•œyhi°
 && 
hi°
) {

359 
ﬁdhi°num
 = 
he
.
num
;

360 
	`hi°‹y
(
hi°
, &
he
, 
H_ENTER
, 
s
);

366 
ªtvÆ
 = 
	`hi°‹y
(
hi°
, &
he
,

367 
H_NEXT_EVENT
, 
ﬁdhi°num
);

370 
	`Âuts
(
s
, 
eÂ
);

376 i‡(
he
.
num
 =
œ°
)

379 i‡(
edô‹
) {

380 *
edôcmd
;

382 
	`f˛o£
(
eÂ
);

383 
edôcmd
 = 
	`°Æloc
(
	`°æí
(
edô‹
Ë+ såÀn(
edôfûe
) + 2);

384 
	`•rötf
(
edôcmd
, "%†%s", 
edô‹
, 
edôfûe
);

385 
	`evÆ°rög
(
edôcmd
);

386 
INTON
;

387 
	`ªadcmdfûe
(
edôfûe
);

388 
	`u∆ök
(
edôfûe
);

391 i‡(
lÊg
 =0 && 
a˘ive
 > 0)

392 --
a˘ive
;

393 i‡(
di•œyhi°
)

394 
di•œyhi°
 = 0;

396 
	}
}

398 
STATIC
 *

399 
	$fc_ª∂a˚
(c⁄° *
s
, *
p
, *
r
)

401 *
de°
;

402 
∂í
 = 
	`°æí
(
p
);

404 
	`STARTSTACKSTR
(
de°
);

405 *
s
) {

406 i‡(*
s
 =*
p
 && 
	`°∫cmp
(s,Ö, 
∂í
) == 0) {

407 *
r
)

408 
	`STPUTC
(*
r
++, 
de°
);

409 
s
 +
∂í
;

410 *
p
 = '\0';

412 
	`STPUTC
(*
s
++, 
de°
);

414 
	`STACKSTRNUL
(
de°
);

415 
de°
 = 
	`gøb°ack°r
(dest);

417  (
de°
);

418 
	}
}

421 
	$nŸ_f˙umbî
(*
s
)

423 i‡(
s
 =
NULL
)

425 i‡(*
s
 == '-')

426 
s
++;

427  (!
	`is_numbî
(
s
));

428 
	}
}

431 
	$°r_to_evít
(*
°r
, 
œ°
)

433 
Hi°Evít
 
he
;

434 *
s
 = 
°r
;

435 
ªœtive
 = 0;

436 
i
, 
ªtvÆ
;

438 
ªtvÆ
 = 
	`hi°‹y
(
hi°
, &
he
, 
H_FIRST
);

439 *
s
) {

441 
ªœtive
 = 1;

444 
s
++;

446 i‡(
	`is_numbî
(
s
)) {

447 
i
 = 
	`©oi
(
s
);

448 i‡(
ªœtive
) {

449 
ªtvÆ
 !-1 && 
i
--) {

450 
ªtvÆ
 = 
	`hi°‹y
(
hi°
, &
he
, 
H_NEXT
);

452 i‡(
ªtvÆ
 == -1)

453 
ªtvÆ
 = 
	`hi°‹y
(
hi°
, &
he
, 
H_LAST
);

455 
ªtvÆ
 = 
	`hi°‹y
(
hi°
, &
he
, 
H_NEXT_EVENT
, 
i
);

456 i‡(
ªtvÆ
 == -1) {

461 
ªtvÆ
 = 
	`hi°‹y
(
hi°
, &
he
, 
œ°
 ? 
H_FIRST
 : 
H_LAST
);

464 i‡(
ªtvÆ
 == -1)

465 
	`îr‹
("historyÇumber %sÇot found (internalÉrror)",

466 
°r
);

471 
ªtvÆ
 = 
	`hi°‹y
(
hi°
, &
he
, 
H_PREV_STR
, 
°r
);

472 i‡(
ªtvÆ
 == -1)

473 
	`îr‹
("hi°‹yÖ©ã∫ÇŸ found: %s", 
°r
);

475  (
he
.
num
);

476 
	}
}

479 
	$bödcmd
(
¨gc
, **
¨gv
)

482 i‡(
ñ
 =
NULL
)

483 
	`îr‹
("lineÉditing is disabled");

484  (
	`ñ_∑r£
(
ñ
, 
¨gc
, (c⁄° **)
¨gv
));

485 
	}
}

488 
	~"îr‹.h
"

491 
	$hi°cmd
(
¨gc
, **
¨gv
)

494 
	`îr‹
("not compiled with history support");

497 
	}
}

500 
	$bödcmd
(
¨gc
, **
¨gv
)

503 
	`îr‹
("not compiled withÜineÉditing support");

505 
	}
}

	@init.c

5 
	~"shñl.h
"

6 
	~"my°rög.h
"

7 
	~"öô.h
"

8 
	~"evÆ.h
"

9 
	~"öput.h
"

10 
	~"îr‹.h
"

11 
	~<sys/ty≥s.h
>

12 
	~<°dlib.h
>

13 
	~"›ti⁄s.h
"

14 
	~"ouçut.h
"

15 
	~"memÆloc.h
"

16 
	~"ªdú.h
"

17 
	~<sig«l.h
>

18 
	~"å≠.h
"

19 
	~"v¨.h
"

23 #unde‡
ATABSIZE


24 
	#ATABSIZE
 39

	)

25 #unde‡
EV_EXIT


26 
	#EV_EXIT
 01

	)

27 #unde‡
EV_TESTED


28 
	#EV_TESTED
 02

	)

29 #unde‡
EV_BACKCMD


30 
	#EV_BACKCMD
 04

	)

31 #unde‡
CMDTABLESIZE


32 
	#CMDTABLESIZE
 31

	)

33 #unde‡
ARB


34 
	#ARB
 1

	)

35 #unde‡
MAXHISTLOOPS


36 
	#MAXHISTLOOPS
 4

	)

37 #unde‡
DEFEDITOR


38 
	#DEFEDITOR
 "ed"

	)

39 #unde‡
edôög


40 
	#edôög
 (
EÊag
 || 
VÊag
)

	)

41 #unde‡
EOF_NLEFT


42 
	#EOF_NLEFT
 -99

	)

43 #unde‡
MAXCMDTEXT


44 
	#MAXCMDTEXT
 200

	)

45 #unde‡
YY_INT_ALIGNED


46 
	#YY_INT_ALIGNED
 

	)

47 #unde‡
FLEX_SCANNER


48 
	#FLEX_SCANNER


	)

49 #unde‡
YY_FLEX_MAJOR_VERSION


50 
	#YY_FLEX_MAJOR_VERSION
 2

	)

51 #unde‡
YY_FLEX_MINOR_VERSION


52 
	#YY_FLEX_MINOR_VERSION
 5

	)

53 #unde‡
YY_FLEX_SUBMINOR_VERSION


54 
	#YY_FLEX_SUBMINOR_VERSION
 35

	)

55 #unde‡
FLEX_BETA


56 
	#FLEX_BETA


	)

57 #unde‡
FLEXINT_H


58 
	#FLEXINT_H


	)

59 #unde‡
__STDC_LIMIT_MACROS


60 
	#__STDC_LIMIT_MACROS
 1

	)

61 #unde‡
INT8_MIN


62 
	#INT8_MIN
 (-128)

	)

63 #unde‡
INT16_MIN


64 
	#INT16_MIN
 (-32767-1)

	)

65 #unde‡
INT32_MIN


66 
	#INT32_MIN
 (-2147483647-1)

	)

67 #unde‡
INT8_MAX


68 
	#INT8_MAX
 (127)

	)

69 #unde‡
INT16_MAX


70 
	#INT16_MAX
 (32767)

	)

71 #unde‡
INT32_MAX


72 
	#INT32_MAX
 (2147483647)

	)

73 #unde‡
UINT8_MAX


74 
	#UINT8_MAX
 (255U)

	)

75 #unde‡
UINT16_MAX


76 
	#UINT16_MAX
 (65535U)

	)

77 #unde‡
UINT32_MAX


78 
	#UINT32_MAX
 (4294967295U)

	)

79 #unde‡
YY_USE_CONST


80 
	#YY_USE_CONST


	)

81 #unde‡
YY_USE_CONST


82 
	#YY_USE_CONST


	)

83 #unde‡
yyc⁄°


84 
	#yyc⁄°
 c⁄°

	)

85 #unde‡
yyc⁄°


86 
	#yyc⁄°


	)

87 #unde‡
YY_NULL


88 
	#YY_NULL
 0

	)

89 #unde‡
BEGIN


90 
	#BEGIN
 (
yy_°¨t
Ë1 + 2 *

	)

91 #unde‡
YY_START


92 
	#YY_START
 (((
yy_°¨t
Ë- 1Ë/ 2)

	)

93 #unde‡
YYSTATE


94 
	#YYSTATE
 
YY_START


	)

95 #unde‡
YY_NEW_FILE


96 
	#YY_NEW_FILE
 
	`yyª°¨t
(
yyö
 )

	)

97 #unde‡
YY_END_OF_BUFFER_CHAR


98 
	#YY_END_OF_BUFFER_CHAR
 0

	)

99 #unde‡
YY_BUF_SIZE


100 
	#YY_BUF_SIZE
 16384

	)

101 #unde‡
YY_STATE_BUF_SIZE


102 
	#YY_STATE_BUF_SIZE
 ((
YY_BUF_SIZE
 + 2Ë* (
yy_°©e_ty≥
))

	)

103 #unde‡
YY_TYPEDEF_YY_BUFFER_STATE


104 
	#YY_TYPEDEF_YY_BUFFER_STATE


	)

105 #unde‡
EOB_ACT_CONTINUE_SCAN


106 
	#EOB_ACT_CONTINUE_SCAN
 0

	)

107 #unde‡
EOB_ACT_END_OF_FILE


108 
	#EOB_ACT_END_OF_FILE
 1

	)

109 #unde‡
EOB_ACT_LAST_MATCH


110 
	#EOB_ACT_LAST_MATCH
 2

	)

111 #unde‡
YY_TYPEDEF_YY_SIZE_T


112 
	#YY_TYPEDEF_YY_SIZE_T


	)

113 #unde‡
YY_STRUCT_YY_BUFFER_STATE


114 
	#YY_STRUCT_YY_BUFFER_STATE


	)

115 #unde‡
YY_BUFFER_NEW


116 
	#YY_BUFFER_NEW
 0

	)

117 #unde‡
YY_BUFFER_NORMAL


118 
	#YY_BUFFER_NORMAL
 1

	)

119 #unde‡
YY_BUFFER_EOF_PENDING


120 
	#YY_BUFFER_EOF_PENDING
 2

	)

121 #unde‡
YY_CURRENT_BUFFER_LVALUE


122 
	#YY_CURRENT_BUFFER_LVALUE
 (
yy_buf„r_°ack
)[(
yy_buf„r_°ack_t›
)]

	)

123 #unde‡
YY_FLUSH_BUFFER


124 
	#YY_FLUSH_BUFFER
 
	`yy_Êush_buf„r
(
YY_CURRENT_BUFFER
 )

	)

125 #unde‡
yy_√w_buf„r


126 
	#yy_√w_buf„r
 
yy_¸óã_buf„r


	)

127 #unde‡
FLEX_DEBUG


128 
	#FLEX_DEBUG


	)

129 #unde‡
yyãxt_±r


130 
	#yyãxt_±r
 
yyãxt


	)

131 #unde‡
YY_NUM_RULES


132 
	#YY_NUM_RULES
 40

	)

133 #unde‡
YY_END_OF_BUFFER


134 
	#YY_END_OF_BUFFER
 41

	)

135 #unde‡
REJECT


136 
	#REJECT
 
ªje˘_u£d_but_nŸ_dëe˘ed


	)

137 #unde‡
YY_MORE_ADJ


138 
	#YY_MORE_ADJ
 0

	)

139 #unde‡
YY_RESTORE_YY_MORE_OFFSET


140 
	#YY_RESTORE_YY_MORE_OFFSET


	)

141 #unde‡
YY_NO_UNPUT


142 
	#YY_NO_UNPUT


	)

143 #unde‡
INITIAL


144 
	#INITIAL
 0

	)

145 #unde‡
YY_EXTRA_TYPE


146 
	#YY_EXTRA_TYPE
 *

	)

147 #unde‡
YY_READ_BUF_SIZE


148 
	#YY_READ_BUF_SIZE
 8192

	)

149 #unde‡
ECHO


150 
	#ECHO
 
	`fwrôe
–
yyãxt
, 
yyÀng
, 1, 
yyout
 )

	)

151 #unde‡
YY_START_STACK_INCR


152 
	#YY_START_STACK_INCR
 25

	)

153 #unde‡
YY_DECL_IS_OURS


154 
	#YY_DECL_IS_OURS
 1

	)

155 #unde‡
YY_DECL


156 
	#YY_DECL
 
	`yyÀx
 ()

	)

157 #unde‡
YY_USER_ACTION


158 
	#YY_USER_ACTION


	)

159 #unde‡
YY_BREAK


160 
	#YY_BREAK
 ;

	)

161 #unde‡
YY_EXIT_FAILURE


162 
	#YY_EXIT_FAILURE
 2

	)

163 #unde‡
YYTABLES_NAME


164 
	#YYTABLES_NAME
 "yyèbÀs"

	)

165 #unde‡
MAXMBOXES


166 
	#MAXMBOXES
 10

	)

167 #unde‡
MINSIZE


168 
	#MINSIZE
 496

	)

169 #unde‡
__unu£d


170 
	#__unu£d


	)

171 #unde‡
OUTFILE


172 
	#OUTFILE
 "öô.c"

	)

173 #unde‡
OUTTEMP


174 
	#OUTTEMP
 "öô.c.√w"

	)

175 #unde‡
BLOCKSIZE


176 
	#BLOCKSIZE
 512

	)

177 #unde‡
__¥ötf0like


178 
	#__¥ötf0like
 
__¥ötÊike


	)

179 #unde‡
__unu£d


180 
	#__unu£d


	)

181 #unde‡
MAXTYPES


182 
	#MAXTYPES
 50

	)

183 #unde‡
MAXFIELDS


184 
	#MAXFIELDS
 20

	)

185 #unde‡
BUFLEN


186 
	#BUFLEN
 100

	)

187 #unde‡
T_NODE


188 
	#T_NODE
 1

	)

189 #unde‡
T_NODELIST


190 
	#T_NODELIST
 2

	)

191 #unde‡
T_STRING


192 
	#T_STRING
 3

	)

193 #unde‡
T_INT


194 
	#T_INT
 4

	)

195 #unde‡
T_OTHER


196 
	#T_OTHER
 5

	)

197 #unde‡
T_TEMP


198 
	#T_TEMP
 6

	)

199 #unde‡
__unu£d


200 
	#__unu£d


	)

201 #unde‡
DEFINE_OPTIONS


202 
	#DEFINE_OPTIONS


	)

203 #unde‡
OUTBUFSIZ


204 
	#OUTBUFSIZ
 
BUFSIZ


	)

205 #unde‡
BLOCK_OUT


206 
	#BLOCK_OUT
 -2

	)

207 #unde‡
MEM_OUT


208 
	#MEM_OUT
 -3

	)

209 #unde‡
OUTPUT_ERR


210 
	#OUTPUT_ERR
 01

	)

211 #unde‡
EOFMARKLEN


212 
	#EOFMARKLEN
 79

	)

213 #unde‡
PROMPTLEN


214 
	#PROMPTLEN
 128

	)

215 #unde‡
EMPTY


216 
	#EMPTY
 -2

	)

217 #unde‡
PIPESIZE


218 
	#PIPESIZE
 4096

	)

219 #unde‡
S_DFL


220 
	#S_DFL
 1

	)

221 #unde‡
S_CATCH


222 
	#S_CATCH
 2

	)

223 #unde‡
S_IGN


224 
	#S_IGN
 3

	)

225 #unde‡
S_HARD_IGN


226 
	#S_HARD_IGN
 4

	)

227 #unde‡
S_RESET


228 
	#S_RESET
 5

	)

229 #unde‡
sys_sig«me


230 
	#sys_sig«me
 
sys_sigli°


	)

231 #unde‡
VTABSIZE


232 
	#VTABSIZE
 39

	)

233 #unde‡
YYBISON


234 
	#YYBISON
 1

	)

235 #unde‡
YYBISON_VERSION


236 
	#YYBISON_VERSION
 "2.4.1"

	)

237 #unde‡
YYSKELETON_NAME


238 
	#YYSKELETON_NAME
 "yacc.c"

	)

239 #unde‡
YYPURE


240 
	#YYPURE
 0

	)

241 #unde‡
YYPUSH


242 
	#YYPUSH
 0

	)

243 #unde‡
YYPULL


244 
	#YYPULL
 1

	)

245 #unde‡
YYLSP_NEEDED


246 
	#YYLSP_NEEDED
 0

	)

247 #unde‡
ARITH_NUM


248 
	#ARITH_NUM
 258

	)

249 #unde‡
ARITH_LPAREN


250 
	#ARITH_LPAREN
 259

	)

251 #unde‡
ARITH_RPAREN


252 
	#ARITH_RPAREN
 260

	)

253 #unde‡
ARITH_VAR


254 
	#ARITH_VAR
 261

	)

255 #unde‡
ARITH_ASSIGN


256 
	#ARITH_ASSIGN
 262

	)

257 #unde‡
ARITH_SUBASSIGN


258 
	#ARITH_SUBASSIGN
 263

	)

259 #unde‡
ARITH_ADDASSIGN


260 
	#ARITH_ADDASSIGN
 264

	)

261 #unde‡
ARITH_REMASSIGN


262 
	#ARITH_REMASSIGN
 265

	)

263 #unde‡
ARITH_DIVASSIGN


264 
	#ARITH_DIVASSIGN
 266

	)

265 #unde‡
ARITH_MULASSIGN


266 
	#ARITH_MULASSIGN
 267

	)

267 #unde‡
ARITH_LSHASSIGN


268 
	#ARITH_LSHASSIGN
 268

	)

269 #unde‡
ARITH_RSHASSIGN


270 
	#ARITH_RSHASSIGN
 269

	)

271 #unde‡
ARITH_BORASSIGN


272 
	#ARITH_BORASSIGN
 270

	)

273 #unde‡
ARITH_BXORASSIGN


274 
	#ARITH_BXORASSIGN
 271

	)

275 #unde‡
ARITH_BANDASSIGN


276 
	#ARITH_BANDASSIGN
 272

	)

277 #unde‡
ARITH_OR


278 
	#ARITH_OR
 273

	)

279 #unde‡
ARITH_AND


280 
	#ARITH_AND
 274

	)

281 #unde‡
ARITH_BOR


282 
	#ARITH_BOR
 275

	)

283 #unde‡
ARITH_BXOR


284 
	#ARITH_BXOR
 276

	)

285 #unde‡
ARITH_BAND


286 
	#ARITH_BAND
 277

	)

287 #unde‡
ARITH_NE


288 
	#ARITH_NE
 278

	)

289 #unde‡
ARITH_EQ


290 
	#ARITH_EQ
 279

	)

291 #unde‡
ARITH_LE


292 
	#ARITH_LE
 280

	)

293 #unde‡
ARITH_GE


294 
	#ARITH_GE
 281

	)

295 #unde‡
ARITH_GT


296 
	#ARITH_GT
 282

	)

297 #unde‡
ARITH_LT


298 
	#ARITH_LT
 283

	)

299 #unde‡
ARITH_RSHIFT


300 
	#ARITH_RSHIFT
 284

	)

301 #unde‡
ARITH_LSHIFT


302 
	#ARITH_LSHIFT
 285

	)

303 #unde‡
ARITH_SUB


304 
	#ARITH_SUB
 286

	)

305 #unde‡
ARITH_ADD


306 
	#ARITH_ADD
 287

	)

307 #unde‡
ARITH_REM


308 
	#ARITH_REM
 288

	)

309 #unde‡
ARITH_DIV


310 
	#ARITH_DIV
 289

	)

311 #unde‡
ARITH_MUL


312 
	#ARITH_MUL
 290

	)

313 #unde‡
ARITH_BNOT


314 
	#ARITH_BNOT
 291

	)

315 #unde‡
ARITH_NOT


316 
	#ARITH_NOT
 292

	)

317 #unde‡
ARITH_UNARYPLUS


318 
	#ARITH_UNARYPLUS
 293

	)

319 #unde‡
ARITH_UNARYMINUS


320 
	#ARITH_UNARYMINUS
 294

	)

321 #unde‡
YYSIZE_MAXIMUM


322 
	#YYSIZE_MAXIMUM
 ((
YYSIZE_T
Ë-1)

	)

323 #unde‡
YYFINAL


324 
	#YYFINAL
 26

	)

325 #unde‡
YYLAST


326 
	#YYLAST
 201

	)

327 #unde‡
YYNTOKENS


328 
	#YYNTOKENS
 40

	)

329 #unde‡
YYNNTS


330 
	#YYNNTS
 3

	)

331 #unde‡
YYNRULES


332 
	#YYNRULES
 38

	)

333 #unde‡
YYNSTATES


334 
	#YYNSTATES
 75

	)

335 #unde‡
YYUNDEFTOK


336 
	#YYUNDEFTOK
 2

	)

337 #unde‡
YYMAXUTOK


338 
	#YYMAXUTOK
 294

	)

339 #unde‡
YYPACT_NINF


340 
	#YYPACT_NINF
 -28

	)

341 #unde‡
YYTABLE_NINF


342 
	#YYTABLE_NINF
 -1

	)

343 #unde‡
yyîrok


344 
	#yyîrok
 (
yyîr°©us
 = 0)

	)

345 #unde‡
yy˛órö


346 
	#yy˛órö
 (
yych¨
 = 
YYEMPTY
)

	)

347 #unde‡
YYEMPTY


348 
	#YYEMPTY
 (-2)

	)

349 #unde‡
YYEOF


350 
	#YYEOF
 0

	)

351 #unde‡
YYACCEPT


352 
	#YYACCEPT
 
yyac˚±œb


	)

353 #unde‡
YYABORT


354 
	#YYABORT
 
yyab‹éab


	)

355 #unde‡
YYERROR


356 
	#YYERROR
 
yyîr‹œb


	)

357 #unde‡
YYFAIL


358 
	#YYFAIL
 
yyîæab


	)

359 #unde‡
YYTERROR


360 
	#YYTERROR
 1

	)

361 #unde‡
YYERRCODE


362 
	#YYERRCODE
 256

	)

363 #unde‡
YYPARSE_PARAM_TYPE


364 
	#YYPARSE_PARAM_TYPE
 
¨ôh_t
 *

	)

365 #unde‡
YYPARSE_PARAM


366 
	#YYPARSE_PARAM
 
ªsu…


	)

370 
rmÆü£s
();

372 
evÆskù
;

373 
lo›√°
;

375 
dñëefuncs
();

377 
	s°Ωush
 {

378 
°Ωush
 *
	m¥ev
;

379 *
	m¥ev°rög
;

380 
	m¥ev∆e·
;

381 
	m¥evŒe·
;

382 
Æüs
 *
	m≠
;

385 
	s∑r£fûe
 {

386 
∑r£fûe
 *
	m¥ev
;

387 
	mlöno
;

388 
	mfd
;

389 
	m∆e·
;

390 
	mŒe·
;

391 *
	m√xtc
;

392 *
	mbuf
;

393 
°Ωush
 *
	m°Ωush
;

394 
°Ωush
 
	mba£°Ωush
;

397 
∑r£∆e·
;

398 
∑r£Œe·
;

399 
∑r£fûe
 
ba£pf
;

401 
pid_t
 
backgndpid
;

402 
job˘l
;

404 
tokpushback
;

405 
checkkwd
;

407 
	sªdúèb
 {

408 
ªdúèb
 *
	m√xt
;

409 
	mª«med
[10];

412 
ªdúèb
 *
ªdúli°
;

414 
sigmode
[
NSIG
];

416 
sh¥ocv¨
();

425 
	$öô
()

430 
ba£buf
[];

432 
ba£pf
.
√xtc
 = ba£pf.
buf
 = 
ba£buf
;

437 **
ívp
;

438 **
ívú⁄
;

440 
	`öôv¨
();

441 
ívp
 = 
ívú⁄
 ; *envp ;Énvp++) {

442 i‡(
	`°rchr
(*
ívp
, '=')) {

443 
	`£tv¨eq
(*
ívp
, 
VEXPORT
|
VTEXTFIXED
);

447 
	}
}

457 
	$ª£t
()

462 
evÆskù
 = 0;

463 
lo›√°
 = 0;

464 
fun˙e°
 = 0;

469 i‡(
ex˚±i⁄
 !
EXSHELLPROC
)

470 
∑r£Œe·
 = 
∑r£∆e·
 = 0;

471 
	`p›Ælfûes
();

476 
out1
 = &
ouçut
;

477 
out2
 = &
îrout
;

478 i‡(
memout
.
buf
 !
NULL
) {

479 
	`ck‰ì
(
memout
.
buf
);

480 
memout
.
buf
 = 
NULL
;

486 
tokpushback
 = 0;

487 
checkkwd
 = 0;

492 
ªdúli°
)

493 
	`p›ªdú
();

495 
	}
}

504 
	$öôshñÕroc
()

509 
	`rmÆü£s
();

514 
exô°©us
 = 0;

519 
	`dñëefuncs
();

524 
	`p›Ælfûes
();

529 
backgndpid
 = -1;

530 #i‡
JOBS


531 
job˘l
 = 0;

537 
i
;

539 
i
 = 0; i < 
NOPTS
; i++)

540 
›éi°
[
i
].
vÆ
 = 0;

541 
	`›tsch™ged
();

547 
	`˛óºedú
();

552 *
sm
;

554 
	`˛ór_å≠s
();

555 
sm
 = 
sigmode
 ; sm < sigmodê+ 
NSIG
 ; sm++) {

556 i‡(*
sm
 =
S_IGN
)

557 *
sm
 = 
S_HARD_IGN
;

563 
	`sh¥ocv¨
();

565 
	}
}

	@init.h

36 
öô
();

37 
ª£t
();

38 
öôshñÕroc
();

	@input.c

33 #i‚de‡
löt


35 
	gsccsid
[] = "@(#)input.c 8.3 (Berkeley) 6/9/95";

38 
	~<sys/cdefs.h
>

39 
__FBSDID
("$FreeBSD: src/bin/sh/input.c,v 1.23.6.1 2008/11/25 02:59:29 kensmith Exp $");

41 
	~<°dio.h
>

42 
	~<f˙é.h
>

43 
	~<î∫o.h
>

44 
	~<uni°d.h
>

45 
	~<°dlib.h
>

46 
	~<°rög.h
>

52 
	~"shñl.h
"

53 
	~"ªdú.h
"

54 
	~"sy¡ax.h
"

55 
	~"öput.h
"

56 
	~"ouçut.h
"

57 
	~"›ti⁄s.h
"

58 
	~"memÆloc.h
"

59 
	~"îr‹.h
"

60 
	~"Æüs.h
"

61 
	~"∑r£r.h
"

62 #i‚de‡
NO_HISTORY


63 
	~"myhi°edô.h
"

65 
	~"å≠.h
"

67 
	#EOF_NLEFT
 -99

	)

69 
MKINIT


70 
	s°Ωush
 {

71 
°Ωush
 *
	m¥ev
;

72 *
	m¥ev°rög
;

73 
	m¥ev∆e·
;

74 
	m¥evŒe·
;

75 
Æüs
 *
	m≠
;

83 
MKINIT


84 
	s∑r£fûe
 {

85 
∑r£fûe
 *
	m¥ev
;

86 
	mlöno
;

87 
	mfd
;

88 
	m∆e·
;

89 
	mŒe·
;

90 *
	m√xtc
;

91 *
	mbuf
;

92 
°Ωush
 *
	m°Ωush
;

93 
°Ωush
 
	mba£°Ωush
;

97 
	g∂öno
 = 1;

98 
MKINIT
 
	g∑r£∆e·
;

99 
MKINIT
 
	g∑r£Œe·
;

100 *
	g∑r£√xtc
;

101 
MKINIT
 
∑r£fûe
 
	gba£pf
;

102 
	gba£buf
[
BUFSIZ
];

103 
STATIC
 
∑r£fûe
 *
	g∑r£fûe
 = &
ba£pf
;

104 
	göô_edôlöe
 = 0;

105 
	gwhich¥om±
;

107 #i‚de‡
NO_HISTORY


108 
EdôLöe
 *
	gñ
;

111 
STATIC
 
pushfûe
();

112 
¥ódfd
();

114 #ifde‡
mköô


115 
	gINCLUDE
 "input.h"

116 
	gINCLUDE
 "error.h"

118 
	gINIT
 {

119 
ba£buf
[];

121 
	gba£pf
.
	g√xtc
 = 
ba£pf
.
buf
 = 
ba£buf
;

124 
	gRESET
 {

125 i‡(
	gex˚±i⁄
 !
EXSHELLPROC
)

126 
∑r£Œe·
 = 
∑r£∆e·
 = 0;

127 
p›Ælfûes
();

130 
	gSHELLPROC
 {

131 
p›Ælfûes
();

141 
	$pfgës
(*
löe
, 
Àn
)

143 *
p
 = 
löe
;

144 
∆e·
 = 
Àn
;

145 
c
;

147 --
∆e·
 > 0) {

148 
c
 = 
	`pgëc_ma¸o
();

149 i‡(
c
 =
PEOF
) {

150 i‡(
p
 =
löe
)

151  
NULL
;

154 *
p
++ = 
c
;

155 i‡(
c
 == '\n')

158 *
p
 = '\0';

159  
löe
;

160 
	}
}

170 
	$pgëc
()

172  
	`pgëc_ma¸o
();

173 
	}
}

177 
	$¥ódfd
()

179 
ƒ
;

180 
∑r£√xtc
 = 
∑r£fûe
->
buf
;

182 #i‚de‡
NO_HISTORY


183 i‡(
ñ
 !
NULL
 && 
gŸwöch
) {

184 
gŸwöch
 = 0;

185 
	`ñ_ªsize
(
ñ
);

188 
ªåy
:

189 #i‚de‡
NO_HISTORY


190 i‡(
∑r£fûe
->
fd
 =0 && 
ñ
) {

191 c⁄° *
æ_˝
;

192 
ñ_Àn
;

194 i‡(
æ_˝
 =
NULL
)

195 
æ_˝
 = 
	`ñ_gës
(
ñ
, &
ñ_Àn
);

196 i‡(
æ_˝
 =
NULL
)

197 
ƒ
 = 0;

199 
ƒ
 = 
ñ_Àn
;

200 i‡(
ƒ
 > 
BUFSIZ
 - 1)

201 
ƒ
 = 
BUFSIZ
 - 1;

202 
	`mem˝y
(
∑r£√xtc
, 
æ_˝
, 
ƒ
);

203 i‡(
ƒ
 !
ñ_Àn
) {

204 
ñ_Àn
 -
ƒ
;

205 
æ_˝
 +
ƒ
;

207 
æ_˝
 = 
NULL
;

211 
ƒ
 = 
	`ªad
(
∑r£fûe
->
fd
, 
∑r£√xtc
, 
BUFSIZ
 - 1);

213 i‡(
ƒ
 <= 0) {

214 i‡(
ƒ
 < 0) {

215 i‡(
î∫o
 =
EINTR
)

216 
ªåy
;

217 i‡(
∑r£fûe
->
fd
 =0 && 
î∫o
 =
EWOULDBLOCK
) {

218 
Êags
 = 
	`f˙é
(0, 
F_GETFL
, 0);

219 i‡(
Êags
 >0 && fœg†& 
O_NONBLOCK
) {

220 
Êags
 &=~ 
O_NONBLOCK
;

221 i‡(
	`f˙é
(0, 
F_SETFL
, 
Êags
) >= 0) {

222 
	`out2°r
("sh:Åurning off NDELAY mode\n");

223 
ªåy
;

228 
ƒ
 = -1;

230  
ƒ
;

231 
	}
}

244 
	$¥ódbuf„r
()

246 *
p
, *
q
;

247 
m‹e
;

248 
somëhög
;

249 
ßvec
;

251 i‡(
∑r£fûe
->
°Ωush
) {

252 
	`p›°rög
();

253 i‡(--
∑r£∆e·
 >= 0)

254  (*
∑r£√xtc
++);

256 i‡(
∑r£∆e·
 =
EOF_NLEFT
 || 
∑r£fûe
->
buf
 =
NULL
)

257  
PEOF
;

258 
	`Êushout
(&
ouçut
);

259 
	`Êushout
(&
îrout
);

261 
agaö
:

262 i‡(
∑r£Œe·
 <= 0) {

263 i‡((
∑r£Œe·
 = 
	`¥ódfd
()) == -1) {

264 
∑r£Œe·
 = 
∑r£∆e·
 = 
EOF_NLEFT
;

265  
PEOF
;

269 
q
 = 
p
 = 
∑r£√xtc
;

272 
somëhög
 = 0;

273 
m‹e
 = 1; more;) {

274 *
p
) {

276 
p
++;

277 
check
;

284 
∑r£∆e·
 = 
q
 - 
∑r£√xtc
;

285 
m‹e
 = 0;

289 
somëhög
 = 1;

293 *
q
++ = *
p
++;

294 
check
:

295 i‡(--
∑r£Œe·
 <= 0) {

296 
∑r£∆e·
 = 
q
 - 
∑r£√xtc
 - 1;

297 i‡(
∑r£∆e·
 < 0)

298 
agaö
;

299 *
q
 = '\0';

300 
m‹e
 = 0;

304 
ßvec
 = *
q
;

305 *
q
 = '\0';

307 #i‚de‡
NO_HISTORY


308 i‡(
∑r£fûe
->
fd
 =0 && 
hi°
 && 
somëhög
) {

309 
Hi°Evít
 
he
;

310 
INTOFF
;

311 
	`hi°‹y
(
hi°
, &
he
, 
which¥om±
 =1 ? 
H_ENTER
 : 
H_ADD
,

312 
∑r£√xtc
);

313 
INTON
;

317 i‡(
vÊag
) {

318 
	`out2°r
(
∑r£√xtc
);

319 
	`Êushout
(
out2
);

322 *
q
 = 
ßvec
;

324  *
∑r£√xtc
++;

325 
	}
}

333 
	$pungëc
()

335 
∑r£∆e·
++;

336 
∑r£√xtc
--;

337 
	}
}

344 
	$push°rög
(*
s
, 
Àn
, *
≠
)

346 
°Ωush
 *
•
;

348 
INTOFF
;

350 i‡(
∑r£fûe
->
°Ωush
) {

351 
•
 = 
	`ckmÆloc
( (
°Ωush
));

352 
•
->
¥ev
 = 
∑r£fûe
->
°Ωush
;

353 
∑r£fûe
->
°Ωush
 = 
•
;

355 
•
 = 
∑r£fûe
->
°Ωush
 = &’¨£fûe->
ba£°Ωush
);

356 
•
->
¥ev°rög
 = 
∑r£√xtc
;

357 
•
->
¥ev∆e·
 = 
∑r£∆e·
;

358 
•
->
¥evŒe·
 = 
∑r£Œe·
;

359 
•
->
≠
 = (
Æüs
 *)ap;

360 i‡(
≠
)

361 ((
Æüs
 *)
≠
)->
Êag
 |
ALIASINUSE
;

362 
∑r£√xtc
 = 
s
;

363 
∑r£∆e·
 = 
Àn
;

364 
INTON
;

365 
	}
}

368 
	$p›°rög
()

370 
°Ωush
 *
•
 = 
∑r£fûe
->strpush;

372 
INTOFF
;

373 
∑r£√xtc
 = 
•
->
¥ev°rög
;

374 
∑r£∆e·
 = 
•
->
¥ev∆e·
;

375 
∑r£Œe·
 = 
•
->
¥evŒe·
;

377 i‡(
•
->
≠
)

378 
•
->
≠
->
Êag
 &~
ALIASINUSE
;

379 
∑r£fûe
->
°Ωush
 = 
•
->
¥ev
;

380 i‡(
•
 !&(
∑r£fûe
->
ba£°Ωush
))

381 
	`ck‰ì
(
•
);

382 
INTON
;

383 
	}
}

391 
	$£töputfûe
(*
‚ame
, 
push
)

393 
fd
;

394 
fd2
;

396 
INTOFF
;

397 i‡((
fd
 = 
	`›í
(
‚ame
, 
O_RDONLY
)) < 0)

398 
	`îr‹
("C™'à›í %s: %s", 
‚ame
, 
	`°ªº‹
(
î∫o
));

399 i‡(
fd
 < 10) {

400 
fd2
 = 
	`f˙é
(
fd
, 
F_DUPFD
, 10);

401 
	`˛o£
(
fd
);

402 i‡(
fd2
 < 0)

403 
	`îr‹
("Out of file descriptors");

404 
fd
 = 
fd2
;

406 
	`£töputfd
(
fd
, 
push
);

407 
INTON
;

408 
	}
}

417 
	$£töputfd
(
fd
, 
push
)

419 ()
	`f˙é
(
fd
, 
F_SETFD
, 
FD_CLOEXEC
);

420 i‡(
push
) {

421 
	`pushfûe
();

422 
∑r£fûe
->
buf
 = 
	`ckmÆloc
(
BUFSIZ
);

424 i‡(
∑r£fûe
->
fd
 > 0)

425 
	`˛o£
(
∑r£fûe
->
fd
);

426 
∑r£fûe
->
fd
 = fd;

427 i‡(
∑r£fûe
->
buf
 =
NULL
)

428 
∑r£fûe
->
buf
 = 
	`ckmÆloc
(
BUFSIZ
);

429 
∑r£Œe·
 = 
∑r£∆e·
 = 0;

430 
∂öno
 = 1;

431 
	}
}

439 
	$£töput°rög
(*
°rög
, 
push
)

441 
INTOFF
;

442 i‡(
push
)

443 
	`pushfûe
();

444 
∑r£√xtc
 = 
°rög
;

445 
∑r£Œe·
 = 
∑r£∆e·
 = 
	`°æí
(
°rög
);

446 
∑r£fûe
->
buf
 = 
NULL
;

447 
∂öno
 = 1;

448 
INTON
;

449 
	}
}

458 
STATIC
 

459 
	$pushfûe
()

461 
∑r£fûe
 *
pf
;

463 
∑r£fûe
->
∆e·
 = 
∑r£∆e·
;

464 
∑r£fûe
->
Œe·
 = 
∑r£Œe·
;

465 
∑r£fûe
->
√xtc
 = 
∑r£√xtc
;

466 
∑r£fûe
->
löno
 = 
∂öno
;

467 
pf
 = (
∑r£fûe
 *)
	`ckmÆloc
( (parsefile));

468 
pf
->
¥ev
 = 
∑r£fûe
;

469 
pf
->
fd
 = -1;

470 
pf
->
°Ωush
 = 
NULL
;

471 
pf
->
ba£°Ωush
.
¥ev
 = 
NULL
;

472 
∑r£fûe
 = 
pf
;

473 
	}
}

477 
	$p›fûe
()

479 
∑r£fûe
 *
pf
 =Öarsefile;

481 
INTOFF
;

482 i‡(
pf
->
fd
 >= 0)

483 
	`˛o£
(
pf
->
fd
);

484 i‡(
pf
->
buf
)

485 
	`ck‰ì
(
pf
->
buf
);

486 
pf
->
°Ωush
)

487 
	`p›°rög
();

488 
∑r£fûe
 = 
pf
->
¥ev
;

489 
	`ck‰ì
(
pf
);

490 
∑r£∆e·
 = 
∑r£fûe
->
∆e·
;

491 
∑r£Œe·
 = 
∑r£fûe
->
Œe·
;

492 
∑r£√xtc
 = 
∑r£fûe
->
√xtc
;

493 
∂öno
 = 
∑r£fûe
->
löno
;

494 
INTON
;

495 
	}
}

503 
	$p›Ælfûes
()

505 
∑r£fûe
 !&
ba£pf
)

506 
	`p›fûe
();

507 
	}
}

517 
	$˛o£s¸ùt
()

519 
	`p›Ælfûes
();

520 i‡(
∑r£fûe
->
fd
 > 0) {

521 
	`˛o£
(
∑r£fûe
->
fd
);

522 
∑r£fûe
->
fd
 = 0;

524 
	}
}

	@input.h

43 
∂öno
;

44 
∑r£∆e·
;

45 *
∑r£√xtc
;

46 
öô_edôlöe
;

48 *
pfgës
(*, );

49 
pgëc
();

50 
¥ódbuf„r
();

51 
pungëc
();

52 
push°rög
(*, , *);

53 
p›°rög
();

54 
£töputfûe
(*, );

55 
£töputfd
(, );

56 
£töput°rög
(*, );

57 
p›fûe
();

58 
p›Ælfûes
();

59 
˛o£s¸ùt
();

61 
	#pgëc_ma¸o
(Ë(--
∑r£∆e·
 >0? *
∑r£√xtc
++ : 
	`¥ódbuf„r
())

	)

	@jobs.c

33 #i‚de‡
löt


35 
	gsccsid
[] = "@(#)jobs.c 8.5 (Berkeley) 5/4/95";

38 
	~<sys/cdefs.h
>

39 
__FBSDID
("$FreeBSD: src/bin/sh/jobs.c,v 1.72.6.1 2008/11/25 02:59:29 kensmith Exp $");

41 
	~<f˙é.h
>

42 
	~<sig«l.h
>

43 
	~<î∫o.h
>

44 
	~<∑ths.h
>

45 
	~<uni°d.h
>

46 
	~<°dlib.h
>

47 
	~<sys/∑øm.h
>

48 
	~<sys/waô.h
>

49 
	~<sys/time.h
>

50 
	~<sys/ªsour˚.h
>

51 
	~<∑ths.h
>

52 
	~<sys/io˘l.h
>

54 
	~"shñl.h
"

55 #i‡
JOBS


56 
	~<ãrmios.h
>

57 #unde‡
CEOF


59 
	~"ªdú.h
"

60 
	~"show.h
"

61 
	~"maö.h
"

62 
	~"∑r£r.h
"

63 
	~"nodes.h
"

64 
	~"jobs.h
"

65 
	~"›ti⁄s.h
"

66 
	~"å≠.h
"

67 
	~"sy¡ax.h
"

68 
	~"öput.h
"

69 
	~"ouçut.h
"

70 
	~"memÆloc.h
"

71 
	~"îr‹.h
"

72 
	~"my°rög.h
"

75 
STATIC
 
job
 *
	gjobèb
;

76 
STATIC
 
	gnjobs
;

77 
MKINIT
 
pid_t
 
	gbackgndpid
 = -1;

78 #i‡
JOBS


79 
STATIC
 
job
 *
	gjobmru
;

80 
STATIC
 
pid_t
 
	göôüÕgΩ
;

82 
	gö_waôcmd
 = 0;

83 
	gö_dowaô
 = 0;

84 vﬁ©ûê
sig_©omic_t
 
	gbªakwaôcmd
 = 0;

85 
	gâyfd
 = -1;

87 #i‡
JOBS


88 
STATIC
 
ª°¨tjob
(
job
 *);

90 
STATIC
 
‰ìjob
(
job
 *);

91 
STATIC
 
job
 *
gëjob
(*);

92 
STATIC
 
pid_t
 
dowaô
(, 
job
 *);

93 
STATIC
 
pid_t
 
waô¥oc
(, *);

94 
STATIC
 
cmdtxt
(
node
 *);

95 
STATIC
 
cmdputs
(*);

96 #i‡
JOBS


97 
STATIC
 
£tcurjob
(
job
 *);

98 
STATIC
 
dñjob
(
job
 *);

99 
STATIC
 
job
 *
gëcurjob
(job *);

101 
STATIC
 
showjob
(
job
 *, 
pid_t
, );

108 
MKINIT
 
	gjob˘l
;

110 #i‡
JOBS


112 
	$£tjob˘l
(
⁄
)

114 
i
;

116 i‡(
⁄
 =
job˘l
 || 
roŸshñl
 == 0)

118 i‡(
⁄
) {

119 i‡(
âyfd
 != -1)

120 
	`˛o£
(
âyfd
);

121 i‡((
âyfd
 = 
	`›í
(
_PATH_TTY
, 
O_RDWR
)) < 0) {

122 
i
 = 0;

123 
i
 <2 && !
	`ißây
(i))

124 
i
++;

125 i‡(
i
 > 2 || (
âyfd
 = 
	`f˙é
(i, 
F_DUPFD
, 10)) < 0)

126 
out
;

128 i‡(
âyfd
 < 10) {

133 i‡((
i
 = 
	`f˙é
(
âyfd
, 
F_DUPFD
, 10)) < 0) {

134 
	`˛o£
(
âyfd
);

135 
âyfd
 = -1;

136 
out
;

138 
	`˛o£
(
âyfd
);

139 
âyfd
 = 
i
;

141 i‡(
	`f˙é
(
âyfd
, 
F_SETFD
, 
FD_CLOEXEC
) < 0) {

142 
	`˛o£
(
âyfd
);

143 
âyfd
 = -1;

144 
out
;

147 
öôüÕgΩ
 = 
	`tcgëpgΩ
(
âyfd
);

148 i‡(
öôüÕgΩ
 < 0) {

149 
out
: 
	`out2°r
("sh: can'táccessÅty; job controlÅurned off\n");

150 
mÊag
 = 0;

153 i‡(
öôüÕgΩ
 == -1)

154 
öôüÕgΩ
 = 
	`gëpgΩ
();

155 i‡(
öôüÕgΩ
 !
	`gëpgΩ
()) {

156 
	`kûÕg
(0, 
SIGTTIN
);

160 
	`£tsig«l
(
SIGTSTP
);

161 
	`£tsig«l
(
SIGTTOU
);

162 
	`£tsig«l
(
SIGTTIN
);

163 
	`£çgid
(0, 
roŸpid
);

164 
	`tc£çgΩ
(
âyfd
, 
roŸpid
);

166 
	`£çgid
(0, 
öôüÕgΩ
);

167 
	`tc£çgΩ
(
âyfd
, 
öôüÕgΩ
);

168 
	`˛o£
(
âyfd
);

169 
âyfd
 = -1;

170 
	`£tsig«l
(
SIGTSTP
);

171 
	`£tsig«l
(
SIGTTOU
);

172 
	`£tsig«l
(
SIGTTIN
);

174 
job˘l
 = 
⁄
;

175 
	}
}

179 #ifde‡
mköô


180 
	gINCLUDE
 <
	gsys
/
	gty≥s
.
	gh
>

181 
	gINCLUDE
 <
	g°dlib
.
	gh
>

183 
	gSHELLPROC
 {

184 
	gbackgndpid
 = -1;

185 #i‡
JOBS


186 
	gjob˘l
 = 0;

194 #i‡
JOBS


196 
	$fgcmd
(
¨gc
 
__unu£d
, **
¨gv
)

198 
job
 *
jp
;

199 
pid_t
 
pgΩ
;

200 
°©us
;

202 
jp
 = 
	`gëjob
(
¨gv
[1]);

203 i‡(
jp
->
job˘l
 == 0)

204 
	`îr‹
("jobÇot created under job control");

205 
	`out1°r
(
jp
->
ps
[0].
cmd
);

206 
	`out1c
('\n');

207 
	`Êushout
(&
ouçut
);

208 
pgΩ
 = 
jp
->
ps
[0].
pid
;

209 
	`tc£çgΩ
(
âyfd
, 
pgΩ
);

210 
	`ª°¨tjob
(
jp
);

211 
jp
->
f‹eground
 = 1;

212 
INTOFF
;

213 
°©us
 = 
	`waôf‹job
(
jp
, (*)
NULL
);

214 
INTON
;

215  
°©us
;

216 
	}
}

220 
	$bgcmd
(
¨gc
, **
¨gv
)

222 
s
[64];

223 
job
 *
jp
;

226 
jp
 = 
	`gëjob
(*++
¨gv
);

227 i‡(
jp
->
job˘l
 == 0)

228 
	`îr‹
("jobÇot created under job control");

229 i‡(
jp
->
°©e
 =
JOBDONE
)

231 
	`ª°¨tjob
(
jp
);

232 
jp
->
f‹eground
 = 0;

233 
	`fmt°r
(
s
, 64, "[%td] ", 
jp
 - 
jobèb
 + 1);

234 
	`out1°r
(
s
);

235 
	`out1°r
(
jp
->
ps
[0].
cmd
);

236 
	`out1c
('\n');

237 } --
¨gc
 > 1);

239 
	}
}

242 
STATIC
 

243 
	$ª°¨tjob
(
job
 *
jp
)

245 
¥oc°©
 *
ps
;

246 
i
;

248 i‡(
jp
->
°©e
 =
JOBDONE
)

250 
	`£tcurjob
(
jp
);

251 
INTOFF
;

252 
	`kûÕg
(
jp
->
ps
[0].
pid
, 
SIGCONT
);

253 
ps
 = 
jp
->ps, 
i
 = jp->
≈rocs
 ; --i >= 0 ;Ös++) {

254 i‡(
	`WIFSTOPPED
(
ps
->
°©us
)) {

255 
ps
->
°©us
 = -1;

256 
jp
->
°©e
 = 0;

259 
INTON
;

260 
	}
}

265 
	$jobscmd
(
¨gc
, *
¨gv
[])

267 *
id
;

268 
ch
, 
mode
;

270 
›töd
 = 
›åe£t
 = 1;

271 
›ãº
 = 0;

272 
mode
 = 
SHOWJOBS_DEFAULT
;

273 (
ch
 = 
	`gë›t
(
¨gc
, 
¨gv
, "lps")) != -1) {

274 
ch
) {

276 
mode
 = 
SHOWJOBS_VERBOSE
;

279 
mode
 = 
SHOWJOBS_PGIDS
;

282 
mode
 = 
SHOWJOBS_PIDS
;

286 
	`îr‹
("unknow¿›ti⁄: -%c", 
›t›t
);

289 
¨gc
 -
›töd
;

290 
¨gv
 +
›töd
;

292 i‡(
¨gc
 == 0)

293 
	`showjobs
(0, 
mode
);

295 (
id
 = *
¨gv
++Ë!
NULL
)

296 
	`showjob
(
	`gëjob
(
id
), 0, 
mode
);

299 
	}
}

301 
STATIC
 

302 
	$showjob
(
job
 *
jp
, 
pid_t
 
pid
, 
mode
)

304 
s
[64];

305 
¥oc°©
 *
ps
;

306 
job
 *
j
;

307 
cﬁ
, 
cuº
, 
i
, 
jobno
, 
¥ev
, 
¥o˙o
;

308 
pid_t
 
µid
;

309 
c
;

311 
¥o˙o
 = (
mode
 =
SHOWJOBS_PGIDS
Ë? 1 : 
jp
->
≈rocs
;

312 
jobno
 = 
jp
 - 
jobèb
 + 1;

313 
cuº
 = 
¥ev
 = 0;

314 #i‡
JOBS


315 i‡((
j
 = 
	`gëcurjob
(
NULL
)) != NULL) {

316 
cuº
 = 
j
 - 
jobèb
 + 1;

317 i‡((
j
 = 
	`gëcurjob
(j)Ë!
NULL
)

318 
¥ev
 = 
j
 - 
jobèb
 + 1;

321 
ps
 = 
jp
->ps ; ;Ös++) {

322 i‡(
mode
 =
SHOWJOBS_PIDS
 || modê=
SHOWJOBS_PGIDS
) {

323 
µid
 = (
mode
 =
SHOWJOBS_PIDS
Ë? 
ps
->
pid
 :

324 
	`gëpgid
(
ps
->
pid
);

325 
	`out1fmt
("%d\n", ()
µid
);

326 
skù
;

328 i‡(
mode
 !
SHOWJOBS_VERBOSE
 && 
ps
 !
jp
->p†&& 
pid
 == 0)

329 
skù
;

330 i‡(
pid
 !0 &&Öid !
ps
->pid)

331 
skù
;

332 i‡(
jobno
 =
cuº
 && 
ps
 =
jp
->ps)

333 
c
 = '+';

334 i‡(
jobno
 =
¥ev
 && 
ps
 =
jp
->ps)

335 
c
 = '-';

337 
c
 = ' ';

338 i‡(
ps
 =
jp
->ps)

339 
	`fmt°r
(
s
, 64, "[%d] %¯", 
jobno
, 
c
);

341 
	`fmt°r
(
s
, 64, " %¯", 
c
);

342 
	`out1°r
(
s
);

343 
cﬁ
 = 
	`°æí
(
s
);

344 i‡(
mode
 =
SHOWJOBS_VERBOSE
) {

345 
	`fmt°r
(
s
, 64, "%d ", ()
ps
->
pid
);

346 
	`out1°r
(
s
);

347 
cﬁ
 +
	`°æí
(
s
);

349 
s
[0] = '\0';

350 i‡(
ps
 !
jp
->ps) {

351 *
s
 = '\0';

352 } i‡(
ps
->
°©us
 == -1) {

353 
	`°r˝y
(
s
, "Running");

354 } i‡(
	`WIFEXITED
(
ps
->
°©us
)) {

355 i‡(
	`WEXITSTATUS
(
ps
->
°©us
) == 0)

356 
	`°r˝y
(
s
, "Done");

358 
	`fmt°r
(
s
, 64, "Done (%d)",

359 
	`WEXITSTATUS
(
ps
->
°©us
));

361 #i‡
JOBS


362 i‡(
	`WIFSTOPPED
(
ps
->
°©us
))

363 
i
 = 
	`WSTOPSIG
(
ps
->
°©us
);

366 
i
 = 
	`WTERMSIG
(
ps
->
°©us
);

367 i‡((
i
 & 0x7FË< 
sys_nsig
 && 
sys_sigli°
[i & 0x7F])

368 
	`sc›y
(
sys_sigli°
[
i
 & 0x7F], 
s
);

370 
	`fmt°r
(
s
, 64, "Sig«»%d", 
i
 & 0x7F);

371 i‡(
	`WCOREDUMP
(
ps
->
°©us
))

372 
	`°rˇt
(
s
, " (core dumped)");

374 
	`out1°r
(
s
);

375 
cﬁ
 +
	`°æí
(
s
);

377 
	`out1c
(' ');

378 
cﬁ
++;

379 } 
cﬁ
 < 30);

380 
	`out1°r
(
ps
->
cmd
);

381 
	`out1c
('\n');

382 
skù
: i‡(--
¥o˙o
 <= 0)

385 
	}
}

397 
	$showjobs
(
ch™ge
, 
mode
)

399 
jobno
;

400 
job
 *
jp
;

402 
	`TRACE
(("showjobs(%dËˇŒed\n", 
ch™ge
));

403 
	`dowaô
(0, (
job
 *)
NULL
) > 0);

404 
jobno
 = 1, 
jp
 = 
jobèb
 ; jobnÿ<
njobs
 ; jobno++, jp++) {

405 i‡(! 
jp
->
u£d
)

407 i‡(
jp
->
≈rocs
 == 0) {

408 
	`‰ìjob
(
jp
);

411 i‡(
ch™ge
 && ! 
jp
->
ch™ged
)

413 
	`showjob
(
jp
, 0, 
mode
);

414 
jp
->
ch™ged
 = 0;

415 i‡(
jp
->
°©e
 =
JOBDONE
) {

416 
	`‰ìjob
(
jp
);

419 
	}
}

426 
STATIC
 

427 
	$‰ìjob
(
job
 *
jp
)

429 
¥oc°©
 *
ps
;

430 
i
;

432 
INTOFF
;

433 
i
 = 
jp
->
≈rocs
, 
ps
 = jp->ps ; --i >= 0 ;Ös++) {

434 i‡(
ps
->
cmd
 !
nuŒ°r
)

435 
	`ck‰ì
(
ps
->
cmd
);

437 i‡(
jp
->
ps
 !&jp->
ps0
)

438 
	`ck‰ì
(
jp
->
ps
);

439 
jp
->
u£d
 = 0;

440 #i‡
JOBS


441 
	`dñjob
(
jp
);

443 
INTON
;

444 
	}
}

449 
	$waôcmd
(
¨gc
, **
¨gv
)

451 
job
 *job;

452 
°©us
, 
ªtvÆ
;

453 
job
 *
jp
;

455 i‡(
¨gc
 > 1) {

456 
job
 = 
	`gëjob
(
¨gv
[1]);

458 
job
 = 
NULL
;

466 
ö_waôcmd
++;

468 i‡(
job
 !
NULL
) {

469 i‡(
job
->
°©e
) {

470 
°©us
 = 
job
->
ps
[job->
≈rocs
 - 1].status;

471 i‡(
	`WIFEXITED
(
°©us
))

472 
ªtvÆ
 = 
	`WEXITSTATUS
(
°©us
);

473 #i‡
JOBS


474 i‡(
	`WIFSTOPPED
(
°©us
))

475 
ªtvÆ
 = 
	`WSTOPSIG
(
°©us
) + 128;

478 
ªtvÆ
 = 
	`WTERMSIG
(
°©us
) + 128;

479 i‡(! 
iÊag
)

480 
	`‰ìjob
(
job
);

481 
ö_waôcmd
--;

482  
ªtvÆ
;

485 
jp
 = 
jobèb
 ; ; jp++) {

486 i‡(
jp
 >
jobèb
 + 
njobs
) {

487 
ö_waôcmd
--;

490 i‡(
jp
->
u£d
 && jp->
°©e
 == 0)

494 } 
	`dowaô
(1, (
job
 *)
NULL
) != -1);

495 
ö_waôcmd
--;

498 
	}
}

503 
	$jobidcmd
(
¨gc
 
__unu£d
, **
¨gv
)

505 
job
 *
jp
;

506 
i
;

508 
jp
 = 
	`gëjob
(
¨gv
[1]);

509 
i
 = 0 ; i < 
jp
->
≈rocs
 ; ) {

510 
	`out1fmt
("%d", ()
jp
->
ps
[
i
].
pid
);

511 
	`out1c
(++
i
 < 
jp
->
≈rocs
? ' ' : '\n');

514 
	}
}

522 
STATIC
 
job
 *

523 
	$gëjob
(*
«me
)

525 
jobno
;

526 
job
 *
found
, *
jp
;

527 
pid_t
 
pid
;

528 
i
;

530 i‡(
«me
 =
NULL
) {

531 #i‡
JOBS


532 
cuºítjob
: i‡((
jp
 = 
	`gëcurjob
(
NULL
)) == NULL)

533 
	`îr‹
("No current job");

534  (
jp
);

536 
	`îr‹
("No current job");

538 } i‡(
«me
[0] == '%') {

539 i‡(
	`is_digô
(
«me
[1])) {

540 
jobno
 = 
	`numbî
(
«me
 + 1);

541 i‡(
jobno
 > 0 && jobnÿ<
njobs


542 && 
jobèb
[
jobno
 - 1].
u£d
 != 0)

543  &
jobèb
[
jobno
 - 1];

544 #i‡
JOBS


545 } i‡(
«me
[1] == '%' &&Çame[2] == '\0') {

546 
cuºítjob
;

547 } i‡(
«me
[1] == '+' &&Çame[2] == '\0') {

548 
cuºítjob
;

549 } i‡(
«me
[1] == '-' &&Çame[2] == '\0') {

550 i‡((
jp
 = 
	`gëcurjob
(
NULL
)) == NULL ||

551 (
jp
 = 
	`gëcurjob
(jp)Ë=
NULL
)

552 
	`îr‹
("NoÖrevious job");

553  (
jp
);

555 } i‡(
«me
[1] == '?') {

556 
found
 = 
NULL
;

557 
jp
 = 
jobèb
, 
i
 = 
njobs
 ; --i >= 0 ; jp++) {

558 i‡(
jp
->
u£d
 && jp->
≈rocs
 > 0

559 && 
	`°r°r
(
jp
->
ps
[0].
cmd
, 
«me
 + 2Ë!
NULL
) {

560 i‡(
found
)

561 
	`îr‹
("%s:ámbiguous", 
«me
);

562 
found
 = 
jp
;

565 i‡(
found
 !
NULL
)

566  (
found
);

568 
found
 = 
NULL
;

569 
jp
 = 
jobèb
, 
i
 = 
njobs
 ; --i >= 0 ; jp++) {

570 i‡(
jp
->
u£d
 && jp->
≈rocs
 > 0

571 && 
	`¥efix
(
«me
 + 1, 
jp
->
ps
[0].
cmd
)) {

572 i‡(
found
)

573 
	`îr‹
("%s:ámbiguous", 
«me
);

574 
found
 = 
jp
;

577 i‡(
found
)

578  
found
;

580 } i‡(
	`is_numbî
(
«me
)) {

581 
pid
 = (
pid_t
)
	`numbî
(
«me
);

582 
jp
 = 
jobèb
, 
i
 = 
njobs
 ; --i >= 0 ; jp++) {

583 i‡(
jp
->
u£d
 && jp->
≈rocs
 > 0

584 && 
jp
->
ps
[jp->
≈rocs
 - 1].
pid
 ==Öid)

585  
jp
;

588 
	`îr‹
("Nÿsuch job: %s", 
«me
);

590  
NULL
;

591 
	}
}

599 
job
 *

600 
	$makejob
(
node
 *nodê
__unu£d
, 
≈rocs
)

602 
i
;

603 
job
 *
jp
;

605 
i
 = 
njobs
, 
jp
 = 
jobèb
 ; ; jp++) {

606 i‡(--
i
 < 0) {

607 
INTOFF
;

608 i‡(
njobs
 == 0) {

609 
jobèb
 = 
	`ckmÆloc
(4 *  jobtab[0]);

610 #i‡
JOBS


611 
jobmru
 = 
NULL
;

614 
jp
 = 
	`ckmÆloc
((
njobs
 + 4Ë*  
jobèb
[0]);

615 
	`mem˝y
(
jp
, 
jobèb
, 
njobs
 *  jp[0]);

616 #i‡
JOBS


618 i‡(
jobmru
 !
NULL
)

619 
jobmru
 = &
jp
[jobmru - 
jobèb
];

620 
i
 = 0; i < 
njobs
; i++)

621 i‡(
jp
[
i
].
√xt
 !
NULL
)

622 
jp
[
i
].
√xt
 = &jp[jp[i].next -

623 
jobèb
];

626 
i
 = 0; i < 
njobs
; i++)

627 i‡(
jp
[
i
].
ps
 =&
jobèb
[i].
ps0
)

628 
jp
[
i
].
ps
 = &jp[i].
ps0
;

629 
	`ck‰ì
(
jobèb
);

630 
jobèb
 = 
jp
;

632 
jp
 = 
jobèb
 + 
njobs
;

633 
i
 = 4 ; --ò>0 ; 
jobèb
[
njobs
++].
u£d
 = 0);

634 
INTON
;

637 i‡(
jp
->
u£d
 == 0)

640 
INTOFF
;

641 
jp
->
°©e
 = 0;

642 
jp
->
u£d
 = 1;

643 
jp
->
ch™ged
 = 0;

644 
jp
->
≈rocs
 = 0;

645 
jp
->
f‹eground
 = 0;

646 #i‡
JOBS


647 
jp
->
job˘l
 = jobctl;

648 
jp
->
√xt
 = 
NULL
;

650 i‡(
≈rocs
 > 1) {

651 
jp
->
ps
 = 
	`ckmÆloc
(
≈rocs
 *  (
¥oc°©
));

653 
jp
->
ps
 = &jp->
ps0
;

655 
INTON
;

656 
	`TRACE
(("makejob(%p, %dËªtu∫†%%%d\n", (*)
node
, 
≈rocs
,

657 
jp
 - 
jobèb
 + 1));

658  
jp
;

659 
	}
}

661 #i‡
JOBS


662 
STATIC
 

663 
	$£tcurjob
(
job
 *
cj
)

665 
job
 *
jp
, *
¥ev
;

667 
¥ev
 = 
NULL
, 
jp
 = 
jobmru
; j∞!NULL;Öªv = jp, j∞jp->
√xt
) {

668 i‡(
jp
 =
cj
) {

669 i‡(
¥ev
 !
NULL
)

670 
¥ev
->
√xt
 = 
jp
->next;

672 
jobmru
 = 
jp
->
√xt
;

673 
jp
->
√xt
 = 
jobmru
;

674 
jobmru
 = 
cj
;

678 
cj
->
√xt
 = 
jobmru
;

679 
jobmru
 = 
cj
;

680 
	}
}

682 
STATIC
 

683 
	$dñjob
(
job
 *
j
)

685 
job
 *
jp
, *
¥ev
;

687 
¥ev
 = 
NULL
, 
jp
 = 
jobmru
; j∞!NULL;Öªv = jp, j∞jp->
√xt
) {

688 i‡(
jp
 =
j
) {

689 i‡(
¥ev
 !
NULL
)

690 
¥ev
->
√xt
 = 
jp
->next;

692 
jobmru
 = 
jp
->
√xt
;

696 
	}
}

702 
STATIC
 
job
 *

703 
	$gëcurjob
(
job
 *
nj
)

705 
job
 *
jp
;

708 
jp
 = 
jobmru
; j∞!
NULL
; j∞jp->
√xt
)

709 i‡(
jp
->
u£d
 && j∞!
nj
 && jp->
°©e
 =
JOBSTOPPED
)

710  (
jp
);

712 
jp
 = 
jobmru
; j∞!
NULL
; j∞jp->
√xt
)

713 i‡(
jp
->
u£d
 && j∞!
nj
)

714  (
jp
);

716  (
NULL
);

717 
	}
}

736 
pid_t


737 
	$f‹kshñl
(
job
 *
jp
, 
node
 *
n
, 
mode
)

739 
pid_t
 
pid
;

740 
pid_t
 
pgΩ
;

742 
	`TRACE
(("f‹kshñl(%%%d, %p, %dËˇŒed\n", 
jp
 - 
jobèb
, (*)
n
,

743 
mode
));

744 
INTOFF
;

745 
	`ÊushÆl
();

746 
pid
 = 
	`f‹k
();

747 i‡(
pid
 == -1) {

748 
	`TRACE
(("F‹k faûed,Éºno=%d\n", 
î∫o
));

749 
INTON
;

750 
	`îr‹
("C™nŸ f‹k: %s", 
	`°ªº‹
(
î∫o
));

752 i‡(
pid
 == 0) {

753 
job
 *
p
;

754 
wa§oŸ
;

755 
i
;

757 
	`TRACE
(("Chûd shñ»%d\n", ()
	`gëpid
()));

758 
wa§oŸ
 = 
roŸshñl
;

759 
roŸshñl
 = 0;

760 
	`˛o£s¸ùt
();

761 
INTON
;

762 
	`˛ór_å≠s
();

763 #i‡
JOBS


764 
job˘l
 = 0;

765 i‡(
wa§oŸ
 && 
mode
 !
FORK_NOJOB
 && 
mÊag
) {

766 i‡(
jp
 =
NULL
 || jp->
≈rocs
 == 0)

767 
pgΩ
 = 
	`gëpid
();

769 
pgΩ
 = 
jp
->
ps
[0].
pid
;

770 i‡(
	`£çgid
(0, 
pgΩ
Ë=0 && 
mode
 =
FORK_FG
) {

772 i‡(
	`tc£çgΩ
(
âyfd
, 
pgΩ
) < 0)

773 
	`îr‹
("tc£çgΩ faûed,Éºno=%d", 
î∫o
);

775 
	`£tsig«l
(
SIGTSTP
);

776 
	`£tsig«l
(
SIGTTOU
);

777 } i‡(
mode
 =
FORK_BG
) {

778 
	`ign‹esig
(
SIGINT
);

779 
	`ign‹esig
(
SIGQUIT
);

780 i‡((
jp
 =
NULL
 || jp->
≈rocs
 == 0) &&

781 ! 
	`fd0_ªdúe˘ed_p
 ()) {

782 
	`˛o£
(0);

783 i‡(
	`›í
(
_PATH_DEVNULL
, 
O_RDONLY
) != 0)

784 
	`îr‹
("Can't open %s: %s",

785 
_PATH_DEVNULL
, 
	`°ªº‹
(
î∫o
));

789 i‡(
mode
 =
FORK_BG
) {

790 
	`ign‹esig
(
SIGINT
);

791 
	`ign‹esig
(
SIGQUIT
);

792 i‡((
jp
 =
NULL
 || jp->
≈rocs
 == 0) &&

793 ! 
	`fd0_ªdúe˘ed_p
 ()) {

794 
	`˛o£
(0);

795 i‡(
	`›í
(
_PATH_DEVNULL
, 
O_RDONLY
) != 0)

796 
	`îr‹
("Can't open %s: %s",

797 
_PATH_DEVNULL
, 
	`°ªº‹
(
î∫o
));

801 
INTOFF
;

802 
i
 = 
njobs
, 
p
 = 
jobèb
 ; --i >= 0 ;Ö++)

803 i‡(
p
->
u£d
)

804 
	`‰ìjob
(
p
);

805 
INTON
;

806 i‡(
wa§oŸ
 && 
iÊag
) {

807 
	`£tsig«l
(
SIGINT
);

808 
	`£tsig«l
(
SIGQUIT
);

809 
	`£tsig«l
(
SIGTERM
);

811  
pid
;

813 i‡(
roŸshñl
 && 
mode
 !
FORK_NOJOB
 && 
mÊag
) {

814 i‡(
jp
 =
NULL
 || jp->
≈rocs
 == 0)

815 
pgΩ
 = 
pid
;

817 
pgΩ
 = 
jp
->
ps
[0].
pid
;

818 
	`£çgid
(
pid
, 
pgΩ
);

820 i‡(
mode
 =
FORK_BG
)

821 
backgndpid
 = 
pid
;

822 i‡(
jp
) {

823 
¥oc°©
 *
ps
 = &
jp
->ps[jp->
≈rocs
++];

824 
ps
->
pid
 =Öid;

825 
ps
->
°©us
 = -1;

826 
ps
->
cmd
 = 
nuŒ°r
;

827 i‡(
iÊag
 && 
roŸshñl
 && 
n
)

828 
ps
->
cmd
 = 
	`comm™dãxt
(
n
);

829 
jp
->
f‹eground
 = 
mode
 =
FORK_FG
;

830 #i‡
JOBS


831 
	`£tcurjob
(
jp
);

834 
INTON
;

835 
	`TRACE
(("I¿∑ª¡ shñl: chûd = %d\n", ()
pid
));

836  
pid
;

837 
	}
}

861 
	$waôf‹job
(
job
 *
jp
, *
‹ig°©us
)

863 #i‡
JOBS


864 
pid_t
 
mypgΩ
 = 
	`gëpgΩ
();

866 
°©us
;

867 
°
;

869 
INTOFF
;

870 
	`TRACE
(("waôf‹job(%%%dËˇŒed\n", 
jp
 - 
jobèb
 + 1));

871 
jp
->
°©e
 == 0)

872 i‡(
	`dowaô
(1, 
jp
) == -1)

873 
	`dŸøp
();

874 #i‡
JOBS


875 i‡(
jp
->
job˘l
) {

876 i‡(
	`tc£çgΩ
(
âyfd
, 
mypgΩ
) < 0)

877 
	`îr‹
("tc£çgΩ faûed,Éºno=%d\n", 
î∫o
);

879 i‡(
jp
->
°©e
 =
JOBSTOPPED
)

880 
	`£tcurjob
(
jp
);

882 
°©us
 = 
jp
->
ps
[jp->
≈rocs
 - 1].status;

883 i‡(
‹ig°©us
 !
NULL
)

884 *
‹ig°©us
 = 
°©us
;

886 i‡(
	`WIFEXITED
(
°©us
))

887 
°
 = 
	`WEXITSTATUS
(
°©us
);

888 #i‡
JOBS


889 i‡(
	`WIFSTOPPED
(
°©us
))

890 
°
 = 
	`WSTOPSIG
(
°©us
) + 128;

893 
°
 = 
	`WTERMSIG
(
°©us
) + 128;

894 i‡(! 
JOBS
 || 
jp
->
°©e
 =
JOBDONE
)

895 
	`‰ìjob
(
jp
);

896 i‡(
	`öt_≥ndög
()) {

897 i‡(
	`WIFSIGNALED
(
°©us
Ë&& 
	`WTERMSIG
(°©usË=
SIGINT
)

898 
	`kûl
(
	`gëpid
(), 
SIGINT
);

900 
CLEAR_PENDING_INT
;

902 
INTON
;

903  
°
;

904 
	}
}

912 
STATIC
 
pid_t


913 
	$dowaô
(
block
, 
job
 *job)

915 
pid_t
 
pid
;

916 
°©us
;

917 
¥oc°©
 *
•
;

918 
job
 *
jp
;

919 
job
 *
thisjob
;

920 
d⁄e
;

921 
°›≥d
;

922 
sig
;

923 
i
;

925 
ö_dowaô
++;

926 
	`TRACE
(("dowaô(%dËˇŒed\n", 
block
));

928 
pid
 = 
	`waô¥oc
(
block
, &
°©us
);

929 
	`TRACE
(("waôÑëu∫†%d, sètus=%d\n", ()
pid
, 
°©us
));

930 } (
pid
 =-1 && 
î∫o
 =
EINTR
 && 
bªakwaôcmd
 == 0) ||

931 (
pid
 > 0 && 
	`WIFSTOPPED
(
°©us
Ë&& !
iÊag
));

932 
ö_dowaô
--;

933 i‡(
pid
 =-1 && 
î∫o
 =
ECHILD
 && 
job
 !
NULL
)

934 
job
->
°©e
 = 
JOBDONE
;

935 i‡(
bªakwaôcmd
 != 0) {

936 
bªakwaôcmd
 = 0;

937 i‡(
pid
 <= 0)

940 i‡(
pid
 <= 0)

941  
pid
;

942 
INTOFF
;

943 
thisjob
 = 
NULL
;

944 
jp
 = 
jobèb
 ; j∞< jobèb + 
njobs
 ; jp++) {

945 i‡(
jp
->
u£d
) {

946 
d⁄e
 = 1;

947 
°›≥d
 = 1;

948 
•
 = 
jp
->
ps
 ; s∞< jp->p†+ jp->
≈rocs
 ; sp++) {

949 i‡(
•
->
pid
 == -1)

951 i‡(
•
->
pid
 ==Öid) {

952 
	`TRACE
(("Changing status ofÖroc %d from 0x%xÅo 0x%x\n",

953 ()
pid
, 
•
->
°©us
,

954 
°©us
));

955 
•
->
°©us
 = status;

956 
thisjob
 = 
jp
;

958 i‡(
•
->
°©us
 == -1)

959 
°›≥d
 = 0;

960 i‡(
	`WIFSTOPPED
(
•
->
°©us
))

961 
d⁄e
 = 0;

963 i‡(
°›≥d
) {

964 
°©e
 = 
d⁄e
? 
JOBDONE
 : 
JOBSTOPPED
;

965 i‡(
jp
->
°©e
 != state) {

966 
	`TRACE
(("Job %d: ch™gög sèã from %dÅÿ%d\n", 
jp
 - 
jobèb
 + 1, jp->
°©e
, state));

967 
jp
->
°©e
 = state;

968 #i‡
JOBS


969 i‡(
d⁄e
)

970 
	`dñjob
(
jp
);

976 
INTON
;

977 i‡(! 
roŸshñl
 || ! 
iÊag
 || (
job
 && 
thisjob
 == job)) {

978 #i‡
JOBS


979 i‡(
	`WIFSTOPPED
(
°©us
))

980 
sig
 = 
	`WSTOPSIG
(
°©us
);

984 i‡(
	`WIFEXITED
(
°©us
))

985 
sig
 = 0;

987 
sig
 = 
	`WTERMSIG
(
°©us
);

989 i‡(
sig
 !0 && sig !
SIGINT
 && sig !
SIGPIPE
) {

990 i‡(!
mÊag
 ||

991 (
thisjob
->
f‹eground
 && !
	`WIFSTOPPED
(
°©us
))) {

992 
i
 = 
	`WTERMSIG
(
°©us
);

993 i‡((
i
 & 0x7FË< 
sys_nsig
 && 
sys_sigli°
[i & 0x7F])

994 
	`out1°r
(
sys_sigli°
[
i
 & 0x7F]);

996 
	`out1fmt
("Sig«»%d", 
i
 & 0x7F);

997 i‡(
	`WCOREDUMP
(
°©us
))

998 
	`out1°r
(" (core dumped)");

999 
	`out1c
('\n');

1001 
	`showjob
(
thisjob
, 
pid
, 
SHOWJOBS_DEFAULT
);

1004 
	`TRACE
(("NŸÖrötög sètus,ÑoŸshñl=%d, job=%p\n", 
roŸshñl
, 
job
));

1005 i‡(
thisjob
)

1006 
thisjob
->
ch™ged
 = 1;

1008  
pid
;

1009 
	}
}

1018 
STATIC
 
pid_t


1019 
	$waô¥oc
(
block
, *
°©us
)

1021 
Êags
;

1023 #i‡
JOBS


1024 
Êags
 = 
WUNTRACED
;

1026 
Êags
 = 0;

1028 i‡(
block
 == 0)

1029 
Êags
 |
WNOHANG
;

1030  
	`waô3
(
°©us
, 
Êags
, (
rußge
 *)
NULL
);

1031 
	}
}

1036 
	gjob_w¨nög
 = 0;

1038 
	$°›≥djobs
()

1040 
jobno
;

1041 
job
 *
jp
;

1043 i‡(
job_w¨nög
)

1045 
jobno
 = 1, 
jp
 = 
jobèb
; jobnÿ<
njobs
; jobno++, jp++) {

1046 i‡(
jp
->
u£d
 == 0)

1048 i‡(
jp
->
°©e
 =
JOBSTOPPED
) {

1049 
	`out2°r
("You have stopped jobs.\n");

1050 
job_w¨nög
 = 2;

1056 
	}
}

1063 
STATIC
 *
	gcmd√xtc
;

1064 
STATIC
 
	gcmd∆e·
;

1065 
	#MAXCMDTEXT
 200

	)

1068 
	$comm™dãxt
(
node
 *
n
)

1070 *
«me
;

1072 
cmd√xtc
 = 
«me
 = 
	`ckmÆloc
(
MAXCMDTEXT
);

1073 
cmd∆e·
 = 
MAXCMDTEXT
 - 4;

1074 
	`cmdtxt
(
n
);

1075 *
cmd√xtc
 = '\0';

1076  
«me
;

1077 
	}
}

1080 
STATIC
 

1081 
	$cmdtxt
(
node
 *
n
)

1083 
node
 *
≈
;

1084 
nodñi°
 *
Õ
;

1085 *
p
;

1086 
i
;

1087 
s
[2];

1089 i‡(
n
 =
NULL
)

1091 
n
->
ty≥
) {

1092 
NSEMI
:

1093 
	`cmdtxt
(
n
->
nbö¨y
.
ch1
);

1094 
	`cmdputs
("; ");

1095 
	`cmdtxt
(
n
->
nbö¨y
.
ch2
);

1097 
NAND
:

1098 
	`cmdtxt
(
n
->
nbö¨y
.
ch1
);

1099 
	`cmdputs
(" && ");

1100 
	`cmdtxt
(
n
->
nbö¨y
.
ch2
);

1102 
NOR
:

1103 
	`cmdtxt
(
n
->
nbö¨y
.
ch1
);

1104 
	`cmdputs
(" || ");

1105 
	`cmdtxt
(
n
->
nbö¨y
.
ch2
);

1107 
NPIPE
:

1108 
Õ
 = 
n
->
≈ùe
.
cmdli°
 ;Ü∞;Ü∞Õ->
√xt
) {

1109 
	`cmdtxt
(
Õ
->
n
);

1110 i‡(
Õ
->
√xt
)

1111 
	`cmdputs
(" | ");

1114 
NSUBSHELL
:

1115 
	`cmdputs
("(");

1116 
	`cmdtxt
(
n
->
ƒedú
.n);

1117 
	`cmdputs
(")");

1119 
NREDIR
:

1120 
NBACKGND
:

1121 
	`cmdtxt
(
n
->
ƒedú
.n);

1123 
NIF
:

1124 
	`cmdputs
("if ");

1125 
	`cmdtxt
(
n
->
nif
.
ã°
);

1126 
	`cmdputs
(";Åhen ");

1127 
	`cmdtxt
(
n
->
nif
.
iÂ¨t
);

1128 
	`cmdputs
("...");

1130 
NWHILE
:

1131 
	`cmdputs
("while ");

1132 
u¡û
;

1133 
NUNTIL
:

1134 
	`cmdputs
("until ");

1135 
u¡û
:

1136 
	`cmdtxt
(
n
->
nbö¨y
.
ch1
);

1137 
	`cmdputs
("; do ");

1138 
	`cmdtxt
(
n
->
nbö¨y
.
ch2
);

1139 
	`cmdputs
("; done");

1141 
NFOR
:

1142 
	`cmdputs
("for ");

1143 
	`cmdputs
(
n
->
nf‹
.
v¨
);

1144 
	`cmdputs
(" in ...");

1146 
NCASE
:

1147 
	`cmdputs
("case ");

1148 
	`cmdputs
(
n
->
nˇ£
.
ex¥
->
«rg
.
ãxt
);

1149 
	`cmdputs
(" in ...");

1151 
NDEFUN
:

1152 
	`cmdputs
(
n
->
«rg
.
ãxt
);

1153 
	`cmdputs
("() ...");

1155 
NCMD
:

1156 
≈
 = 
n
->
ncmd
.
¨gs
 ;Ç∞;Ç∞≈->
«rg
.
√xt
) {

1157 
	`cmdtxt
(
≈
);

1158 i‡(
≈
->
«rg
.
√xt
)

1159 
	`cmdputs
(" ");

1161 
≈
 = 
n
->
ncmd
.
ªdúe˘
 ;Ç∞;Ç∞≈->
nfûe
.
√xt
) {

1162 
	`cmdputs
(" ");

1163 
	`cmdtxt
(
≈
);

1166 
NARG
:

1167 
	`cmdputs
(
n
->
«rg
.
ãxt
);

1169 
NTO
:

1170 
p
 = ">"; 
i
 = 1; 
ªdú
;

1171 
NAPPEND
:

1172 
p
 = ">>"; 
i
 = 1; 
ªdú
;

1173 
NTOFD
:

1174 
p
 = ">&"; 
i
 = 1; 
ªdú
;

1175 
NCLOBBER
:

1176 
p
 = ">|"; 
i
 = 1; 
ªdú
;

1177 
NFROM
:

1178 
p
 = "<"; 
i
 = 0; 
ªdú
;

1179 
NFROMTO
:

1180 
p
 = "<>"; 
i
 = 0; 
ªdú
;

1181 
NFROMFD
:

1182 
p
 = "<&"; 
i
 = 0; 
ªdú
;

1183 
ªdú
:

1184 i‡(
n
->
nfûe
.
fd
 !
i
) {

1185 
s
[0] = 
n
->
nfûe
.
fd
 + '0';

1186 
s
[1] = '\0';

1187 
	`cmdputs
(
s
);

1189 
	`cmdputs
(
p
);

1190 i‡(
n
->
ty≥
 =
NTOFD
 ||Ç->ty≥ =
NFROMFD
) {

1191 i‡(
n
->
ndup
.
dupfd
 >= 0)

1192 
s
[0] = 
n
->
ndup
.
dupfd
 + '0';

1194 
s
[0] = '-';

1195 
s
[1] = '\0';

1196 
	`cmdputs
(
s
);

1198 
	`cmdtxt
(
n
->
nfûe
.
‚ame
);

1201 
NHERE
:

1202 
NXHERE
:

1203 
	`cmdputs
("<<...");

1206 
	`cmdputs
("???");

1209 
	}
}

1213 
STATIC
 

1214 
	$cmdputs
(*
s
)

1216 *
p
, *
q
;

1217 
c
;

1218 
subty≥
 = 0;

1220 i‡(
cmd∆e·
 <= 0)

1222 
p
 = 
s
;

1223 
q
 = 
cmd√xtc
;

1224 (
c
 = *
p
++) != '\0') {

1225 i‡(
c
 =
CTLESC
)

1226 *
q
++ = *
p
++;

1227 i‡(
c
 =
CTLVAR
) {

1228 *
q
++ = '$';

1229 i‡(--
cmd∆e·
 > 0)

1230 *
q
++ = '{';

1231 
subty≥
 = *
p
++;

1232 } i‡(
c
 ='=' && 
subty≥
 != 0) {

1233 *
q
++ = "}-+?="[(
subty≥
 & 
VSTYPE
Ë- 
VSNORMAL
];

1234 
subty≥
 = 0;

1235 } i‡(
c
 =
CTLENDVAR
) {

1236 *
q
++ = '}';

1237 } i‡(
c
 =
CTLBACKQ
 || c =CTLBACKQ+
CTLQUOTE
)

1238 
cmd∆e·
++;

1240 *
q
++ = 
c
;

1241 i‡(--
cmd∆e·
 <= 0) {

1242 *
q
++ = '.';

1243 *
q
++ = '.';

1244 *
q
++ = '.';

1248 
cmd√xtc
 = 
q
;

1249 
	}
}

	@jobs.h

37 
	#FORK_FG
 0

	)

38 
	#FORK_BG
 1

	)

39 
	#FORK_NOJOB
 2

	)

41 
	~<sig«l.h
>

50 
	s¥oc°©
 {

51 
pid_t
 
	mpid
;

52 
	m°©us
;

53 *
	mcmd
;

58 
	#JOBSTOPPED
 1

	)

59 
	#JOBDONE
 2

	)

62 
	sjob
 {

63 
¥oc°©
 
	mps0
;

64 
¥oc°©
 *
	mps
;

65 
	m≈rocs
;

66 
pid_t
 
	mpgΩ
;

67 
	m°©e
;

68 
	mu£d
;

69 
	mch™ged
;

70 
	mf‹eground
;

71 #i‡
JOBS


72 
	mjob˘l
;

73 
job
 *
	m√xt
;

78 
	mSHOWJOBS_DEFAULT
,

79 
	mSHOWJOBS_VERBOSE
,

80 
	mSHOWJOBS_PIDS
,

81 
	mSHOWJOBS_PGIDS


84 
pid_t
 
backgndpid
;

85 
job_w¨nög
;

86 
ö_waôcmd
;

87 
ö_dowaô
;

88 vﬁ©ûê
sig_©omic_t
 
bªakwaôcmd
;

90 
£tjob˘l
();

91 
fgcmd
(, **);

92 
bgcmd
(, **);

93 
jobscmd
(, **);

94 
showjobs
(, );

95 
waôcmd
(, **);

96 
jobidcmd
(, **);

97 
job
 *
makejob
(
node
 *, );

98 
pid_t
 
f‹kshñl
(
job
 *, 
node
 *, );

99 
waôf‹job
(
job
 *, *);

100 
°›≥djobs
();

101 *
comm™dãxt
(
node
 *);

103 #i‡! 
JOBS


104 
	#£tjob˘l
(
⁄
Ë

	)

	@lex.yy.c

4 
	#YY_INT_ALIGNED
 

	)

8 
	#FLEX_SCANNER


	)

9 
	#YY_FLEX_MAJOR_VERSION
 2

	)

10 
	#YY_FLEX_MINOR_VERSION
 5

	)

11 
	#YY_FLEX_SUBMINOR_VERSION
 35

	)

12 #i‡
YY_FLEX_SUBMINOR_VERSION
 > 0

13 
	#FLEX_BETA


	)

19 
	~<°dio.h
>

20 
	~<°rög.h
>

21 
	~<î∫o.h
>

22 
	~<°dlib.h
>

28 #i‚de‡
FLEXINT_H


29 
	#FLEXINT_H


	)

33 #i‡
deföed
 (
__STDC_VERSION__
) && __STDC_VERSION__ >= 199901L

38 #i‚de‡
__STDC_LIMIT_MACROS


39 
	#__STDC_LIMIT_MACROS
 1

	)

42 
	~<öây≥s.h
>

43 
öt8_t
 
	tÊex_öt8_t
;

44 
uöt8_t
 
	tÊex_uöt8_t
;

45 
öt16_t
 
	tÊex_öt16_t
;

46 
uöt16_t
 
	tÊex_uöt16_t
;

47 
öt32_t
 
	tÊex_öt32_t
;

48 
uöt32_t
 
	tÊex_uöt32_t
;

50 sig√d 
	tÊex_öt8_t
;

51 
	tÊex_öt16_t
;

52 
	tÊex_öt32_t
;

53 
	tÊex_uöt8_t
;

54 
	tÊex_uöt16_t
;

55 
	tÊex_uöt32_t
;

59 #i‚de‡
INT8_MIN


60 
	#INT8_MIN
 (-128)

	)

62 #i‚de‡
INT16_MIN


63 
	#INT16_MIN
 (-32767-1)

	)

65 #i‚de‡
INT32_MIN


66 
	#INT32_MIN
 (-2147483647-1)

	)

68 #i‚de‡
INT8_MAX


69 
	#INT8_MAX
 (127)

	)

71 #i‚de‡
INT16_MAX


72 
	#INT16_MAX
 (32767)

	)

74 #i‚de‡
INT32_MAX


75 
	#INT32_MAX
 (2147483647)

	)

77 #i‚de‡
UINT8_MAX


78 
	#UINT8_MAX
 (255U)

	)

80 #i‚de‡
UINT16_MAX


81 
	#UINT16_MAX
 (65535U)

	)

83 #i‚de‡
UINT32_MAX


84 
	#UINT32_MAX
 (4294967295U)

	)

89 #ifde‡
__˝lu•lus


92 
	#YY_USE_CONST


	)

97 #i‡
deföed
 (
__STDC__
)

99 
	#YY_USE_CONST


	)

104 #ifde‡
YY_USE_CONST


105 
	#yyc⁄°
 c⁄°

	)

107 
	#yyc⁄°


	)

111 
	#YY_NULL
 0

	)

118 
	#YY_SC_TO_UI
(
c
Ë((Ë(Ëc)

	)

124 
	#BEGIN
 (
yy_°¨t
Ë1 + 2 *

	)

130 
	#YY_START
 (((
yy_°¨t
Ë- 1Ë/ 2)

	)

131 
	#YYSTATE
 
YY_START


	)

134 
	#YY_STATE_EOF
(
°©e
Ë(
YY_END_OF_BUFFER
 + sèã + 1)

	)

137 
	#YY_NEW_FILE
 
	`yyª°¨t
(
yyö
 )

	)

139 
	#YY_END_OF_BUFFER_CHAR
 0

	)

142 #i‚de‡
YY_BUF_SIZE


143 
	#YY_BUF_SIZE
 16384

	)

148 
	#YY_STATE_BUF_SIZE
 ((
YY_BUF_SIZE
 + 2Ë* (
yy_°©e_ty≥
))

	)

150 #i‚de‡
YY_TYPEDEF_YY_BUFFER_STATE


151 
	#YY_TYPEDEF_YY_BUFFER_STATE


	)

152 
yy_buf„r_°©e
 *
	tYY_BUFFER_STATE
;

155 
yyÀng
;

157 
FILE
 *
yyö
, *
yyout
;

159 
	#EOB_ACT_CONTINUE_SCAN
 0

	)

160 
	#EOB_ACT_END_OF_FILE
 1

	)

161 
	#EOB_ACT_LAST_MATCH
 2

	)

163 
	#YY_LESS_LINENO
(
n
)

	)

166 
	#yyÀss
(
n
) \

170 
yyÀss_ma¸o_¨g
 = (
n
); \

171 
	`YY_LESS_LINENO
(
yyÀss_ma¸o_¨g
);\

172 *
yy_˝
 = (
yy_hﬁd_ch¨
); \

173 
YY_RESTORE_YY_MORE_OFFSET
 \

174 (
yy_c_buf_p
Ë
yy_˝
 = 
yy_bp
 + 
yyÀss_ma¸o_¨g
 - 
YY_MORE_ADJ
; \

175 
YY_DO_BEFORE_ACTION
; \

177  0 )

	)

179 
	#u≈ut
(
c
Ë
	`yyu≈ut
–c, (
yyãxt_±r
Ë)

	)

181 #i‚de‡
YY_TYPEDEF_YY_SIZE_T


182 
	#YY_TYPEDEF_YY_SIZE_T


	)

183 
size_t
 
	tyy_size_t
;

186 #i‚de‡
YY_STRUCT_YY_BUFFER_STATE


187 
	#YY_STRUCT_YY_BUFFER_STATE


	)

188 
	syy_buf„r_°©e


190 
FILE
 *
	myy_öput_fûe
;

192 *
	myy_ch_buf
;

193 *
	myy_buf_pos
;

198 
yy_size_t
 
	myy_buf_size
;

203 
	myy_n_ch¨s
;

209 
	myy_is_our_buf„r
;

216 
	myy_is_öãø˘ive
;

222 
	myy_©_bﬁ
;

224 
	myy_bs_löío
;

225 
	myy_bs_cﬁumn
;

230 
	myy_fûl_buf„r
;

232 
	myy_buf„r_°©us
;

234 
	#YY_BUFFER_NEW
 0

	)

235 
	#YY_BUFFER_NORMAL
 1

	)

246 
	#YY_BUFFER_EOF_PENDING
 2

	)

252 
size_t
 
	gyy_buf„r_°ack_t›
 = 0;

253 
size_t
 
	gyy_buf„r_°ack_max
 = 0;

254 
YY_BUFFER_STATE
 * 
	gyy_buf„r_°ack
 = 0;

262 
	#YY_CURRENT_BUFFER
 ( (
yy_buf„r_°ack
) \

263 ? (
yy_buf„r_°ack
)[(
yy_buf„r_°ack_t›
)] \

264 : 
NULL
)

	)

269 
	#YY_CURRENT_BUFFER_LVALUE
 (
yy_buf„r_°ack
)[(
yy_buf„r_°ack_t›
)]

	)

272 
	gyy_hﬁd_ch¨
;

273 
	gyy_n_ch¨s
;

274 
	gyyÀng
;

277 *
	gyy_c_buf_p
 = (*) 0;

278 
	gyy_öô
 = 0;

279 
	gyy_°¨t
 = 0;

284 
	gyy_did_buf„r_swôch_⁄_eof
;

286 
yyª°¨t
 (
FILE
 *
öput_fûe
 );

287 
yy_swôch_to_buf„r
 (
YY_BUFFER_STATE
 
√w_buf„r
 );

288 
YY_BUFFER_STATE
 
yy_¸óã_buf„r
 (
FILE
 *
fûe
,
size
 );

289 
yy_dñëe_buf„r
 (
YY_BUFFER_STATE
 
b
 );

290 
yy_Êush_buf„r
 (
YY_BUFFER_STATE
 
b
 );

291 
yypush_buf„r_°©e
 (
YY_BUFFER_STATE
 
√w_buf„r
 );

292 
yyp›_buf„r_°©e
 ();

294 
yyísuª_buf„r_°ack
 ();

295 
yy_lﬂd_buf„r_°©e
 ();

296 
yy_öô_buf„r
 (
YY_BUFFER_STATE
 
b
,
FILE
 *
fûe
 );

298 
	#YY_FLUSH_BUFFER
 
	`yy_Êush_buf„r
(
YY_CURRENT_BUFFER
 )

	)

300 
YY_BUFFER_STATE
 
yy_sˇn_buf„r
 (*
ba£
,
yy_size_t
 
size
 );

301 
YY_BUFFER_STATE
 
yy_sˇn_°rög
 (
yyc⁄°
 *
yy_°r
 );

302 
YY_BUFFER_STATE
 
yy_sˇn_byãs
 (
yyc⁄°
 *
byãs
,
Àn
 );

304 *
yyÆloc
 (
yy_size_t
 );

305 *
yyªÆloc
 (*,
yy_size_t
 );

306 
yy‰ì
 (* );

308 
	#yy_√w_buf„r
 
yy_¸óã_buf„r


	)

310 
	#yy_£t_öãø˘ive
(
is_öãø˘ive
) \

312 i‡–! 
YY_CURRENT_BUFFER
 ){ \

313 
	`yyísuª_buf„r_°ack
 (); \

314 
YY_CURRENT_BUFFER_LVALUE
 = \

315 
	`yy_¸óã_buf„r
(
yyö
,
YY_BUF_SIZE
 ); \

317 
YY_CURRENT_BUFFER_LVALUE
->
yy_is_öãø˘ive
 = 
is_öãø˘ive
; \

318 }

	)

320 
	#yy_£t_bﬁ
(
©_bﬁ
) \

322 i‡–! 
YY_CURRENT_BUFFER
 ){\

323 
	`yyísuª_buf„r_°ack
 (); \

324 
YY_CURRENT_BUFFER_LVALUE
 = \

325 
	`yy_¸óã_buf„r
(
yyö
,
YY_BUF_SIZE
 ); \

327 
YY_CURRENT_BUFFER_LVALUE
->
yy_©_bﬁ
 = 
©_bﬁ
; \

328 }

	)

330 
	#YY_AT_BOL
(Ë(
YY_CURRENT_BUFFER_LVALUE
->
yy_©_bﬁ
)

	)

334 
	tYY_CHAR
;

336 
FILE
 *
	gyyö
 = (FILE *Ë0, *
	gyyout
 = (FILE *) 0;

338 
	tyy_°©e_ty≥
;

340 
yylöío
;

342 
	gyylöío
 = 1;

344 *
yyãxt
;

345 
	#yyãxt_±r
 
yyãxt


	)

347 
yy_°©e_ty≥
 
yy_gë_¥evious_°©e
 ();

348 
yy_°©e_ty≥
 
yy_åy_NUL_å™s
 (yy_°©e_ty≥ 
cuºít_°©e
 );

349 
yy_gë_√xt_buf„r
 ();

350 
yy_Áèl_îr‹
 (
yyc⁄°
 
msg
[] );

355 
	#YY_DO_BEFORE_ACTION
 \

356 (
yyãxt_±r
Ë
yy_bp
; \

357 
yyÀng
 = (
size_t
Ë(
yy_˝
 - 
yy_bp
); \

358 (
yy_hﬁd_ch¨
Ë*
yy_˝
; \

359 *
yy_˝
 = '\0'; \

360 (
yy_c_buf_p
Ë
yy_˝
;

	)

362 
	#YY_NUM_RULES
 40

	)

363 
	#YY_END_OF_BUFFER
 41

	)

366 
	syy_å™s_öfo


368 
Êex_öt32_t
 
	myy_vîify
;

369 
Êex_öt32_t
 
	myy_nxt
;

371 
yyc⁄°
 
Êex_öt16_t
 
	gyy_ac˚±
[49] =

380 
yyc⁄°
 
Êex_öt32_t
 
	gyy_ec
[256] =

412 
yyc⁄°
 
Êex_öt32_t
 
	gyy_mëa
[26] =

419 
yyc⁄°
 
Êex_öt16_t
 
	gyy_ba£
[51] =

428 
yyc⁄°
 
Êex_öt16_t
 
	gyy_def
[51] =

437 
yyc⁄°
 
Êex_öt16_t
 
	gyy_nxt
[87] =

450 
yyc⁄°
 
Êex_öt16_t
 
	gyy_chk
[87] =

463 
yy_°©e_ty≥
 
	gyy_œ°_ac˚±ög_°©e
;

464 *
	gyy_œ°_ac˚±ög_˝os
;

466 
yy_Êex_debug
;

467 
	gyy_Êex_debug
 = 0;

472 
	#REJECT
 
ªje˘_u£d_but_nŸ_dëe˘ed


	)

473 
	#yym‹e
(Ë
yym‹e_u£d_but_nŸ_dëe˘ed


	)

474 
	#YY_MORE_ADJ
 0

	)

475 
	#YY_RESTORE_YY_MORE_OFFSET


	)

476 *
	gyyãxt
;

512 #i‚de‡
löt


513 
	gsccsid
[] = "@(#)arith_lex.l 8.3 (Berkeley) 5/4/95";

517 
	~<sys/cdefs.h
>

518 
__FBSDID
("$FreeBSD: src/bin/sh/arith_lex.l,v 1.24.6.1 2008/11/25 02:59:29 kensmith Exp $");

520 
	~<°rög.h
>

522 
	~"¨ôh.h
"

523 
	~"shñl.h
"

524 
	~"y.èb.h
"

525 
	~"îr‹.h
"

526 
	~"memÆloc.h
"

527 
	~"v¨.h
"

529 
yyÀx
();

531 #unde‡
YY_INPUT


532 
	#YY_INPUT
(
buf
,
ªsu…
,
max
) \

533 
ªsu…
 = (*
buf
 = *
¨ôh_buf
++Ë? 1 : 
YY_NULL
;

	)

534 
	#YY_NO_UNPUT


	)

537 
	#INITIAL
 0

	)

539 #i‚de‡
YY_NO_UNISTD_H


544 
	~<uni°d.h
>

547 #i‚de‡
YY_EXTRA_TYPE


548 
	#YY_EXTRA_TYPE
 *

	)

551 
yy_öô_globÆs
 ();

556 
yyÀx_de°roy
 ();

558 
yygë_debug
 ();

560 
yy£t_debug
 (
debug_Êag
 );

562 
YY_EXTRA_TYPE
 
yygë_exåa
 ();

564 
yy£t_exåa
 (
YY_EXTRA_TYPE
 
u£r_deföed
 );

566 
FILE
 *
yygë_ö
 ();

568 
yy£t_ö
 (
FILE
 * 
ö_°r
 );

570 
FILE
 *
yygë_out
 ();

572 
yy£t_out
 (
FILE
 * 
out_°r
 );

574 
yygë_Àng
 ();

576 *
yygë_ãxt
 ();

578 
yygë_löío
 ();

580 
yy£t_löío
 (
löe_numbî
 );

586 #i‚de‡
YY_SKIP_YYWRAP


587 #ifde‡
__˝lu•lus


588 "C" 
yywøp
 ();

590 
yywøp
 ();

594 
yyu≈ut
 (
c
,*
buf_±r
 );

596 #i‚de‡
yyãxt_±r


597 
yy_Êex_°∫˝y
 (*,
yyc⁄°
 *,);

600 #ifde‡
YY_NEED_STRLEN


601 
yy_Êex_°æí
 (
yyc⁄°
 * );

604 #i‚de‡
YY_NO_INPUT


606 #ifde‡
__˝lu•lus


607 
yyöput
 ();

609 
öput
 ();

615 #i‚de‡
YY_READ_BUF_SIZE


616 
	#YY_READ_BUF_SIZE
 8192

	)

620 #i‚de‡
ECHO


624 
	#ECHO
 
	`fwrôe
–
yyãxt
, 
yyÀng
, 1, 
yyout
 )

	)

630 #i‚de‡
YY_INPUT


631 
	#YY_INPUT
(
buf
,
ªsu…
,
max_size
) \

632 i‡–
YY_CURRENT_BUFFER_LVALUE
->
yy_is_öãø˘ive
 ) \

634 
c
 = '*'; \

635 
n
; \

636  
n
 = 0;Ç < 
max_size
 && \

637 (
c
 = 
	`gëc
–
yyö
 )Ë!
EOF
 && c !'\n'; ++
n
 ) \

638 
buf
[
n
] = (Ë
c
; \

639 i‡–
c
 == '\n' ) \

640 
buf
[
n
++] = (Ë
c
; \

641 i‡–
c
 =
EOF
 && 
	`„º‹
–
yyö
 ) ) \

642 
	`YY_FATAL_ERROR
( "input in flex scanner failed" ); \

643 
ªsu…
 = 
n
; \

647 
î∫o
=0; \

648  (
ªsu…
 = 
	`‰ód
(
buf
, 1, 
max_size
, 
yyö
))==0 && 
	`„º‹
(yyin)) \

650 if–
î∫o
 !
EINTR
) \

652 
	`YY_FATAL_ERROR
( "input in flex scanner failed" ); \

655 
î∫o
=0; \

656 
	`˛óªº
(
yyö
); \

660 

	)

667 #i‚de‡
yyãrmö©e


668 
	#yyãrmö©e
(Ë 
YY_NULL


	)

672 #i‚de‡
YY_START_STACK_INCR


673 
	#YY_START_STACK_INCR
 25

	)

677 #i‚de‡
YY_FATAL_ERROR


678 
	#YY_FATAL_ERROR
(
msg
Ë
	`yy_Áèl_îr‹
–msg )

	)

686 #i‚de‡
YY_DECL


687 
	#YY_DECL_IS_OURS
 1

	)

689 
yyÀx
 ();

691 
	#YY_DECL
 
	`yyÀx
 ()

	)

697 #i‚de‡
YY_USER_ACTION


698 
	#YY_USER_ACTION


	)

702 #i‚de‡
YY_BREAK


703 
	#YY_BREAK
 ;

	)

706 
	#YY_RULE_SETUP
 \

707 
YY_USER_ACTION


	)

711 
	gYY_DECL


713 
yy_°©e_ty≥
 
	gyy_cuºít_°©e
;

714 *
	gyy_˝
, *
	gyy_bp
;

715 
	gyy_a˘
;

721 i‡–!(
	gyy_öô
) )

723 (
	gyy_öô
) = 1;

725 #ifde‡
YY_USER_INIT


726 
	gYY_USER_INIT
;

729 i‡–! (
	gyy_°¨t
) )

730 (
	gyy_°¨t
) = 1;

732 i‡–! 
	gyyö
 )

733 
	gyyö
 = 
°dö
;

735 i‡–! 
	gyyout
 )

736 
	gyyout
 = 
°dout
;

738 i‡–! 
	gYY_CURRENT_BUFFER
 ) {

739 
yyísuª_buf„r_°ack
 ();

740 
	gYY_CURRENT_BUFFER_LVALUE
 =

741 
yy_¸óã_buf„r
(
yyö
,
YY_BUF_SIZE
 );

744 
yy_lﬂd_buf„r_°©e
( );

749 
	gyy_˝
 = (
yy_c_buf_p
);

752 *
	gyy_˝
 = (
yy_hﬁd_ch¨
);

757 
	gyy_bp
 = 
yy_˝
;

759 
	gyy_cuºít_°©e
 = (
yy_°¨t
);

760 
	gyy_m©ch
:

763 
YY_CHAR
 
yy_c
 = 
yy_ec
[
YY_SC_TO_UI
(*
yy_˝
)];

764 i‡–
	gyy_ac˚±
[
yy_cuºít_°©e
] )

766 (
	gyy_œ°_ac˚±ög_°©e
Ë
yy_cuºít_°©e
;

767 (
	gyy_œ°_ac˚±ög_˝os
Ë
yy_˝
;

769  
	gyy_chk
[
yy_ba£
[
yy_cuºít_°©e
] + 
	gyy_c
] != yy_current_state )

771 
yy_cuºít_°©e
 = (Ë
yy_def
[yy_current_state];

772 i‡–
	gyy_cuºít_°©e
 >= 49 )

773 
yy_c
 = 
yy_mëa
[() yy_c];

775 
	gyy_cuºít_°©e
 = 
yy_nxt
[
yy_ba£
[
yy_cuºít_°©e
] + (Ë
yy_c
];

776 ++
	gyy_˝
;

778  
	gyy_ba£
[
yy_cuºít_°©e
] != 61 );

780 
	gyy_föd_a˘i⁄
:

781 
yy_a˘
 = 
yy_ac˚±
[
yy_cuºít_°©e
];

782 i‡–
	gyy_a˘
 == 0 )

784 
yy_˝
 = (
yy_œ°_ac˚±ög_˝os
);

785 
	gyy_cuºít_°©e
 = (
yy_œ°_ac˚±ög_°©e
);

786 
	gyy_a˘
 = 
yy_ac˚±
[
yy_cuºít_°©e
];

789 
	gYY_DO_BEFORE_ACTION
;

791 
	gdo_a˘i⁄
:

793  
yy_a˘
 )

797 *
yy_˝
 = (
yy_hﬁd_ch¨
);

798 
	gyy_˝
 = (
yy_œ°_ac˚±ög_˝os
);

799 
	gyy_cuºít_°©e
 = (
yy_œ°_ac˚±ög_°©e
);

800 
	gyy_föd_a˘i⁄
;

804 
YY_RULE_SETUP


807 
YY_BREAK


809 
YY_RULE_SETUP


812 
yylvÆ
.
l_vÆue
 = 
°πﬂrôh_t
(
yyãxt
, 
NULL
, 16);

813  
	gARITH_NUM
;

815 
YY_BREAK


817 
YY_RULE_SETUP


820 
yylvÆ
.
l_vÆue
 = 
°πﬂrôh_t
(
yyãxt
, 
NULL
, 8);

821  
	gARITH_NUM
;

823 
YY_BREAK


825 
YY_RULE_SETUP


828 
yylvÆ
.
l_vÆue
 = 
°πﬂrôh_t
(
yyãxt
, 
NULL
, 10);

829  
	gARITH_NUM
;

831 
YY_BREAK


833 
YY_RULE_SETUP


840 *
ãmp
;

841 i‡(
lookupv¨
(
yyãxt
Ë=
NULL
)

842 
£tv¨ß„
(
yyãxt
, "0", 0);

843 
	gãmp
 = (*)
ckmÆloc
(
°æí
(
yyãxt
) + 1);

844 
	gyylvÆ
.
	gs_vÆue
 = 
°r˝y
(
ãmp
, 
yyãxt
);

846  
	gARITH_VAR
;

848 
YY_BREAK


850 
YY_RULE_SETUP


852 {  
ARITH_LPAREN
; }

853 
YY_BREAK


855 
YY_RULE_SETUP


857 {  
ARITH_RPAREN
; }

858 
YY_BREAK


860 
YY_RULE_SETUP


862 {  
ARITH_OR
; }

863 
YY_BREAK


865 
YY_RULE_SETUP


867 {  
ARITH_AND
; }

868 
YY_BREAK


870 
YY_RULE_SETUP


872 {  
ARITH_BOR
; }

873 
YY_BREAK


875 
YY_RULE_SETUP


877 {  
ARITH_BXOR
; }

878 
YY_BREAK


880 
YY_RULE_SETUP


882 {  
ARITH_BAND
; }

883 
YY_BREAK


885 
YY_RULE_SETUP


887 {  
ARITH_EQ
; }

888 
YY_BREAK


890 
YY_RULE_SETUP


892 {  
ARITH_NE
; }

893 
YY_BREAK


895 
YY_RULE_SETUP


897 {  
ARITH_GT
; }

898 
YY_BREAK


900 
YY_RULE_SETUP


902 {  
ARITH_GE
; }

903 
YY_BREAK


905 
YY_RULE_SETUP


907 {  
ARITH_LT
; }

908 
YY_BREAK


910 
YY_RULE_SETUP


912 {  
ARITH_LE
; }

913 
YY_BREAK


915 
YY_RULE_SETUP


917 {  
ARITH_LSHIFT
; }

918 
YY_BREAK


920 
YY_RULE_SETUP


922 {  
ARITH_RSHIFT
; }

923 
YY_BREAK


925 
YY_RULE_SETUP


927 {  
ARITH_MUL
; }

928 
YY_BREAK


930 
YY_RULE_SETUP


932 {  
ARITH_DIV
; }

933 
YY_BREAK


935 
YY_RULE_SETUP


937 {  
ARITH_REM
; }

938 
YY_BREAK


940 
YY_RULE_SETUP


942 {  
ARITH_ADD
; }

943 
YY_BREAK


945 
YY_RULE_SETUP


947 {  
ARITH_SUB
; }

948 
YY_BREAK


950 
YY_RULE_SETUP


952 {  
ARITH_BNOT
; }

953 
YY_BREAK


955 
YY_RULE_SETUP


957 {  
ARITH_NOT
; }

958 
YY_BREAK


960 
YY_RULE_SETUP


962 {  
ARITH_ASSIGN
; }

963 
YY_BREAK


965 
YY_RULE_SETUP


967 {  
ARITH_ADDASSIGN
; }

968 
YY_BREAK


970 
YY_RULE_SETUP


972 {  
ARITH_SUBASSIGN
; }

973 
YY_BREAK


975 
YY_RULE_SETUP


977 {  
ARITH_MULASSIGN
; }

978 
YY_BREAK


980 
YY_RULE_SETUP


982 {  
ARITH_DIVASSIGN
; }

983 
YY_BREAK


985 
YY_RULE_SETUP


987 {  
ARITH_REMASSIGN
; }

988 
YY_BREAK


990 
YY_RULE_SETUP


992 {  
ARITH_RSHASSIGN
; }

993 
YY_BREAK


995 
YY_RULE_SETUP


997 {  
ARITH_LSHASSIGN
; }

998 
YY_BREAK


1000 
YY_RULE_SETUP


1002 {  
ARITH_BANDASSIGN
; }

1003 
YY_BREAK


1005 
YY_RULE_SETUP


1007 {  
ARITH_BXORASSIGN
; }

1008 
YY_BREAK


1010 
YY_RULE_SETUP


1012 {  
ARITH_BORASSIGN
; }

1013 
YY_BREAK


1015 
YY_RULE_SETUP


1018 
îr‹
("¨ôh: sy¡axÉº‹: \"%s\"\n", 
¨ôh_°¨tbuf
);

1020 
YY_BREAK


1022 
YY_RULE_SETUP


1024 
ECHO
;

1025 
	gYY_BREAK


1027 
YY_STATE_EOF
(
INITIAL
):

1028 
yyãrmö©e
();

1030 
	gYY_END_OF_BUFFER
:

1033 
yy_amou¡_of_m©ched_ãxt
 = (Ë(
yy_˝
 - (
yyãxt_±r
)) - 1;

1036 *
	gyy_˝
 = (
yy_hﬁd_ch¨
);

1037 
YY_RESTORE_YY_MORE_OFFSET


1039 i‡–
	gYY_CURRENT_BUFFER_LVALUE
->
	gyy_buf„r_°©us
 =
YY_BUFFER_NEW
 )

1050 (
yy_n_ch¨s
Ë
YY_CURRENT_BUFFER_LVALUE
->yy_n_chars;

1051 
	gYY_CURRENT_BUFFER_LVALUE
->
	gyy_öput_fûe
 = 
yyö
;

1052 
	gYY_CURRENT_BUFFER_LVALUE
->
	gyy_buf„r_°©us
 = 
YY_BUFFER_NORMAL
;

1062 i‡–(
	gyy_c_buf_p
Ë<&
YY_CURRENT_BUFFER_LVALUE
->
yy_ch_buf
[(
yy_n_ch¨s
)] )

1064 
yy_°©e_ty≥
 
yy_√xt_°©e
;

1066 (
	gyy_c_buf_p
Ë(
yyãxt_±r
Ë+ 
yy_amou¡_of_m©ched_ãxt
;

1068 
	gyy_cuºít_°©e
 = 
yy_gë_¥evious_°©e
( );

1079 
	gyy_√xt_°©e
 = 
yy_åy_NUL_å™s
–
yy_cuºít_°©e
 );

1081 
	gyy_bp
 = (
yyãxt_±r
Ë+ 
YY_MORE_ADJ
;

1083 i‡–
	gyy_√xt_°©e
 )

1086 
	gyy_˝
 = ++(
yy_c_buf_p
);

1087 
	gyy_cuºít_°©e
 = 
yy_√xt_°©e
;

1088 
	gyy_m©ch
;

1093 
	gyy_˝
 = (
yy_c_buf_p
);

1094 
	gyy_föd_a˘i⁄
;

1098  
yy_gë_√xt_buf„r
( ) )

1100 
	gEOB_ACT_END_OF_FILE
:

1102 (
yy_did_buf„r_swôch_⁄_eof
) = 0;

1104 i‡–
yywøp
( ) )

1115 (
	gyy_c_buf_p
Ë(
yyãxt_±r
Ë+ 
YY_MORE_ADJ
;

1117 
	gyy_a˘
 = 
YY_STATE_EOF
(
YY_START
);

1118 
	gdo_a˘i⁄
;

1123 i‡–! (
	gyy_did_buf„r_swôch_⁄_eof
) )

1124 
	gYY_NEW_FILE
;

1129 
	gEOB_ACT_CONTINUE_SCAN
:

1130 (
yy_c_buf_p
) =

1131 (
yyãxt_±r
Ë+ 
yy_amou¡_of_m©ched_ãxt
;

1133 
	gyy_cuºít_°©e
 = 
yy_gë_¥evious_°©e
( );

1135 
	gyy_˝
 = (
yy_c_buf_p
);

1136 
	gyy_bp
 = (
yyãxt_±r
Ë+ 
YY_MORE_ADJ
;

1137 
	gyy_m©ch
;

1139 
	gEOB_ACT_LAST_MATCH
:

1140 (
yy_c_buf_p
) =

1141 &
YY_CURRENT_BUFFER_LVALUE
->
yy_ch_buf
[(
yy_n_ch¨s
)];

1143 
	gyy_cuºít_°©e
 = 
yy_gë_¥evious_°©e
( );

1145 
	gyy_˝
 = (
yy_c_buf_p
);

1146 
	gyy_bp
 = (
yyãxt_±r
Ë+ 
YY_MORE_ADJ
;

1147 
	gyy_föd_a˘i⁄
;

1153 
YY_FATAL_ERROR
(

1166 
	$yy_gë_√xt_buf„r
 ()

1168 *
de°
 = 
YY_CURRENT_BUFFER_LVALUE
->
yy_ch_buf
;

1169 *
sour˚
 = (
yyãxt_±r
);

1170 
numbî_to_move
, 
i
;

1171 
ªt_vÆ
;

1173 i‡–(
yy_c_buf_p
Ë> &
YY_CURRENT_BUFFER_LVALUE
->
yy_ch_buf
[(
yy_n_ch¨s
) + 1] )

1174 
	`YY_FATAL_ERROR
(

1177 i‡–
YY_CURRENT_BUFFER_LVALUE
->
yy_fûl_buf„r
 == 0 )

1179 i‡–(
yy_c_buf_p
Ë- (
yyãxt_±r
Ë- 
YY_MORE_ADJ
 == 1 )

1184  
EOB_ACT_END_OF_FILE
;

1192  
EOB_ACT_LAST_MATCH
;

1199 
numbî_to_move
 = (Ë((
yy_c_buf_p
Ë- (
yyãxt_±r
)) - 1;

1201  
i
 = 0; i < 
numbî_to_move
; ++i )

1202 *(
de°
++Ë*(
sour˚
++);

1204 i‡–
YY_CURRENT_BUFFER_LVALUE
->
yy_buf„r_°©us
 =
YY_BUFFER_EOF_PENDING
 )

1208 
YY_CURRENT_BUFFER_LVALUE
->
yy_n_ch¨s
 = (yy_n_chars) = 0;

1212 
num_to_ªad
 =

1213 
YY_CURRENT_BUFFER_LVALUE
->
yy_buf_size
 - 
numbî_to_move
 - 1;

1215  
num_to_ªad
 <= 0 )

1219 
YY_BUFFER_STATE
 
b
 = 
YY_CURRENT_BUFFER
;

1221 
yy_c_buf_p_off£t
 =

1222 (Ë((
yy_c_buf_p
Ë- 
b
->
yy_ch_buf
);

1224 i‡–
b
->
yy_is_our_buf„r
 )

1226 
√w_size
 = 
b
->
yy_buf_size
 * 2;

1228 i‡–
√w_size
 <= 0 )

1229 
b
->
yy_buf_size
 += b->yy_buf_size / 8;

1231 
b
->
yy_buf_size
 *= 2;

1233 
b
->
yy_ch_buf
 = (*)

1235 
	`yyªÆloc
((*Ë
b
->
yy_ch_buf
,b->
yy_buf_size
 + 2 );

1239 
b
->
yy_ch_buf
 = 0;

1241 i‡–! 
b
->
yy_ch_buf
 )

1242 
	`YY_FATAL_ERROR
(

1245 (
yy_c_buf_p
Ë&
b
->
yy_ch_buf
[
yy_c_buf_p_off£t
];

1247 
num_to_ªad
 = 
YY_CURRENT_BUFFER_LVALUE
->
yy_buf_size
 -

1248 
numbî_to_move
 - 1;

1252 i‡–
num_to_ªad
 > 
YY_READ_BUF_SIZE
 )

1253 
num_to_ªad
 = 
YY_READ_BUF_SIZE
;

1256 
	`YY_INPUT
–(&
YY_CURRENT_BUFFER_LVALUE
->
yy_ch_buf
[
numbî_to_move
]),

1257 (
yy_n_ch¨s
), (
size_t
Ë
num_to_ªad
 );

1259 
YY_CURRENT_BUFFER_LVALUE
->
yy_n_ch¨s
 = (yy_n_chars);

1262 i‡–(
yy_n_ch¨s
) == 0 )

1264 i‡–
numbî_to_move
 =
YY_MORE_ADJ
 )

1266 
ªt_vÆ
 = 
EOB_ACT_END_OF_FILE
;

1267 
	`yyª°¨t
(
yyö
 );

1272 
ªt_vÆ
 = 
EOB_ACT_LAST_MATCH
;

1273 
YY_CURRENT_BUFFER_LVALUE
->
yy_buf„r_°©us
 =

1274 
YY_BUFFER_EOF_PENDING
;

1279 
ªt_vÆ
 = 
EOB_ACT_CONTINUE_SCAN
;

1281 i‡((
yy_size_t
Ë((
yy_n_ch¨s
Ë+ 
numbî_to_move
Ë> 
YY_CURRENT_BUFFER_LVALUE
->
yy_buf_size
) {

1283 
yy_size_t
 
√w_size
 = (
yy_n_ch¨s
Ë+ 
numbî_to_move
 + ((yy_n_chars) >> 1);

1284 
YY_CURRENT_BUFFER_LVALUE
->
yy_ch_buf
 = (*Ë
	`yyªÆloc
((*ËYY_CURRENT_BUFFER_LVALUE->yy_ch_buf,
√w_size
 );

1285 i‡–! 
YY_CURRENT_BUFFER_LVALUE
->
yy_ch_buf
 )

1286 
	`YY_FATAL_ERROR
( "out of dynamic memory in yy_get_next_buffer()" );

1289 (
yy_n_ch¨s
Ë+
numbî_to_move
;

1290 
YY_CURRENT_BUFFER_LVALUE
->
yy_ch_buf
[(
yy_n_ch¨s
)] = 
YY_END_OF_BUFFER_CHAR
;

1291 
YY_CURRENT_BUFFER_LVALUE
->
yy_ch_buf
[(
yy_n_ch¨s
Ë+ 1] = 
YY_END_OF_BUFFER_CHAR
;

1293 (
yyãxt_±r
Ë&
YY_CURRENT_BUFFER_LVALUE
->
yy_ch_buf
[0];

1295  
ªt_vÆ
;

1296 
	}
}

1300 
yy_°©e_ty≥
 
	$yy_gë_¥evious_°©e
 ()

1302 
yy_°©e_ty≥
 
yy_cuºít_°©e
;

1303 *
yy_˝
;

1305 
yy_cuºít_°©e
 = (
yy_°¨t
);

1307  
yy_˝
 = (
yyãxt_±r
Ë+ 
YY_MORE_ADJ
; yy_˝ < (
yy_c_buf_p
); ++yy_cp )

1309 
YY_CHAR
 
yy_c
 = (*
yy_˝
 ? 
yy_ec
[
	`YY_SC_TO_UI
(*yy_cp)] : 1);

1310 i‡–
yy_ac˚±
[
yy_cuºít_°©e
] )

1312 (
yy_œ°_ac˚±ög_°©e
Ë
yy_cuºít_°©e
;

1313 (
yy_œ°_ac˚±ög_˝os
Ë
yy_˝
;

1315  
yy_chk
[
yy_ba£
[
yy_cuºít_°©e
] + 
yy_c
] != yy_current_state )

1317 
yy_cuºít_°©e
 = (Ë
yy_def
[yy_current_state];

1318 i‡–
yy_cuºít_°©e
 >= 49 )

1319 
yy_c
 = 
yy_mëa
[() yy_c];

1321 
yy_cuºít_°©e
 = 
yy_nxt
[
yy_ba£
[yy_cuºít_°©e] + (Ë
yy_c
];

1324  
yy_cuºít_°©e
;

1325 
	}
}

1332 
yy_°©e_ty≥
 
	$yy_åy_NUL_å™s
 (
yy_°©e_ty≥
 
yy_cuºít_°©e
 )

1334 
yy_is_jam
;

1335 *
yy_˝
 = (
yy_c_buf_p
);

1337 
YY_CHAR
 
yy_c
 = 1;

1338 i‡–
yy_ac˚±
[
yy_cuºít_°©e
] )

1340 (
yy_œ°_ac˚±ög_°©e
Ë
yy_cuºít_°©e
;

1341 (
yy_œ°_ac˚±ög_˝os
Ë
yy_˝
;

1343  
yy_chk
[
yy_ba£
[
yy_cuºít_°©e
] + 
yy_c
] != yy_current_state )

1345 
yy_cuºít_°©e
 = (Ë
yy_def
[yy_current_state];

1346 i‡–
yy_cuºít_°©e
 >= 49 )

1347 
yy_c
 = 
yy_mëa
[() yy_c];

1349 
yy_cuºít_°©e
 = 
yy_nxt
[
yy_ba£
[yy_cuºít_°©e] + (Ë
yy_c
];

1350 
yy_is_jam
 = (
yy_cuºít_°©e
 == 48);

1352  
yy_is_jam
 ? 0 : 
yy_cuºít_°©e
;

1353 
	}
}

1355 
	$yyu≈ut
 (
c
, * 
yy_bp
 )

1357 *
yy_˝
;

1359 
yy_˝
 = (
yy_c_buf_p
);

1362 *
yy_˝
 = (
yy_hﬁd_ch¨
);

1364 i‡–
yy_˝
 < 
YY_CURRENT_BUFFER_LVALUE
->
yy_ch_buf
 + 2 )

1367 
numbî_to_move
 = (
yy_n_ch¨s
) + 2;

1368 *
de°
 = &
YY_CURRENT_BUFFER_LVALUE
->
yy_ch_buf
[

1369 
YY_CURRENT_BUFFER_LVALUE
->
yy_buf_size
 + 2];

1370 *
sour˚
 =

1371 &
YY_CURRENT_BUFFER_LVALUE
->
yy_ch_buf
[
numbî_to_move
];

1373  
sour˚
 > 
YY_CURRENT_BUFFER_LVALUE
->
yy_ch_buf
 )

1374 *--
de°
 = *--
sour˚
;

1376 
yy_˝
 +(Ë(
de°
 - 
sour˚
);

1377 
yy_bp
 +(Ë(
de°
 - 
sour˚
);

1378 
YY_CURRENT_BUFFER_LVALUE
->
yy_n_ch¨s
 =

1379 (
yy_n_ch¨s
Ë
YY_CURRENT_BUFFER_LVALUE
->
yy_buf_size
;

1381 i‡–
yy_˝
 < 
YY_CURRENT_BUFFER_LVALUE
->
yy_ch_buf
 + 2 )

1382 
	`YY_FATAL_ERROR
( "flex scannerÖush-back overflow" );

1385 *--
yy_˝
 = (Ë
c
;

1387 (
yyãxt_±r
Ë
yy_bp
;

1388 (
yy_hﬁd_ch¨
Ë*
yy_˝
;

1389 (
yy_c_buf_p
Ë
yy_˝
;

1390 
	}
}

1392 #i‚de‡
YY_NO_INPUT


1393 #ifde‡
__˝lu•lus


1394 
	$yyöput
 ()

1396 
	$öput
 ()

1400 
c
;

1402 *(
yy_c_buf_p
Ë(
yy_hﬁd_ch¨
);

1404 i‡–*(
yy_c_buf_p
Ë=
YY_END_OF_BUFFER_CHAR
 )

1410 i‡–(
yy_c_buf_p
Ë< &
YY_CURRENT_BUFFER_LVALUE
->
yy_ch_buf
[(
yy_n_ch¨s
)] )

1412 *(
yy_c_buf_p
) = '\0';

1416 
off£t
 = (
yy_c_buf_p
Ë- (
yyãxt_±r
);

1417 ++(
yy_c_buf_p
);

1419  
	`yy_gë_√xt_buf„r
( ) )

1421 
EOB_ACT_LAST_MATCH
:

1433 
	`yyª°¨t
(
yyö
 );

1437 
EOB_ACT_END_OF_FILE
:

1439 i‡–
	`yywøp
( ) )

1440  
EOF
;

1442 i‡–! (
yy_did_buf„r_swôch_⁄_eof
) )

1443 
YY_NEW_FILE
;

1444 #ifde‡
__˝lu•lus


1445  
	`yyöput
();

1447  
	`öput
();

1451 
EOB_ACT_CONTINUE_SCAN
:

1452 (
yy_c_buf_p
Ë(
yyãxt_±r
Ë+ 
off£t
;

1458 
c
 = *(*Ë(
yy_c_buf_p
);

1459 *(
yy_c_buf_p
) = '\0';

1460 (
yy_hﬁd_ch¨
Ë*++(
yy_c_buf_p
);

1462  
c
;

1463 
	}
}

1471 
	$yyª°¨t
 (
FILE
 * 
öput_fûe
 )

1474 i‡–! 
YY_CURRENT_BUFFER
 ){

1475 
	`yyísuª_buf„r_°ack
 ();

1476 
YY_CURRENT_BUFFER_LVALUE
 =

1477 
	`yy_¸óã_buf„r
(
yyö
,
YY_BUF_SIZE
 );

1480 
	`yy_öô_buf„r
(
YY_CURRENT_BUFFER
,
öput_fûe
 );

1481 
	`yy_lﬂd_buf„r_°©e
( );

1482 
	}
}

1488 
	$yy_swôch_to_buf„r
 (
YY_BUFFER_STATE
 
√w_buf„r
 )

1496 
	`yyísuª_buf„r_°ack
 ();

1497 i‡–
YY_CURRENT_BUFFER
 =
√w_buf„r
 )

1500 i‡–
YY_CURRENT_BUFFER
 )

1503 *(
yy_c_buf_p
Ë(
yy_hﬁd_ch¨
);

1504 
YY_CURRENT_BUFFER_LVALUE
->
yy_buf_pos
 = (
yy_c_buf_p
);

1505 
YY_CURRENT_BUFFER_LVALUE
->
yy_n_ch¨s
 = (yy_n_chars);

1508 
YY_CURRENT_BUFFER_LVALUE
 = 
√w_buf„r
;

1509 
	`yy_lﬂd_buf„r_°©e
( );

1516 (
yy_did_buf„r_swôch_⁄_eof
) = 1;

1517 
	}
}

1519 
	$yy_lﬂd_buf„r_°©e
 ()

1521 (
yy_n_ch¨s
Ë
YY_CURRENT_BUFFER_LVALUE
->yy_n_chars;

1522 (
yyãxt_±r
Ë(
yy_c_buf_p
Ë
YY_CURRENT_BUFFER_LVALUE
->
yy_buf_pos
;

1523 
yyö
 = 
YY_CURRENT_BUFFER_LVALUE
->
yy_öput_fûe
;

1524 (
yy_hﬁd_ch¨
Ë*(
yy_c_buf_p
);

1525 
	}
}

1533 
YY_BUFFER_STATE
 
	$yy_¸óã_buf„r
 (
FILE
 * 
fûe
, 
size
 )

1535 
YY_BUFFER_STATE
 
b
;

1537 
b
 = (
YY_BUFFER_STATE
Ë
	`yyÆloc
(–
yy_buf„r_°©e
 ) );

1538 i‡–! 
b
 )

1539 
	`YY_FATAL_ERROR
( "out of dynamic memory in yy_create_buffer()" );

1541 
b
->
yy_buf_size
 = 
size
;

1546 
b
->
yy_ch_buf
 = (*Ë
	`yyÆloc
(b->
yy_buf_size
 + 2 );

1547 i‡–! 
b
->
yy_ch_buf
 )

1548 
	`YY_FATAL_ERROR
( "out of dynamic memory in yy_create_buffer()" );

1550 
b
->
yy_is_our_buf„r
 = 1;

1552 
	`yy_öô_buf„r
(
b
,
fûe
 );

1554  
b
;

1555 
	}
}

1561 
	$yy_dñëe_buf„r
 (
YY_BUFFER_STATE
 
b
 )

1564 i‡–! 
b
 )

1567 i‡–
b
 =
YY_CURRENT_BUFFER
 )

1568 
YY_CURRENT_BUFFER_LVALUE
 = (
YY_BUFFER_STATE
) 0;

1570 i‡–
b
->
yy_is_our_buf„r
 )

1571 
	`yy‰ì
((*Ë
b
->
yy_ch_buf
 );

1573 
	`yy‰ì
((*Ë
b
 );

1574 
	}
}

1576 #i‚de‡
_UNISTD_H


1577 #ifde‡
__˝lu•lus


1580 #ifde‡
__THROW


1581 
	$ißây
 (Ë
__THROW
;

1583 
	`ißây
 ();

1585 #ifde‡
__˝lu•lus


1586 
	}
}

1594 
	$yy_öô_buf„r
 (
YY_BUFFER_STATE
 
b
, 
FILE
 * 
fûe
 )

1597 
€ºno
 = 
î∫o
;

1599 
	`yy_Êush_buf„r
(
b
 );

1601 
b
->
yy_öput_fûe
 = 
fûe
;

1602 
b
->
yy_fûl_buf„r
 = 1;

1608 i‡(
b
 !
YY_CURRENT_BUFFER
){

1609 
b
->
yy_bs_löío
 = 1;

1610 
b
->
yy_bs_cﬁumn
 = 0;

1613 
b
->
yy_is_öãø˘ive
 = 
fûe
 ? (
	`ißây
–
	`fûío
(file) ) > 0) : 0;

1615 
î∫o
 = 
€ºno
;

1616 
	}
}

1622 
	$yy_Êush_buf„r
 (
YY_BUFFER_STATE
 
b
 )

1624 i‡–! 
b
 )

1627 
b
->
yy_n_ch¨s
 = 0;

1633 
b
->
yy_ch_buf
[0] = 
YY_END_OF_BUFFER_CHAR
;

1634 
b
->
yy_ch_buf
[1] = 
YY_END_OF_BUFFER_CHAR
;

1636 
b
->
yy_buf_pos
 = &b->
yy_ch_buf
[0];

1638 
b
->
yy_©_bﬁ
 = 1;

1639 
b
->
yy_buf„r_°©us
 = 
YY_BUFFER_NEW
;

1641 i‡–
b
 =
YY_CURRENT_BUFFER
 )

1642 
	`yy_lﬂd_buf„r_°©e
( );

1643 
	}
}

1651 
	$yypush_buf„r_°©e
 (
YY_BUFFER_STATE
 
√w_buf„r
 )

1653 i‡(
√w_buf„r
 =
NULL
)

1656 
	`yyísuª_buf„r_°ack
();

1659 i‡–
YY_CURRENT_BUFFER
 )

1662 *(
yy_c_buf_p
Ë(
yy_hﬁd_ch¨
);

1663 
YY_CURRENT_BUFFER_LVALUE
->
yy_buf_pos
 = (
yy_c_buf_p
);

1664 
YY_CURRENT_BUFFER_LVALUE
->
yy_n_ch¨s
 = (yy_n_chars);

1668 i‡(
YY_CURRENT_BUFFER
)

1669 (
yy_buf„r_°ack_t›
)++;

1670 
YY_CURRENT_BUFFER_LVALUE
 = 
√w_buf„r
;

1673 
	`yy_lﬂd_buf„r_°©e
( );

1674 (
yy_did_buf„r_swôch_⁄_eof
) = 1;

1675 
	}
}

1681 
	$yyp›_buf„r_°©e
 ()

1683 i‡(!
YY_CURRENT_BUFFER
)

1686 
	`yy_dñëe_buf„r
(
YY_CURRENT_BUFFER
 );

1687 
YY_CURRENT_BUFFER_LVALUE
 = 
NULL
;

1688 i‡((
yy_buf„r_°ack_t›
) > 0)

1689 --(
yy_buf„r_°ack_t›
);

1691 i‡(
YY_CURRENT_BUFFER
) {

1692 
	`yy_lﬂd_buf„r_°©e
( );

1693 (
yy_did_buf„r_swôch_⁄_eof
) = 1;

1695 
	}
}

1700 
	$yyísuª_buf„r_°ack
 ()

1702 
num_to_Æloc
;

1704 i‡(!(
yy_buf„r_°ack
)) {

1710 
num_to_Æloc
 = 1;

1711 (
yy_buf„r_°ack
Ë(
yy_buf„r_°©e
**)
yyÆloc


1712 (
num_to_Æloc
 * (
yy_buf„r_°©e
*)

1714 i‡–! (
yy_buf„r_°ack
) )

1715 
	`YY_FATAL_ERROR
( "out of dynamic memory in yyensure_buffer_stack()" );

1717 
	`mem£t
((
yy_buf„r_°ack
), 0, 
num_to_Æloc
 * (
yy_buf„r_°©e
*));

1719 (
yy_buf„r_°ack_max
Ë
num_to_Æloc
;

1720 (
yy_buf„r_°ack_t›
) = 0;

1724 i‡((
yy_buf„r_°ack_t›
Ë>((
yy_buf„r_°ack_max
)) - 1){

1727 
grow_size
 = 8 ;

1729 
num_to_Æloc
 = (
yy_buf„r_°ack_max
Ë+ 
grow_size
;

1730 (
yy_buf„r_°ack
Ë(
yy_buf„r_°©e
**)
yyªÆloc


1731 ((
yy_buf„r_°ack
),

1732 
num_to_Æloc
 * (
yy_buf„r_°©e
*)

1734 i‡–! (
yy_buf„r_°ack
) )

1735 
	`YY_FATAL_ERROR
( "out of dynamic memory in yyensure_buffer_stack()" );

1738 
	`mem£t
((
yy_buf„r_°ack
Ë+ (
yy_buf„r_°ack_max
), 0, 
grow_size
 * (
yy_buf„r_°©e
*));

1739 (
yy_buf„r_°ack_max
Ë
num_to_Æloc
;

1741 
	}
}

1749 
YY_BUFFER_STATE
 
	$yy_sˇn_buf„r
 (* 
ba£
, 
yy_size_t
 
size
 )

1751 
YY_BUFFER_STATE
 
b
;

1753 i‡–
size
 < 2 ||

1754 
ba£
[
size
-2] !
YY_END_OF_BUFFER_CHAR
 ||

1755 
ba£
[
size
-1] !
YY_END_OF_BUFFER_CHAR
 )

1759 
b
 = (
YY_BUFFER_STATE
Ë
	`yyÆloc
(–
yy_buf„r_°©e
 ) );

1760 i‡–! 
b
 )

1761 
	`YY_FATAL_ERROR
( "out of dynamic memory in yy_scan_buffer()" );

1763 
b
->
yy_buf_size
 = 
size
 - 2;

1764 
b
->
yy_buf_pos
 = b->
yy_ch_buf
 = 
ba£
;

1765 
b
->
yy_is_our_buf„r
 = 0;

1766 
b
->
yy_öput_fûe
 = 0;

1767 
b
->
yy_n_ch¨s
 = b->
yy_buf_size
;

1768 
b
->
yy_is_öãø˘ive
 = 0;

1769 
b
->
yy_©_bﬁ
 = 1;

1770 
b
->
yy_fûl_buf„r
 = 0;

1771 
b
->
yy_buf„r_°©us
 = 
YY_BUFFER_NEW
;

1773 
	`yy_swôch_to_buf„r
(
b
 );

1775  
b
;

1776 
	}
}

1786 
YY_BUFFER_STATE
 
	$yy_sˇn_°rög
 (
yyc⁄°
 * 
yy°r
 )

1789  
	`yy_sˇn_byãs
(
yy°r
,
	`°æí
(yystr) );

1790 
	}
}

1799 
YY_BUFFER_STATE
 
	$yy_sˇn_byãs
 (
yyc⁄°
 * 
yybyãs
, 
_yybyãs_Àn
 )

1801 
YY_BUFFER_STATE
 
b
;

1802 *
buf
;

1803 
yy_size_t
 
n
;

1804 
i
;

1807 
n
 = 
_yybyãs_Àn
 + 2;

1808 
buf
 = (*Ë
	`yyÆloc
(
n
 );

1809 i‡–! 
buf
 )

1810 
	`YY_FATAL_ERROR
( "out of dynamic memory in yy_scan_bytes()" );

1812  
i
 = 0; i < 
_yybyãs_Àn
; ++i )

1813 
buf
[
i
] = 
yybyãs
[i];

1815 
buf
[
_yybyãs_Àn
] = buf[_yybyãs_Àn+1] = 
YY_END_OF_BUFFER_CHAR
;

1817 
b
 = 
	`yy_sˇn_buf„r
(
buf
,
n
 );

1818 i‡–! 
b
 )

1819 
	`YY_FATAL_ERROR
( "bad buffer in yy_scan_bytes()" );

1824 
b
->
yy_is_our_buf„r
 = 1;

1826  
b
;

1827 
	}
}

1829 #i‚de‡
YY_EXIT_FAILURE


1830 
	#YY_EXIT_FAILURE
 2

	)

1833 
	$yy_Áèl_îr‹
 (
yyc⁄°
 * 
msg
 )

1835 (Ë
	`Ârötf
–
°dîr
, "%s\n", 
msg
 );

1836 
	`exô
–
YY_EXIT_FAILURE
 );

1837 
	}
}

1841 #unde‡
yyÀss


1842 
	#yyÀss
(
n
) \

1846 
yyÀss_ma¸o_¨g
 = (
n
); \

1847 
	`YY_LESS_LINENO
(
yyÀss_ma¸o_¨g
);\

1848 
yyãxt
[
yyÀng
] = (
yy_hﬁd_ch¨
); \

1849 (
yy_c_buf_p
Ë
yyãxt
 + 
yyÀss_ma¸o_¨g
; \

1850 (
yy_hﬁd_ch¨
Ë*(
yy_c_buf_p
); \

1851 *(
yy_c_buf_p
) = '\0'; \

1852 
yyÀng
 = 
yyÀss_ma¸o_¨g
; \

1854  0 )

	)

1861 
	$yygë_löío
 ()

1864  
yylöío
;

1865 
	}
}

1870 
FILE
 *
	$yygë_ö
 ()

1872  
yyö
;

1873 
	}
}

1878 
FILE
 *
	$yygë_out
 ()

1880  
yyout
;

1881 
	}
}

1886 
	$yygë_Àng
 ()

1888  
yyÀng
;

1889 
	}
}

1895 *
	$yygë_ãxt
 ()

1897  
yyãxt
;

1898 
	}
}

1904 
	$yy£t_löío
 (
löe_numbî
 )

1907 
yylöío
 = 
löe_numbî
;

1908 
	}
}

1916 
	$yy£t_ö
 (
FILE
 * 
ö_°r
 )

1918 
yyö
 = 
ö_°r
 ;

1919 
	}
}

1921 
	$yy£t_out
 (
FILE
 * 
out_°r
 )

1923 
yyout
 = 
out_°r
 ;

1924 
	}
}

1926 
	$yygë_debug
 ()

1928  
yy_Êex_debug
;

1929 
	}
}

1931 
	$yy£t_debug
 (
bdebug
 )

1933 
yy_Êex_debug
 = 
bdebug
 ;

1934 
	}
}

1936 
	$yy_öô_globÆs
 ()

1942 (
yy_buf„r_°ack
) = 0;

1943 (
yy_buf„r_°ack_t›
) = 0;

1944 (
yy_buf„r_°ack_max
) = 0;

1945 (
yy_c_buf_p
) = (*) 0;

1946 (
yy_öô
) = 0;

1947 (
yy_°¨t
) = 0;

1950 #ifde‡
YY_STDINIT


1951 
yyö
 = 
°dö
;

1952 
yyout
 = 
°dout
;

1954 
yyö
 = (
FILE
 *) 0;

1955 
yyout
 = (
FILE
 *) 0;

1962 
	}
}

1965 
	$yyÀx_de°roy
 ()

1969 
YY_CURRENT_BUFFER
){

1970 
	`yy_dñëe_buf„r
(
YY_CURRENT_BUFFER
 );

1971 
YY_CURRENT_BUFFER_LVALUE
 = 
NULL
;

1972 
	`yyp›_buf„r_°©e
();

1976 
	`yy‰ì
((
yy_buf„r_°ack
) );

1977 (
yy_buf„r_°ack
Ë
NULL
;

1981 
	`yy_öô_globÆs
( );

1984 
	}
}

1990 #i‚de‡
yyãxt_±r


1991 
	$yy_Êex_°∫˝y
 (* 
s1
, 
yyc⁄°
 * 
s2
, 
n
 )

1993 
i
;

1994  
i
 = 0; i < 
n
; ++i )

1995 
s1
[
i
] = 
s2
[i];

1996 
	}
}

1999 #ifde‡
YY_NEED_STRLEN


2000 
	$yy_Êex_°æí
 (
yyc⁄°
 * 
s
 )

2002 
n
;

2003  
n
 = 0; 
s
[n]; ++n )

2006  
n
;

2007 
	}
}

2010 *
	$yyÆloc
 (
yy_size_t
 
size
 )

2012  (*Ë
	`mÆloc
–
size
 );

2013 
	}
}

2015 *
	$yyªÆloc
 (* 
±r
, 
yy_size_t
 
size
 )

2024  (*Ë
	`ªÆloc
–(*Ë
±r
, 
size
 );

2025 
	}
}

2027 
	$yy‰ì
 (* 
±r
 )

2029 
	`‰ì
–(*Ë
±r
 );

2030 
	}
}

2032 
	#YYTABLES_NAME
 "yyèbÀs"

	)

2039 
	$¨ôh_Àx_ª£t
()

2041 
YY_NEW_FILE
;

2042 
	}
}

	@mail.c

33 #i‚de‡
löt


35 
	gsccsid
[] = "@(#)mail.c 8.2 (Berkeley) 5/4/95";

38 
	~<sys/cdefs.h
>

39 
__FBSDID
("$FreeBSD: src/bin/sh/mail.c,v 1.14.6.1 2008/11/25 02:59:29 kensmith Exp $");

45 
	~"shñl.h
"

46 
	~"exec.h
"

47 
	~"maû.h
"

48 
	~"v¨.h
"

49 
	~"ouçut.h
"

50 
	~"memÆloc.h
"

51 
	~"îr‹.h
"

52 
	~<sys/ty≥s.h
>

53 
	~<sys/°©.h
>

54 
	~<°dlib.h
>

57 
	#MAXMBOXES
 10

	)

60 
STATIC
 
	gnmboxes
;

61 
STATIC
 
time_t
 
	gmaûtime
[
MAXMBOXES
];

72 
	$chkmaû
(
sûít
)

74 
i
;

75 *
m∑th
;

76 *
p
;

77 *
q
;

78 
°ackm¨k
 
sm¨k
;

79 
°©
 
°©b
;

81 i‡(
sûít
)

82 
nmboxes
 = 10;

83 i‡(
nmboxes
 == 0)

85 
	`£t°ackm¨k
(&
sm¨k
);

86 
m∑th
 = 
	`m∑th£t
()? 
	`m∑thvÆ
(Ë: 
	`maûvÆ
();

87 
i
 = 0 ; i < 
nmboxes
 ; i++) {

88 
p
 = 
	`∑dv™˚
(&
m∑th
, 
nuŒ°r
);

89 i‡(
p
 =
NULL
)

91 i‡(*
p
 == '\0')

93 
q
 = 
p
 ; *q ; q++);

94 i‡(
q
[-1] != '/')

95 
	`ab‹t
();

96 
q
[-1] = '\0';

97 #ifde‡
nŸdef


98 i‡(
	`°©
(
p
, &
°©b
) < 0)

99 
°©b
.
°_mtime
 = 0;

100 i‡(
°©b
.
°_mtime
 > 
maûtime
[
i
] && ! 
sûít
) {

101 
	`out2°r
(
∑th›t
?Öathopt : "you have mail");

102 
	`out2c
('\n');

104 
maûtime
[
i
] = 
°©b
.
°_mtime
;

106 i‡(
	`°©
(
p
, &
°©b
) < 0)

107 
°©b
.
°_size
 = 0;

108 i‡(
°©b
.
°_size
 > 
maûtime
[
i
] && ! 
sûít
) {

109 
	`out2°r
(
∑th›t
?Öathopt : "you have mail");

110 
	`out2c
('\n');

112 
maûtime
[
i
] = 
°©b
.
°_size
;

115 
nmboxes
 = 
i
;

116 
	`p›°ackm¨k
(&
sm¨k
);

117 
	}
}

	@mail.h

36 
chkmaû
();

	@main.c

33 #i‚de‡
löt


34 c⁄° 
	gc›yright
[] =

39 #i‚de‡
löt


41 
	gsccsid
[] = "@(#)main.c 8.6 (Berkeley) 5/28/95";

44 
	~<sys/cdefs.h
>

45 
__FBSDID
("$FreeBSD: src/bin/sh/main.c,v 1.29.6.1 2008/11/25 02:59:29 kensmith Exp $");

47 
	~<°dio.h
>

48 
	~<sig«l.h
>

49 
	~<sys/°©.h
>

50 
	~<uni°d.h
>

51 
	~<f˙é.h
>

52 
	~<loˇÀ.h
>

53 
	~<î∫o.h
>

55 
	~"shñl.h
"

56 
	~"maö.h
"

57 
	~"maû.h
"

58 
	~"›ti⁄s.h
"

59 
	~"ouçut.h
"

60 
	~"∑r£r.h
"

61 
	~"nodes.h
"

62 
	~"ex∑nd.h
"

63 
	~"evÆ.h
"

64 
	~"jobs.h
"

65 
	~"öput.h
"

66 
	~"å≠.h
"

67 
	~"v¨.h
"

68 
	~"show.h
"

69 
	~"memÆloc.h
"

70 
	~"îr‹.h
"

71 
	~"öô.h
"

72 
	~"my°rög.h
"

73 
	~"exec.h
"

74 
	~"cd.h
"

76 
	groŸpid
;

77 
	groŸshñl
;

79 
STATIC
 
ªad_¥ofûe
(*);

80 
STATIC
 *
föd_dŸ_fûe
(*);

91 
	$maö
(
¨gc
, *
¨gv
[])

93 
jm∂oc
 jmploc;

94 
°ackm¨k
 
sm¨k
;

95 vﬁ©ûê
°©e
;

96 *
shöô
;

98 (Ë
	`£éoˇÀ
(
LC_ALL
, "");

99 
°©e
 = 0;

100 i‡(
	`£tjmp
(
jm∂oc
.
loc
)) {

106 
ex˚±i⁄
) {

107 
EXSHELLPROC
:

108 
roŸpid
 = 
	`gëpid
();

109 
roŸshñl
 = 1;

110 
möusc
 = 
NULL
;

111 
°©e
 = 3;

114 
EXEXEC
:

115 
exô°©us
 = 
exî∫o
;

118 
EXERROR
:

119 
exô°©us
 = 2;

126 i‡(
ex˚±i⁄
 !
EXSHELLPROC
) {

127 i‡(
°©e
 =0 || 
iÊag
 =0 || ! 
roŸshñl
)

128 
	`exôshñl
(
exô°©us
);

130 
	`ª£t
();

131 i‡(
ex˚±i⁄
 =
EXINT
) {

132 
	`out2c
('\n');

133 
	`Êushout
(&
îrout
);

135 
	`p›°ackm¨k
(&
sm¨k
);

136 
FORCEINTON
;

137 i‡(
°©e
 == 1)

138 
°©e1
;

139 i‡(
°©e
 == 2)

140 
°©e2
;

141 i‡(
°©e
 == 3)

142 
°©e3
;

144 
°©e4
;

146 
h™dÀr
 = &
jm∂oc
;

147 #ifde‡
DEBUG


148 
	`›íåa˚
();

149 
	`åputs
("Shñ»¨gs: "); 
	`å¨gs
(
¨gv
);

151 
roŸpid
 = 
	`gëpid
();

152 
roŸshñl
 = 1;

153 
	`öô
();

154 
	`£t°ackm¨k
(&
sm¨k
);

155 
	`¥oˇrgs
(
¨gc
, 
¨gv
);

156 i‡(
	`gëpwd
(Ë=
NULL
 && 
iÊag
)

157 
	`out2°r
("sh: cannot determine working directory\n");

158 i‡(
	`gëpwd
(Ë!
NULL
)

159 
	`£tv¨
 ("PWD", 
	`gëpwd
(), 
VEXPORT
);

160 i‡(
¨gv
[0] &&árgv[0][0] == '-') {

161 
°©e
 = 1;

162 
	`ªad_¥ofûe
("/etc/profile");

163 
°©e1
:

164 
°©e
 = 2;

165 i‡(
¥ivûeged
 == 0)

166 
	`ªad_¥ofûe
(".profile");

168 
	`ªad_¥ofûe
("/etc/suid_profile");

170 
°©e2
:

171 
°©e
 = 3;

172 i‡(!
¥ivûeged
 && 
iÊag
) {

173 i‡((
shöô
 = 
	`lookupv¨
("ENV")Ë!
NULL
 && *shinit != '\0') {

174 
°©e
 = 3;

175 
	`ªad_¥ofûe
(
shöô
);

178 
°©e3
:

179 
°©e
 = 4;

180 i‡(
möusc
) {

181 
	`evÆ°rög
(
möusc
);

183 i‡(
sÊag
 || 
möusc
 =
NULL
) {

184 
°©e4
:

185 
	`cmdlo›
(1);

187 
	`exôshñl
(
exô°©us
);

190 
	}
}

199 
	$cmdlo›
(
t›
)

201 
node
 *
n
;

202 
°ackm¨k
 
sm¨k
;

203 
öãr
;

204 
numeof
 = 0;

206 
	`TRACE
(("cmdlo›(%dËˇŒed\n", 
t›
));

207 
	`£t°ackm¨k
(&
sm¨k
);

209 i‡(
≥ndögsigs
)

210 
	`dŸøp
();

211 
öãr
 = 0;

212 i‡(
iÊag
 && 
t›
) {

213 
öãr
++;

214 
	`showjobs
(1, 
SHOWJOBS_DEFAULT
);

215 
	`chkmaû
(0);

216 
	`Êushout
(&
ouçut
);

218 
n
 = 
	`∑r£cmd
(
öãr
);

220 i‡(
n
 =
NEOF
) {

221 i‡(!
t›
 || 
numeof
 >= 50)

223 i‡(!
	`°›≥djobs
()) {

224 i‡(!
IÊag
)

226 
	`out2°r
("\nUse \"exit\"ÅoÜeave shell.\n");

228 
numeof
++;

229 } i‡(
n
 !
NULL
 && 
nÊag
 == 0) {

230 
job_w¨nög
 = (job_warning == 2) ? 1 : 0;

231 
numeof
 = 0;

232 
	`evÆåì
(
n
, 0);

234 
	`p›°ackm¨k
(&
sm¨k
);

235 
	`£t°ackm¨k
(&
sm¨k
);

236 i‡(
evÆskù
 =
SKIPFILE
) {

237 
evÆskù
 = 0;

241 
	`p›°ackm¨k
(&
sm¨k
);

242 
	}
}

250 
STATIC
 

251 
	$ªad_¥ofûe
(*
«me
)

253 
fd
;

255 
INTOFF
;

256 i‡((
fd
 = 
	`›í
(
«me
, 
O_RDONLY
)) >= 0)

257 
	`£töputfd
(
fd
, 1);

258 
INTON
;

259 i‡(
fd
 < 0)

261 
	`cmdlo›
(0);

262 
	`p›fûe
();

263 
	}
}

272 
	$ªadcmdfûe
(*
«me
)

274 
fd
;

276 
INTOFF
;

277 i‡((
fd
 = 
	`›í
(
«me
, 
O_RDONLY
)) >= 0)

278 
	`£töputfd
(
fd
, 1);

280 
	`îr‹
("C™'à›í %s: %s", 
«me
, 
	`°ªº‹
(
î∫o
));

281 
INTON
;

282 
	`cmdlo›
(0);

283 
	`p›fûe
();

284 
	}
}

294 
STATIC
 *

295 
	$föd_dŸ_fûe
(*
ba£«me
)

297 
loˇ ame
[
FILENAME_MAX
+1];

298 *
fuŒ«me
;

299 *
∑th
 = 
	`∑thvÆ
();

300 
°©
 
°©b
;

303 if–
	`°rchr
(
ba£«me
, '/'))

304  
ba£«me
;

306 (
fuŒ«me
 = 
	`∑dv™˚
(&
∑th
, 
ba£«me
)Ë!
NULL
) {

307 
	`°r˝y
(
loˇ ame
, 
fuŒ«me
);

308 
	`°u«Œoc
(
fuŒ«me
);

309 i‡((
	`°©
(
fuŒ«me
, &
°©b
Ë=0Ë&& 
	`S_ISREG
(°©b.
°_mode
))

310  
loˇ ame
;

312  
ba£«me
;

313 
	}
}

316 
	$dŸcmd
(
¨gc
, **
¨gv
)

318 
°æi°
 *
•
;

319 *
fuŒ«me
;

321 i‡(
¨gc
 < 2)

322 
	`îr‹
("missing filename");

324 
exô°©us
 = 0;

326 
•
 = 
cmdívú⁄
; s∞; s∞•->
√xt
)

327 
	`£tv¨eq
(
	`ßve°r
(
•
->
ãxt
), 
VSTRFIXED
|
VTEXTFIXED
);

329 
fuŒ«me
 = 
	`föd_dŸ_fûe
(
¨gv
[1]);

330 
	`£töputfûe
(
fuŒ«me
, 1);

331 
comm™d«me
 = 
fuŒ«me
;

332 
	`cmdlo›
(0);

333 
	`p›fûe
();

334  
exô°©us
;

335 
	}
}

339 
	$exôcmd
(
¨gc
, **
¨gv
)

341 
€xô°©us
;

343 i‡(
	`°›≥djobs
())

345 i‡(
¨gc
 > 1)

346 
exô°©us
 = 
	`numbî
(
¨gv
[1]);

348 
exô°©us
 = 
€xô°©us
;

349 
	`exôshñl
(
exô°©us
);

352 
	}
}

	@main.h

36 
roŸpid
;

37 
roŸshñl
;

39 
ªadcmdfûe
(*);

40 
cmdlo›
();

41 
dŸcmd
(, **);

42 
exôcmd
(, **);

	@memalloc.c

33 #i‚de‡
löt


35 
	gsccsid
[] = "@(#)memalloc.c 8.3 (Berkeley) 5/4/95";

38 
	~<sys/cdefs.h
>

39 
__FBSDID
("$FreeBSD: src/bin/sh/memalloc.c,v 1.27.6.1 2008/11/25 02:59:29 kensmith Exp $");

41 
	~<sys/∑øm.h
>

42 
	~"shñl.h
"

43 
	~"ouçut.h
"

44 
	~"memÆloc.h
"

45 
	~"îr‹.h
"

46 
	~"my°rög.h
"

47 
	~"ex∑nd.h
"

48 
	~<°dlib.h
>

49 
	~<uni°d.h
>

55 
poöãr


56 
	$ckmÆloc
(
nbyãs
)

58 
poöãr
 
p
;

60 
INTOFF
;

61 
p
 = 
	`mÆloc
(
nbyãs
);

62 
INTON
;

63 i‡(
p
 =
NULL
)

64 
	`îr‹
("Out of space");

65  
p
;

66 
	}
}

73 
poöãr


74 
	$ckªÆloc
(
poöãr
 
p
, 
nbyãs
)

76 
INTOFF
;

77 
p
 = 
	`ªÆloc
’, 
nbyãs
);

78 
INTON
;

79 i‡(
p
 =
NULL
)

80 
	`îr‹
("Out of space");

81  
p
;

82 
	}
}

85 
	$ck‰ì
(
poöãr
 
p
)

87 
INTOFF
;

88 
	`‰ì
(
p
);

89 
INTON
;

90 
	}
}

98 
	$ßve°r
(*
s
)

100 *
p
;

102 
p
 = 
	`ckmÆloc
(
	`°æí
(
s
) + 1);

103 
	`sc›y
(
s
, 
p
);

104  
p
;

105 
	}
}

117 
	#MINSIZE
 496

	)

120 
	s°ack_block
 {

121 
°ack_block
 *
	m¥ev
;

124 
	#SPACE
(
•
Ë((*)(•Ë+ 
	`ALIGN
((
°ack_block
)))

	)

126 
STATIC
 
°ack_block
 *
	g°ackp
;

127 
STATIC
 
°ackm¨k
 *
	gm¨kp
;

128 *
	g°acknxt
;

129 
	g°ack∆e·
;

130 
	gs°∫À·
;

131 
	ghîefd
 = -1;

135 
	$°√wblock
(
nbyãs
)

137 
°ack_block
 *
•
;

138 
Ælocsize
;

140 i‡(
nbyãs
 < 
MINSIZE
)

141 
nbyãs
 = 
MINSIZE
;

143 
Ælocsize
 = 
	`ALIGN
((
°ack_block
)Ë+ ALIGN(
nbyãs
);

145 
INTOFF
;

146 
•
 = 
	`ckmÆloc
(
Ælocsize
);

147 
•
->
¥ev
 = 
°ackp
;

148 
°acknxt
 = 
	`SPACE
(
•
);

149 
°ack∆e·
 = 
Ælocsize
 - (
°acknxt
 - (*)
•
);

150 
°ackp
 = 
•
;

151 
INTON
;

152 
	}
}

155 
poöãr


156 
	$°Æloc
(
nbyãs
)

158 *
p
;

160 
nbyãs
 = 
	`ALIGN
(nbytes);

161 i‡(
nbyãs
 > 
°ack∆e·
)

162 
	`°√wblock
(
nbyãs
);

163 
p
 = 
°acknxt
;

164 
°acknxt
 +
nbyãs
;

165 
°ack∆e·
 -
nbyãs
;

166  
p
;

167 
	}
}

171 
	$°u«Œoc
(
poöãr
 
p
)

173 i‡(
p
 =
NULL
) {

174 
	`wrôe
(
STDERR_FILENO
, "stunalloc\n", 10);

175 
	`ab‹t
();

177 
°ack∆e·
 +
°acknxt
 - (*)
p
;

178 
°acknxt
 = 
p
;

179 
	}
}

184 
	$£t°ackm¨k
(
°ackm¨k
 *
m¨k
)

186 
m¨k
->
°ackp
 = stackp;

187 
m¨k
->
°acknxt
 = stacknxt;

188 
m¨k
->
°ack∆e·
 = stacknleft;

189 
m¨k
->
m¨k√xt
 = 
m¨kp
;

190 
m¨kp
 = 
m¨k
;

191 
	}
}

195 
	$p›°ackm¨k
(
°ackm¨k
 *
m¨k
)

197 
°ack_block
 *
•
;

199 
INTOFF
;

200 
m¨kp
 = 
m¨k
->
m¨k√xt
;

201 
°ackp
 !
m¨k
->stackp) {

202 
•
 = 
°ackp
;

203 
°ackp
 = 
•
->
¥ev
;

204 
	`ck‰ì
(
•
);

206 
°acknxt
 = 
m¨k
->stacknxt;

207 
°ack∆e·
 = 
m¨k
->stacknleft;

208 
INTON
;

209 
	}
}

223 
	$grow°ackblock
()

225 *
p
;

226 
√wÀn
;

227 *
ﬁd•a˚
;

228 
ﬁdÀn
;

229 
°ack_block
 *
•
;

230 
°ack_block
 *
ﬁd°ackp
;

231 
°ackm¨k
 *
xm¨k
;

233 
√wÀn
 = (
°ack∆e·
 =0Ë? 
MINSIZE
 : stacknleft * 2 + 100;

234 
√wÀn
 = 
	`ALIGN
(newlen);

235 
ﬁd•a˚
 = 
°acknxt
;

236 
ﬁdÀn
 = 
°ack∆e·
;

238 i‡(
°ackp
 !
NULL
 && 
°acknxt
 =
	`SPACE
(stackp)) {

239 
INTOFF
;

240 
ﬁd°ackp
 = 
°ackp
;

241 
°ackp
 = 
ﬁd°ackp
->
¥ev
;

242 
•
 = 
	`ckªÆloc
((
poöãr
)
ﬁd°ackp
, 
√wÀn
);

243 
•
->
¥ev
 = 
°ackp
;

244 
°ackp
 = 
•
;

245 
°acknxt
 = 
	`SPACE
(
•
);

246 
°ack∆e·
 = 
√wÀn
 - (
°acknxt
 - (*)
•
);

252 
xm¨k
 = 
m¨kp
;

253 
xm¨k
 !
NULL
 && xm¨k->
°ackp
 =
ﬁd°ackp
) {

254 
xm¨k
->
°ackp
 = stackp;

255 
xm¨k
->
°acknxt
 = stacknxt;

256 
xm¨k
->
°ack∆e·
 = stacknleft;

257 
xm¨k
 = xm¨k->
m¨k√xt
;

259 
INTON
;

261 
p
 = 
	`°Æloc
(
√wÀn
);

262 i‡(
ﬁdÀn
 != 0)

263 
	`mem˝y
(
p
, 
ﬁd•a˚
, 
ﬁdÀn
);

264 
	`°u«Œoc
(
p
);

266 
	}
}

271 
	$gøb°ackblock
(
Àn
)

273 
Àn
 = 
	`ALIGN
(len);

274 
°acknxt
 +
Àn
;

275 
°ack∆e·
 -
Àn
;

276 
	}
}

300 
	$grow°ack°r
()

302 
Àn
;

304 
Àn
 = 
	`°ackblocksize
();

305 i‡(
hîefd
 >0 && 
Àn
 >= 1024) {

306 
	`xwrôe
(
hîefd
, 
	`°ackblock
(), 
Àn
);

307 
s°∫À·
 = 
Àn
 - 1;

308  
	`°ackblock
();

310 
	`grow°ackblock
();

311 
s°∫À·
 = 
	`°ackblocksize
(Ë- 
Àn
 - 1;

312  
	`°ackblock
(Ë+ 
Àn
;

313 
	}
}

321 
	$make°r•a˚
()

323 
Àn
;

325 
Àn
 = 
	`°ackblocksize
(Ë- 
s°∫À·
;

326 
	`grow°ackblock
();

327 
s°∫À·
 = 
	`°ackblocksize
(Ë- 
Àn
;

328  
	`°ackblock
(Ë+ 
Àn
;

329 
	}
}

334 
	$ungøb°ack°r
(*
s
, *
p
)

336 
°ack∆e·
 +
°acknxt
 - 
s
;

337 
°acknxt
 = 
s
;

338 
s°∫À·
 = 
°ack∆e·
 - (
p
 - 
s
);

339 
	}
}

	@memalloc.h

36 
	s°ackm¨k
 {

37 
°ack_block
 *
	m°ackp
;

38 *
	m°acknxt
;

39 
	m°ack∆e·
;

40 
°ackm¨k
 *
	mm¨k√xt
;

44 *
°acknxt
;

45 
°ack∆e·
;

46 
s°∫À·
;

47 
hîefd
;

49 
poöãr
 
ckmÆloc
();

50 
poöãr
 
ckªÆloc
(pointer, );

51 
ck‰ì
(
poöãr
);

52 *
ßve°r
(*);

53 
poöãr
 
°Æloc
();

54 
°u«Œoc
(
poöãr
);

55 
£t°ackm¨k
(
°ackm¨k
 *);

56 
p›°ackm¨k
(
°ackm¨k
 *);

57 
grow°ackblock
();

58 
gøb°ackblock
();

59 *
grow°ack°r
();

60 *
make°r•a˚
();

61 
ungøb°ack°r
(*, *);

65 
	#°ackblock
(Ë
°acknxt


	)

66 
	#°ackblocksize
(Ë
°ack∆e·


	)

67 
	#STARTSTACKSTR
(
p
Ë∞
	`°ackblock
(), 
s°∫À·
 = 
	`°ackblocksize
()

	)

68 
	#STPUTC
(
c
, 
p
Ë(--
s°∫À·
 >0? (*p++ = (c)Ë: (∞
	`grow°ack°r
(), *p++ = (c)))

	)

69 
	#CHECKSTRSPACE
(
n
, 
p
Ë{ i‡(
s°∫À·
 <ÇË∞
	`make°r•a˚
(); }

	)

70 
	#USTPUTC
(
c
, 
p
Ë(--
s°∫À·
, *p++ = (c))

	)

71 
	#STACKSTRNUL
(
p
Ë(
s°∫À·
 =0? (∞
	`grow°ack°r
(), *∞'\0'Ë: (*∞'\0'))

	)

72 
	#STUNPUTC
(
p
Ë(++
s°∫À·
, --p)

	)

73 
	#STTOPC
(
p
Ëp[-1]

	)

74 
	#STADJUST
(
amou¡
, 
p
Ë’ +◊mou¡), 
s°∫À·
 -◊mou¡))

	)

75 
	#gøb°ack°r
(
p
Ë
	`°Æloc
(
	`°ackblocksize
(Ë- 
s°∫À·
)

	)

	@miscbltin.c

33 #i‚de‡
löt


35 
	gsccsid
[] = "@(#)miscbltin.c 8.4 (Berkeley) 5/4/95";

38 
	~<sys/cdefs.h
>

39 
__FBSDID
("$FreeBSD: src/bin/sh/miscbltin.c,v 1.35.6.1 2008/11/25 02:59:29 kensmith Exp $");

45 
	~<sys/ty≥s.h
>

46 
	~<sys/°©.h
>

47 
	~<sys/time.h
>

48 
	~<sys/ªsour˚.h
>

49 
	~<uni°d.h
>

50 
	~<˘y≥.h
>

51 
	~<î∫o.h
>

52 
	~<°döt.h
>

53 
	~<°dio.h
>

54 
	~<°dlib.h
>

55 
	~<ãrmios.h
>

57 
	~"shñl.h
"

58 
	~"›ti⁄s.h
"

59 
	~"v¨.h
"

60 
	~"ouçut.h
"

61 
	~"memÆloc.h
"

62 
	~"îr‹.h
"

63 
	~"my°rög.h
"

65 #unde‡
eÊag


67 
ªadcmd
(, **);

68 
umaskcmd
(, **);

69 
ulimôcmd
(, **);

79 
	$ªadcmd
(
¨gc
 
__unu£d
, **
¨gv
 __unused)

81 **
≠
;

82 
back¶ash
;

83 
c
;

84 
rÊag
;

85 *
¥om±
;

86 *
ifs
;

87 *
p
;

88 
°¨tw‹d
;

89 
°©us
;

90 
i
;

91 
timevÆ
 
tv
;

92 *
tv±r
;

93 
fd_£t
 
ifds
;

94 
ãrmios
 
tﬁd
, 
äew
;

95 
tßved
;

97 
rÊag
 = 0;

98 
¥om±
 = 
NULL
;

99 
tv
.
tv_£c
 = -1;

100 
tv
.
tv_u£c
 = 0;

101 (
i
 = 
	`√xt›t
("erp:t:")) != '\0') {

102 
i
) {

104 
¥om±
 = 
sh›èrg
;

109 
rÊag
 = 1;

112 
tv
.
tv_£c
 = 
	`°πﬁ
(
sh›èrg
, &
tv±r
, 0);

113 i‡(
tv±r
 =
sh›èrg
)

114 
	`îr‹
("timeout value");

115 *
tv±r
) {

120 
tv
.
tv_£c
 *= 60;

123 
tv
.
tv_£c
 *= 60;

126 
	`îr‹
("timeout unit");

131 i‡(
¥om±
 && 
	`ißây
(0)) {

132 
	`out2°r
(
¥om±
);

133 
	`ÊushÆl
();

135 i‡(*(
≠
 = 
¨g±r
Ë=
NULL
)

136 
	`îr‹
("arg count");

137 i‡((
ifs
 = 
	`b…ölookup
("IFS", 1)Ë=
NULL
)

138 
ifs
 = 
nuŒ°r
;

140 i‡(
tv
.
tv_£c
 >= 0) {

146 
tßved
 = 0;

147 i‡(
	`tcgë©å
(0, &
tﬁd
) == 0) {

148 
	`mem˝y
(&
äew
, &
tﬁd
, (told));

149 
	`cfmakîaw
(&
äew
);

150 
	`tc£èâr
(0, 
TCSANOW
, &
äew
);

151 
tßved
 = 1;

156 
	`FD_ZERO
(&
ifds
);

157 
	`FD_SET
(0, &
ifds
);

158 
°©us
 = 
	`£À˘
(1, &
ifds
, 
NULL
, NULL, &
tv
);

159 i‡(
tßved
)

160 
	`tc£èâr
(0, 
TCSANOW
, &
tﬁd
);

164 i‡(
°©us
 <= 0)

168 
°©us
 = 0;

169 
°¨tw‹d
 = 1;

170 
back¶ash
 = 0;

171 
	`STARTSTACKSTR
(
p
);

173 i‡(
	`ªad
(
STDIN_FILENO
, &
c
, 1) != 1) {

174 
°©us
 = 1;

177 i‡(
c
 == '\0')

179 i‡(
back¶ash
) {

180 
back¶ash
 = 0;

181 i‡(
c
 != '\n')

182 
	`STPUTC
(
c
, 
p
);

185 i‡(!
rÊag
 && 
c
 == '\\') {

186 
back¶ash
++;

189 i‡(
c
 == '\n')

191 i‡(
°¨tw‹d
 && *
ifs
 =' ' && 
	`°rchr
(ifs, 
c
)) {

194 
°¨tw‹d
 = 0;

195 i‡(
≠
[1] !
NULL
 && 
	`°rchr
(
ifs
, 
c
) != NULL) {

196 
	`STACKSTRNUL
(
p
);

197 
	`£tv¨
(*
≠
, 
	`°ackblock
(), 0);

198 
≠
++;

199 
°¨tw‹d
 = 1;

200 
	`STARTSTACKSTR
(
p
);

202 
	`STPUTC
(
c
, 
p
);

205 
	`STACKSTRNUL
(
p
);

206 
	`£tv¨
(*
≠
, 
	`°ackblock
(), 0);

207 *++
≠
 !
NULL
)

208 
	`£tv¨
(*
≠
, 
nuŒ°r
, 0);

209  
°©us
;

210 
	}
}

215 
	$umaskcmd
(
¨gc
 
__unu£d
, **
¨gv
)

217 *
≠
;

218 
mask
;

219 
i
;

220 
symbﬁic_mode
 = 0;

222 (
i
 = 
	`√xt›t
("S")) != '\0') {

223 
symbﬁic_mode
 = 1;

226 
INTOFF
;

227 
mask
 = 
	`umask
(0);

228 
	`umask
(
mask
);

229 
INTON
;

231 i‡((
≠
 = *
¨g±r
Ë=
NULL
) {

232 i‡(
symbﬁic_mode
) {

233 
u
[4], 
g
[4], 
o
[4];

235 
i
 = 0;

236 i‡((
mask
 & 
S_IRUSR
) == 0)

237 
u
[
i
++] = 'r';

238 i‡((
mask
 & 
S_IWUSR
) == 0)

239 
u
[
i
++] = 'w';

240 i‡((
mask
 & 
S_IXUSR
) == 0)

241 
u
[
i
++] = 'x';

242 
u
[
i
] = '\0';

244 
i
 = 0;

245 i‡((
mask
 & 
S_IRGRP
) == 0)

246 
g
[
i
++] = 'r';

247 i‡((
mask
 & 
S_IWGRP
) == 0)

248 
g
[
i
++] = 'w';

249 i‡((
mask
 & 
S_IXGRP
) == 0)

250 
g
[
i
++] = 'x';

251 
g
[
i
] = '\0';

253 
i
 = 0;

254 i‡((
mask
 & 
S_IROTH
) == 0)

255 
o
[
i
++] = 'r';

256 i‡((
mask
 & 
S_IWOTH
) == 0)

257 
o
[
i
++] = 'w';

258 i‡((
mask
 & 
S_IXOTH
) == 0)

259 
o
[
i
++] = 'x';

260 
o
[
i
] = '\0';

262 
	`out1fmt
("u=%s,g=%s,o=%s\n", 
u
, 
g
, 
o
);

264 
	`out1fmt
("%.4o\n", 
mask
);

267 i‡(
	`isdigô
(*
≠
)) {

268 
mask
 = 0;

270 i‡(*
≠
 >= '8' || *ap < '0')

271 
	`îr‹
("IŒegÆÇumbî: %s", *
¨g±r
);

272 
mask
 = (mask << 3Ë+ (*
≠
 - '0');

273 } *++
≠
 != '\0');

274 
	`umask
(
mask
);

276 *
£t
;

277 
INTOFF
;

278 i‡((
£t
 = 
	`£tmode
 (
≠
)) == 0)

279 
	`îr‹
("IŒegÆÇumbî: %s", 
≠
);

281 
mask
 = 
	`gëmode
 (
£t
, ~mask & 0777);

282 
	`umask
(~
mask
 & 0777);

283 
	`‰ì
(
£t
);

284 
INTON
;

288 
	}
}

300 
	slimôs
 {

301 c⁄° *
	m«me
;

302 c⁄° *
	munôs
;

303 
	mcmd
;

304 
	mÁ˘‹
;

305 
	m›ti⁄
;

308 c⁄° 
limôs
 
	glimôs
[] = {

309 #ifde‡
RLIMIT_CPU


310 { "˝uÅime", "£c⁄ds", 
RLIMIT_CPU
, 1, 't' },

312 #ifde‡
RLIMIT_FSIZE


313 { "fûêsize", "512-blocks", 
RLIMIT_FSIZE
, 512, 'f' },

315 #ifde‡
RLIMIT_DATA


316 { "d©®£g size", "kbyãs", 
RLIMIT_DATA
, 1024, 'd' },

318 #ifde‡
RLIMIT_STACK


319 { "°ack size", "kbyãs", 
RLIMIT_STACK
, 1024, 's' },

321 #ifde‡ 
RLIMIT_CORE


322 { "c‹êfûêsize", "512-blocks", 
RLIMIT_CORE
, 512, 'c' },

324 #ifde‡
RLIMIT_RSS


325 { "max mem‹y size", "kbyãs", 
RLIMIT_RSS
, 1024, 'm' },

327 #ifde‡
RLIMIT_MEMLOCK


328 { "locked mem‹y", "kbyãs", 
RLIMIT_MEMLOCK
, 1024, 'l' },

330 #ifde‡
RLIMIT_NPROC


331 { "max u£∏¥o˚s£s", (*)0, 
RLIMIT_NPROC
, 1, 'u' },

333 #ifde‡
RLIMIT_NOFILE


334 { "›í fûes", (*)0, 
RLIMIT_NOFILE
, 1, 'n' },

336 #ifde‡
RLIMIT_VMEM


337 { "vútuÆ mem size", "kbyãs", 
RLIMIT_VMEM
, 1024, 'v' },

339 #ifde‡
RLIMIT_SWAP


340 { "sw≠Üimô", "kbyãs", 
RLIMIT_SWAP
, 1024, 'w' },

342 #ifde‡
RLIMIT_SBSIZE


343 { "sbsize", "byãs", 
RLIMIT_SBSIZE
, 1, 'b' },

349 
	$ulimôcmd
(
¨gc
 
__unu£d
, **
¨gv
 __unused)

351 
c
;

352 
æim_t
 
vÆ
 = 0;

353 íum { 
SOFT
 = 0x1, 
HARD
 = 0x2 }

354 
how
 = 
SOFT
 | 
HARD
;

355 c⁄° 
limôs
 *
l
;

356 
£t
, 
Æl
 = 0;

357 
›tc
, 
wh©
;

358 
æimô
 
limô
;

360 
wh©
 = 'f';

361 (
›tc
 = 
	`√xt›t
("HSatfdsmcnuvlb")) != '\0')

362 
›tc
) {

364 
how
 = 
HARD
;

367 
how
 = 
SOFT
;

370 
Æl
 = 1;

373 
wh©
 = 
›tc
;

376 
l
 = 
limôs
;Ü->
«me
 &&Ü->
›ti⁄
 !
wh©
;Ü++)

378 i‡(!
l
->
«me
)

379 
	`îr‹
("öã∫ÆÉº‹ (%c)", 
wh©
);

381 
£t
 = *
¨g±r
 ? 1 : 0;

382 i‡(
£t
) {

383 *
p
 = *
¨g±r
;

385 i‡(
Æl
 || 
¨g±r
[1])

386 
	`îr‹
("too manyárguments");

387 i‡(
	`°rcmp
(
p
, "unlimited") == 0)

388 
vÆ
 = 
RLIM_INFINITY
;

390 
vÆ
 = 0;

392 (
c
 = *
p
++) >= '0' && c <= '9')

394 
vÆ
 = (vÆ * 10Ë+ ()(
c
 - '0');

395 i‡(
vÆ
 < 0)

398 i‡(
c
)

399 
	`îr‹
("badÇumber");

400 
vÆ
 *
l
->
Á˘‹
;

403 i‡(
Æl
) {

404 
l
 = 
limôs
;Ü->
«me
;Ü++) {

405 
›tbuf
[40];

406 i‡(
	`gëæimô
(
l
->
cmd
, &
limô
) < 0)

407 
	`îr‹
("ˇn'àgëÜimô: %s", 
	`°ªº‹
(
î∫o
));

408 i‡(
how
 & 
SOFT
)

409 
vÆ
 = 
limô
.
æim_cur
;

410 i‡(
how
 & 
HARD
)

411 
vÆ
 = 
limô
.
æim_max
;

413 i‡(
l
->
unôs
)

414 
	`¢¥ötf
(
›tbuf
, (optbuf),

415 "(%s, -%cË", 
l
->
unôs
,Ü->
›ti⁄
);

417 
	`¢¥ötf
(
›tbuf
, (optbuf),

418 "(-%cË", 
l
->
›ti⁄
);

419 
	`out1fmt
("%-18†%18†", 
l
->
«me
, 
›tbuf
);

420 i‡(
vÆ
 =
RLIM_INFINITY
)

421 
	`out1fmt
("unlimited\n");

424 
vÆ
 /
l
->
Á˘‹
;

425 
	`out1fmt
("%jd\n", (
ötmax_t
)
vÆ
);

431 i‡(
	`gëæimô
(
l
->
cmd
, &
limô
) < 0)

432 
	`îr‹
("ˇn'àgëÜimô: %s", 
	`°ªº‹
(
î∫o
));

433 i‡(
£t
) {

434 i‡(
how
 & 
SOFT
)

435 
limô
.
æim_cur
 = 
vÆ
;

436 i‡(
how
 & 
HARD
)

437 
limô
.
æim_max
 = 
vÆ
;

438 i‡(
	`£ålimô
(
l
->
cmd
, &
limô
) < 0)

439 
	`îr‹
("badÜimô: %s", 
	`°ªº‹
(
î∫o
));

441 i‡(
how
 & 
SOFT
)

442 
vÆ
 = 
limô
.
æim_cur
;

443 i‡(
how
 & 
HARD
)

444 
vÆ
 = 
limô
.
æim_max
;

446 i‡(
vÆ
 =
RLIM_INFINITY
)

447 
	`out1fmt
("unlimited\n");

450 
vÆ
 /
l
->
Á˘‹
;

451 
	`out1fmt
("%jd\n", (
ötmax_t
)
vÆ
);

455 
	}
}

	@mkinit.c

32 
	#__unu£d


	)

33 #i‚de‡
löt


34 c⁄° 
	gc›yright
[] =

39 #i‚de‡
löt


41 
	gsccsid
[] = "@(#)mkinit.c 8.2 (Berkeley) 5/4/95";

44 
	~<sys/cdefs.h
>

58 
	~<sys/cdefs.h
>

59 
	~<sys/ty≥s.h
>

60 
	~<°dio.h
>

61 
	~<°dlib.h
>

62 
	~<°rög.h
>

63 
	~<f˙é.h
>

64 
	~<uni°d.h
>

65 
	~<î∫o.h
>

73 
	#OUTFILE
 "öô.c"

	)

74 
	#OUTTEMP
 "öô.c.√w"

	)

85 
	#BLOCKSIZE
 512

	)

87 
	sãxt
 {

88 *
	m√xtc
;

89 
	m∆e·
;

90 
block
 *
	m°¨t
;

91 
block
 *
	mœ°
;

94 
	sblock
 {

95 
block
 *
	m√xt
;

96 
	mãxt
[
BLOCKSIZE
];

104 
	sevít
 {

105 *
	m«me
;

106 *
	mroutöe
;

107 *
	mcommít
;

108 
ãxt
 
	mcode
;

112 
	gwrôî
[] = "\
/*\n\
* This file was generated byÅhe mkinitÖrogram.\n\
*/\n\
\n";

118 
	göô
[] = "\
/*\n\
* Initialization code.\n\
*/\n";

123 
	gª£t
[] = "\
/*\n\
* ThisÑoutine is called whenánÉrror orán interrupt occurs inán\n\
* interactive shellánd control isÑeturnedÅoÅhe main commandÜoop.\n\
*/\n";

129 
	gshñÕroc
[] = "\
/*\n\
* ThisÑoutine is calledÅo initializeÅhe shellÅoÑuná shellÖrocedure.\n\
*/\n";

135 
evít
 
	gevít
[] = {

136 { "INIT", "öô", 
öô
, { 
NULL
, 0, NULL, NULL } },

137 { "RESET", "ª£t", 
ª£t
, { 
NULL
, 0, NULL, NULL } },

138 { "SHELLPROC", "öôshñÕroc", 
shñÕroc
, { 
NULL
, 0, NULL, NULL } },

139 { 
NULL
, NULL, NULL, { NULL, 0, NULL, NULL } }

143 *
	gcurfûe
;

144 
	glöno
;

145 *
	ghódî_fûes
[200];

146 
ãxt
 
	gdeföes
;

147 
ãxt
 
	gde˛s
;

148 
	gamidde˛s
;

151 
ªadfûe
(*);

152 
m©ch
(*, *);

153 
gooddeföe
(*);

154 
d€vít
(
evít
 *, 
FILE
 *, *);

155 
doö˛ude
(*);

156 
dode˛
(*, 
FILE
 *);

157 
ouçut
();

158 
add°r
(*, 
ãxt
 *);

159 
addch¨
(, 
ãxt
 *);

160 
wrôëext
(
ãxt
 *, 
FILE
 *);

161 
FILE
 *
ckf›í
(*, *);

162 *
ckmÆloc
();

163 *
ßve°r
(*);

164 
îr‹
(*);

166 
	#equÆ
(
s1
, 
s2
Ë(
	`°rcmp
(s1, s2Ë=0)

	)

169 
	$maö
(
¨gc
 
__unu£d
, *
¨gv
[])

171 **
≠
;

173 
hódî_fûes
[0] = "\"shell.h\"";

174 
hódî_fûes
[1] = "\"mystring.h\"";

175 
hódî_fûes
[2] = "\"init.h\"";

176 
≠
 = 
¨gv
 + 1 ; *ap ;áp++)

177 
	`ªadfûe
(*
≠
);

178 
	`ouçut
();

179 
	`ª«me
(
OUTTEMP
, 
OUTFILE
);

180 
	`exô
(0);

181 
	}
}

189 
	$ªadfûe
(*
‚ame
)

191 
FILE
 *
Â
;

192 
löe
[1024];

193 
evít
 *
ï
;

195 
Â
 = 
	`ckf›í
(
‚ame
, "r");

196 
curfûe
 = 
‚ame
;

197 
löno
 = 0;

198 
amidde˛s
 = 0;

199 
	`fgës
(
löe
, Üöe, 
Â
Ë!
NULL
) {

200 
löno
++;

201 
ï
 = 
evít
 ;Ép->
«me
 ;Ép++) {

202 i‡(
löe
[0] =
ï
->
«me
[0] && 
	`m©ch
(ep->name,Üine)) {

203 
	`d€vít
(
ï
, 
Â
, 
‚ame
);

207 i‡(
löe
[0] ='I' && 
	`m©ch
("INCLUDE",Üine))

208 
	`doö˛ude
(
löe
);

209 i‡(
löe
[0] ='M' && 
	`m©ch
("MKINIT",Üine))

210 
	`dode˛
(
löe
, 
Â
);

211 i‡(
löe
[0] ='#' && 
	`gooddeföe
(line)) {

212 *
˝
;

213 
löe2
[1024];

214 c⁄° 
undef
[] = "#undef ";

216 
	`°r˝y
(
löe2
, 
löe
);

217 
	`mem˝y
(
löe2
, 
undef
, (undef) - 1);

218 
˝
 = 
löe2
 + (
undef
) - 1;

219 *
˝
 && (*cp == ' ' || *cp == '\t'))

220 
˝
++;

221 *
˝
 && *cp != ' ' && *cp != '\t' && *cp != '\n')

222 
˝
++;

223 *
˝
++ = '\n'; *cp = '\0';

224 
	`add°r
(
löe2
, &
deföes
);

225 
	`add°r
(
löe
, &
deföes
);

228 
	`f˛o£
(
Â
);

229 
	}
}

233 
	$m©ch
(*
«me
, *
löe
)

235 *
p
, *
q
;

237 
p
 = 
«me
, 
q
 = 
löe
;

238 *
p
) {

239 i‡(*
p
++ !*
q
++)

242 i‡(*
q
 != '{' && *q != ' ' && *q != '\t' && *q != '\n')

245 
	}
}

249 
	$gooddeföe
(*
löe
)

251 *
p
;

253 i‡(! 
	`m©ch
("#deföe", 
löe
))

255 
p
 = 
löe
 + 7;

256 *
p
 == ' ' || *p == '\t')

257 
p
++;

258 *
p
 != ' ' && *p != '\t') {

259 i‡(*
p
 == '(')

261 
p
++;

263 *
p
 != '\n' && *p != '\0')

264 
p
++;

265 i‡(
p
[-1] == '\\')

268 
	}
}

272 
	$d€vít
(
evít
 *
ï
, 
FILE
 *
Â
, *
‚ame
)

274 
löe
[1024];

275 
ödít
;

276 *
p
;

278 
	`•rötf
(
löe
, "\¿ /* from %s: */\n", 
‚ame
);

279 
	`add°r
(
löe
, &
ï
->
code
);

280 
	`add°r
(" {\n", &
ï
->
code
);

282 
löno
++;

283 i‡(
	`fgës
(
löe
, Üöe, 
Â
Ë=
NULL
)

284 
	`îr‹
("Unexpected EOF");

285 i‡(
	`equÆ
(
löe
, "}\n"))

287 
ödít
 = 6;

288 
p
 = 
löe
 ; *p == '\t' ;Ö++)

289 
ödít
 += 8;

290  ; *
p
 == ' ' ;Ö++)

291 
ödít
++;

292 i‡(*
p
 == '\n' || *p == '#')

293 
ödít
 = 0;

294 
ödít
 >= 8) {

295 
	`addch¨
('\t', &
ï
->
code
);

296 
ödít
 -= 8;

298 
ödít
 > 0) {

299 
	`addch¨
(' ', &
ï
->
code
);

300 
ödít
--;

302 
	`add°r
(
p
, &
ï
->
code
);

304 
	`add°r
(" }\n", &
ï
->
code
);

305 
	}
}

309 
	$doö˛ude
(*
löe
)

311 *
p
;

312 *
«me
;

313 **
µ
;

315 
p
 = 
löe
 ; *p != '"' && *p != '<' && *p != '\0' ;Ö++);

316 i‡(*
p
 == '\0')

317 
	`îr‹
("Expecting '\"' or '<'");

318 
«me
 = 
p
;

319 *
p
 != ' ' && *p != '\t' && *p != '\n')

320 
p
++;

321 i‡(
p
[-1] != '"' &&Ö[-1] != '>')

322 
	`îr‹
("MissingÅerminator");

323 *
p
 = '\0';

326 
µ
 = 
hódî_fûes
 ; *µ && ! 
	`equÆ
(*µ, 
«me
) ;Öp++);

327 i‡(*
µ
 =
NULL
)

328 *
µ
 = 
	`ßve°r
(
«me
);

329 
	}
}

333 
	$dode˛
(*
löe1
, 
FILE
 *
Â
)

335 
löe
[1024];

336 *
p
, *
q
;

338 i‡(
	`°rcmp
(
löe1
, "MKINIT\n") == 0) {

339 
	`addch¨
('\n', &
de˛s
);

341 
löno
++;

342 i‡(
	`fgës
(
löe
, Üöe, 
Â
Ë=
NULL
)

343 
	`îr‹
("Unterminated structure declaration");

344 
	`add°r
(
löe
, &
de˛s
);

345 } 
löe
[0] != '}');

346 
amidde˛s
 = 0;

348 i‡(! 
amidde˛s
)

349 
	`addch¨
('\n', &
de˛s
);

350 
q
 = 
NULL
;

351 
p
 = 
löe1
 + 6 ; *∞&& 
	`°rchr
("=/\n", *pË=
NULL
;Ö++)

353 i‡(*
p
 == '=') {

354 
q
 = 
p
 ; *q && *q != ';' ; q++);

355 i‡(*
q
 == '\0')

356 
q
 = 
NULL
;

358 
p
[-1] == ' ')

359 
p
--;

360 *
p
 = '\0';

363 
	`add°r
("exã∫", &
de˛s
);

364 
	`add°r
(
löe1
 + 6, &
de˛s
);

365 i‡(
q
 !
NULL
)

366 
	`add°r
(
q
, &
de˛s
);

367 
amidde˛s
 = 1;

369 
	}
}

378 
	$ouçut
()

380 
FILE
 *
Â
;

381 **
µ
;

382 
evít
 *
ï
;

384 
Â
 = 
	`ckf›í
(
OUTTEMP
, "w");

385 
	`Âuts
(
wrôî
, 
Â
);

386 
µ
 = 
hódî_fûes
 ; *pp ;Öp++)

387 
	`Ârötf
(
Â
, "#ö˛udê%s\n", *
µ
);

388 
	`Âuts
("\n\n\n", 
Â
);

389 
	`wrôëext
(&
deföes
, 
Â
);

390 
	`Âuts
("\n\n", 
Â
);

391 
	`wrôëext
(&
de˛s
, 
Â
);

392 
ï
 = 
evít
 ;Ép->
«me
 ;Ép++) {

393 
	`Âuts
("\n\n\n", 
Â
);

394 
	`Âuts
(
ï
->
commít
, 
Â
);

395 
	`Ârötf
(
Â
, "\nvoid\n%s(void)\n{\n", 
ï
->
routöe
);

396 
	`wrôëext
(&
ï
->
code
, 
Â
);

397 
	`Ârötf
(
Â
, "}\n");

399 
	`f˛o£
(
Â
);

400 
	}
}

410 
	$add°r
(*
s
, 
ãxt
 *text)

412 *
s
) {

413 i‡(--
ãxt
->
∆e·
 < 0)

414 
	`addch¨
(*
s
++, 
ãxt
);

416 *
ãxt
->
√xtc
++ = *
s
++;

418 
	}
}

422 
	$addch¨
(
c
, 
ãxt
 *text)

424 
block
 *
bp
;

426 i‡(--
ãxt
->
∆e·
 < 0) {

427 
bp
 = 
	`ckmÆloc
( *bp);

428 i‡(
ãxt
->
°¨t
 =
NULL
)

429 
ãxt
->
°¨t
 = 
bp
;

431 
ãxt
->
œ°
->
√xt
 = 
bp
;

432 
ãxt
->
œ°
 = 
bp
;

433 
ãxt
->
√xtc
 = 
bp
->text;

434 
ãxt
->
∆e·
 = 
BLOCKSIZE
 - 1;

436 *
ãxt
->
√xtc
++ = 
c
;

437 
	}
}

443 
	$wrôëext
(
ãxt
 *ãxt, 
FILE
 *
Â
)

445 
block
 *
bp
;

447 i‡(
ãxt
->
°¨t
 !
NULL
) {

448 
bp
 = 
ãxt
->
°¨t
 ; b∞!ãxt->
œ°
 ; b∞bp->
√xt
)

449 
	`fwrôe
(
bp
->
ãxt
,  (), 
BLOCKSIZE
, 
Â
);

450 
	`fwrôe
(
bp
->
ãxt
,  (), 
BLOCKSIZE
 -Åext->
∆e·
, 
Â
);

452 
	}
}

454 
FILE
 *

455 
	$ckf›í
(*
fûe
, *
mode
)

457 
FILE
 *
Â
;

459 i‡((
Â
 = 
	`f›í
(
fûe
, 
mode
)Ë=
NULL
) {

460 
	`Ârötf
(
°dîr
, "C™'à›í %s: %s\n", 
fûe
, 
	`°ªº‹
(
î∫o
));

461 
	`exô
(2);

463  
Â
;

464 
	}
}

467 
	$ckmÆloc
(
nbyãs
)

469 *
p
;

471 i‡((
p
 = 
	`mÆloc
(
nbyãs
)Ë=
NULL
)

472 
	`îr‹
("Out of space");

473  
p
;

474 
	}
}

477 
	$ßve°r
(*
s
)

479 *
p
;

481 
p
 = 
	`ckmÆloc
(
	`°æí
(
s
) + 1);

482 
	`°r˝y
(
p
, 
s
);

483  
p
;

484 
	}
}

487 
	$îr‹
(*
msg
)

489 i‡(
curfûe
 !
NULL
)

490 
	`Ârötf
(
°dîr
, "%s:%d: ", 
curfûe
, 
löno
);

491 
	`Ârötf
(
°dîr
, "%s\n", 
msg
);

492 
	`exô
(2);

493 
	}
}

	@mknodes.c

34 #i‚de‡
löt


35 c⁄° 
	gc›yright
[] =

40 #i‚de‡
löt


41 
	gsccsid
[] = "@(#)mknodes.c 8.2 (Berkeley) 5/4/95";

44 
	~<sys/cdefs.h
>

46 
	#__¥ötÊike
(
a
, 
b
)

	)

47 
	#__¥ötf0like
 
__¥ötÊike


	)

48 
	#__unu£d


	)

55 
	~<°dio.h
>

56 
	~<°dlib.h
>

57 
	~<°rög.h
>

58 
	~<î∫o.h
>

59 
	~<°d¨g.h
>

61 
	#MAXTYPES
 50

	)

62 
	#MAXFIELDS
 20

	)

63 
	#BUFLEN
 100

	)

66 
	#T_NODE
 1

	)

67 
	#T_NODELIST
 2

	)

68 
	#T_STRING
 3

	)

69 
	#T_INT
 4

	)

70 
	#T_OTHER
 5

	)

71 
	#T_TEMP
 6

	)

74 
	sfõld
 {

75 *
	m«me
;

76 
	mty≥
;

77 *
	mde˛
;

81 
	s°r
 {

82 *
	mèg
;

83 
	mnfõlds
;

84 
fõld
 
	mfõld
[
MAXFIELDS
];

85 
	md⁄e
;

89 
	g¡y≥s
;

90 *
	gnodíame
[
MAXTYPES
];

91 
°r
 *
	gnode°r
[
MAXTYPES
];

92 
	gn°r
;

93 
°r
 
	g°r
[
MAXTYPES
];

94 
°r
 *
	gcur°r
;

95 
FILE
 *
	göÂ
;

96 
	glöe
[1024];

97 
	glöno
;

98 *
	glöï
;

100 
∑r£node
();

101 
∑r£fõld
();

102 
ouçut
(*);

103 
outsizes
(
FILE
 *);

104 
outfunc
(
FILE
 *, );

105 
ödít
(, 
FILE
 *);

106 
√xtfõld
(*);

107 
skùbl
();

108 
ªadlöe
();

109 
	$îr‹
(c⁄° *, ...Ë
	`__¥ötf0like
(1, 2);

110 *
	`ßve°r
(const *);

114 
	$maö
(
¨gc
, *
¨gv
[])

116 i‡(
¨gc
 != 3)

117 
	`îr‹
("usage: mknodes file");

118 
öÂ
 = 
°dö
;

119 i‡((
öÂ
 = 
	`f›í
(
¨gv
[1], "r")Ë=
NULL
)

120 
	`îr‹
("C™'à›í %s: %s", 
¨gv
[1], 
	`°ªº‹
(
î∫o
));

121 
	`ªadlöe
()) {

122 i‡(
löe
[0] == ' ' ||Üine[0] == '\t')

123 
	`∑r£fõld
();

124 i‡(
löe
[0] != '\0')

125 
	`∑r£node
();

127 
	`ouçut
(
¨gv
[2]);

128 
	`exô
(0);

129 
	}
}

134 
	$∑r£node
()

136 
«me
[
BUFLEN
];

137 
èg
[
BUFLEN
];

138 
°r
 *
•
;

140 i‡(
cur°r
 && cur°r->
nfõlds
 > 0)

141 
cur°r
->
d⁄e
 = 1;

142 
	`√xtfõld
(
«me
);

143 i‡(! 
	`√xtfõld
(
èg
))

144 
	`îr‹
("TagÉxpected");

145 i‡(*
löï
 != '\0')

146 
	`îr‹
("GarbageátÉnd ofÜine");

147 
nodíame
[
¡y≥s
] = 
	`ßve°r
(
«me
);

148 
•
 = 
°r
 ; s∞< så + 
n°r
 ; sp++) {

149 i‡(
	`°rcmp
(
•
->
èg
,Åag) == 0)

152 i‡(
•
 >
°r
 + 
n°r
) {

153 
•
->
èg
 = 
	`ßve°r
(tag);

154 
•
->
nfõlds
 = 0;

155 
cur°r
 = 
•
;

156 
n°r
++;

158 
node°r
[
¡y≥s
] = 
•
;

159 
¡y≥s
++;

160 
	}
}

164 
	$∑r£fõld
()

166 
«me
[
BUFLEN
];

167 
ty≥
[
BUFLEN
];

168 
de˛
[2 * 
BUFLEN
];

169 
fõld
 *
Â
;

171 i‡(
cur°r
 =
NULL
 || cur°r->
d⁄e
)

172 
	`îr‹
("No current structureÅoádd fieldÅo");

173 i‡(! 
	`√xtfõld
(
«me
))

174 
	`îr‹
("No fieldÇame");

175 i‡(! 
	`√xtfõld
(
ty≥
))

176 
	`îr‹
("No fieldÅype");

177 
Â
 = &
cur°r
->
fõld
[cur°r->
nfõlds
];

178 
Â
->
«me
 = 
	`ßve°r
(name);

179 i‡(
	`°rcmp
(
ty≥
, "nodeptr") == 0) {

180 
Â
->
ty≥
 = 
T_NODE
;

181 
	`•rötf
(
de˛
, "uni⁄Çodê*%s", 
«me
);

182 } i‡(
	`°rcmp
(
ty≥
, "nodelist") == 0) {

183 
Â
->
ty≥
 = 
T_NODELIST
;

184 
	`•rötf
(
de˛
, "°ru˘Çodñi° *%s", 
«me
);

185 } i‡(
	`°rcmp
(
ty≥
, "string") == 0) {

186 
Â
->
ty≥
 = 
T_STRING
;

187 
	`•rötf
(
de˛
, "ch¨ *%s", 
«me
);

188 } i‡(
	`°rcmp
(
ty≥
, "int") == 0) {

189 
Â
->
ty≥
 = 
T_INT
;

190 
	`•rötf
(
de˛
, "öà%s", 
«me
);

191 } i‡(
	`°rcmp
(
ty≥
, "other") == 0) {

192 
Â
->
ty≥
 = 
T_OTHER
;

193 } i‡(
	`°rcmp
(
ty≥
, "temp") == 0) {

194 
Â
->
ty≥
 = 
T_TEMP
;

196 
	`îr‹
("Unknow¿ty≥ %s", 
ty≥
);

198 i‡(
Â
->
ty≥
 =
T_OTHER
 || fp->ty≥ =
T_TEMP
) {

199 
	`skùbl
();

200 
Â
->
de˛
 = 
	`ßve°r
(
löï
);

202 i‡(*
löï
)

203 
	`îr‹
("GarbageátÉnd ofÜine");

204 
Â
->
de˛
 = 
	`ßve°r
(decl);

206 
cur°r
->
nfõlds
++;

207 
	}
}

210 
	gwrôî
[] = "\
/*\n\
* This file was generated byÅhe mknodesÖrogram.\n\
*/\n\
\n";

217 
	$ouçut
(*
fûe
)

219 
FILE
 *
hfûe
;

220 
FILE
 *
cfûe
;

221 
FILE
 *
∑tfûe
;

222 
i
;

223 
°r
 *
•
;

224 
fõld
 *
Â
;

225 *
p
;

227 i‡((
∑tfûe
 = 
	`f›í
(
fûe
, "r")Ë=
NULL
)

228 
	`îr‹
("C™'à›í %s: %s", 
fûe
, 
	`°ªº‹
(
î∫o
));

229 i‡((
hfûe
 = 
	`f›í
("nodes.h", "w")Ë=
NULL
)

230 
	`îr‹
("C™'à¸óãÇodes.h: %s", 
	`°ªº‹
(
î∫o
));

231 i‡((
cfûe
 = 
	`f›í
("nodes.c", "w")Ë=
NULL
)

232 
	`îr‹
("Can't createÇodes.c");

233 
	`Âuts
(
wrôî
, 
hfûe
);

234 
i
 = 0 ; i < 
¡y≥s
 ; i++)

235 
	`Ârötf
(
hfûe
, "#deföê%†%d\n", 
nodíame
[
i
], i);

236 
	`Âuts
("\n\n\n", 
hfûe
);

237 
•
 = 
°r
 ; s∞< &°r[
n°r
] ; sp++) {

238 
	`Ârötf
(
hfûe
, "°ru˘ %†{\n", 
•
->
èg
);

239 
i
 = 
•
->
nfõlds
, 
Â
 = sp->
fõld
 ; --i >= 0 ; fp++) {

240 
	`Ârötf
(
hfûe
, " %s;\n", 
Â
->
de˛
);

242 
	`Âuts
("};\n\n\n", 
hfûe
);

244 
	`Âuts
("uni⁄Çodê{\n", 
hfûe
);

245 
	`Ârötf
(
hfûe
, " intÅype;\n");

246 
•
 = 
°r
 ; s∞< &°r[
n°r
] ; sp++) {

247 
	`Ârötf
(
hfûe
, " såu˘ %†%s;\n", 
•
->
èg
, sp->tag);

249 
	`Âuts
("};\n\n\n", 
hfûe
);

250 
	`Âuts
("°ru˘Çodñi° {\n", 
hfûe
);

251 
	`Âuts
("\t°ru˘Çodñi° *√xt;\n", 
hfûe
);

252 
	`Âuts
("\tuni⁄Çodê*n;\n", 
hfûe
);

253 
	`Âuts
("};\n\n\n", 
hfûe
);

254 
	`Âuts
("uni⁄Çodê*c›yfunc(uni⁄Çodê*);\n", 
hfûe
);

255 
	`Âuts
("void fªefunc(uni⁄Çodê*);\n", 
hfûe
);

257 
	`Âuts
(
wrôî
, 
cfûe
);

258 
	`fgës
(
löe
, Üöe, 
∑tfûe
Ë!
NULL
) {

259 
p
 = 
löe
 ; *p == ' ' || *p == '\t' ;Ö++);

260 i‡(
	`°rcmp
(
p
, "%SIZES\n") == 0)

261 
	`outsizes
(
cfûe
);

262 i‡(
	`°rcmp
(
p
, "%CALCSIZE\n") == 0)

263 
	`outfunc
(
cfûe
, 1);

264 i‡(
	`°rcmp
(
p
, "%COPY\n") == 0)

265 
	`outfunc
(
cfûe
, 0);

267 
	`Âuts
(
löe
, 
cfûe
);

269 
	}
}

274 
	$outsizes
(
FILE
 *
cfûe
)

276 
i
;

278 
	`Ârötf
(
cfûe
, "°©i¯c⁄° sh‹ànodesize[%d] = {\n", 
¡y≥s
);

279 
i
 = 0 ; i < 
¡y≥s
 ; i++) {

280 
	`Ârötf
(
cfûe
, " ALIGN(sizeo‡(°ru˘ %s)),\n", 
node°r
[
i
]->
èg
);

282 
	`Ârötf
(
cfûe
, "};\n");

283 
	}
}

287 
	$outfunc
(
FILE
 *
cfûe
, 
ˇlcsize
)

289 
°r
 *
•
;

290 
fõld
 *
Â
;

291 
i
;

293 
	`Âuts
(" i‡“ =NULL)\n", 
cfûe
);

294 i‡(
ˇlcsize
)

295 
	`Âuts
("Ñëu∫;\n", 
cfûe
);

297 
	`Âuts
("Ñëu∫ NULL;\n", 
cfûe
);

298 i‡(
ˇlcsize
)

299 
	`Âuts
(" funcblocksizê+nodesize[n->ty≥];\n", 
cfûe
);

301 
	`Âuts
("Çew = funcblock;\n", 
cfûe
);

302 
	`Âuts
(" funcblock = (ch¨ *)funcblock +Çodesize[n->ty≥];\n", 
cfûe
);

304 
	`Âuts
(" swôch (n->ty≥Ë{\n", 
cfûe
);

305 
•
 = 
°r
 ; s∞< &°r[
n°r
] ; sp++) {

306 
i
 = 0 ; i < 
¡y≥s
 ; i++) {

307 i‡(
node°r
[
i
] =
•
)

308 
	`Ârötf
(
cfûe
, " ca£ %s:\n", 
nodíame
[
i
]);

310 
i
 = 
•
->
nfõlds
 ; --i >= 1 ; ) {

311 
Â
 = &
•
->
fõld
[
i
];

312 
Â
->
ty≥
) {

313 
T_NODE
:

314 i‡(
ˇlcsize
) {

315 
	`ödít
(12, 
cfûe
);

316 
	`Ârötf
(
cfûe
, "calcsize(n->%s.%s);\n",

317 
•
->
èg
, 
Â
->
«me
);

319 
	`ödít
(12, 
cfûe
);

320 
	`Ârötf
(
cfûe
, "new->%s.%s = copynode(n->%s.%s);\n",

321 
•
->
èg
, 
Â
->
«me
, sp->tag, fp->name);

324 
T_NODELIST
:

325 i‡(
ˇlcsize
) {

326 
	`ödít
(12, 
cfûe
);

327 
	`Ârötf
(
cfûe
, "sizenodelist(n->%s.%s);\n",

328 
•
->
èg
, 
Â
->
«me
);

330 
	`ödít
(12, 
cfûe
);

331 
	`Ârötf
(
cfûe
, "new->%s.%s = copynodelist(n->%s.%s);\n",

332 
•
->
èg
, 
Â
->
«me
, sp->tag, fp->name);

335 
T_STRING
:

336 i‡(
ˇlcsize
) {

337 
	`ödít
(12, 
cfûe
);

338 
	`Ârötf
(
cfûe
, "funcstringsize += strlen(n->%s.%s) + 1;\n",

339 
•
->
èg
, 
Â
->
«me
);

341 
	`ödít
(12, 
cfûe
);

342 
	`Ârötf
(
cfûe
, "new->%s.%s =Çodesavestr(n->%s.%s);\n",

343 
•
->
èg
, 
Â
->
«me
, sp->tag, fp->name);

346 
T_INT
:

347 
T_OTHER
:

348 i‡(! 
ˇlcsize
) {

349 
	`ödít
(12, 
cfûe
);

350 
	`Ârötf
(
cfûe
, "new->%s.%s =Ç->%s.%s;\n",

351 
•
->
èg
, 
Â
->
«me
, sp->tag, fp->name);

356 
	`ödít
(12, 
cfûe
);

357 
	`Âuts
("bªak;\n", 
cfûe
);

359 
	`Âuts
(" };\n", 
cfûe
);

360 i‡(! 
ˇlcsize
)

361 
	`Âuts
("Çew->ty≥ =Ç->ty≥;\n", 
cfûe
);

362 
	}
}

366 
	$ödít
(
amou¡
, 
FILE
 *
Â
)

368 
amou¡
 >= 8) {

369 
	`putc
('\t', 
Â
);

370 
amou¡
 -= 8;

372 --
amou¡
 >= 0) {

373 
	`putc
(' ', 
Â
);

375 
	}
}

379 
	$√xtfõld
(*
buf
)

381 *
p
, *
q
;

383 
p
 = 
löï
;

384 *
p
 == ' ' || *p == '\t')

385 
p
++;

386 
q
 = 
buf
;

387 *
p
 != ' ' && *p != '\t' && *p != '\0')

388 *
q
++ = *
p
++;

389 *
q
 = '\0';

390 
löï
 = 
p
;

391  (
q
 > 
buf
);

392 
	}
}

396 
	$skùbl
()

398 *
löï
 == ' ' || *linep == '\t')

399 
löï
++;

400 
	}
}

404 
	$ªadlöe
()

406 *
p
;

408 i‡(
	`fgës
(
löe
, 1024, 
öÂ
Ë=
NULL
)

410 
p
 = 
löe
 ; *p != '#' && *p != '\n' && *p != '\0' ;Ö++);

411 
p
 > 
löe
 && (p[-1] == ' ' ||Ö[-1] == '\t'))

412 
p
--;

413 *
p
 = '\0';

414 
löï
 = 
löe
;

415 
löno
++;

416 i‡(
p
 - 
löe
 > 
BUFLEN
)

417 
	`îr‹
("LineÅooÜong");

419 
	}
}

424 
	$îr‹
(c⁄° *
msg
, ...)

426 
va_li°
 
va
;

427 
	`va_°¨t
(
va
, 
msg
);

429 (Ë
	`Ârötf
(
°dîr
, "löê%d: ", 
löno
);

430 (Ë
	`vÂrötf
(
°dîr
, 
msg
, 
va
);

431 (Ë
	`Âutc
('\n', 
°dîr
);

433 
	`va_íd
(
va
);

435 
	`exô
(2);

436 
	}
}

441 
	$ßve°r
(c⁄° *
s
)

443 *
p
;

445 i‡((
p
 = 
	`mÆloc
(
	`°æí
(
s
Ë+ 1)Ë=
NULL
)

446 
	`îr‹
("Out of space");

447 (Ë
	`°r˝y
(
p
, 
s
);

448  
p
;

449 
	}
}

	@mksyntax.c

34 #i‚de‡
löt


35 c⁄° 
	gc›yright
[] =

40 #i‚de‡
löt


41 
	gsccsid
[] = "@(#)mksyntax.c 8.2 (Berkeley) 5/4/95";

44 
	~<sys/cdefs.h
>

46 
	#__unu£d


	)

52 
	~<°dio.h
>

53 
	~<°dlib.h
>

54 
	~<°rög.h
>

55 
	~"∑r£r.h
"

58 
	ssyn˛ass
 {

59 *
	m«me
;

60 *
	mcommít
;

64 
syn˛ass
 
	gsyn˛ass
[] = {

79 { 
NULL
, NULL }

87 
syn˛ass
 
	gis_íåy
[] = {

93 { 
NULL
, NULL }

96 
	gwrôî
[] = "\
/*\n\
* This file was generated byÅhe mksyntaxÖrogram.\n\
*/\n\
\n";

103 
FILE
 *
	gcfûe
;

104 
FILE
 *
	ghfûe
;

105 *
	gsy¡ax
[513];

106 
	gba£
;

107 
	gsize
;

108 
	gnbôs
;

109 
	gdigô_c⁄tig
;

111 
fû…abÀ
(*);

112 
öô
();

113 
add
(*, *);

114 
¥öt
(*);

115 
ouçut_ty≥_ma¸os
();

116 
digô_c⁄vît
();

119 
	$maö
(
¨gc
 
__unu£d
, **
¨gv
 __unused)

121 
c
;

122 
d
;

123 
sign
;

124 
i
;

125 
buf
[80];

126 
pos
;

127 
digô
[] = "0123456789";

130 i‡((
cfûe
 = 
	`f›í
("sy¡ax.c", "w")Ë=
NULL
) {

131 
	`≥º‹
("syntax.c");

132 
	`exô
(2);

134 i‡((
hfûe
 = 
	`f›í
("sy¡ax.h", "w")Ë=
NULL
) {

135 
	`≥º‹
("syntax.h");

136 
	`exô
(2);

138 
	`Âuts
(
wrôî
, 
hfûe
);

139 
	`Âuts
(
wrôî
, 
cfûe
);

142 
c
 = -1;

143 i‡(
c
 < 0)

144 
sign
 = 1;

146 
sign
 = 0;

147 
nbôs
 = 1 ; ;Çbits++) {

148 
d
 = (1 << 
nbôs
) - 1;

149 i‡(
d
 =
c
)

153 
	`¥ötf
("%†%d bô ch¨s\n", 
sign
? "sig√d" : "unsig√d", 
nbôs
);

155 i‡(
nbôs
 > 9) {

156 
	`Âuts
("Ch¨a˘î†ˇn'àhavêm‹êth™ 9 bôs\n", 
°dîr
);

157 
	`exô
(2);

159 
size
 = (1 << 
nbôs
) + 1;

160 
ba£
 = 1;

161 i‡(
sign
)

162 
ba£
 +1 << (
nbôs
 - 1);

163 
digô_c⁄tig
 = 1;

164 
i
 = 0 ; i < 10 ; i++) {

165 i‡(
digô
[
i
] != '0' + i)

166 
digô_c⁄tig
 = 0;

169 
	`Âuts
("#ö˛udê<sys/cdefs.h>\n", 
hfûe
);

170 
	`Âuts
("#ö˛udê<˘y≥.h>\n", 
hfûe
);

173 
	`Âuts
("/* Sy¡ax cœs£†*/\n", 
hfûe
);

174 
i
 = 0 ; 
syn˛ass
[i].
«me
 ; i++) {

175 
	`•rötf
(
buf
, "#deföê%†%d", 
syn˛ass
[
i
].
«me
, i);

176 
	`Âuts
(
buf
, 
hfûe
);

177 
pos
 = 
	`°æí
(
buf
) ;Öos < 32 ;Öos = (pos + 8) & ~07)

178 
	`putc
('\t', 
hfûe
);

179 
	`Ârötf
(
hfûe
, "/* %†*/\n", 
syn˛ass
[
i
].
commít
);

181 
	`putc
('\n', 
hfûe
);

182 
	`Âuts
("/* Sy¡ax cœs£†f‹ is_ fun˘i⁄†*/\n", 
hfûe
);

183 
i
 = 0 ; 
is_íåy
[i].
«me
 ; i++) {

184 
	`•rötf
(
buf
, "#deföê%†%#o", 
is_íåy
[
i
].
«me
, 1 << i);

185 
	`Âuts
(
buf
, 
hfûe
);

186 
pos
 = 
	`°æí
(
buf
) ;Öos < 32 ;Öos = (pos + 8) & ~07)

187 
	`putc
('\t', 
hfûe
);

188 
	`Ârötf
(
hfûe
, "/* %†*/\n", 
is_íåy
[
i
].
commít
);

190 
	`putc
('\n', 
hfûe
);

191 
	`Ârötf
(
hfûe
, "#deföêSYNBASE %d\n", 
ba£
);

192 
	`Ârötf
(
hfûe
, "#deföêPEOF %d\n\n", -
ba£
);

193 
	`putc
('\n', 
hfûe
);

194 
	`Âuts
("#deföêBASESYNTAX (ba£sy¡ax + SYNBASE)\n", 
hfûe
);

195 
	`Âuts
("#deföêDQSYNTAX (dqsy¡ax + SYNBASE)\n", 
hfûe
);

196 
	`Âuts
("#deföêSQSYNTAX (sqsy¡ax + SYNBASE)\n", 
hfûe
);

197 
	`Âuts
("#deföêARISYNTAX (¨isy¡ax + SYNBASE)\n", 
hfûe
);

198 
	`putc
('\n', 
hfûe
);

199 
	`ouçut_ty≥_ma¸os
();

200 
	`putc
('\n', 
hfûe
);

203 
	`Âuts
("#ö˛udê\"shñl.h\"\n", 
cfûe
);

204 
	`Âuts
("#ö˛udê\"sy¡ax.h\"\n\n", 
cfûe
);

205 
	`öô
();

206 
	`Âuts
("/* sy¡axÅabÀ u£d whíÇŸ i¿quŸe†*/\n", 
cfûe
);

207 
	`add
("\n", "CNL");

208 
	`add
("\\", "CBACK");

209 
	`add
("'", "CSQUOTE");

210 
	`add
("\"", "CDQUOTE");

211 
	`add
("`", "CBQUOTE");

212 
	`add
("$", "CVAR");

213 
	`add
("}", "CENDVAR");

214 
	`add
("<>();&| \t", "CSPCL");

215 
	`¥öt
("basesyntax");

216 
	`öô
();

217 
	`Âuts
("\n/* sy¡axÅabÀ u£d whí i¿doubÀ quŸe†*/\n", 
cfûe
);

218 
	`add
("\n", "CNL");

219 
	`add
("\\", "CBACK");

220 
	`add
("\"", "CENDQUOTE");

221 
	`add
("`", "CBQUOTE");

222 
	`add
("$", "CVAR");

223 
	`add
("}", "CENDVAR");

225 
	`add
("!*?[=~:/-", "CCTL");

226 
	`¥öt
("dqsyntax");

227 
	`öô
();

228 
	`Âuts
("\n/* sy¡axÅabÀ u£d whí i¿sögÀ quŸe†*/\n", 
cfûe
);

229 
	`add
("\n", "CNL");

230 
	`add
("'", "CENDQUOTE");

232 
	`add
("!*?[=~:/-", "CCTL");

233 
	`¥öt
("sqsyntax");

234 
	`öô
();

235 
	`Âuts
("\n/* sy¡axÅabÀ u£d whí i¿¨ôhmëi¯*/\n", 
cfûe
);

236 
	`add
("\n", "CNL");

237 
	`add
("\\", "CBACK");

238 
	`add
("`", "CBQUOTE");

239 
	`add
("'", "CSQUOTE");

240 
	`add
("\"", "CDQUOTE");

241 
	`add
("$", "CVAR");

242 
	`add
("}", "CENDVAR");

243 
	`add
("(", "CLP");

244 
	`add
(")", "CRP");

245 
	`¥öt
("arisyntax");

246 
	`fû…abÀ
("0");

247 
	`Âuts
("\n/* ch¨a˘î cœssifiˇti⁄ÅabÀ */\n", 
cfûe
);

248 
	`add
("0123456789", "ISDIGIT");

249 
	`add
("abcdefghijklmnopqrstucvwxyz", "ISLOWER");

250 
	`add
("ABCDEFGHIJKLMNOPQRSTUCVWXYZ", "ISUPPER");

251 
	`add
("_", "ISUNDER");

252 
	`add
("#?$!-*@", "ISSPECL");

253 
	`¥öt
("is_type");

254 i‡(! 
digô_c⁄tig
)

255 
	`digô_c⁄vît
();

256 
	`exô
(0);

257 
	}
}

266 
	$fû…abÀ
(*
d·vÆ
)

268 
i
;

270 
i
 = 0 ; i < 
size
 ; i++)

271 
sy¡ax
[
i
] = 
d·vÆ
;

272 
	}
}

280 
	$öô
()

282 
	`fû…abÀ
("CWORD");

283 
sy¡ax
[0] = "CEOF";

284 
sy¡ax
[
ba£
 + 
CTLESC
] = "CCTL";

285 
sy¡ax
[
ba£
 + 
CTLVAR
] = "CCTL";

286 
sy¡ax
[
ba£
 + 
CTLENDVAR
] = "CCTL";

287 
sy¡ax
[
ba£
 + 
CTLBACKQ
] = "CCTL";

288 
sy¡ax
[
ba£
 + 
CTLBACKQ
 + 
CTLQUOTE
] = "CCTL";

289 
sy¡ax
[
ba£
 + 
CTLARI
] = "CCTL";

290 
sy¡ax
[
ba£
 + 
CTLENDARI
] = "CCTL";

291 
sy¡ax
[
ba£
 + 
CTLQUOTEMARK
] = "CCTL";

292 
	}
}

300 
	$add
(*
p
, *
ty≥
)

302 *
p
)

303 
sy¡ax
[*
p
++ + 
ba£
] = 
ty≥
;

304 
	}
}

313 
	$¥öt
(*
«me
)

315 
i
;

316 
cﬁ
;

318 
	`Ârötf
(
hfûe
, "exã∫ c⁄° ch¨ %s[];\n", 
«me
);

319 
	`Ârötf
(
cfûe
, "c⁄° ch¨ %s[%d] = {\n", 
«me
, 
size
);

320 
cﬁ
 = 0;

321 
i
 = 0 ; i < 
size
 ; i++) {

322 i‡(
i
 == 0) {

323 
	`Âuts
(" ", 
cfûe
);

324 } i‡((
i
 & 03) == 0) {

325 
	`Âuts
(",\¿ ", 
cfûe
);

326 
cﬁ
 = 0;

328 
	`putc
(',', 
cfûe
);

329 ++
cﬁ
 < 9 * (
i
 & 03))

330 
	`putc
(' ', 
cfûe
);

332 
	`Âuts
(
sy¡ax
[
i
], 
cfûe
);

333 
cﬁ
 +
	`°æí
(
sy¡ax
[
i
]);

335 
	`Âuts
("\n};\n", 
cfûe
);

336 
	}
}

345 *
	gma¸o
[] = {

352 
NULL


356 
	$ouçut_ty≥_ma¸os
()

358 **
µ
;

360 i‡(
digô_c⁄tig
)

361 
ma¸o
[0] = "#define is_digit(c)\t((unsigned)((c) - '0') <= 9)";

362 
µ
 = 
ma¸o
 ; *pp ;Öp++)

363 
	`Ârötf
(
hfûe
, "%s\n", *
µ
);

364 i‡(
digô_c⁄tig
)

365 
	`Âuts
("#deföêdigô_vÆ(c)\t((cË- '0')\n", 
hfûe
);

367 
	`Âuts
("#deföêdigô_vÆ(c)\t(digô_vÆue[c])\n", 
hfûe
);

368 
	}
}

377 
	$digô_c⁄vît
()

379 
maxdigô
;

380 
digô
[] = "0123456789";

381 *
p
;

382 
i
;

384 
maxdigô
 = 0;

385 
p
 = 
digô
 ; *p ;Ö++)

386 i‡(*
p
 > 
maxdigô
)

387 
maxdigô
 = *
p
;

388 
	`Âuts
("exã∫ c⁄° ch¨ digô_vÆue[];\n", 
hfûe
);

389 
	`Âuts
("\n\nc⁄° ch¨ digô_vÆue[] = {\n", 
cfûe
);

390 
i
 = 0 ; i <
maxdigô
 ; i++) {

391 
p
 = 
digô
 ; *∞&& *∞!
i
 ;Ö++);

392 i‡(*
p
 == '\0')

393 
p
 = 
digô
;

394 
	`Ârötf
(
cfûe
, " %d,\n", ()(
p
 - 
digô
));

396 
	`Âuts
("};\n", 
cfûe
);

397 
	}
}

	@myhistedit.h

33 
	~<hi°edô.h
>

35 
Hi°‹y
 *
hi°
;

36 
EdôLöe
 *
ñ
;

37 
di•œyhi°
;

39 
hi°edô
();

40 
£thi°size
(const *);

41 
hi°cmd
(, **);

42 
nŸ_f˙umbî
(*);

43 
°r_to_evít
(*, );

44 
bödcmd
(, **);

	@mystring.c

33 #i‚de‡
löt


35 
	gsccsid
[] = "@(#)mystring.c 8.2 (Berkeley) 5/4/95";

38 
	~<sys/cdefs.h
>

39 
__FBSDID
("$FreeBSD: src/bin/sh/mystring.c,v 1.13.26.1 2008/11/25 02:59:29 kensmith Exp $");

51 
	~<°dlib.h
>

52 
	~"shñl.h
"

53 
	~"sy¡ax.h
"

54 
	~"îr‹.h
"

55 
	~"my°rög.h
"

58 
	gnuŒ°r
[1];

76 
	$sc›yn
(c⁄° *
‰om
, *
to
, 
size
)

79 --
size
 > 0) {

80 i‡((*
to
++ = *
‰om
++) == '\0')

83 *
to
 = '\0';

84 
	}
}

92 
	$¥efix
(c⁄° *
pfx
, c⁄° *
°rög
)

94 *
pfx
) {

95 i‡(*
pfx
++ !*
°rög
++)

99 
	}
}

108 
	$numbî
(c⁄° *
s
)

110 i‡(! 
	`is_numbî
(
s
))

111 
	`îr‹
("IŒegÆÇumbî: %s", (*)
s
);

112  
	`©oi
(
s
);

113 
	}
}

122 
	$is_numbî
(c⁄° *
p
)

125 i‡(! 
	`is_digô
(*
p
))

127 } *++
p
 != '\0');

129 
	}
}

	@mystring.h

36 
	~<°rög.h
>

38 
sc›yn
(const *, *, );

39 
¥efix
(const *, const *);

40 
numbî
(const *);

41 
is_numbî
(const *);

43 
	#equÆ
(
s1
, 
s2
Ë(
	`°rcmp
(s1, s2Ë=0)

	)

44 
	#sc›y
(
s1
, 
s2
Ë(()
	`°r˝y
(s2, s1))

	)

	@nodes.c

	@nodes.h

5 
	#NSEMI
 0

	)

6 
	#NCMD
 1

	)

7 
	#NPIPE
 2

	)

8 
	#NREDIR
 3

	)

9 
	#NBACKGND
 4

	)

10 
	#NSUBSHELL
 5

	)

11 
	#NAND
 6

	)

12 
	#NOR
 7

	)

13 
	#NIF
 8

	)

14 
	#NWHILE
 9

	)

15 
	#NUNTIL
 10

	)

16 
	#NFOR
 11

	)

17 
	#NCASE
 12

	)

18 
	#NCLIST
 13

	)

19 
	#NDEFUN
 14

	)

20 
	#NARG
 15

	)

21 
	#NTO
 16

	)

22 
	#NFROM
 17

	)

23 
	#NFROMTO
 18

	)

24 
	#NAPPEND
 19

	)

25 
	#NCLOBBER
 20

	)

26 
	#NTOFD
 21

	)

27 
	#NFROMFD
 22

	)

28 
	#NHERE
 23

	)

29 
	#NXHERE
 24

	)

30 
	#NNOT
 25

	)

34 
	snbö¨y
 {

35 
	mty≥
;

36 
node
 *
	mch1
;

37 
node
 *
	mch2
;

41 
	sncmd
 {

42 
	mty≥
;

43 
	mbackgnd
;

44 
node
 *
	m¨gs
;

45 
node
 *
	mªdúe˘
;

49 
	s≈ùe
 {

50 
	mty≥
;

51 
	mbackgnd
;

52 
nodñi°
 *
	mcmdli°
;

56 
	sƒedú
 {

57 
	mty≥
;

58 
node
 *
	mn
;

59 
node
 *
	mªdúe˘
;

63 
	snif
 {

64 
	mty≥
;

65 
node
 *
	mã°
;

66 
node
 *
	miÂ¨t
;

67 
node
 *
	mñ£∑π
;

71 
	snf‹
 {

72 
	mty≥
;

73 
node
 *
	m¨gs
;

74 
node
 *
	mbody
;

75 *
	mv¨
;

79 
	snˇ£
 {

80 
	mty≥
;

81 
node
 *
	mex¥
;

82 
node
 *
	mˇ£s
;

86 
	sn˛i°
 {

87 
	mty≥
;

88 
node
 *
	m√xt
;

89 
node
 *
	m∑âîn
;

90 
node
 *
	mbody
;

94 
	s«rg
 {

95 
	mty≥
;

96 
node
 *
	m√xt
;

97 *
	mãxt
;

98 
nodñi°
 *
	mbackquŸe
;

102 
	snfûe
 {

103 
	mty≥
;

104 
node
 *
	m√xt
;

105 
	mfd
;

106 
node
 *
	m‚ame
;

107 *
	mexp‚ame
;

111 
	sndup
 {

112 
	mty≥
;

113 
node
 *
	m√xt
;

114 
	mfd
;

115 
	mdupfd
;

116 
node
 *
	mv«me
;

120 
	snhîe
 {

121 
	mty≥
;

122 
node
 *
	m√xt
;

123 
	mfd
;

124 
node
 *
	mdoc
;

128 
	s¬Ÿ
 {

129 
	mty≥
;

130 
node
 *
	mcom
;

134 
	unode
 {

135 
	mty≥
;

136 
nbö¨y
 
	mnbö¨y
;

137 
ncmd
 
	mncmd
;

138 
≈ùe
 
	m≈ùe
;

139 
ƒedú
 
	mƒedú
;

140 
nif
 
	mnif
;

141 
nf‹
 
	mnf‹
;

142 
nˇ£
 
	mnˇ£
;

143 
n˛i°
 
	mn˛i°
;

144 
«rg
 
	m«rg
;

145 
nfûe
 
	mnfûe
;

146 
ndup
 
	mndup
;

147 
nhîe
 
	mnhîe
;

148 
¬Ÿ
 
	m¬Ÿ
;

152 
	snodñi°
 {

153 
nodñi°
 *
	m√xt
;

154 
node
 *
	mn
;

158 
node
 *
c›yfunc
(node *);

159 
‰ìfunc
(
node
 *);

	@options.c

33 #i‚de‡
löt


35 
	gsccsid
[] = "@(#)options.c 8.2 (Berkeley) 5/4/95";

38 
	~<sys/cdefs.h
>

39 
__FBSDID
("$FreeBSD: src/bin/sh/options.c,v 1.25.2.2.2.1 2008/11/25 02:59:29 kensmith Exp $");

41 
	~<sig«l.h
>

42 
	~<uni°d.h
>

43 
	~<°dlib.h
>

45 
	~"shñl.h
"

46 
	#DEFINE_OPTIONS


	)

47 
	~"›ti⁄s.h
"

48 #unde‡
DEFINE_OPTIONS


49 
	~"nodes.h
"

50 
	~"evÆ.h
"

51 
	~"jobs.h
"

52 
	~"öput.h
"

53 
	~"ouçut.h
"

54 
	~"å≠.h
"

55 
	~"v¨.h
"

56 
	~"memÆloc.h
"

57 
	~"îr‹.h
"

58 
	~"my°rög.h
"

59 #i‚de‡
NO_HISTORY


60 
	~"myhi°edô.h
"

63 *
	g¨g0
;

64 
sh∑øm
 
	gshñÕ¨am
;

65 **
	g¨g±r
;

66 *
	gsh›èrg
;

67 *
	g›çå
;

69 *
	gmöusc
;

72 
STATIC
 
›ti⁄s
();

73 
STATIC
 
möus_o
(*, );

74 
STATIC
 
£t›ti⁄
(, );

75 
STATIC
 
gë›ts
(*, *, **, ***, **);

83 
	$¥oˇrgs
(
¨gc
, **
¨gv
)

85 
i
;

87 
¨g±r
 = 
¨gv
;

88 i‡(
¨gc
 > 0)

89 
¨g±r
++;

90 
i
 = 0; i < 
NOPTS
; i++)

91 
›éi°
[
i
].
vÆ
 = 2;

92 
¥ivûeged
 = (
	`gëuid
(Ë!
	`gëeuid
(Ë|| 
	`gëgid
(Ë!
	`gëegid
());

93 
	`›ti⁄s
(1);

94 i‡(*
¨g±r
 =
NULL
 && 
möusc
 == NULL)

95 
sÊag
 = 1;

96 i‡(
iÊag
 =2 && 
sÊag
 =1 && 
	`ißây
(0) && isatty(1))

97 
iÊag
 = 1;

98 i‡(
mÊag
 == 2)

99 
mÊag
 = 
iÊag
;

100 
i
 = 0; i < 
NOPTS
; i++)

101 i‡(
›éi°
[
i
].
vÆ
 == 2)

102 
›éi°
[
i
].
vÆ
 = 0;

103 
¨g0
 = 
¨gv
[0];

104 i‡(
sÊag
 =0 && 
möusc
 =
NULL
) {

105 
comm™d«me
 = 
¨g0
 = *
¨g±r
++;

106 
	`£töputfûe
(
comm™d«me
, 0);

109 i‡(
¨g±r
 && 
möusc
 && *argptr)

110 
¨g0
 = *
¨g±r
++;

112 
shñÕ¨am
.
p
 = 
¨g±r
;

113 
shñÕ¨am
.
ª£t
 = 1;

115 *
¨g±r
) {

116 
shñÕ¨am
.
≈¨am
++;

117 
¨g±r
++;

119 
	`›tsch™ged
();

120 
	}
}

124 
	$›tsch™ged
()

126 
	`£töãø˘ive
(
iÊag
);

127 #i‚de‡
NO_HISTORY


128 
	`hi°edô
();

130 
	`£tjob˘l
(
mÊag
);

131 
	}
}

138 
STATIC
 

139 
	$›ti⁄s
(
cmdlöe
)

141 *
kp
, *
p
;

142 
vÆ
;

143 
c
;

145 i‡(
cmdlöe
)

146 
möusc
 = 
NULL
;

147 (
p
 = *
¨g±r
Ë!
NULL
) {

148 
¨g±r
++;

149 i‡((
c
 = *
p
++) == '-') {

150 
vÆ
 = 1;

152 i‡(
p
[0] == '\0')

153 
íd_›ti⁄s1
;

154 i‡(
p
[0] == '-' &&Ö[1] == '\0')

155 
íd_›ti⁄s2
;

168 i‡(
p
[0] == '-') {

169 
kp
 = 
p
 + 1;

170 *
kp
 == ' ' || *kp == '\t')

171 
kp
++;

172 i‡(*
kp
 == '#' || *kp == '\0')

173 
íd_›ti⁄s2
;

175 } i‡(
c
 == '+') {

176 
vÆ
 = 0;

178 
¨g±r
--;

181 (
c
 = *
p
++) != '\0') {

182 i‡(
c
 ='c' && 
cmdlöe
) {

183 *
q
;

184 #ifde‡
NOHACK


185 i‡(*
p
 == '\0')

187 
q
 = *
¨g±r
++;

188 i‡(
q
 =
NULL
 || 
möusc
 != NULL)

189 
	`îr‹
("Bad -c option");

190 
möusc
 = 
q
;

191 #ifde‡
NOHACK


194 } i‡(
c
 == 'o') {

195 
	`möus_o
(*
¨g±r
, 
vÆ
);

196 i‡(*
¨g±r
)

197 
¨g±r
++;

199 i‡(
c
 ='p' && !
vÆ
 && 
¥ivûeged
) {

200 (Ë
	`£tuid
(
	`gëuid
());

201 (Ë
	`£tgid
(
	`gëgid
());

203 
	`£t›ti⁄
(
c
, 
vÆ
);

210 
íd_›ti⁄s1
:

211 i‡(!
cmdlöe
) {

212 
xÊag
 = 
vÊag
 = 0;

222 
íd_›ti⁄s2
:

223 i‡(!
cmdlöe
) {

224 i‡(*
¨g±r
 =
NULL
)

225 
	`£ç¨am
(
¨g±r
);

238 
p
 = *
¨g±r
;

239 i‡(
p
 !
NULL
 &&Ö[0] == '#' &&Ö[1] == '\0') {

240 *
¨g±r
 !
NULL
)

241 
¨g±r
++;

243 
¨g±r
--;

245 
	}
}

247 
STATIC
 

248 
	$möus_o
(*
«me
, 
vÆ
)

250 
i
;

252 i‡(
«me
 =
NULL
) {

253 i‡(
vÆ
) {

255 
	`out1°r
("Current option settings\n");

256 
i
 = 0; i < 
NOPTS
; i++)

257 
	`out1fmt
("%-16s%s\n", 
›éi°
[
i
].
«me
,

258 
›éi°
[
i
].
vÆ
 ? "on" : "off");

261 
i
 = 0; i < 
NOPTS
; i++) {

262 i‡(
i
 % 6 == 0)

263 
	`out1°r
(
i
 == 0 ? "set" : "\nset");

264 
	`out1fmt
(" %cÿ%s", 
›éi°
[
i
].
vÆ
 ? '-' : '+',

265 
›éi°
[
i
].
«me
);

267 
	`out1c
('\n');

270 
i
 = 0; i < 
NOPTS
; i++)

271 i‡(
	`equÆ
(
«me
, 
›éi°
[
i
].name)) {

272 i‡(!
vÆ
 && 
¥ivûeged
 && 
	`equÆ
(
«me
, "privileged")) {

273 (Ë
	`£tuid
(
	`gëuid
());

274 (Ë
	`£tgid
(
	`gëgid
());

276 
	`£t›ti⁄
(
›éi°
[
i
].
Àâî
, 
vÆ
);

279 
	`îr‹
("IŒegÆ o±i⁄ -ÿ%s", 
«me
);

281 
	}
}

284 
STATIC
 

285 
	$£t›ti⁄
(
Êag
, 
vÆ
)

287 
i
;

289 
i
 = 0; i < 
NOPTS
; i++)

290 i‡(
›éi°
[
i
].
Àâî
 =
Êag
) {

291 
›éi°
[
i
].
vÆ
 = val;

292 i‡(
vÆ
) {

294 i‡(
Êag
 == 'V')

295 
EÊag
 = 0;

296 i‡(
Êag
 == 'E')

297 
VÊag
 = 0;

301 
	`îr‹
("IŒegÆ o±i⁄ -%c", 
Êag
);

302 
	}
}

306 #ifde‡
mköô


307 
	gINCLUDE
 "options.h"

309 
	gSHELLPROC
 {

310 
	gi
;

312 
	gi
 = 0; i < 
	gNOPTS
; i++)

313 
	g›éi°
[
i
].
	gvÆ
 = 0;

314 
›tsch™ged
();

325 
	$£ç¨am
(**
¨gv
)

327 **
√w∑øm
;

328 **
≠
;

329 
≈¨am
;

331 
≈¨am
 = 0 ; 
¨gv
[nparam] ;Çparam++);

332 
≠
 = 
√w∑øm
 = 
	`ckmÆloc
((
≈¨am
 + 1) *  *ap);

333 *
¨gv
) {

334 *
≠
++ = 
	`ßve°r
(*
¨gv
++);

336 *
≠
 = 
NULL
;

337 
	`‰ì∑øm
(&
shñÕ¨am
);

338 
shñÕ¨am
.
mÆloc
 = 1;

339 
shñÕ¨am
.
≈¨am
 =Çparam;

340 
shñÕ¨am
.
p
 = 
√w∑øm
;

341 
shñÕ¨am
.
ª£t
 = 1;

342 
shñÕ¨am
.
›äext
 = 
NULL
;

343 
	}
}

351 
	$‰ì∑øm
(
sh∑øm
 *
∑øm
)

353 **
≠
;

355 i‡(
∑øm
->
mÆloc
) {

356 
≠
 = 
∑øm
->
p
 ; *ap ;áp++)

357 
	`ck‰ì
(*
≠
);

358 
	`ck‰ì
(
∑øm
->
p
);

360 
	}
}

369 
	$shi·cmd
(
¨gc
, **
¨gv
)

371 
n
;

372 **
≠1
, **
≠2
;

374 
n
 = 1;

375 i‡(
¨gc
 > 1)

376 
n
 = 
	`numbî
(
¨gv
[1]);

377 i‡(
n
 > 
shñÕ¨am
.
≈¨am
)

379 
INTOFF
;

380 
shñÕ¨am
.
≈¨am
 -
n
;

381 
≠1
 = 
shñÕ¨am
.
p
 ; --
n
 >= 0 ;áp1++) {

382 i‡(
shñÕ¨am
.
mÆloc
)

383 
	`ck‰ì
(*
≠1
);

385 
≠2
 = 
shñÕ¨am
.
p
;

386 (*
≠2
++ = *
≠1
++Ë!
NULL
);

387 
shñÕ¨am
.
ª£t
 = 1;

388 
INTON
;

390 
	}
}

399 
	$£tcmd
(
¨gc
, **
¨gv
)

401 i‡(
¨gc
 == 1)

402  
	`showv¨scmd
(
¨gc
, 
¨gv
);

403 
INTOFF
;

404 
	`›ti⁄s
(0);

405 
	`›tsch™ged
();

406 i‡(*
¨g±r
 !
NULL
) {

407 
	`£ç¨am
(
¨g±r
);

409 
INTON
;

411 
	}
}

415 
	$gë›t§e£t
(c⁄° *
vÆue
)

417 i‡(
	`numbî
(
vÆue
) == 1) {

418 
shñÕ¨am
.
ª£t
 = 1;

420 
	}
}

430 
	$gë›tscmd
(
¨gc
, **
¨gv
)

432 **
›tba£
 = 
NULL
;

434 i‡(
¨gc
 < 3)

435 
	`îr‹
("usage: getopts optstring var [arg]");

436 i‡(
¨gc
 == 3)

437 
›tba£
 = 
shñÕ¨am
.
p
;

439 
›tba£
 = &
¨gv
[3];

441 i‡(
shñÕ¨am
.
ª£t
 == 1) {

442 
shñÕ¨am
.
›äext
 = 
›tba£
;

443 
shñÕ¨am
.
›çå
 = 
NULL
;

444 
shñÕ¨am
.
ª£t
 = 0;

447  
	`gë›ts
(
¨gv
[1],árgv[2], 
›tba£
, &
shñÕ¨am
.
›äext
,

448 &
shñÕ¨am
.
›çå
);

449 
	}
}

451 
STATIC
 

452 
	$gë›ts
(*
›t°r
, *
›tv¨
, **
›tfú°
, ***
›äext
,

453 **
›çå
)

455 *
p
, *
q
;

456 
c
 = '?';

457 
d⁄e
 = 0;

458 
öd
 = 0;

459 
îr
 = 0;

460 
s
[10];

462 i‡((
p
 = *
›çå
Ë=
NULL
 || *p == '\0') {

464 i‡(*
›äext
 =
NULL
)

466 
p
 = **
›äext
;

467 i‡(
p
 =
NULL
 || *p != '-' || *++p == '\0') {

468 
©íd
:

469 
öd
 = *
›äext
 - 
›tfú°
 + 1;

470 *
›äext
 = 
NULL
;

471 
p
 = 
NULL
;

472 
d⁄e
 = 1;

473 
out
;

475 (*
›äext
)++;

476 i‡(
p
[0] == '-' &&Ö[1] == '\0')

477 
©íd
;

480 
c
 = *
p
++;

481 
q
 = 
›t°r
; *q !
c
; ) {

482 i‡(*
q
 == '\0') {

483 i‡(
›t°r
[0] == ':') {

484 
s
[0] = 
c
;

485 
s
[1] = '\0';

486 
îr
 |
	`£tv¨ß„
("OPTARG", 
s
, 0);

489 
	`out1fmt
("IŒegÆ o±i⁄ -%c\n", 
c
);

490 (Ë
	`un£tv¨
("OPTARG");

492 
c
 = '?';

493 
bad
;

495 i‡(*++
q
 == ':')

496 
q
++;

499 i‡(*++
q
 == ':') {

500 i‡(*
p
 ='\0' && (∞**
›äext
Ë=
NULL
) {

501 i‡(
›t°r
[0] == ':') {

502 
s
[0] = 
c
;

503 
s
[1] = '\0';

504 
îr
 |
	`£tv¨ß„
("OPTARG", 
s
, 0);

505 
c
 = ':';

508 
	`out1fmt
("Nÿ¨g f‹ -%¯›ti⁄\n", 
c
);

509 (Ë
	`un£tv¨
("OPTARG");

510 
c
 = '?';

512 
bad
;

515 i‡(
p
 =**
›äext
)

516 (*
›äext
)++;

517 
	`£tv¨ß„
("OPTARG", 
p
, 0);

518 
p
 = 
NULL
;

521 
	`£tv¨ß„
("OPTARG", "", 0);

522 
öd
 = *
›äext
 - 
›tfú°
 + 1;

523 
out
;

525 
bad
:

526 
öd
 = 1;

527 *
›äext
 = 
NULL
;

528 
p
 = 
NULL
;

529 
out
:

530 *
›çå
 = 
p
;

531 
	`fmt°r
(
s
, (s), "%d", 
öd
);

532 
îr
 |
	`£tv¨ß„
("OPTIND", 
s
, 
VNOFUNC
);

533 
s
[0] = 
c
;

534 
s
[1] = '\0';

535 
îr
 |
	`£tv¨ß„
(
›tv¨
, 
s
, 0);

536 i‡(
îr
) {

537 *
›äext
 = 
NULL
;

538 *
›çå
 = 
NULL
;

539 
	`ÊushÆl
();

540 
	`exøi£
(
EXERROR
);

542  
d⁄e
;

543 
	}
}

557 
	$√xt›t
(*
›t°rög
)

559 *
p
, *
q
;

560 
c
;

562 i‡((
p
 = 
›çå
Ë=
NULL
 || *p == '\0') {

563 
p
 = *
¨g±r
;

564 i‡(
p
 =
NULL
 || *p != '-' || *++p == '\0')

566 
¨g±r
++;

567 i‡(
p
[0] == '-' &&Ö[1] == '\0')

570 
c
 = *
p
++;

571 
q
 = 
›t°rög
 ; *q !
c
 ; ) {

572 i‡(*
q
 == '\0')

573 
	`îr‹
("IŒegÆ o±i⁄ -%c", 
c
);

574 i‡(*++
q
 == ':')

575 
q
++;

577 i‡(*++
q
 == ':') {

578 i‡(*
p
 ='\0' && (∞*
¨g±r
++Ë=
NULL
)

579 
	`îr‹
("Nÿ¨g f‹ -%¯›ti⁄", 
c
);

580 
sh›èrg
 = 
p
;

581 
p
 = 
NULL
;

583 
›çå
 = 
p
;

584  
c
;

585 
	}
}

	@options.h

36 
	ssh∑øm
 {

37 
	m≈¨am
;

38 
	mmÆloc
;

39 
	mª£t
;

40 **
	mp
;

41 **
	m›äext
;

42 *
	m›çå
;

47 
	#eÊag
 
›éi°
[0].
vÆ


	)

48 
	#fÊag
 
›éi°
[1].
vÆ


	)

49 
	#IÊag
 
›éi°
[2].
vÆ


	)

50 
	#iÊag
 
›éi°
[3].
vÆ


	)

51 
	#mÊag
 
›éi°
[4].
vÆ


	)

52 
	#nÊag
 
›éi°
[5].
vÆ


	)

53 
	#sÊag
 
›éi°
[6].
vÆ


	)

54 
	#xÊag
 
›éi°
[7].
vÆ


	)

55 
	#vÊag
 
›éi°
[8].
vÆ


	)

56 
	#VÊag
 
›éi°
[9].
vÆ


	)

57 
	#EÊag
 
›éi°
[10].
vÆ


	)

58 
	#CÊag
 
›éi°
[11].
vÆ


	)

59 
	#aÊag
 
›éi°
[12].
vÆ


	)

60 
	#bÊag
 
›éi°
[13].
vÆ


	)

61 
	#uÊag
 
›éi°
[14].
vÆ


	)

62 
	#¥ivûeged
 
›éi°
[15].
vÆ


	)

63 
	#TÊag
 
›éi°
[16].
vÆ


	)

64 
	#PÊag
 
›éi°
[17].
vÆ


	)

66 
	#NOPTS
 18

	)

68 
	s›ã¡
 {

69 c⁄° *
	m«me
;

70 c⁄° 
	mÀâî
;

71 
	mvÆ
;

74 #ifde‡
DEFINE_OPTIONS


75 
›ã¡
 
	g›éi°
[
NOPTS
] = {

96 
›ã¡
 
›éi°
[
NOPTS
];

100 *
möusc
;

101 *
¨g0
;

102 
sh∑øm
 
shñÕ¨am
;

103 **
¨g±r
;

104 *
sh›èrg
;

105 *
›çå
;

107 
¥oˇrgs
(, **);

108 
›tsch™ged
();

109 
£ç¨am
(**);

110 
‰ì∑øm
(
sh∑øm
 *);

111 
shi·cmd
(, **);

112 
£tcmd
(, **);

113 
gë›tscmd
(, **);

114 
√xt›t
(*);

115 
gë›t§e£t
(const *);

	@output.c

33 #i‚de‡
löt


35 
	gsccsid
[] = "@(#)output.c 8.2 (Berkeley) 5/4/95";

38 
	~<sys/cdefs.h
>

39 
__FBSDID
("$FreeBSD: src/bin/sh/output.c,v 1.20.6.1 2008/11/25 02:59:29 kensmith Exp $");

51 
	~<°dio.h
>

52 
	~<°rög.h
>

53 
	~<°d¨g.h
>

54 
	~<î∫o.h
>

55 
	~<uni°d.h
>

56 
	~<°dlib.h
>

58 
	~"shñl.h
"

59 
	~"sy¡ax.h
"

60 
	~"ouçut.h
"

61 
	~"memÆloc.h
"

62 
	~"îr‹.h
"

63 
	~"v¨.h
"

66 
	#OUTBUFSIZ
 
BUFSIZ


	)

67 
	#BLOCK_OUT
 -2

	)

68 
	#MEM_OUT
 -3

	)

69 
	#OUTPUT_ERR
 01

	)

71 
dof‹m©_wr
(*, const *, );

73 
ouçut
 
	gouçut
 = {
NULL
, 0, NULL, 
OUTBUFSIZ
, 1, 0};

74 
ouçut
 
	gîrout
 = {
NULL
, 0, NULL, 100, 2, 0};

75 
ouçut
 
	gmemout
 = {
NULL
, 0, NULL, 0, 
MEM_OUT
, 0};

76 
ouçut
 *
	gout1
 = &output;

77 
ouçut
 *
	gout2
 = &
îrout
;

81 #ifde‡
mköô


83 
	gINCLUDE
 "output.h"

84 
	gINCLUDE
 "memalloc.h"

86 
	gRESET
 {

87 
	gout1
 = &
ouçut
;

88 
	gout2
 = &
îrout
;

89 i‡(
	gmemout
.
	gbuf
 !
NULL
) {

90 
ck‰ì
(
memout
.
buf
);

91 
	gmemout
.
	gbuf
 = 
NULL
;

99 
	$out1°r
(c⁄° *
p
)

101 
	`out°r
(
p
, 
out1
);

102 
	}
}

105 
	$out1q°r
(c⁄° *
p
)

107 
	`outq°r
(
p
, 
out1
);

108 
	}
}

111 
	$out2°r
(c⁄° *
p
)

113 
	`out°r
(
p
, 
out2
);

114 
	}
}

117 
	$out2q°r
(c⁄° *
p
)

119 
	`outq°r
(
p
, 
out2
);

120 
	}
}

123 
	$out°r
(c⁄° *
p
, 
ouçut
 *
fûe
)

125 *
p
)

126 
	`outc
(*
p
++, 
fûe
);

127 i‡(
fûe
 =
out2
)

128 
	`Êushout
(
fûe
);

129 
	}
}

133 
	$outq°r
(c⁄° *
p
, 
ouçut
 *
fûe
)

135 
ch
;

137 i‡(
p
[0] == '\0') {

138 
	`out°r
("''", 
fûe
);

141 i‡(
p
[
	`°rc•n
’, "|&;<>()$`\\\"'")] ='\0' && (!
	`ifs£t
() ||

142 
p
[
	`°rc•n
’, 
	`ifsvÆ
())] == '\0')) {

143 
	`out°r
(
p
, 
fûe
);

147 
	`out1c
('\'');

148 (
ch
 = *
p
++) != '\0') {

149 
ch
) {

155 
	`out°r
("'\\''", 
fûe
);

158 
	`outc
(
ch
, 
fûe
);

161 
	`out1c
('\'');

162 
	}
}

164 
STATIC
 
	gout_junk
[16];

167 
	$em±youtbuf
(
ouçut
 *
de°
)

169 
off£t
;

171 i‡(
de°
->
fd
 =
BLOCK_OUT
) {

172 
de°
->
√xtc
 = 
out_junk
;

173 
de°
->
∆e·
 =  
out_junk
;

174 
de°
->
Êags
 |
OUTPUT_ERR
;

175 } i‡(
de°
->
buf
 =
NULL
) {

176 
INTOFF
;

177 
de°
->
buf
 = 
	`ckmÆloc
(de°->
bufsize
);

178 
de°
->
√xtc
 = de°->
buf
;

179 
de°
->
∆e·
 = de°->
bufsize
;

180 
INTON
;

181 } i‡(
de°
->
fd
 =
MEM_OUT
) {

182 
off£t
 = 
de°
->
bufsize
;

183 
INTOFF
;

184 
de°
->
bufsize
 <<= 1;

185 
de°
->
buf
 = 
	`ckªÆloc
(de°->buf, de°->
bufsize
);

186 
de°
->
∆e·
 = de°->
bufsize
 - 
off£t
;

187 
de°
->
√xtc
 = de°->
buf
 + 
off£t
;

188 
INTON
;

190 
	`Êushout
(
de°
);

192 
de°
->
∆e·
--;

193 
	}
}

197 
	$ÊushÆl
()

199 
	`Êushout
(&
ouçut
);

200 
	`Êushout
(&
îrout
);

201 
	}
}

205 
	$Êushout
(
ouçut
 *
de°
)

208 i‡(
de°
->
buf
 =
NULL
 || de°->
√xtc
 =de°->bu‡|| de°->
fd
 < 0)

210 i‡(
	`xwrôe
(
de°
->
fd
, de°->
buf
, de°->
√xtc
 - dest->buf) < 0)

211 
de°
->
Êags
 |
OUTPUT_ERR
;

212 
de°
->
√xtc
 = de°->
buf
;

213 
de°
->
∆e·
 = de°->
bufsize
;

214 
	}
}

218 
	$‰ì°dout
()

220 
INTOFF
;

221 i‡(
ouçut
.
buf
) {

222 
	`ck‰ì
(
ouçut
.
buf
);

223 
ouçut
.
buf
 = 
NULL
;

224 
ouçut
.
∆e·
 = 0;

226 
INTON
;

227 
	}
}

231 
	$outfmt
(
ouçut
 *
fûe
, c⁄° *
fmt
, ...)

233 
va_li°
 
≠
;

235 
	`va_°¨t
(
≠
, 
fmt
);

236 
	`dof‹m©
(
fûe
, 
fmt
, 
≠
);

237 
	`va_íd
(
≠
);

238 
	}
}

242 
	$out1fmt
(c⁄° *
fmt
, ...)

244 
va_li°
 
≠
;

246 
	`va_°¨t
(
≠
, 
fmt
);

247 
	`dof‹m©
(
out1
, 
fmt
, 
≠
);

248 
	`va_íd
(
≠
);

249 
	}
}

252 
	$d¥ötf
(c⁄° *
fmt
, ...)

254 
va_li°
 
≠
;

256 
	`va_°¨t
(
≠
, 
fmt
);

257 
	`dof‹m©
(
out2
, 
fmt
, 
≠
);

258 
	`va_íd
(
≠
);

259 
	`Êushout
(
out2
);

260 
	}
}

263 
	$fmt°r
(*
outbuf
, 
Àngth
, c⁄° *
fmt
, ...)

265 
va_li°
 
≠
;

266 
ouçut
 
°rout
;

268 
°rout
.
√xtc
 = 
outbuf
;

269 
°rout
.
∆e·
 = 
Àngth
;

270 
°rout
.
fd
 = 
BLOCK_OUT
;

271 
°rout
.
Êags
 = 0;

272 
	`va_°¨t
(
≠
, 
fmt
);

273 
	`dof‹m©
(&
°rout
, 
fmt
, 
≠
);

274 
	`va_íd
(
≠
);

275 
	`outc
('\0', &
°rout
);

276 i‡(
°rout
.
Êags
 & 
OUTPUT_ERR
)

277 
outbuf
[
Àngth
 - 1] = '\0';

278 
	}
}

281 
	$dof‹m©_wr
(*
cookõ
, c⁄° *
buf
, 
Àn
)

283 
ouçut
 *
o
;

284 
‹igÀn
;

285 
c
;

287 
o
 = (
ouçut
 *)
cookõ
;

288 
‹igÀn
 = 
Àn
;

289 
Àn
-- != 0) {

290 
c
 = ()*
buf
++;

291 
	`outc
(
c
, 
o
);

294  (
‹igÀn
);

295 
	}
}

298 
	$dof‹m©
(
ouçut
 *
de°
, c⁄° *
f
, 
va_li°
 
≠
)

300 
FILE
 *
Â
;

302 i‡((
Â
 = 
	`fw›í
(
de°
, 
dof‹m©_wr
)Ë!
NULL
) {

303 
	`vÂrötf
(
Â
, 
f
, 
≠
);

304 
	`f˛o£
(
Â
);

306 
	}
}

313 
	$xwrôe
(
fd
, *
buf
, 
nbyãs
)

315 
¡ry
;

316 
i
;

317 
n
;

319 
n
 = 
nbyãs
;

320 
¡ry
 = 0;

322 
i
 = 
	`wrôe
(
fd
, 
buf
, 
n
);

323 i‡(
i
 > 0) {

324 i‡((
n
 -
i
) <= 0)

325  
nbyãs
;

326 
buf
 +
i
;

327 
¡ry
 = 0;

328 } i‡(
i
 == 0) {

329 i‡(++
¡ry
 > 10)

330  
nbyãs
 - 
n
;

331 } i‡(
î∫o
 !
EINTR
) {

335 
	}
}

	@output.h

36 #i‚de‡
OUTPUT_INCL


38 
	~<°d¨g.h
>

40 
	souçut
 {

41 *
	m√xtc
;

42 
	m∆e·
;

43 *
	mbuf
;

44 
	mbufsize
;

45 
	mfd
;

46 
	mÊags
;

49 
ouçut
 output;

50 
ouçut
 
îrout
;

51 
ouçut
 
memout
;

52 
ouçut
 *
out1
;

53 
ouçut
 *
out2
;

55 
›í_mem
(*, , 
ouçut
 *);

56 
out1°r
(const *);

57 
out1q°r
(const *);

58 
out2°r
(const *);

59 
out2q°r
(const *);

60 
out°r
(c⁄° *, 
ouçut
 *);

61 
outq°r
(c⁄° *, 
ouçut
 *);

62 
em±youtbuf
(
ouçut
 *);

63 
ÊushÆl
();

64 
Êushout
(
ouçut
 *);

65 
‰ì°dout
();

66 
	$outfmt
(
ouçut
 *, c⁄° *, ...Ë
	`__¥ötÊike
(2, 3);

67 
	$out1fmt
(c⁄° *, ...Ë
	`__¥ötÊike
(1, 2);

68 
	$d¥ötf
(c⁄° *, ...Ë
	`__¥ötÊike
(1, 2);

69 
	$fmt°r
(*, , c⁄° *, ...Ë
	`__¥ötÊike
(3, 4);

70 
	$dof‹m©
(
ouçut
 *, c⁄° *, 
va_li°
Ë
	`__¥ötÊike
(2, 0);

71 
	`xwrôe
(, *, );

73 
	#outc
(
c
, 
fûe
Ë(--(fûe)->
∆e·
 < 0? (
	`em±youtbuf
(fûe), *(fûe)->
√xtc
++ = (c)Ë: (*(fûe)->√xtc++ = (c)))

	)

74 
	#out1c
(
c
Ë
	`outc
(c, 
out1
);

	)

75 
	#out2c
(
c
Ë
	`outc
(c, 
out2
);

	)

77 
	#OUTPUT_INCL


	)

	@parser.c

33 #i‚de‡
löt


35 
	gsccsid
[] = "@(#)parser.c 8.7 (Berkeley) 5/16/95";

38 
	~<sys/cdefs.h
>

39 
__FBSDID
("$FreeBSD: src/bin/sh/parser.c,v 1.58.2.1.2.1 2008/11/25 02:59:29 kensmith Exp $");

41 
	~<°dlib.h
>

42 
	~<uni°d.h
>

44 
	~"shñl.h
"

45 
	~"∑r£r.h
"

46 
	~"nodes.h
"

47 
	~"ex∑nd.h
"

48 
	~"sy¡ax.h
"

49 
	~"›ti⁄s.h
"

50 
	~"öput.h
"

51 
	~"ouçut.h
"

52 
	~"v¨.h
"

53 
	~"îr‹.h
"

54 
	~"memÆloc.h
"

55 
	~"my°rög.h
"

56 
	~"Æüs.h
"

57 
	~"show.h
"

58 
	~"evÆ.h
"

59 #i‚de‡
NO_HISTORY


60 
	~"myhi°edô.h
"

67 
	#EOFMARKLEN
 79

	)

68 
	#PROMPTLEN
 128

	)

71 
	~"tokí.h
"

75 
	shîedoc
 {

76 
hîedoc
 *
	m√xt
;

77 
node
 *
	mhîe
;

78 *
	meofm¨k
;

79 
	m°rùèbs
;

84 
STATIC
 
hîedoc
 *
	ghîedo˛i°
;

85 
STATIC
 
	g∑r£backquŸe
;

86 
STATIC
 
	gd›rom±
;

87 
STATIC
 
	g√ed¥om±
;

88 
STATIC
 
	gœ°tokí
;

89 
MKINIT
 
	gtokpushback
;

90 
STATIC
 *
	gw‹dãxt
;

91 
MKINIT
 
	gcheckkwd
;

92 
STATIC
 
nodñi°
 *
	gbackquŸñi°
;

93 
STATIC
 
node
 *
	gªdúnode
;

94 
STATIC
 
hîedoc
 *
	ghîedoc
;

95 
STATIC
 
	gquŸeÊag
;

96 
STATIC
 
	g°¨éöno
;

97 
STATIC
 
	gfun˛öno
;

100 
	gnﬂlü£s
 = 0;

103 
STATIC
 
node
 *
li°
();

104 
STATIC
 
node
 *
™d‹
();

105 
STATIC
 
node
 *
pùñöe
();

106 
STATIC
 
node
 *
comm™d
();

107 
STATIC
 
node
 *
sim∂ecmd
(node **, node *);

108 
STATIC
 
node
 *
makíame
();

109 
STATIC
 
∑r£‚ame
();

110 
STATIC
 
∑r£hîedoc
();

111 
STATIC
 
≥ektokí
();

112 
STATIC
 
ªadtokí
();

113 
STATIC
 
xxªadtokí
();

114 
STATIC
 
ªadtokí1
(, const *, *, );

115 
STATIC
 
n€x∑nd
(*);

116 
STATIC
 
sy√x≥˘
();

117 
STATIC
 
sy√º‹
(*);

118 
STATIC
 
£çrom±
();

126 
node
 *

127 
	$∑r£cmd
(
öãø˘
)

129 
t
;

131 
tokpushback
 = 0;

132 
d›rom±
 = 
öãø˘
;

133 i‡(
d›rom±
)

134 
	`£çrom±
(1);

136 
	`£çrom±
(0);

137 
√ed¥om±
 = 0;

138 
t
 = 
	`ªadtokí
();

139 i‡(
t
 =
TEOF
)

140  
NEOF
;

141 i‡(
t
 =
TNL
)

142  
NULL
;

143 
tokpushback
++;

144  
	`li°
(1);

145 
	}
}

148 
STATIC
 
node
 *

149 
	$li°
(
∆Êag
)

151 
node
 *
n1
, *
n2
, *
n3
;

152 
tok
;

154 
checkkwd
 = 2;

155 i‡(
∆Êag
 =0 && 
tokídli°
[
	`≥ektokí
()])

156  
NULL
;

157 
n1
 = 
NULL
;

159 
n2
 = 
	`™d‹
();

160 
tok
 = 
	`ªadtokí
();

161 i‡(
tok
 =
TBACKGND
) {

162 i‡(
n2
->
ty≥
 =
NCMD
 ||Ç2->ty≥ =
NPIPE
) {

163 
n2
->
ncmd
.
backgnd
 = 1;

164 } i‡(
n2
->
ty≥
 =
NREDIR
) {

165 
n2
->
ty≥
 = 
NBACKGND
;

167 
n3
 = (
node
 *)
	`°Æloc
( (
ƒedú
));

168 
n3
->
ty≥
 = 
NBACKGND
;

169 
n3
->
ƒedú
.
n
 = 
n2
;

170 
n3
->
ƒedú
.
ªdúe˘
 = 
NULL
;

171 
n2
 = 
n3
;

174 i‡(
n1
 =
NULL
) {

175 
n1
 = 
n2
;

178 
n3
 = (
node
 *)
	`°Æloc
( (
nbö¨y
));

179 
n3
->
ty≥
 = 
NSEMI
;

180 
n3
->
nbö¨y
.
ch1
 = 
n1
;

181 
n3
->
nbö¨y
.
ch2
 = 
n2
;

182 
n1
 = 
n3
;

184 
tok
) {

185 
TBACKGND
:

186 
TSEMI
:

187 
tok
 = 
	`ªadtokí
();

189 
TNL
:

190 i‡(
tok
 =
TNL
) {

191 
	`∑r£hîedoc
();

192 i‡(
∆Êag
)

193  
n1
;

195 
tokpushback
++;

197 
checkkwd
 = 2;

198 i‡(
tokídli°
[
	`≥ektokí
()])

199  
n1
;

201 
TEOF
:

202 i‡(
hîedo˛i°
)

203 
	`∑r£hîedoc
();

205 
	`pungëc
();

206  
n1
;

208 i‡(
∆Êag
)

209 
	`sy√x≥˘
(-1);

210 
tokpushback
++;

211  
n1
;

214 
	}
}

218 
STATIC
 
node
 *

219 
	$™d‹
()

221 
node
 *
n1
, *
n2
, *
n3
;

222 
t
;

224 
n1
 = 
	`pùñöe
();

226 i‡((
t
 = 
	`ªadtokí
()Ë=
TAND
) {

227 
t
 = 
NAND
;

228 } i‡(
t
 =
TOR
) {

229 
t
 = 
NOR
;

231 
tokpushback
++;

232  
n1
;

234 
n2
 = 
	`pùñöe
();

235 
n3
 = (
node
 *)
	`°Æloc
( (
nbö¨y
));

236 
n3
->
ty≥
 = 
t
;

237 
n3
->
nbö¨y
.
ch1
 = 
n1
;

238 
n3
->
nbö¨y
.
ch2
 = 
n2
;

239 
n1
 = 
n3
;

241 
	}
}

245 
STATIC
 
node
 *

246 
	$pùñöe
()

248 
node
 *
n1
, *
n2
, *
pùíode
;

249 
nodñi°
 *
Õ
, *
¥ev
;

250 
√g©e
;

252 
√g©e
 = 0;

253 
	`TRACE
(("pipeline:Éntered\n"));

254 
	`ªadtokí
(Ë=
TNOT
)

255 
√g©e
 = !negate;

256 
tokpushback
++;

257 
n1
 = 
	`comm™d
();

258 i‡(
	`ªadtokí
(Ë=
TPIPE
) {

259 
pùíode
 = (
node
 *)
	`°Æloc
( (
≈ùe
));

260 
pùíode
->
ty≥
 = 
NPIPE
;

261 
pùíode
->
≈ùe
.
backgnd
 = 0;

262 
Õ
 = (
nodñi°
 *)
	`°Æloc
( (nodelist));

263 
pùíode
->
≈ùe
.
cmdli°
 = 
Õ
;

264 
Õ
->
n
 = 
n1
;

266 
¥ev
 = 
Õ
;

267 
Õ
 = (
nodñi°
 *)
	`°Æloc
( (nodelist));

268 
Õ
->
n
 = 
	`comm™d
();

269 
¥ev
->
√xt
 = 
Õ
;

270 } 
	`ªadtokí
(Ë=
TPIPE
);

271 
Õ
->
√xt
 = 
NULL
;

272 
n1
 = 
pùíode
;

274 
tokpushback
++;

275 i‡(
√g©e
) {

276 
n2
 = (
node
 *)
	`°Æloc
( (
¬Ÿ
));

277 
n2
->
ty≥
 = 
NNOT
;

278 
n2
->
¬Ÿ
.
com
 = 
n1
;

279  
n2
;

281  
n1
;

282 
	}
}

286 
STATIC
 
node
 *

287 
	$comm™d
()

289 
node
 *
n1
, *
n2
;

290 
node
 *
≠
, **
≠p
;

291 
node
 *
˝
, **
˝p
;

292 
node
 *
ªdú
, **
Ωp
;

293 
t
, 
√g©e
 = 0;

295 
checkkwd
 = 2;

296 
ªdú
 = 
NULL
;

297 
n1
 = 
NULL
;

298 
Ωp
 = &
ªdú
;

301 
	`ªadtokí
(Ë=
TREDIR
) {

302 *
Ωp
 = 
n2
 = 
ªdúnode
;

303 
Ωp
 = &
n2
->
nfûe
.
√xt
;

304 
	`∑r£‚ame
();

306 
tokpushback
++;

308 
	`ªadtokí
(Ë=
TNOT
) {

309 
	`TRACE
(("command: TNOTÑecognized\n"));

310 
√g©e
 = !negate;

312 
tokpushback
++;

314 
	`ªadtokí
()) {

315 
TIF
:

316 
n1
 = (
node
 *)
	`°Æloc
( (
nif
));

317 
n1
->
ty≥
 = 
NIF
;

318 i‡((
n1
->
nif
.
ã°
 = 
	`li°
(0)Ë=
NULL
)

319 
	`sy√x≥˘
(-1);

320 i‡(
	`ªadtokí
(Ë!
TTHEN
)

321 
	`sy√x≥˘
(
TTHEN
);

322 
n1
->
nif
.
iÂ¨t
 = 
	`li°
(0);

323 
n2
 = 
n1
;

324 
	`ªadtokí
(Ë=
TELIF
) {

325 
n2
->
nif
.
ñ£∑π
 = (
node
 *)
	`°Æloc
( (nif));

326 
n2
 =Ç2->
nif
.
ñ£∑π
;

327 
n2
->
ty≥
 = 
NIF
;

328 i‡((
n2
->
nif
.
ã°
 = 
	`li°
(0)Ë=
NULL
)

329 
	`sy√x≥˘
(-1);

330 i‡(
	`ªadtokí
(Ë!
TTHEN
)

331 
	`sy√x≥˘
(
TTHEN
);

332 
n2
->
nif
.
iÂ¨t
 = 
	`li°
(0);

334 i‡(
œ°tokí
 =
TELSE
)

335 
n2
->
nif
.
ñ£∑π
 = 
	`li°
(0);

337 
n2
->
nif
.
ñ£∑π
 = 
NULL
;

338 
tokpushback
++;

340 i‡(
	`ªadtokí
(Ë!
TFI
)

341 
	`sy√x≥˘
(
TFI
);

342 
checkkwd
 = 1;

344 
TWHILE
:

345 
TUNTIL
: {

346 
gŸ
;

347 
n1
 = (
node
 *)
	`°Æloc
( (
nbö¨y
));

348 
n1
->
ty≥
 = (
œ°tokí
 =
TWHILE
)? 
NWHILE
 : 
NUNTIL
;

349 i‡((
n1
->
nbö¨y
.
ch1
 = 
	`li°
(0)Ë=
NULL
)

350 
	`sy√x≥˘
(-1);

351 i‡((
gŸ
=
	`ªadtokí
()Ë!
TDO
) {

352 
	`TRACE
(("ex≥˘ög DO gŸ %†%s\n", 
tok«me
[
gŸ
], gŸ =
TWORD
 ? 
w‹dãxt
 : ""));

353 
	`sy√x≥˘
(
TDO
);

355 
n1
->
nbö¨y
.
ch2
 = 
	`li°
(0);

356 i‡(
	`ªadtokí
(Ë!
TDONE
)

357 
	`sy√x≥˘
(
TDONE
);

358 
checkkwd
 = 1;

361 
TFOR
:

362 i‡(
	`ªadtokí
(Ë!
TWORD
 || 
quŸeÊag
 || ! 
	`good«me
(
w‹dãxt
))

363 
	`sy√º‹
("Bad forÜoop variable");

364 
n1
 = (
node
 *)
	`°Æloc
( (
nf‹
));

365 
n1
->
ty≥
 = 
NFOR
;

366 
n1
->
nf‹
.
v¨
 = 
w‹dãxt
;

367 i‡(
	`ªadtokí
(Ë=
TWORD
 && ! 
quŸeÊag
 && 
	`equÆ
(
w‹dãxt
, "in")) {

368 
≠p
 = &
≠
;

369 
	`ªadtokí
(Ë=
TWORD
) {

370 
n2
 = (
node
 *)
	`°Æloc
( (
«rg
));

371 
n2
->
ty≥
 = 
NARG
;

372 
n2
->
«rg
.
ãxt
 = 
w‹dãxt
;

373 
n2
->
«rg
.
backquŸe
 = 
backquŸñi°
;

374 *
≠p
 = 
n2
;

375 
≠p
 = &
n2
->
«rg
.
√xt
;

377 *
≠p
 = 
NULL
;

378 
n1
->
nf‹
.
¨gs
 = 
≠
;

379 i‡(
œ°tokí
 !
TNL
 &&Üa°tokí !
TSEMI
)

380 
	`sy√x≥˘
(-1);

382 
¨gv¨s
[5] = {

383 
CTLVAR
, 
VSNORMAL
|
VSQUOTE
, '@', '=', '\0'

385 
n2
 = (
node
 *)
	`°Æloc
( (
«rg
));

386 
n2
->
ty≥
 = 
NARG
;

387 
n2
->
«rg
.
ãxt
 = 
¨gv¨s
;

388 
n2
->
«rg
.
backquŸe
 = 
NULL
;

389 
n2
->
«rg
.
√xt
 = 
NULL
;

390 
n1
->
nf‹
.
¨gs
 = 
n2
;

395 i‡(
œ°tokí
 !
TNL
 &&Üa°tokí !
TSEMI
)

396 
tokpushback
++;

398 
checkkwd
 = 2;

399 i‡((
t
 = 
	`ªadtokí
()Ë=
TDO
)

400 
t
 = 
TDONE
;

401 i‡(
t
 =
TBEGIN
)

402 
t
 = 
TEND
;

404 
	`sy√x≥˘
(-1);

405 
n1
->
nf‹
.
body
 = 
	`li°
(0);

406 i‡(
	`ªadtokí
(Ë!
t
)

407 
	`sy√x≥˘
(
t
);

408 
checkkwd
 = 1;

410 
TCASE
:

411 
n1
 = (
node
 *)
	`°Æloc
( (
nˇ£
));

412 
n1
->
ty≥
 = 
NCASE
;

413 i‡(
	`ªadtokí
(Ë!
TWORD
)

414 
	`sy√x≥˘
(
TWORD
);

415 
n1
->
nˇ£
.
ex¥
 = 
n2
 = (
node
 *)
	`°Æloc
( (
«rg
));

416 
n2
->
ty≥
 = 
NARG
;

417 
n2
->
«rg
.
ãxt
 = 
w‹dãxt
;

418 
n2
->
«rg
.
backquŸe
 = 
backquŸñi°
;

419 
n2
->
«rg
.
√xt
 = 
NULL
;

420 
	`ªadtokí
(Ë=
TNL
);

421 i‡(
œ°tokí
 !
TWORD
 || ! 
	`equÆ
(
w‹dãxt
, "in"))

422 
	`sy√º‹
("expecting \"in\"");

423 
˝p
 = &
n1
->
nˇ£
.
ˇ£s
;

424 
nﬂlü£s
 = 1;

425 
checkkwd
 = 2, 
	`ªadtokí
();

426 
œ°tokí
 !
TESAC
) {

427 *
˝p
 = 
˝
 = (
node
 *)
	`°Æloc
( (
n˛i°
));

428 
˝
->
ty≥
 = 
NCLIST
;

429 
≠p
 = &
˝
->
n˛i°
.
∑âîn
;

430 i‡(
œ°tokí
 =
TLP
)

431 
	`ªadtokí
();

433 *
≠p
 = 
≠
 = (
node
 *)
	`°Æloc
( (
«rg
));

434 
≠
->
ty≥
 = 
NARG
;

435 
≠
->
«rg
.
ãxt
 = 
w‹dãxt
;

436 
≠
->
«rg
.
backquŸe
 = 
backquŸñi°
;

437 i‡(
checkkwd
 = 2, 
	`ªadtokí
(Ë!
TPIPE
)

439 
≠p
 = &
≠
->
«rg
.
√xt
;

440 
	`ªadtokí
();

442 
≠
->
«rg
.
√xt
 = 
NULL
;

443 i‡(
œ°tokí
 !
TRP
)

444 
nﬂlü£s
 = 0, 
	`sy√x≥˘
(
TRP
);

445 
˝
->
n˛i°
.
body
 = 
	`li°
(0);

447 
checkkwd
 = 2;

448 i‡((
t
 = 
	`ªadtokí
()Ë!
TESAC
) {

449 i‡(
t
 !
TENDCASE
)

450 
nﬂlü£s
 = 0, 
	`sy√x≥˘
(
TENDCASE
);

452 
checkkwd
 = 2, 
	`ªadtokí
();

454 
˝p
 = &
˝
->
n˛i°
.
√xt
;

456 
nﬂlü£s
 = 0;

457 *
˝p
 = 
NULL
;

458 
checkkwd
 = 1;

460 
TLP
:

461 
n1
 = (
node
 *)
	`°Æloc
( (
ƒedú
));

462 
n1
->
ty≥
 = 
NSUBSHELL
;

463 
n1
->
ƒedú
.
n
 = 
	`li°
(0);

464 
n1
->
ƒedú
.
ªdúe˘
 = 
NULL
;

465 i‡(
	`ªadtokí
(Ë!
TRP
)

466 
	`sy√x≥˘
(
TRP
);

467 
checkkwd
 = 1;

469 
TBEGIN
:

470 
n1
 = 
	`li°
(0);

471 i‡(
	`ªadtokí
(Ë!
TEND
)

472 
	`sy√x≥˘
(
TEND
);

473 
checkkwd
 = 1;

476 
TSEMI
:

477 
TAND
:

478 
TOR
:

483 i‡(!
ªdú
)

484 
	`sy√x≥˘
(-1);

485 
TNL
:

486 
TEOF
:

487 
TWORD
:

488 
TRP
:

489 
tokpushback
++;

490 
n1
 = 
	`sim∂ecmd
(
Ωp
, 
ªdú
);

491 
check√g
;

493 
	`sy√x≥˘
(-1);

497 
	`ªadtokí
(Ë=
TREDIR
) {

498 *
Ωp
 = 
n2
 = 
ªdúnode
;

499 
Ωp
 = &
n2
->
nfûe
.
√xt
;

500 
	`∑r£‚ame
();

502 
tokpushback
++;

503 *
Ωp
 = 
NULL
;

504 i‡(
ªdú
) {

505 i‡(
n1
->
ty≥
 !
NSUBSHELL
) {

506 
n2
 = (
node
 *)
	`°Æloc
( (
ƒedú
));

507 
n2
->
ty≥
 = 
NREDIR
;

508 
n2
->
ƒedú
.
n
 = 
n1
;

509 
n1
 = 
n2
;

511 
n1
->
ƒedú
.
ªdúe˘
 = 
ªdú
;

514 
check√g
:

515 i‡(
√g©e
) {

516 
n2
 = (
node
 *)
	`°Æloc
( (
¬Ÿ
));

517 
n2
->
ty≥
 = 
NNOT
;

518 
n2
->
¬Ÿ
.
com
 = 
n1
;

519  
n2
;

522  
n1
;

523 
	}
}

526 
STATIC
 
node
 *

527 
	$sim∂ecmd
(
node
 **
Ωp
, nodê*
ªdú
)

529 
node
 *
¨gs
, **
≠p
;

530 
node
 **
‹ig_Ωp
 = 
Ωp
;

531 
node
 *
n
 = 
NULL
, *
n2
;

532 
√g©e
 = 0;

536 i‡(
ªdú
 == 0)

537 
Ωp
 = &
ªdú
;

539 
¨gs
 = 
NULL
;

540 
≠p
 = &
¨gs
;

546 
‹ig_Ωp
 = 
Ωp
;

548 
	`ªadtokí
(Ë=
TNOT
) {

549 
	`TRACE
(("command: TNOTÑecognized\n"));

550 
√g©e
 = !negate;

552 
tokpushback
++;

555 i‡(
	`ªadtokí
(Ë=
TWORD
) {

556 
n
 = (
node
 *)
	`°Æloc
( (
«rg
));

557 
n
->
ty≥
 = 
NARG
;

558 
n
->
«rg
.
ãxt
 = 
w‹dãxt
;

559 
n
->
«rg
.
backquŸe
 = 
backquŸñi°
;

560 *
≠p
 = 
n
;

561 
≠p
 = &
n
->
«rg
.
√xt
;

562 } i‡(
œ°tokí
 =
TREDIR
) {

563 *
Ωp
 = 
n
 = 
ªdúnode
;

564 
Ωp
 = &
n
->
nfûe
.
√xt
;

565 
	`∑r£‚ame
();

566 } i‡(
œ°tokí
 =
TLP
 && 
≠p
 =&
¨gs
->
«rg
.
√xt


567 && 
Ωp
 =
‹ig_Ωp
) {

569 i‡(
	`ªadtokí
(Ë!
TRP
)

570 
	`sy√x≥˘
(
TRP
);

571 
fun˛öno
 = 
∂öno
;

572 #ifde‡
nŸdef


573 i‡(! 
	`good«me
(
n
->
«rg
.
ãxt
))

574 
	`sy√º‹
("Bad functionÇame");

576 
n
->
ty≥
 = 
NDEFUN
;

577 
n
->
«rg
.
√xt
 = 
	`comm™d
();

578 
fun˛öno
 = 0;

579 
check√g
;

581 
tokpushback
++;

585 *
≠p
 = 
NULL
;

586 *
Ωp
 = 
NULL
;

587 
n
 = (
node
 *)
	`°Æloc
( (
ncmd
));

588 
n
->
ty≥
 = 
NCMD
;

589 
n
->
ncmd
.
backgnd
 = 0;

590 
n
->
ncmd
.
¨gs
 =árgs;

591 
n
->
ncmd
.
ªdúe˘
 = 
ªdú
;

593 
check√g
:

594 i‡(
√g©e
) {

595 
n2
 = (
node
 *)
	`°Æloc
( (
¬Ÿ
));

596 
n2
->
ty≥
 = 
NNOT
;

597 
n2
->
¬Ÿ
.
com
 = 
n
;

598  
n2
;

601  
n
;

602 
	}
}

604 
STATIC
 
node
 *

605 
	$makíame
()

607 
node
 *
n
;

609 
n
 = (
node
 *)
	`°Æloc
( (
«rg
));

610 
n
->
ty≥
 = 
NARG
;

611 
n
->
«rg
.
√xt
 = 
NULL
;

612 
n
->
«rg
.
ãxt
 = 
w‹dãxt
;

613 
n
->
«rg
.
backquŸe
 = 
backquŸñi°
;

614  
n
;

615 
	}
}

617 
	$fixªdú
(
node
 *
n
, c⁄° *
ãxt
, 
îr
)

619 
	`TRACE
(("FixÑedú %†%d\n", 
ãxt
, 
îr
));

620 i‡(!
îr
)

621 
n
->
ndup
.
v«me
 = 
NULL
;

623 i‡(
	`is_digô
(
ãxt
[0]) &&Åext[1] == '\0')

624 
n
->
ndup
.
dupfd
 = 
	`digô_vÆ
(
ãxt
[0]);

625 i‡(
ãxt
[0] == '-' &&Åext[1] == '\0')

626 
n
->
ndup
.
dupfd
 = -1;

629 i‡(
îr
)

630 
	`sy√º‹
("Bad fdÇumber");

632 
n
->
ndup
.
v«me
 = 
	`makíame
();

634 
	}
}

637 
STATIC
 

638 
	$∑r£‚ame
()

640 
node
 *
n
 = 
ªdúnode
;

642 i‡(
	`ªadtokí
(Ë!
TWORD
)

643 
	`sy√x≥˘
(-1);

644 i‡(
n
->
ty≥
 =
NHERE
) {

645 
hîedoc
 *
hîe
 = heredoc;

646 
hîedoc
 *
p
;

647 
i
;

649 i‡(
quŸeÊag
 == 0)

650 
n
->
ty≥
 = 
NXHERE
;

651 
	`TRACE
(("Hîêdocumíà%d\n", 
n
->
ty≥
));

652 i‡(
hîe
->
°rùèbs
) {

653 *
w‹dãxt
 == '\t')

654 
w‹dãxt
++;

656 i‡(! 
	`n€x∑nd
(
w‹dãxt
Ë|| (
i
 = 
	`°æí
(w‹dãxt)Ë=0 || i > 
EOFMARKLEN
)

657 
	`sy√º‹
("IllegalÉof marker for <<Ñedirection");

658 
	`rmesˇ≥s
(
w‹dãxt
);

659 
hîe
->
eofm¨k
 = 
w‹dãxt
;

660 
hîe
->
√xt
 = 
NULL
;

661 i‡(
hîedo˛i°
 =
NULL
)

662 
hîedo˛i°
 = 
hîe
;

664 
p
 = 
hîedo˛i°
 ;Ö->
√xt
 ;Ö =Ö->next);

665 
p
->
√xt
 = 
hîe
;

667 } i‡(
n
->
ty≥
 =
NTOFD
 ||Ç->ty≥ =
NFROMFD
) {

668 
	`fixªdú
(
n
, 
w‹dãxt
, 0);

670 
n
->
nfûe
.
‚ame
 = 
	`makíame
();

672 
	}
}

679 
STATIC
 

680 
	$∑r£hîedoc
()

682 
hîedoc
 *
hîe
;

683 
node
 *
n
;

685 
hîedo˛i°
) {

686 
hîe
 = 
hîedo˛i°
;

687 
hîedo˛i°
 = 
hîe
->
√xt
;

688 i‡(
√ed¥om±
) {

689 
	`£çrom±
(2);

690 
√ed¥om±
 = 0;

692 
	`ªadtokí1
(
	`pgëc
(), 
hîe
->hîe->
ty≥
 =
NHERE
? 
SQSYNTAX
 : 
DQSYNTAX
,

693 
hîe
->
eofm¨k
, hîe->
°rùèbs
);

694 
n
 = (
node
 *)
	`°Æloc
( (
«rg
));

695 
n
->
«rg
.
ty≥
 = 
NARG
;

696 
n
->
«rg
.
√xt
 = 
NULL
;

697 
n
->
«rg
.
ãxt
 = 
w‹dãxt
;

698 
n
->
«rg
.
backquŸe
 = 
backquŸñi°
;

699 
hîe
->hîe->
nhîe
.
doc
 = 
n
;

701 
	}
}

703 
STATIC
 

704 
	$≥ektokí
()

706 
t
;

708 
t
 = 
	`ªadtokí
();

709 
tokpushback
++;

710  (
t
);

711 
	}
}

713 
STATIC
 

714 
	$ªadtokí
()

716 
t
;

717 
ßvecheckkwd
 = 
checkkwd
;

718 
Æüs
 *
≠
;

719 #ifde‡
DEBUG


720 
Æªady£í
 = 
tokpushback
;

723 
t›
:

724 
t
 = 
	`xxªadtokí
();

726 i‡(
checkkwd
) {

730 i‡(
checkkwd
 == 2) {

731 
checkkwd
 = 0;

732 
t
 =
TNL
) {

733 
	`∑r£hîedoc
();

734 
t
 = 
	`xxªadtokí
();

737 
checkkwd
 = 0;

741 i‡(
t
 =
TWORD
 && !
quŸeÊag
)

743 c⁄° * c⁄° *
µ
;

745 
µ
 = 
∑r£kwd
; *pp;Öp++) {

746 i‡(**
µ
 =*
w‹dãxt
 && 
	`equÆ
(*pp, wordtext))

748 
œ°tokí
 = 
t
 = 
µ
 - 
∑r£kwd
 + 
KWDOFFSET
;

749 
	`TRACE
(("keyw‹d %†ªcognized\n", 
tok«me
[
t
]));

750 
out
;

753 i‡(
nﬂlü£s
 == 0 &&

754 (
≠
 = 
	`looku∑lüs
(
w‹dãxt
, 1)Ë!
NULL
) {

755 
	`push°rög
(
≠
->
vÆ
, 
	`°æí
(ap->val),áp);

756 
checkkwd
 = 
ßvecheckkwd
;

757 
t›
;

760 
out
:

761 
checkkwd
 = (
t
 =
TNOT
Ë? 
ßvecheckkwd
 : 0;

763 #ifde‡
DEBUG


764 i‡(!
Æªady£í
)

765 
	`TRACE
(("tokí %†%s\n", 
tok«me
[
t
],Å =
TWORD
 ? 
w‹dãxt
 : ""));

767 
	`TRACE
(("ªªadÅokí %†%s\n", 
tok«me
[
t
],Å =
TWORD
 ? 
w‹dãxt
 : ""));

769  (
t
);

770 
	}
}

791 
	#RETURN
(
tokí
Ë 
œ°tokí
 = 
	)
token

793 
STATIC
 

794 
	$xxªadtokí
()

796 
c
;

798 i‡(
tokpushback
) {

799 
tokpushback
 = 0;

800  
œ°tokí
;

802 i‡(
√ed¥om±
) {

803 
	`£çrom±
(2);

804 
√ed¥om±
 = 0;

806 
°¨éöno
 = 
∂öno
;

808 
c
 = 
	`pgëc_ma¸o
();

809 i‡(
c
 == ' ' || c == '\t')

811 
c
) {

815 (
c
 = 
	`pgëc
()Ë!'\n' && c !
PEOF
);

816 
	`pungëc
();

819 i‡(
	`pgëc
() == '\n') {

820 
°¨éöno
 = ++
∂öno
;

821 i‡(
d›rom±
)

822 
	`£çrom±
(2);

824 
	`£çrom±
(0);

827 
	`pungëc
();

828 
bªaklo›
;

830 
∂öno
++;

831 
√ed¥om±
 = 
d›rom±
;

832 
	`RETURN
(
TNL
);

833 
PEOF
:

834 
	`RETURN
(
TEOF
);

836 i‡(
	`pgëc
() == '&')

837 
	`RETURN
(
TAND
);

838 
	`pungëc
();

839 
	`RETURN
(
TBACKGND
);

841 i‡(
	`pgëc
() == '|')

842 
	`RETURN
(
TOR
);

843 
	`pungëc
();

844 
	`RETURN
(
TPIPE
);

846 i‡(
	`pgëc
() == ';')

847 
	`RETURN
(
TENDCASE
);

848 
	`pungëc
();

849 
	`RETURN
(
TSEMI
);

851 
	`RETURN
(
TLP
);

853 
	`RETURN
(
TRP
);

855 
bªaklo›
;

858 
bªaklo›
:

859  
	`ªadtokí1
(
c
, 
BASESYNTAX
, (*)
NULL
, 0);

860 #unde‡
RETURN


861 
	}
}

877 
	#CHECKEND
(Ë{
checkíd
; 
checkíd_ªtu∫
:;}

	)

878 
	#PARSEREDIR
(Ë{
∑r£ªdú
; 
∑r£ªdú_ªtu∫
:;}

	)

879 
	#PARSESUB
(Ë{
∑r£sub
; 
∑r£sub_ªtu∫
:;}

	)

880 
	#PARSEBACKQOLD
(Ë{
ﬁd°yÀ
 = 1; 
∑r£backq
; 
∑r£backq_ﬁdªtu∫
:;}

	)

881 
	#PARSEBACKQNEW
(Ë{
ﬁd°yÀ
 = 0; 
∑r£backq
; 
∑r£backq_√wªtu∫
:;}

	)

882 
	#PARSEARITH
(Ë{
∑r£¨ôh
; 
∑r£¨ôh_ªtu∫
:;}

	)

884 
STATIC
 

885 
	$ªadtokí1
(
fú°c
, c⁄° *
sy¡ax
, *
eofm¨k
, 
°rùèbs
)

887 
c
 = 
fú°c
;

888 *
out
;

889 
Àn
;

890 
löe
[
EOFMARKLEN
 + 1];

891 
nodñi°
 *
bqli°
;

892 
quŸef
;

893 
dblquŸe
;

894 
v¨√°
;

895 
¨öe°
;

896 
∑ª∆evñ
;

897 
ﬁd°yÀ
;

898 c⁄° *
¥evsy¡ax
;

899 
sy√¡ry
;

900 #i‡
__GNUC__


902 (Ë&
out
;

903 (Ë&
quŸef
;

904 (Ë&
dblquŸe
;

905 (Ë&
v¨√°
;

906 (Ë&
¨öe°
;

907 (Ë&
∑ª∆evñ
;

908 (Ë&
ﬁd°yÀ
;

909 (Ë&
¥evsy¡ax
;

910 (Ë&
sy¡ax
;

911 (Ë&
sy√¡ry
;

914 
°¨éöno
 = 
∂öno
;

915 
dblquŸe
 = 0;

916 i‡(
sy¡ax
 =
DQSYNTAX
)

917 
dblquŸe
 = 1;

918 
quŸef
 = 0;

919 
bqli°
 = 
NULL
;

920 
v¨√°
 = 0;

921 
¨öe°
 = 0;

922 
∑ª∆evñ
 = 0;

924 
	`STARTSTACKSTR
(
out
);

925 
lo›
: {

926 
	`CHECKEND
();

928 
	`CHECKSTRSPACE
(3, 
out
);

930 
sy√¡ry
 = 
sy¡ax
[
c
];

932 
sy√¡ry
) {

933 
CNL
:

934 i‡(
sy¡ax
 =
BASESYNTAX
)

935 
ídw‹d
;

936 
	`USTPUTC
(
c
, 
out
);

937 
∂öno
++;

938 i‡(
d›rom±
)

939 
	`£çrom±
(2);

941 
	`£çrom±
(0);

942 
c
 = 
	`pgëc
();

943 
lo›
;

944 
CWORD
:

945 
	`USTPUTC
(
c
, 
out
);

947 
CCTL
:

948 i‡(
eofm¨k
 =
NULL
 || 
dblquŸe
)

949 
	`USTPUTC
(
CTLESC
, 
out
);

950 
	`USTPUTC
(
c
, 
out
);

952 
CBACK
:

953 
c
 = 
	`pgëc
();

954 i‡(
c
 =
PEOF
) {

955 
	`USTPUTC
('\\', 
out
);

956 
	`pungëc
();

957 } i‡(
c
 == '\n') {

958 
∂öno
++;

959 i‡(
d›rom±
)

960 
	`£çrom±
(2);

962 
	`£çrom±
(0);

964 i‡(
dblquŸe
 && 
c
 != '\\' &&

965 
c
 != '`' && c != '$' &&

966 (
c
 !'"' || 
eofm¨k
 !
NULL
))

967 
	`USTPUTC
('\\', 
out
);

968 i‡(
SQSYNTAX
[
c
] =
CCTL
)

969 
	`USTPUTC
(
CTLESC
, 
out
);

970 i‡(
eofm¨k
 =
NULL
)

971 
	`USTPUTC
(
CTLQUOTEMARK
, 
out
);

972 
	`USTPUTC
(
c
, 
out
);

973 
quŸef
++;

976 
CSQUOTE
:

977 i‡(
eofm¨k
 =
NULL
)

978 
	`USTPUTC
(
CTLQUOTEMARK
, 
out
);

979 
sy¡ax
 = 
SQSYNTAX
;

981 
CDQUOTE
:

982 i‡(
eofm¨k
 =
NULL
)

983 
	`USTPUTC
(
CTLQUOTEMARK
, 
out
);

984 
sy¡ax
 = 
DQSYNTAX
;

985 
dblquŸe
 = 1;

987 
CENDQUOTE
:

988 i‡(
eofm¨k
 !
NULL
 && 
¨öe°
 == 0 &&

989 
v¨√°
 == 0) {

990 
	`USTPUTC
(
c
, 
out
);

992 i‡(
¨öe°
) {

993 
sy¡ax
 = 
ARISYNTAX
;

994 
dblquŸe
 = 0;

995 } i‡(
eofm¨k
 =
NULL
) {

996 
sy¡ax
 = 
BASESYNTAX
;

997 
dblquŸe
 = 0;

999 
quŸef
++;

1002 
CVAR
:

1003 
	`PARSESUB
();

1005 
CENDVAR
:

1006 i‡(
v¨√°
 > 0) {

1007 
v¨√°
--;

1008 
	`USTPUTC
(
CTLENDVAR
, 
out
);

1010 
	`USTPUTC
(
c
, 
out
);

1013 
CLP
:

1014 
∑ª∆evñ
++;

1015 
	`USTPUTC
(
c
, 
out
);

1017 
CRP
:

1018 i‡(
∑ª∆evñ
 > 0) {

1019 
	`USTPUTC
(
c
, 
out
);

1020 --
∑ª∆evñ
;

1022 i‡(
	`pgëc
() == ')') {

1023 i‡(--
¨öe°
 == 0) {

1024 
	`USTPUTC
(
CTLENDARI
, 
out
);

1025 
sy¡ax
 = 
¥evsy¡ax
;

1026 i‡(
sy¡ax
 =
DQSYNTAX
)

1027 
dblquŸe
 = 1;

1029 
dblquŸe
 = 0;

1031 
	`USTPUTC
(')', 
out
);

1037 
	`pungëc
();

1038 
	`USTPUTC
(')', 
out
);

1042 
CBQUOTE
:

1043 
	`PARSEBACKQOLD
();

1045 
CEOF
:

1046 
ídw‹d
;

1048 i‡(
v¨√°
 == 0)

1049 
ídw‹d
;

1050 
	`USTPUTC
(
c
, 
out
);

1052 
c
 = 
	`pgëc_ma¸o
();

1055 
ídw‹d
:

1056 i‡(
sy¡ax
 =
ARISYNTAX
)

1057 
	`sy√º‹
("Missing '))'");

1058 i‡(
sy¡ax
 !
BASESYNTAX
 && ! 
∑r£backquŸe
 && 
eofm¨k
 =
NULL
)

1059 
	`sy√º‹
("Unterminated quoted string");

1060 i‡(
v¨√°
 != 0) {

1061 
°¨éöno
 = 
∂öno
;

1062 
	`sy√º‹
("Missing '}'");

1064 
	`USTPUTC
('\0', 
out
);

1065 
Àn
 = 
out
 - 
	`°ackblock
();

1066 
out
 = 
	`°ackblock
();

1067 i‡(
eofm¨k
 =
NULL
) {

1068 i‡((
c
 == '>' || c == '<')

1069 && 
quŸef
 == 0

1070 && 
Àn
 <= 2

1071 && (*
out
 ='\0' || 
	`is_digô
(*out))) {

1072 
	`PARSEREDIR
();

1073  
œ°tokí
 = 
TREDIR
;

1075 
	`pungëc
();

1078 
quŸeÊag
 = 
quŸef
;

1079 
backquŸñi°
 = 
bqli°
;

1080 
	`gøb°ackblock
(
Àn
);

1081 
w‹dãxt
 = 
out
;

1082  
œ°tokí
 = 
TWORD
;

1093 
checkíd
: {

1094 i‡(
eofm¨k
) {

1095 i‡(
°rùèbs
) {

1096 
c
 == '\t')

1097 
c
 = 
	`pgëc
();

1099 i‡(
c
 =*
eofm¨k
) {

1100 i‡(
	`pfgës
(
löe
, ÜöeË!
NULL
) {

1101 *
p
, *
q
;

1103 
p
 = 
löe
;

1104 
q
 = 
eofm¨k
 + 1 ; *q && *
p
 == *q ;Ö++, q++);

1105 i‡(*
p
 ='\n' && *
q
 == '\0') {

1106 
c
 = 
PEOF
;

1107 
∂öno
++;

1108 
√ed¥om±
 = 
d›rom±
;

1110 
	`push°rög
(
löe
, 
	`°æí
÷öe), 
NULL
);

1115 
checkíd_ªtu∫
;

1125 
∑r£ªdú
: {

1126 
fd
 = *
out
;

1127 
node
 *
≈
;

1129 
≈
 = (
node
 *)
	`°Æloc
( (
nfûe
));

1130 i‡(
c
 == '>') {

1131 
≈
->
nfûe
.
fd
 = 1;

1132 
c
 = 
	`pgëc
();

1133 i‡(
c
 == '>')

1134 
≈
->
ty≥
 = 
NAPPEND
;

1135 i‡(
c
 == '&')

1136 
≈
->
ty≥
 = 
NTOFD
;

1137 i‡(
c
 == '|')

1138 
≈
->
ty≥
 = 
NCLOBBER
;

1140 
≈
->
ty≥
 = 
NTO
;

1141 
	`pungëc
();

1144 
≈
->
nfûe
.
fd
 = 0;

1145 
c
 = 
	`pgëc
();

1146 i‡(
c
 == '<') {

1147 i‡( (
nfûe
Ë! (
nhîe
)) {

1148 
≈
 = (
node
 *)
	`°Æloc
( (
nhîe
));

1149 
≈
->
nfûe
.
fd
 = 0;

1151 
≈
->
ty≥
 = 
NHERE
;

1152 
hîedoc
 = (hîedo¯*)
	`°Æloc
( (heredoc));

1153 
hîedoc
->
hîe
 = 
≈
;

1154 i‡((
c
 = 
	`pgëc
()) == '-') {

1155 
hîedoc
->
°rùèbs
 = 1;

1157 
hîedoc
->
°rùèbs
 = 0;

1158 
	`pungëc
();

1160 } i‡(
c
 == '&')

1161 
≈
->
ty≥
 = 
NFROMFD
;

1162 i‡(
c
 == '>')

1163 
≈
->
ty≥
 = 
NFROMTO
;

1165 
≈
->
ty≥
 = 
NFROM
;

1166 
	`pungëc
();

1169 i‡(
fd
 != '\0')

1170 
≈
->
nfûe
.
fd
 = 
	`digô_vÆ
(fd);

1171 
ªdúnode
 = 
≈
;

1172 
∑r£ªdú_ªtu∫
;

1181 
∑r£sub
: {

1182 
buf
[10];

1183 
subty≥
;

1184 
ty≥loc
;

1185 
Êags
;

1186 *
p
;

1187 c⁄° 
ty≥s
[] = "}-+?=";

1188 
bøckëed_«me
 = 0;

1189 
i
;

1190 
löno
;

1191 
Àngth
;

1193 
c
 = 
	`pgëc
();

1194 i‡(
c
 !'(' && c !'{' && (
	`is_eof
(cË|| !
	`is_«me
(c)) &&

1195 !
	`is_•ecül
(
c
)) {

1196 
	`USTPUTC
('$', 
out
);

1197 
	`pungëc
();

1198 } i‡(
c
 == '(') {

1199 i‡(
	`pgëc
() == '(') {

1200 
	`PARSEARITH
();

1202 
	`pungëc
();

1203 
	`PARSEBACKQNEW
();

1206 
	`USTPUTC
(
CTLVAR
, 
out
);

1207 
ty≥loc
 = 
out
 - 
	`°ackblock
();

1208 
	`USTPUTC
(
VSNORMAL
, 
out
);

1209 
subty≥
 = 
VSNORMAL
;

1210 
Êags
 = 0;

1211 i‡(
c
 == '{') {

1212 
bøckëed_«me
 = 1;

1213 
c
 = 
	`pgëc
();

1214 i‡(
c
 == '#') {

1215 i‡((
c
 = 
	`pgëc
()) == '}')

1216 
c
 = '#';

1218 
subty≥
 = 
VSLENGTH
;

1221 
subty≥
 = 0;

1223 i‡(!
	`is_eof
(
c
Ë&& 
	`is_«me
(c)) {

1224 
Àngth
 = 0;

1226 
	`STPUTC
(
c
, 
out
);

1227 
c
 = 
	`pgëc
();

1228 
Àngth
++;

1229 } !
	`is_eof
(
c
Ë&& 
	`is_ö_«me
(c));

1230 i‡(
Àngth
 == 6 &&

1231 
	`°∫cmp
(
out
 - 
Àngth
, "LINENO",Üength) == 0) {

1234 
löno
 = 
∂öno
;

1235 i‡(
fun˛öno
 != 0)

1236 
löno
 -
fun˛öno
 - 1;

1237 
	`¢¥ötf
(
buf
, (buf), "%d", 
löno
);

1238 
	`STADJUST
(-6, 
out
);

1239 
i
 = 0; 
buf
[i] != '\0'; i++)

1240 
	`STPUTC
(
buf
[
i
], 
out
);

1241 
Êags
 |
VSLINENO
;

1243 } i‡(
	`is_digô
(
c
)) {

1244 i‡(
bøckëed_«me
) {

1246 
	`STPUTC
(
c
, 
out
);

1247 
c
 = 
	`pgëc
();

1248 } 
	`is_digô
(
c
));

1250 
	`STPUTC
(
c
, 
out
);

1251 
c
 = 
	`pgëc
();

1254 i‡(! 
	`is_•ecül
(
c
)) {

1255 
subty≥
 = 
VSERROR
;

1256 i‡(
c
 == '}')

1257 
	`pungëc
();

1259 
	`USTPUTC
(
c
, 
out
);

1261 
	`USTPUTC
(
c
, 
out
);

1262 
c
 = 
	`pgëc
();

1265 i‡(
subty≥
 == 0) {

1266 
c
) {

1268 
Êags
 |
VSNUL
;

1269 
c
 = 
	`pgëc
();

1272 
p
 = 
	`°rchr
(
ty≥s
, 
c
);

1273 i‡(
p
 =
NULL
) {

1274 i‡(
Êags
 =
VSNUL
)

1275 
	`STPUTC
(':', 
out
);

1276 
	`STPUTC
(
c
, 
out
);

1277 
subty≥
 = 
VSERROR
;

1279 
subty≥
 = 
p
 - 
ty≥s
 + 
VSNORMAL
;

1284 
cc
 = 
c
;

1285 
subty≥
 = 
c
 ='#' ? 
VSTRIMLEFT
 :

1286 
VSTRIMRIGHT
;

1287 
c
 = 
	`pgëc
();

1288 i‡(
c
 =
cc
)

1289 
subty≥
++;

1291 
	`pungëc
();

1295 } i‡(
subty≥
 !
VSERROR
) {

1296 
	`pungëc
();

1298 
	`STPUTC
('=', 
out
);

1299 i‡(
subty≥
 !
VSLENGTH
 && (
dblquŸe
 || 
¨öe°
))

1300 
Êags
 |
VSQUOTE
;

1301 *(
	`°ackblock
(Ë+ 
ty≥loc
Ë
subty≥
 | 
Êags
;

1302 i‡(
subty≥
 !
VSNORMAL
)

1303 
v¨√°
++;

1305 
∑r£sub_ªtu∫
;

1316 
∑r£backq
: {

1317 
nodñi°
 **
∆µ
;

1318 
ßvïbq
;

1319 
node
 *
n
;

1320 *vﬁ©ûê
°r
;

1321 
jm∂oc
 jmploc;

1322 
jm∂oc
 *vﬁ©ûê
ßveh™dÀr
;

1323 
ßvñí
;

1324 
ßvïrom±
;

1325 #i‡
__GNUC__


1327 (Ë&
ßvïrom±
;

1330 
ßvïbq
 = 
∑r£backquŸe
;

1331 i‡(
	`£tjmp
(
jm∂oc
.
loc
)) {

1332 i‡(
°r
)

1333 
	`ck‰ì
(
°r
);

1334 
∑r£backquŸe
 = 0;

1335 
h™dÀr
 = 
ßveh™dÀr
;

1336 
	`l⁄gjmp
(
h™dÀr
->
loc
, 1);

1338 
INTOFF
;

1339 
°r
 = 
NULL
;

1340 
ßvñí
 = 
out
 - 
	`°ackblock
();

1341 i‡(
ßvñí
 > 0) {

1342 
°r
 = 
	`ckmÆloc
(
ßvñí
);

1343 
	`mem˝y
(
°r
, 
	`°ackblock
(), 
ßvñí
);

1345 
ßveh™dÀr
 = 
h™dÀr
;

1346 
h™dÀr
 = &
jm∂oc
;

1347 
INTON
;

1348 i‡(
ﬁd°yÀ
) {

1352 *
out
;

1353 
c
;

1354 
ßvñí
;

1355 *
°r
;

1358 
	`STARTSTACKSTR
(
out
);

1360 i‡(
√ed¥om±
) {

1361 
	`£çrom±
(2);

1362 
√ed¥om±
 = 0;

1364 
c
 = 
	`pgëc
()) {

1366 
d⁄e
;

1369 i‡((
c
 = 
	`pgëc
()) == '\n') {

1370 
∂öno
++;

1371 i‡(
d›rom±
)

1372 
	`£çrom±
(2);

1374 
	`£çrom±
(0);

1383 i‡(
c
 != '\\' && c != '`' && c != '$'

1384 && (!
dblquŸe
 || 
c
 != '"'))

1385 
	`STPUTC
('\\', 
out
);

1389 
∂öno
++;

1390 
√ed¥om±
 = 
d›rom±
;

1393 
PEOF
:

1394 
°¨éöno
 = 
∂öno
;

1395 
	`sy√º‹
("EOF in backquote substitution");

1401 
	`STPUTC
(
c
, 
out
);

1403 
d⁄e
:

1404 
	`STPUTC
('\0', 
out
);

1405 
ßvñí
 = 
out
 - 
	`°ackblock
();

1406 i‡(
ßvñí
 > 0) {

1407 
°r
 = 
	`ckmÆloc
(
ßvñí
);

1408 
	`mem˝y
(
°r
, 
	`°ackblock
(), 
ßvñí
);

1409 
	`£töput°rög
(
°r
, 1);

1412 
∆µ
 = &
bqli°
;

1413 *
∆µ
)

1414 
∆µ
 = &(*∆µ)->
√xt
;

1415 *
∆µ
 = (
nodñi°
 *)
	`°Æloc
( (nodelist));

1416 (*
∆µ
)->
√xt
 = 
NULL
;

1417 
∑r£backquŸe
 = 
ﬁd°yÀ
;

1419 i‡(
ﬁd°yÀ
) {

1420 
ßvïrom±
 = 
d›rom±
;

1421 
d›rom±
 = 0;

1424 
n
 = 
	`li°
(0);

1426 i‡(
ﬁd°yÀ
)

1427 
d›rom±
 = 
ßvïrom±
;

1429 i‡(
	`ªadtokí
(Ë!
TRP
)

1430 
	`sy√x≥˘
(
TRP
);

1433 (*
∆µ
)->
n
 =Ç;

1434 i‡(
ﬁd°yÀ
) {

1439 
	`p›fûe
();

1440 
tokpushback
 = 0;

1442 
	`°ackblocksize
(Ë<
ßvñí
)

1443 
	`grow°ackblock
();

1444 
	`STARTSTACKSTR
(
out
);

1445 i‡(
°r
) {

1446 
	`mem˝y
(
out
, 
°r
, 
ßvñí
);

1447 
	`STADJUST
(
ßvñí
, 
out
);

1448 
INTOFF
;

1449 
	`ck‰ì
(
°r
);

1450 
°r
 = 
NULL
;

1451 
INTON
;

1453 
∑r£backquŸe
 = 
ßvïbq
;

1454 
h™dÀr
 = 
ßveh™dÀr
;

1455 i‡(
¨öe°
 || 
dblquŸe
)

1456 
	`USTPUTC
(
CTLBACKQ
 | 
CTLQUOTE
, 
out
);

1458 
	`USTPUTC
(
CTLBACKQ
, 
out
);

1459 i‡(
ﬁd°yÀ
)

1460 
∑r£backq_ﬁdªtu∫
;

1462 
∑r£backq_√wªtu∫
;

1468 
∑r£¨ôh
: {

1470 i‡(++
¨öe°
 == 1) {

1471 
¥evsy¡ax
 = 
sy¡ax
;

1472 
sy¡ax
 = 
ARISYNTAX
;

1473 
	`USTPUTC
(
CTLARI
, 
out
);

1474 i‡(
dblquŸe
)

1475 
	`USTPUTC
('"',
out
);

1477 
	`USTPUTC
(' ',
out
);

1483 
	`USTPUTC
('(', 
out
);

1485 
∑r£¨ôh_ªtu∫
;

1488 
	}
}

1492 #ifde‡
mköô


1493 
	gRESET
 {

1494 
	gtokpushback
 = 0;

1495 
	gcheckkwd
 = 0;

1504 
STATIC
 

1505 
	$n€x∑nd
(*
ãxt
)

1507 *
p
;

1508 
c
;

1510 
p
 = 
ãxt
;

1511 (
c
 = *
p
++) != '\0') {

1512 i‡–
c
 =
CTLQUOTEMARK
)

1514 i‡(
c
 =
CTLESC
)

1515 
p
++;

1516 i‡(
BASESYNTAX
[()
c
] =
CCTL
)

1520 
	}
}

1529 
	$good«me
(*
«me
)

1531 *
p
;

1533 
p
 = 
«me
;

1534 i‡(! 
	`is_«me
(*
p
))

1536 *++
p
) {

1537 i‡(! 
	`is_ö_«me
(*
p
))

1541 
	}
}

1550 
STATIC
 

1551 
	$sy√x≥˘
(
tokí
)

1553 
msg
[64];

1555 i‡(
tokí
 >= 0) {

1556 
	`fmt°r
(
msg
, 64, "%s unexpected (expecting %s)",

1557 
tok«me
[
œ°tokí
],Åok«me[
tokí
]);

1559 
	`fmt°r
(
msg
, 64, "%†u√x≥˘ed", 
tok«me
[
œ°tokí
]);

1561 
	`sy√º‹
(
msg
);

1562 
	}
}

1565 
STATIC
 

1566 
	$sy√º‹
(*
msg
)

1568 i‡(
comm™d«me
)

1569 
	`outfmt
(&
îrout
, "%s: %d: ", 
comm™d«me
, 
°¨éöno
);

1570 
	`outfmt
(&
îrout
, "Sy¡axÉº‹: %s\n", 
msg
);

1571 
	`îr‹
((*)
NULL
);

1572 
	}
}

1574 
STATIC
 

1575 
	$£çrom±
(
which
)

1577 
which¥om±
 = 
which
;

1579 #i‚de‡
NO_HISTORY


1580 i‡(!
ñ
)

1582 
	`out2°r
(
	`gë¥om±
(
NULL
));

1583 
	}
}

1590 
	$gë¥om±
(*
unu£d
 
__unu£d
)

1592 
ps
[
PROMPTLEN
];

1593 *
fmt
;

1594 
i
, 
j
, 
åim
;

1599 
which¥om±
) {

1601 
fmt
 = "";

1604 
fmt
 = 
	`ps1vÆ
();

1607 
fmt
 = 
	`ps2vÆ
();

1616 
i
 = 0; (ò< 127Ë&& (*
fmt
 != '\0'); i++, fmt++)

1617 i‡(*
fmt
 == '\\')

1618 *++
fmt
) {

1628 
ps
[
i
] = '\0';

1629 
	`gëho°«me
(&
ps
[
i
], 
PROMPTLEN
 - i);

1631 
åim
 = (*
fmt
 == 'h') ? '.' : '\0';

1632 (
ps
[
i
+1] !'\0'Ë&& (ps[i+1] !
åim
))

1633 
i
++;

1644 
ps
[
i
] = '\0';

1645 
	`gëcwd
(&
ps
[
i
], 
PROMPTLEN
 - i);

1646 i‡(*
fmt
 == 'W') {

1648 
åim
 = 1;

1649 
j
 = 
i
; 
ps
[j] != '\0'; j++)

1650 i‡(
ps
[
j
] == '/')

1651 
åim
 = 
j
 + 1;

1652 
	`memmove
(&
ps
[
i
], &ps[
åim
],

1653 
j
 - 
åim
 + 1);

1656 
ps
[
i
 + 1] != '\0')

1657 
i
++;

1666 
ps
[
i
] = (
	`gëeuid
() != 0) ? '$' : '#';

1673 
ps
[
i
] = '\\';

1680 
ps
[
i
++] = '\\';

1681 
ps
[
i
] = *
fmt
;

1685 
ps
[
i
] = *
fmt
;

1686 
ps
[
i
] = '\0';

1687  (
ps
);

1688 
	}
}

	@parser.h

37 
	#CTLESC
 '\201'

	)

38 
	#CTLVAR
 '\202'

	)

39 
	#CTLENDVAR
 '\203'

	)

40 
	#CTLBACKQ
 '\204'

	)

41 
	#CTLQUOTE
 01

	)

43 
	#CTLARI
 '\206'

	)

44 
	#CTLENDARI
 '\207'

	)

45 
	#CTLQUOTEMARK
 '\210'

	)

48 
	#VSTYPE
 0x0‡

	)

49 
	#VSNUL
 0x10

	)

50 
	#VSLINENO
 0x20

	)

52 
	#VSQUOTE
 0x80

	)

55 
	#VSNORMAL
 0x1

	)

56 
	#VSMINUS
 0x2

	)

57 
	#VSPLUS
 0x3

	)

58 
	#VSQUESTION
 0x4

	)

59 
	#VSASSIGN
 0x5

	)

60 
	#VSTRIMLEFT
 0x6

	)

61 
	#VSTRIMLEFTMAX
 0x7

	)

62 
	#VSTRIMRIGHT
 0x8

	)

63 
	#VSTRIMRIGHTMAX
 0x9

	)

64 
	#VSLENGTH
 0x®

	)

65 
	#VSERROR
 0xb

	)

73 
tokpushback
;

74 
	#NEOF
 ((
node
 *)&
tokpushback
)

	)

75 
which¥om±
;

78 
node
 *
∑r£cmd
();

79 
fixªdú
(
node
 *, const *, );

80 
good«me
(*);

81 *
gë¥om±
(*);

	@redir.c

33 #i‚de‡
löt


35 
	gsccsid
[] = "@(#)redir.c 8.2 (Berkeley) 5/4/95";

38 
	~<sys/cdefs.h
>

39 
__FBSDID
("$FreeBSD: src/bin/sh/redir.c,v 1.26.26.1 2008/11/25 02:59:29 kensmith Exp $");

41 
	~<sys/ty≥s.h
>

42 
	~<sys/°©.h
>

43 
	~<sig«l.h
>

44 
	~<°rög.h
>

45 
	~<f˙é.h
>

46 
	~<î∫o.h
>

47 
	~<uni°d.h
>

48 
	~<°dlib.h
>

54 
	~"shñl.h
"

55 
	~"nodes.h
"

56 
	~"jobs.h
"

57 
	~"ex∑nd.h
"

58 
	~"ªdú.h
"

59 
	~"ouçut.h
"

60 
	~"memÆloc.h
"

61 
	~"îr‹.h
"

62 
	~"›ti⁄s.h
"

65 
	#EMPTY
 -2

	)

66 
	#PIPESIZE
 4096

	)

69 
MKINIT


70 
	sªdúèb
 {

71 
ªdúèb
 *
	m√xt
;

72 
	mª«med
[10];

76 
MKINIT
 
ªdúèb
 *
	gªdúli°
;

83 
STATIC
 
	gfd0_ªdúe˘ed
 = 0;

85 
STATIC
 
›íªdúe˘
(
node
 *, [10 ]);

86 
STATIC
 
›íhîe
(
node
 *);

98 
	$ªdúe˘
(
node
 *
ªdú
, 
Êags
)

100 
node
 *
n
;

101 
ªdúèb
 *
sv
 = 
NULL
;

102 
i
;

103 
fd
;

104 
åy
;

105 
mem‹y
[10];

107 
i
 = 10 ; --i >= 0 ; )

108 
mem‹y
[
i
] = 0;

109 
mem‹y
[1] = 
Êags
 & 
REDIR_BACKQ
;

110 i‡(
Êags
 & 
REDIR_PUSH
) {

111 
sv
 = 
	`ckmÆloc
( (
ªdúèb
));

112 
i
 = 0 ; i < 10 ; i++)

113 
sv
->
ª«med
[
i
] = 
EMPTY
;

114 
sv
->
√xt
 = 
ªdúli°
;

115 
ªdúli°
 = 
sv
;

117 
n
 = 
ªdú
 ;Ç ;Ç =Ç->
nfûe
.
√xt
) {

118 
fd
 = 
n
->
nfûe
.fd;

119 
åy
 = 0;

120 i‡((
n
->
nfûe
.
ty≥
 =
NTOFD
 ||Ç->nfûe.ty≥ =
NFROMFD
) &&

121 
n
->
ndup
.
dupfd
 =
fd
)

124 i‡((
Êags
 & 
REDIR_PUSH
Ë&& 
sv
->
ª«med
[
fd
] =
EMPTY
) {

125 
INTOFF
;

126 
agaö
:

127 i‡((
i
 = 
	`f˙é
(
fd
, 
F_DUPFD
, 10)) == -1) {

128 
î∫o
) {

129 
EBADF
:

130 i‡(!
åy
) {

131 
	`›íªdúe˘
(
n
, 
mem‹y
);

132 
åy
++;

133 
agaö
;

137 
INTON
;

138 
	`îr‹
("%d: %s", 
fd
, 
	`°ªº‹
(
î∫o
));

142 i‡(!
åy
) {

143 
sv
->
ª«med
[
fd
] = 
i
;

145 
INTON
;

147 i‡(
fd
 == 0)

148 
fd0_ªdúe˘ed
++;

149 i‡(!
åy
)

150 
	`›íªdúe˘
(
n
, 
mem‹y
);

152 i‡(
mem‹y
[1])

153 
out1
 = &
memout
;

154 i‡(
mem‹y
[2])

155 
out2
 = &
memout
;

156 
	}
}

159 
STATIC
 

160 
	$›íªdúe˘
(
node
 *
ªdú
, 
mem‹y
[10])

162 
°©
 
sb
;

163 
fd
 = 
ªdú
->
nfûe
.fd;

164 *
‚ame
;

165 
f
;

172 
INTOFF
;

173 
mem‹y
[
fd
] = 0;

174 
ªdú
->
nfûe
.
ty≥
) {

175 
NFROM
:

176 
‚ame
 = 
ªdú
->
nfûe
.
exp‚ame
;

177 i‡((
f
 = 
	`›í
(
‚ame
, 
O_RDONLY
)) < 0)

178 
	`îr‹
("ˇ¬Ÿ o≥¿%s: %s", 
‚ame
, 
	`°ªº‹
(
î∫o
));

179 
movefd
:

180 i‡(
f
 !
fd
) {

181 
	`dup2
(
f
, 
fd
);

182 
	`˛o£
(
f
);

185 
NFROMTO
:

186 
‚ame
 = 
ªdú
->
nfûe
.
exp‚ame
;

187 i‡((
f
 = 
	`›í
(
‚ame
, 
O_RDWR
|
O_CREAT
, 0666)) < 0)

188 
	`îr‹
("ˇ¬Ÿ cª©ê%s: %s", 
‚ame
, 
	`°ªº‹
(
î∫o
));

189 
movefd
;

190 
NTO
:

191 
‚ame
 = 
ªdú
->
nfûe
.
exp‚ame
;

192 i‡(
CÊag
 && 
	`°©
(
‚ame
, &
sb
Ë!-1 && 
	`S_ISREG
(sb.
°_mode
))

193 
	`îr‹
("ˇ¬Ÿ cª©ê%s: %s", 
‚ame
,

194 
	`°ªº‹
(
EEXIST
));

195 i‡((
f
 = 
	`›í
(
‚ame
, 
O_WRONLY
|
O_CREAT
|
O_TRUNC
, 0666)) < 0)

196 
	`îr‹
("ˇ¬Ÿ cª©ê%s: %s", 
‚ame
, 
	`°ªº‹
(
î∫o
));

197 
movefd
;

198 
NCLOBBER
:

199 
‚ame
 = 
ªdú
->
nfûe
.
exp‚ame
;

200 i‡((
f
 = 
	`›í
(
‚ame
, 
O_WRONLY
|
O_CREAT
|
O_TRUNC
, 0666)) < 0)

201 
	`îr‹
("ˇ¬Ÿ cª©ê%s: %s", 
‚ame
, 
	`°ªº‹
(
î∫o
));

202 
movefd
;

203 
NAPPEND
:

204 
‚ame
 = 
ªdú
->
nfûe
.
exp‚ame
;

205 i‡((
f
 = 
	`›í
(
‚ame
, 
O_WRONLY
|
O_CREAT
|
O_APPEND
, 0666)) < 0)

206 
	`îr‹
("ˇ¬Ÿ cª©ê%s: %s", 
‚ame
, 
	`°ªº‹
(
î∫o
));

207 
movefd
;

208 
NTOFD
:

209 
NFROMFD
:

210 i‡(
ªdú
->
ndup
.
dupfd
 >= 0) {

211 i‡(
mem‹y
[
ªdú
->
ndup
.
dupfd
])

212 
mem‹y
[
fd
] = 1;

214 
	`dup2
(
ªdú
->
ndup
.
dupfd
, 
fd
);

216 
	`˛o£
(
fd
);

219 
NHERE
:

220 
NXHERE
:

221 
f
 = 
	`›íhîe
(
ªdú
);

222 
movefd
;

224 
	`ab‹t
();

226 
INTON
;

227 
	}
}

236 
STATIC
 

237 
	$›íhîe
(
node
 *
ªdú
)

239 
pù
[2];

240 
Àn
 = 0;

242 i‡(
	`pùe
(
pù
) < 0)

243 
	`îr‹
("PùêˇŒ faûed: %s", 
	`°ªº‹
(
î∫o
));

244 i‡(
ªdú
->
ty≥
 =
NHERE
) {

245 
Àn
 = 
	`°æí
(
ªdú
->
nhîe
.
doc
->
«rg
.
ãxt
);

246 i‡(
Àn
 <
PIPESIZE
) {

247 
	`xwrôe
(
pù
[1], 
ªdú
->
nhîe
.
doc
->
«rg
.
ãxt
, 
Àn
);

248 
out
;

251 i‡(
	`f‹kshñl
((
job
 *)
NULL
, (
node
 *)NULL, 
FORK_NOJOB
) == 0) {

252 
	`˛o£
(
pù
[0]);

253 
	`sig«l
(
SIGINT
, 
SIG_IGN
);

254 
	`sig«l
(
SIGQUIT
, 
SIG_IGN
);

255 
	`sig«l
(
SIGHUP
, 
SIG_IGN
);

256 
	`sig«l
(
SIGTSTP
, 
SIG_IGN
);

257 
	`sig«l
(
SIGPIPE
, 
SIG_DFL
);

258 i‡(
ªdú
->
ty≥
 =
NHERE
)

259 
	`xwrôe
(
pù
[1], 
ªdú
->
nhîe
.
doc
->
«rg
.
ãxt
, 
Àn
);

261 
	`ex∑ndhîe
(
ªdú
->
nhîe
.
doc
, 
pù
[1]);

262 
	`_exô
(0);

264 
out
:

265 
	`˛o£
(
pù
[1]);

266  
pù
[0];

267 
	}
}

276 
	$p›ªdú
()

278 
ªdúèb
 *
Ω
 = 
ªdúli°
;

279 
i
;

281 
i
 = 0 ; i < 10 ; i++) {

282 i‡(
Ω
->
ª«med
[
i
] !
EMPTY
) {

283 i‡(
i
 == 0)

284 
fd0_ªdúe˘ed
--;

285 i‡(
Ω
->
ª«med
[
i
] >= 0) {

286 
	`dup2
(
Ω
->
ª«med
[
i
], i);

287 
	`˛o£
(
Ω
->
ª«med
[
i
]);

289 
	`˛o£
(
i
);

293 
INTOFF
;

294 
ªdúli°
 = 
Ω
->
√xt
;

295 
	`ck‰ì
(
Ω
);

296 
INTON
;

297 
	}
}

303 #ifde‡
mköô


305 
	gINCLUDE
 "redir.h"

307 
	gRESET
 {

308 
	gªdúli°
)

309 
p›ªdú
();

312 
	gSHELLPROC
 {

313 
˛óºedú
();

320 
	$fd0_ªdúe˘ed_p
()

322  
fd0_ªdúe˘ed
 != 0;

323 
	}
}

330 
	$˛óºedú
()

332 
ªdúèb
 *
Ω
;

333 
i
;

335 
Ω
 = 
ªdúli°
 ;Ñ∞;Ñ∞Ω->
√xt
) {

336 
i
 = 0 ; i < 10 ; i++) {

337 i‡(
Ω
->
ª«med
[
i
] >= 0) {

338 
	`˛o£
(
Ω
->
ª«med
[
i
]);

340 
Ω
->
ª«med
[
i
] = 
EMPTY
;

343 
	}
}

	@redir.h

37 
	#REDIR_PUSH
 01

	)

38 
	#REDIR_BACKQ
 02

	)

40 
	gnode
;

41 
ªdúe˘
(
node
 *, );

42 
p›ªdú
();

43 
fd0_ªdúe˘ed_p
();

44 
˛óºedú
();

	@shell.h

36 #i‚de‡
SHELL_H_


37 
	#SHELL_H_


	)

39 
	~<öây≥s.h
>

52 
	#JOBS
 1

	)

53 
	#NO_HISTORY


	)

59 
ötmax_t
 
	t¨ôh_t
;

60 
	#ARITH_FORMAT_STR
 "%" 
PRIdMAX


	)

61 
	#©ﬂrôh_t
(
¨g
Ë
	`°πoimax
◊rg, 
NULL
, 0)

	)

62 
	#°πﬂrôh_t
(
≈å
, 
íd±r
, 
ba£
Ë
	`°πoimax
“±r,Énd±r, ba£)

	)

64 *
	tpoöãr
;

65 
	#STATIC
 

	)

66 
	#MKINIT


	)

68 
	~<sys/cdefs.h
>

70 
nuŒ°r
[1];

72 #ifde‡
DEBUG


73 
	#TRACE
(
∑øm
Ë
sh_åa˚
 
	)
param

75 
	#TRACE
(
∑øm
)

	)

	@show.c

33 #i‚de‡
löt


35 
	gsccsid
[] = "@(#)show.c 8.3 (Berkeley) 5/4/95";

38 
	~<sys/cdefs.h
>

39 
__FBSDID
("$FreeBSD: src/bin/sh/show.c,v 1.23.6.1 2008/11/25 02:59:29 kensmith Exp $");

41 
	~<f˙é.h
>

42 
	~<°dio.h
>

43 
	~<°dlib.h
>

44 
	~<°d¨g.h
>

45 
	~<î∫o.h
>

47 
	~"shñl.h
"

48 
	~"∑r£r.h
"

49 
	~"nodes.h
"

50 
	~"my°rög.h
"

51 
	~"show.h
"

54 #ifde‡
DEBUG


55 
shåì
(
node
 *, , *, 
FILE
*);

56 
shcmd
(
node
 *, 
FILE
 *);

57 
sh¨g
(
node
 *, 
FILE
 *);

58 
ödít
(, *, 
FILE
 *);

59 
å°rög
(*);

63 
	$showåì
(
node
 *
n
)

65 
	`åputs
("showtree called\n");

66 
	`shåì
(
n
, 1, 
NULL
, 
°dout
);

67 
	}
}

71 
	$shåì
(
node
 *
n
, 
öd
, *
pfx
, 
FILE
 *
Â
)

73 
nodñi°
 *
Õ
;

74 *
s
;

76 i‡(
n
 =
NULL
)

79 
	`ödít
(
öd
, 
pfx
, 
Â
);

80 
n
->
ty≥
) {

81 
NSEMI
:

82 
s
 = "; ";

83 
bö›
;

84 
NAND
:

85 
s
 = " && ";

86 
bö›
;

87 
NOR
:

88 
s
 = " || ";

89 
bö›
:

90 
	`shåì
(
n
->
nbö¨y
.
ch1
, 
öd
, 
NULL
, 
Â
);

92 
	`Âuts
(
s
, 
Â
);

93 
	`shåì
(
n
->
nbö¨y
.
ch2
, 
öd
, 
NULL
, 
Â
);

95 
NCMD
:

96 
	`shcmd
(
n
, 
Â
);

97 i‡(
öd
 >= 0)

98 
	`putc
('\n', 
Â
);

100 
NPIPE
:

101 
Õ
 = 
n
->
≈ùe
.
cmdli°
 ;Ü∞;Ü∞Õ->
√xt
) {

102 
	`shcmd
(
Õ
->
n
, 
Â
);

103 i‡(
Õ
->
√xt
)

104 
	`Âuts
(" | ", 
Â
);

106 i‡(
n
->
≈ùe
.
backgnd
)

107 
	`Âuts
(" &", 
Â
);

108 i‡(
öd
 >= 0)

109 
	`putc
('\n', 
Â
);

112 
	`Ârötf
(
Â
, "<nodêty≥ %d>", 
n
->
ty≥
);

113 i‡(
öd
 >= 0)

114 
	`putc
('\n', 
Â
);

117 
	}
}

122 
	$shcmd
(
node
 *
cmd
, 
FILE
 *
Â
)

124 
node
 *
≈
;

125 
fú°
;

126 *
s
;

127 
d·fd
;

129 
fú°
 = 1;

130 
≈
 = 
cmd
->
ncmd
.
¨gs
 ;Ç∞;Ç∞≈->
«rg
.
√xt
) {

131 i‡(! 
fú°
)

132 
	`putch¨
(' ');

133 
	`sh¨g
(
≈
, 
Â
);

134 
fú°
 = 0;

136 
≈
 = 
cmd
->
ncmd
.
ªdúe˘
 ;Ç∞;Ç∞≈->
nfûe
.
√xt
) {

137 i‡(! 
fú°
)

138 
	`putch¨
(' ');

139 
≈
->
nfûe
.
ty≥
) {

140 
NTO
: 
s
 = ">"; 
d·fd
 = 1; ;

141 
NAPPEND
: 
s
 = ">>"; 
d·fd
 = 1; ;

142 
NTOFD
: 
s
 = ">&"; 
d·fd
 = 1; ;

143 
NCLOBBER
: 
s
 = ">|"; 
d·fd
 = 1; ;

144 
NFROM
: 
s
 = "<"; 
d·fd
 = 0; ;

145 
NFROMTO
: 
s
 = "<>"; 
d·fd
 = 0; ;

146 
NFROMFD
: 
s
 = "<&"; 
d·fd
 = 0; ;

147 
NHERE
: 
s
 = "<<"; 
d·fd
 = 0; ;

148 
NXHERE
: 
s
 = "<<"; 
d·fd
 = 0; ;

149 : 
s
 = "*îr‹*"; 
d·fd
 = 0; ;

151 i‡(
≈
->
nfûe
.
fd
 !
d·fd
)

152 
	`Ârötf
(
Â
, "%d", 
≈
->
nfûe
.
fd
);

153 
	`Âuts
(
s
, 
Â
);

154 i‡(
≈
->
nfûe
.
ty≥
 =
NTOFD
 ||Çp->nfûe.ty≥ =
NFROMFD
) {

155 i‡(
≈
->
ndup
.
dupfd
 >= 0)

156 
	`Ârötf
(
Â
, "%d", 
≈
->
ndup
.
dupfd
);

158 
	`Ârötf
(
Â
, "-");

159 } i‡(
≈
->
nfûe
.
ty≥
 =
NHERE
) {

160 
	`Ârötf
(
Â
, "HERE");

161 } i‡(
≈
->
nfûe
.
ty≥
 =
NXHERE
) {

162 
	`Ârötf
(
Â
, "XHERE");

164 
	`sh¨g
(
≈
->
nfûe
.
‚ame
, 
Â
);

166 
fú°
 = 0;

168 
	}
}

173 
	$sh¨g
(
node
 *
¨g
, 
FILE
 *
Â
)

175 *
p
;

176 
nodñi°
 *
bqli°
;

177 
subty≥
;

179 i‡(
¨g
->
ty≥
 !
NARG
) {

180 
	`¥ötf
("<nodêty≥ %d>\n", 
¨g
->
ty≥
);

181 
	`fÊush
(
°dout
);

182 
	`ab‹t
();

184 
bqli°
 = 
¨g
->
«rg
.
backquŸe
;

185 
p
 = 
¨g
->
«rg
.
ãxt
 ; *p ;Ö++) {

186 *
p
) {

187 
CTLESC
:

188 
	`putc
(*++
p
, 
Â
);

190 
CTLVAR
:

191 
	`putc
('$', 
Â
);

192 
	`putc
('{', 
Â
);

193 
subty≥
 = *++
p
;

194 i‡(
subty≥
 =
VSLENGTH
)

195 
	`putc
('#', 
Â
);

197 *
p
 != '=')

198 
	`putc
(*
p
++, 
Â
);

200 i‡(
subty≥
 & 
VSNUL
)

201 
	`putc
(':', 
Â
);

203 
subty≥
 & 
VSTYPE
) {

204 
VSNORMAL
:

205 
	`putc
('}', 
Â
);

207 
VSMINUS
:

208 
	`putc
('-', 
Â
);

210 
VSPLUS
:

211 
	`putc
('+', 
Â
);

213 
VSQUESTION
:

214 
	`putc
('?', 
Â
);

216 
VSASSIGN
:

217 
	`putc
('=', 
Â
);

219 
VSTRIMLEFT
:

220 
	`putc
('#', 
Â
);

222 
VSTRIMLEFTMAX
:

223 
	`putc
('#', 
Â
);

224 
	`putc
('#', 
Â
);

226 
VSTRIMRIGHT
:

227 
	`putc
('%', 
Â
);

229 
VSTRIMRIGHTMAX
:

230 
	`putc
('%', 
Â
);

231 
	`putc
('%', 
Â
);

233 
VSLENGTH
:

236 
	`¥ötf
("<subty≥ %d>", 
subty≥
);

239 
CTLENDVAR
:

240 
	`putc
('}', 
Â
);

242 
CTLBACKQ
:

243 
CTLBACKQ
|
CTLQUOTE
:

244 
	`putc
('$', 
Â
);

245 
	`putc
('(', 
Â
);

246 
	`shåì
(
bqli°
->
n
, -1, 
NULL
, 
Â
);

247 
	`putc
(')', 
Â
);

250 
	`putc
(*
p
, 
Â
);

254 
	}
}

258 
	$ödít
(
amou¡
, *
pfx
, 
FILE
 *
Â
)

260 
i
;

262 
i
 = 0 ; i < 
amou¡
 ; i++) {

263 i‡(
pfx
 && 
i
 =
amou¡
 - 1)

264 
	`Âuts
(
pfx
, 
Â
);

265 
	`putc
('\t', 
Â
);

267 
	}
}

275 
FILE
 *
	gåa˚fûe
;

277 #i‡
DEBUG
 == 2

278 
	gdebug
 = 1;

280 
	gdebug
 = 0;

285 
	$åputc
(
c
)

287 i‡(
åa˚fûe
 =
NULL
)

289 
	`putc
(
c
, 
åa˚fûe
);

290 i‡(
c
 == '\n')

291 
	`fÊush
(
åa˚fûe
);

292 
	}
}

296 
	$sh_åa˚
(c⁄° *
fmt
, ...)

298 
va_li°
 
va
;

299 
	`va_°¨t
(
va
, 
fmt
);

300 i‡(
åa˚fûe
 !
NULL
) {

301 (Ë
	`vÂrötf
(
åa˚fûe
, 
fmt
, 
va
);

302 i‡(
	`°rchr
(
fmt
, '\n'))

303 (Ë
	`fÊush
(
åa˚fûe
);

305 
	`va_íd
(
va
);

306 
	}
}

310 
	$åputs
(*
s
)

312 i‡(
åa˚fûe
 =
NULL
)

314 
	`Âuts
(
s
, 
åa˚fûe
);

315 i‡(
	`°rchr
(
s
, '\n'))

316 
	`fÊush
(
åa˚fûe
);

317 
	}
}

321 
	$å°rög
(*
s
)

323 *
p
;

324 
c
;

326 i‡(
åa˚fûe
 =
NULL
)

328 
	`putc
('"', 
åa˚fûe
);

329 
p
 = 
s
 ; *p ;Ö++) {

330 *
p
) {

331 '\n': 
c
 = 'n'; 
back¶ash
;

332 '\t': 
c
 = 't'; 
back¶ash
;

333 '\r': 
c
 = 'r'; 
back¶ash
;

334 '"': 
c
 = '"'; 
back¶ash
;

335 '\\': 
c
 = '\\'; 
back¶ash
;

336 
CTLESC
: 
c
 = 'e'; 
back¶ash
;

337 
CTLVAR
: 
c
 = 'v'; 
back¶ash
;

338 
CTLVAR
+
CTLQUOTE
: 
c
 = 'V'; 
back¶ash
;

339 
CTLBACKQ
: 
c
 = 'q'; 
back¶ash
;

340 
CTLBACKQ
+
CTLQUOTE
: 
c
 = 'Q'; 
back¶ash
;

341 
back¶ash
: 
	`putc
('\\', 
åa˚fûe
);

342 
	`putc
(
c
, 
åa˚fûe
);

345 i‡(*
p
 >= ' ' && *p <= '~')

346 
	`putc
(*
p
, 
åa˚fûe
);

348 
	`putc
('\\', 
åa˚fûe
);

349 
	`putc
(*
p
 >> 6 & 03, 
åa˚fûe
);

350 
	`putc
(*
p
 >> 3 & 07, 
åa˚fûe
);

351 
	`putc
(*
p
 & 07, 
åa˚fûe
);

356 
	`putc
('"', 
åa˚fûe
);

357 
	}
}

361 
	$å¨gs
(**
≠
)

363 i‡(
åa˚fûe
 =
NULL
)

365 *
≠
) {

366 
	`å°rög
(*
≠
++);

367 i‡(*
≠
)

368 
	`putc
(' ', 
åa˚fûe
);

370 
	`putc
('\n', 
åa˚fûe
);

372 
	`fÊush
(
åa˚fûe
);

373 
	}
}

377 
	$›íåa˚
()

379 
s
[100];

380 
Êags
;

382 i‡(!
debug
)

384 #ifde‡
nŸ_this_way


386 *
p
;

387 i‡((
p
 = 
	`gëív
("HOME")Ë=
NULL
) {

388 i‡(
	`gëeuid
() == 0)

389 
p
 = "/";

391 
p
 = "/tmp";

393 
	`sc›y
(
p
, 
s
);

394 
	`°rˇt
(
s
, "/trace");

397 
	`sc›y
("./åa˚", 
s
);

399 i‡((
åa˚fûe
 = 
	`f›í
(
s
, "a")Ë=
NULL
) {

400 
	`Ârötf
(
°dîr
, "C™'à›í %s: %s\n", 
s
, 
	`°ªº‹
(
î∫o
));

403 i‡((
Êags
 = 
	`f˙é
(
	`fûío
(
åa˚fûe
), 
F_GETFL
, 0)) >= 0)

404 
	`f˙é
(
	`fûío
(
åa˚fûe
), 
F_SETFL
, 
Êags
 | 
O_APPEND
);

405 
	`Âuts
("\nTøcög sèπed.\n", 
åa˚fûe
);

406 
	`fÊush
(
åa˚fûe
);

407 
	}
}

	@show.h

33 
showåì
(
node
 *);

34 #ifde‡
DEBUG


35 
	$sh_åa˚
(c⁄° *, ...Ë
	`__¥ötÊike
(1, 2);

36 
	`å¨gs
(**);

37 
	`åputc
();

38 
	`åputs
(*);

39 
	`›íåa˚
();

	@syntax.c

5 
	~"shñl.h
"

6 
	~"sy¡ax.h
"

9 c⁄° 
	gba£sy¡ax
[257] = {

10 
CEOF
, 
CWORD
, 
CCTL
, CCTL,

11 
CCTL
, CCTL, CCTL, CCTL,

12 
CCTL
, CCTL, 
CWORD
, CWORD,

13 
CWORD
, CWORD, CWORD, CWORD,

14 
CWORD
, CWORD, CWORD, CWORD,

15 
CWORD
, CWORD, CWORD, CWORD,

16 
CWORD
, CWORD, CWORD, CWORD,

17 
CWORD
, CWORD, CWORD, CWORD,

18 
CWORD
, CWORD, CWORD, CWORD,

19 
CWORD
, CWORD, CWORD, CWORD,

20 
CWORD
, CWORD, CWORD, CWORD,

21 
CWORD
, CWORD, CWORD, CWORD,

22 
CWORD
, CWORD, CWORD, CWORD,

23 
CWORD
, CWORD, CWORD, CWORD,

24 
CWORD
, CWORD, CWORD, CWORD,

25 
CWORD
, CWORD, CWORD, CWORD,

26 
CWORD
, CWORD, CWORD, CWORD,

27 
CWORD
, CWORD, CWORD, CWORD,

28 
CWORD
, CWORD, CWORD, CWORD,

29 
CWORD
, CWORD, CWORD, CWORD,

30 
CWORD
, CWORD, CWORD, CWORD,

31 
CWORD
, CWORD, CWORD, CWORD,

32 
CWORD
, CWORD, CWORD, CWORD,

33 
CWORD
, CWORD, CWORD, CWORD,

34 
CWORD
, CWORD, CWORD, CWORD,

35 
CWORD
, CWORD, CWORD, CWORD,

36 
CWORD
, CWORD, CWORD, CWORD,

37 
CWORD
, CWORD, CWORD, CWORD,

38 
CWORD
, CWORD, CWORD, CWORD,

39 
CWORD
, CWORD, CWORD, CWORD,

40 
CWORD
, CWORD, CWORD, CWORD,

41 
CWORD
, CWORD, CWORD, CWORD,

42 
CWORD
, CWORD, CWORD, CWORD,

43 
CWORD
, CWORD, CWORD, CWORD,

44 
CWORD
, CWORD, 
CSPCL
, 
CNL
,

45 
CWORD
, CWORD, CWORD, CWORD,

46 
CWORD
, CWORD, CWORD, CWORD,

47 
CWORD
, CWORD, CWORD, CWORD,

48 
CWORD
, CWORD, CWORD, CWORD,

49 
CWORD
, CWORD, CWORD, CWORD,

50 
CWORD
, 
CSPCL
, CWORD, 
CDQUOTE
,

51 
CWORD
, 
CVAR
, CWORD, 
CSPCL
,

52 
CSQUOTE
, 
CSPCL
, CSPCL, 
CWORD
,

53 
CWORD
, CWORD, CWORD, CWORD,

54 
CWORD
, CWORD, CWORD, CWORD,

55 
CWORD
, CWORD, CWORD, CWORD,

56 
CWORD
, CWORD, CWORD, CWORD,

57 
CSPCL
, CSPCL, 
CWORD
, CSPCL,

58 
CWORD
, CWORD, CWORD, CWORD,

59 
CWORD
, CWORD, CWORD, CWORD,

60 
CWORD
, CWORD, CWORD, CWORD,

61 
CWORD
, CWORD, CWORD, CWORD,

62 
CWORD
, CWORD, CWORD, CWORD,

63 
CWORD
, CWORD, CWORD, CWORD,

64 
CWORD
, CWORD, CWORD, CWORD,

65 
CWORD
, 
CBACK
, CWORD, CWORD,

66 
CWORD
, 
CBQUOTE
, CWORD, CWORD,

67 
CWORD
, CWORD, CWORD, CWORD,

68 
CWORD
, CWORD, CWORD, CWORD,

69 
CWORD
, CWORD, CWORD, CWORD,

70 
CWORD
, CWORD, CWORD, CWORD,

71 
CWORD
, CWORD, CWORD, CWORD,

72 
CWORD
, CWORD, CWORD, CWORD,

73 
CWORD
, 
CSPCL
, 
CENDVAR
, CWORD,

74 
CWORD


78 c⁄° 
	gdqsy¡ax
[257] = {

79 
CEOF
, 
CWORD
, 
CCTL
, CCTL,

80 
CCTL
, CCTL, CCTL, CCTL,

81 
CCTL
, CCTL, 
CWORD
, CWORD,

82 
CWORD
, CWORD, CWORD, CWORD,

83 
CWORD
, CWORD, CWORD, CWORD,

84 
CWORD
, CWORD, CWORD, CWORD,

85 
CWORD
, CWORD, CWORD, CWORD,

86 
CWORD
, CWORD, CWORD, CWORD,

87 
CWORD
, CWORD, CWORD, CWORD,

88 
CWORD
, CWORD, CWORD, CWORD,

89 
CWORD
, CWORD, CWORD, CWORD,

90 
CWORD
, CWORD, CWORD, CWORD,

91 
CWORD
, CWORD, CWORD, CWORD,

92 
CWORD
, CWORD, CWORD, CWORD,

93 
CWORD
, CWORD, CWORD, CWORD,

94 
CWORD
, CWORD, CWORD, CWORD,

95 
CWORD
, CWORD, CWORD, CWORD,

96 
CWORD
, CWORD, CWORD, CWORD,

97 
CWORD
, CWORD, CWORD, CWORD,

98 
CWORD
, CWORD, CWORD, CWORD,

99 
CWORD
, CWORD, CWORD, CWORD,

100 
CWORD
, CWORD, CWORD, CWORD,

101 
CWORD
, CWORD, CWORD, CWORD,

102 
CWORD
, CWORD, CWORD, CWORD,

103 
CWORD
, CWORD, CWORD, CWORD,

104 
CWORD
, CWORD, CWORD, CWORD,

105 
CWORD
, CWORD, CWORD, CWORD,

106 
CWORD
, CWORD, CWORD, CWORD,

107 
CWORD
, CWORD, CWORD, CWORD,

108 
CWORD
, CWORD, CWORD, CWORD,

109 
CWORD
, CWORD, CWORD, CWORD,

110 
CWORD
, CWORD, CWORD, CWORD,

111 
CWORD
, CWORD, CWORD, CWORD,

112 
CWORD
, CWORD, CWORD, CWORD,

113 
CWORD
, CWORD, CWORD, 
CNL
,

114 
CWORD
, CWORD, CWORD, CWORD,

115 
CWORD
, CWORD, CWORD, CWORD,

116 
CWORD
, CWORD, CWORD, CWORD,

117 
CWORD
, CWORD, CWORD, CWORD,

118 
CWORD
, CWORD, CWORD, CWORD,

119 
CWORD
, CWORD, 
CCTL
, 
CENDQUOTE
,

120 
CWORD
, 
CVAR
, CWORD, CWORD,

121 
CWORD
, CWORD, CWORD, 
CCTL
,

122 
CWORD
, CWORD, 
CCTL
, CWORD,

123 
CCTL
, 
CWORD
, CWORD, CWORD,

124 
CWORD
, CWORD, CWORD, CWORD,

125 
CWORD
, CWORD, CWORD, 
CCTL
,

126 
CWORD
, CWORD, 
CCTL
, CWORD,

127 
CCTL
, 
CWORD
, CWORD, CWORD,

128 
CWORD
, CWORD, CWORD, CWORD,

129 
CWORD
, CWORD, CWORD, CWORD,

130 
CWORD
, CWORD, CWORD, CWORD,

131 
CWORD
, CWORD, CWORD, CWORD,

132 
CWORD
, CWORD, CWORD, CWORD,

133 
CWORD
, CWORD, CWORD, CWORD,

134 
CCTL
, 
CBACK
, 
CWORD
, CWORD,

135 
CWORD
, 
CBQUOTE
, CWORD, CWORD,

136 
CWORD
, CWORD, CWORD, CWORD,

137 
CWORD
, CWORD, CWORD, CWORD,

138 
CWORD
, CWORD, CWORD, CWORD,

139 
CWORD
, CWORD, CWORD, CWORD,

140 
CWORD
, CWORD, CWORD, CWORD,

141 
CWORD
, CWORD, CWORD, CWORD,

142 
CWORD
, CWORD, 
CENDVAR
, 
CCTL
,

143 
CWORD


147 c⁄° 
	gsqsy¡ax
[257] = {

148 
CEOF
, 
CWORD
, 
CCTL
, CCTL,

149 
CCTL
, CCTL, CCTL, CCTL,

150 
CCTL
, CCTL, 
CWORD
, CWORD,

151 
CWORD
, CWORD, CWORD, CWORD,

152 
CWORD
, CWORD, CWORD, CWORD,

153 
CWORD
, CWORD, CWORD, CWORD,

154 
CWORD
, CWORD, CWORD, CWORD,

155 
CWORD
, CWORD, CWORD, CWORD,

156 
CWORD
, CWORD, CWORD, CWORD,

157 
CWORD
, CWORD, CWORD, CWORD,

158 
CWORD
, CWORD, CWORD, CWORD,

159 
CWORD
, CWORD, CWORD, CWORD,

160 
CWORD
, CWORD, CWORD, CWORD,

161 
CWORD
, CWORD, CWORD, CWORD,

162 
CWORD
, CWORD, CWORD, CWORD,

163 
CWORD
, CWORD, CWORD, CWORD,

164 
CWORD
, CWORD, CWORD, CWORD,

165 
CWORD
, CWORD, CWORD, CWORD,

166 
CWORD
, CWORD, CWORD, CWORD,

167 
CWORD
, CWORD, CWORD, CWORD,

168 
CWORD
, CWORD, CWORD, CWORD,

169 
CWORD
, CWORD, CWORD, CWORD,

170 
CWORD
, CWORD, CWORD, CWORD,

171 
CWORD
, CWORD, CWORD, CWORD,

172 
CWORD
, CWORD, CWORD, CWORD,

173 
CWORD
, CWORD, CWORD, CWORD,

174 
CWORD
, CWORD, CWORD, CWORD,

175 
CWORD
, CWORD, CWORD, CWORD,

176 
CWORD
, CWORD, CWORD, CWORD,

177 
CWORD
, CWORD, CWORD, CWORD,

178 
CWORD
, CWORD, CWORD, CWORD,

179 
CWORD
, CWORD, CWORD, CWORD,

180 
CWORD
, CWORD, CWORD, CWORD,

181 
CWORD
, CWORD, CWORD, CWORD,

182 
CWORD
, CWORD, CWORD, 
CNL
,

183 
CWORD
, CWORD, CWORD, CWORD,

184 
CWORD
, CWORD, CWORD, CWORD,

185 
CWORD
, CWORD, CWORD, CWORD,

186 
CWORD
, CWORD, CWORD, CWORD,

187 
CWORD
, CWORD, CWORD, CWORD,

188 
CWORD
, CWORD, 
CCTL
, CWORD,

189 
CWORD
, CWORD, CWORD, CWORD,

190 
CENDQUOTE
,
CWORD
, CWORD, 
CCTL
,

191 
CWORD
, CWORD, 
CCTL
, CWORD,

192 
CCTL
, 
CWORD
, CWORD, CWORD,

193 
CWORD
, CWORD, CWORD, CWORD,

194 
CWORD
, CWORD, CWORD, 
CCTL
,

195 
CWORD
, CWORD, 
CCTL
, CWORD,

196 
CCTL
, 
CWORD
, CWORD, CWORD,

197 
CWORD
, CWORD, CWORD, CWORD,

198 
CWORD
, CWORD, CWORD, CWORD,

199 
CWORD
, CWORD, CWORD, CWORD,

200 
CWORD
, CWORD, CWORD, CWORD,

201 
CWORD
, CWORD, CWORD, CWORD,

202 
CWORD
, CWORD, CWORD, CWORD,

203 
CCTL
, 
CWORD
, CWORD, CWORD,

204 
CWORD
, CWORD, CWORD, CWORD,

205 
CWORD
, CWORD, CWORD, CWORD,

206 
CWORD
, CWORD, CWORD, CWORD,

207 
CWORD
, CWORD, CWORD, CWORD,

208 
CWORD
, CWORD, CWORD, CWORD,

209 
CWORD
, CWORD, CWORD, CWORD,

210 
CWORD
, CWORD, CWORD, CWORD,

211 
CWORD
, CWORD, CWORD, 
CCTL
,

212 
CWORD


216 c⁄° 
	g¨isy¡ax
[257] = {

217 
CEOF
, 
CWORD
, 
CCTL
, CCTL,

218 
CCTL
, CCTL, CCTL, CCTL,

219 
CCTL
, CCTL, 
CWORD
, CWORD,

220 
CWORD
, CWORD, CWORD, CWORD,

221 
CWORD
, CWORD, CWORD, CWORD,

222 
CWORD
, CWORD, CWORD, CWORD,

223 
CWORD
, CWORD, CWORD, CWORD,

224 
CWORD
, CWORD, CWORD, CWORD,

225 
CWORD
, CWORD, CWORD, CWORD,

226 
CWORD
, CWORD, CWORD, CWORD,

227 
CWORD
, CWORD, CWORD, CWORD,

228 
CWORD
, CWORD, CWORD, CWORD,

229 
CWORD
, CWORD, CWORD, CWORD,

230 
CWORD
, CWORD, CWORD, CWORD,

231 
CWORD
, CWORD, CWORD, CWORD,

232 
CWORD
, CWORD, CWORD, CWORD,

233 
CWORD
, CWORD, CWORD, CWORD,

234 
CWORD
, CWORD, CWORD, CWORD,

235 
CWORD
, CWORD, CWORD, CWORD,

236 
CWORD
, CWORD, CWORD, CWORD,

237 
CWORD
, CWORD, CWORD, CWORD,

238 
CWORD
, CWORD, CWORD, CWORD,

239 
CWORD
, CWORD, CWORD, CWORD,

240 
CWORD
, CWORD, CWORD, CWORD,

241 
CWORD
, CWORD, CWORD, CWORD,

242 
CWORD
, CWORD, CWORD, CWORD,

243 
CWORD
, CWORD, CWORD, CWORD,

244 
CWORD
, CWORD, CWORD, CWORD,

245 
CWORD
, CWORD, CWORD, CWORD,

246 
CWORD
, CWORD, CWORD, CWORD,

247 
CWORD
, CWORD, CWORD, CWORD,

248 
CWORD
, CWORD, CWORD, CWORD,

249 
CWORD
, CWORD, CWORD, CWORD,

250 
CWORD
, CWORD, CWORD, CWORD,

251 
CWORD
, CWORD, CWORD, 
CNL
,

252 
CWORD
, CWORD, CWORD, CWORD,

253 
CWORD
, CWORD, CWORD, CWORD,

254 
CWORD
, CWORD, CWORD, CWORD,

255 
CWORD
, CWORD, CWORD, CWORD,

256 
CWORD
, CWORD, CWORD, CWORD,

257 
CWORD
, CWORD, CWORD, 
CDQUOTE
,

258 
CWORD
, 
CVAR
, CWORD, CWORD,

259 
CSQUOTE
, 
CLP
, 
CRP
, 
CWORD
,

260 
CWORD
, CWORD, CWORD, CWORD,

261 
CWORD
, CWORD, CWORD, CWORD,

262 
CWORD
, CWORD, CWORD, CWORD,

263 
CWORD
, CWORD, CWORD, CWORD,

264 
CWORD
, CWORD, CWORD, CWORD,

265 
CWORD
, CWORD, CWORD, CWORD,

266 
CWORD
, CWORD, CWORD, CWORD,

267 
CWORD
, CWORD, CWORD, CWORD,

268 
CWORD
, CWORD, CWORD, CWORD,

269 
CWORD
, CWORD, CWORD, CWORD,

270 
CWORD
, CWORD, CWORD, CWORD,

271 
CWORD
, CWORD, CWORD, CWORD,

272 
CWORD
, 
CBACK
, CWORD, CWORD,

273 
CWORD
, 
CBQUOTE
, CWORD, CWORD,

274 
CWORD
, CWORD, CWORD, CWORD,

275 
CWORD
, CWORD, CWORD, CWORD,

276 
CWORD
, CWORD, CWORD, CWORD,

277 
CWORD
, CWORD, CWORD, CWORD,

278 
CWORD
, CWORD, CWORD, CWORD,

279 
CWORD
, CWORD, CWORD, CWORD,

280 
CWORD
, CWORD, 
CENDVAR
, CWORD,

281 
CWORD


285 c⁄° 
	gis_ty≥
[257] = {

326 0, 0, 
ISSPECL
, 0,

327 
ISSPECL
, ISSPECL, 0, 0,

328 0, 0, 0, 
ISSPECL
,

329 0, 0, 
ISSPECL
, 0,

330 0, 
ISDIGIT
, ISDIGIT, ISDIGIT,

331 
ISDIGIT
, ISDIGIT, ISDIGIT, ISDIGIT,

332 
ISDIGIT
, ISDIGIT, ISDIGIT, 0,

334 
ISSPECL
, ISSPECL, 
ISUPPER
, ISUPPER,

335 
ISUPPER
, ISUPPER, ISUPPER, ISUPPER,

336 
ISUPPER
, ISUPPER, ISUPPER, ISUPPER,

337 
ISUPPER
, ISUPPER, ISUPPER, ISUPPER,

338 
ISUPPER
, ISUPPER, ISUPPER, ISUPPER,

339 
ISUPPER
, ISUPPER, ISUPPER, ISUPPER,

340 
ISUPPER
, ISUPPER, ISUPPER, ISUPPER,

342 
ISUNDER
, 0, 
ISLOWER
, ISLOWER,

343 
ISLOWER
, ISLOWER, ISLOWER, ISLOWER,

344 
ISLOWER
, ISLOWER, ISLOWER, ISLOWER,

345 
ISLOWER
, ISLOWER, ISLOWER, ISLOWER,

346 
ISLOWER
, ISLOWER, ISLOWER, ISLOWER,

347 
ISLOWER
, ISLOWER, ISLOWER, ISLOWER,

348 
ISLOWER
, ISLOWER, ISLOWER, ISLOWER,

	@syntax.h

5 
	~<sys/cdefs.h
>

6 
	~<˘y≥.h
>

8 
	#CWORD
 0

	)

9 
	#CNL
 1

	)

10 
	#CBACK
 2

	)

11 
	#CSQUOTE
 3

	)

12 
	#CDQUOTE
 4

	)

13 
	#CENDQUOTE
 5

	)

14 
	#CBQUOTE
 6

	)

15 
	#CVAR
 7

	)

16 
	#CENDVAR
 8

	)

17 
	#CLP
 9

	)

18 
	#CRP
 10

	)

19 
	#CEOF
 11

	)

20 
	#CCTL
 12

	)

21 
	#CSPCL
 13

	)

24 
	#ISDIGIT
 01

	)

25 
	#ISUPPER
 02

	)

26 
	#ISLOWER
 04

	)

27 
	#ISUNDER
 010

	)

28 
	#ISSPECL
 020

	)

30 
	#SYNBASE
 129

	)

31 
	#PEOF
 -129

	)

34 
	#BASESYNTAX
 (
ba£sy¡ax
 + 
SYNBASE
)

	)

35 
	#DQSYNTAX
 (
dqsy¡ax
 + 
SYNBASE
)

	)

36 
	#SQSYNTAX
 (
sqsy¡ax
 + 
SYNBASE
)

	)

37 
	#ARISYNTAX
 (
¨isy¡ax
 + 
SYNBASE
)

	)

39 
	#is_digô
(
c
Ë(()((cË- '0'Ë<9)

	)

40 
	#is_eof
(
c
Ë((cË=
PEOF
)

	)

41 
	#is_Æpha
(
c
Ë(((cË< 
CTLESC
 || (cË> 
CTLQUOTEMARK
Ë&& 
	`ißÕha
((Ë(c)))

	)

42 
	#is_«me
(
c
Ë(((cË< 
CTLESC
 || (cË> 
CTLQUOTEMARK
Ë&& ((cË='_' || 
	`ißÕha
((Ë(c))))

	)

43 
	#is_ö_«me
(
c
Ë(((cË< 
CTLESC
 || (cË> 
CTLQUOTEMARK
Ë&& ((cË='_' || 
	`iß um
((Ë(c))))

	)

44 
	#is_•ecül
(
c
Ë((
is_ty≥
+
SYNBASE
)[c] & (
ISSPECL
|
ISDIGIT
))

	)

45 
	#digô_vÆ
(
c
Ë((cË- '0')

	)

47 c⁄° 
ba£sy¡ax
[];

48 c⁄° 
dqsy¡ax
[];

49 c⁄° 
sqsy¡ax
[];

50 c⁄° 
¨isy¡ax
[];

51 c⁄° 
is_ty≥
[];

	@token.h

1 
	#TEOF
 0

	)

2 
	#TNL
 1

	)

3 
	#TSEMI
 2

	)

4 
	#TBACKGND
 3

	)

5 
	#TAND
 4

	)

6 
	#TOR
 5

	)

7 
	#TPIPE
 6

	)

8 
	#TLP
 7

	)

9 
	#TRP
 8

	)

10 
	#TENDCASE
 9

	)

11 
	#TENDBQUOTE
 10

	)

12 
	#TREDIR
 11

	)

13 
	#TWORD
 12

	)

14 
	#TIF
 13

	)

15 
	#TTHEN
 14

	)

16 
	#TELSE
 15

	)

17 
	#TELIF
 16

	)

18 
	#TFI
 17

	)

19 
	#TWHILE
 18

	)

20 
	#TUNTIL
 19

	)

21 
	#TFOR
 20

	)

22 
	#TDO
 21

	)

23 
	#TDONE
 22

	)

24 
	#TBEGIN
 23

	)

25 
	#TEND
 24

	)

26 
	#TCASE
 25

	)

27 
	#TESAC
 26

	)

28 
	#TNOT
 27

	)

31 c⁄° 
	gtokídli°
[] = {

62 c⁄° *c⁄° 
	gtok«me
[] = {

93 
	#KWDOFFSET
 13

	)

95 c⁄° *c⁄° 
	g∑r£kwd
[] = {

	@trap.c

33 #i‚de‡
löt


35 
	gsccsid
[] = "@(#)trap.c 8.5 (Berkeley) 6/5/95";

38 
	~<sys/cdefs.h
>

39 
__FBSDID
("$FreeBSD: src/bin/sh/trap.c,v 1.32.6.1 2008/11/25 02:59:29 kensmith Exp $");

41 
	~<sig«l.h
>

42 
	~<uni°d.h
>

43 
	~<°dlib.h
>

45 
	~"shñl.h
"

46 
	~"maö.h
"

47 
	~"nodes.h
"

48 
	~"evÆ.h
"

49 
	~"jobs.h
"

50 
	~"show.h
"

51 
	~"›ti⁄s.h
"

52 
	~"sy¡ax.h
"

53 
	~"ouçut.h
"

54 
	~"memÆloc.h
"

55 
	~"îr‹.h
"

56 
	~"å≠.h
"

57 
	~"my°rög.h
"

58 #i‚de‡
NO_HISTORY


59 
	~"myhi°edô.h
"

69 
	#S_DFL
 1

	)

70 
	#S_CATCH
 2

	)

71 
	#S_IGN
 3

	)

72 
	#S_HARD_IGN
 4

	)

73 
	#S_RESET
 5

	)

75 
	#sys_sig«me
 
sys_sigli°


	)

76 
sigh™dÀr_t
 
	tsig_t
;

78 
MKINIT
 
	gsigmode
[
NSIG
];

79 
	g≥ndögsigs
;

80 
	gö_dŸøp
;

81 *vﬁ©ûê
	gå≠
[
NSIG
];

82 vﬁ©ûê
sig_©omic_t
 
	ggŸsig
[
NSIG
];

84 
	gign‹e_sigchld
;

85 vﬁ©ûê
sig_©omic_t
 
	ggŸwöch
;

87 
gësiga˘i⁄
(, 
sig_t
 *);

96 
	$sig°rög_to_signum
(*
sig
)

99 i‡(
	`is_numbî
(
sig
)) {

100 
signo
;

102 
signo
 = 
	`©oi
(
sig
);

103  ((
signo
 >0 && signÿ< 
NSIG
) ? signo : (-1));

104 } i‡(
	`°rˇ£cmp
(
sig
, "exit") == 0) {

107 
n
;

109 i‡(
	`°∫ˇ£cmp
(
sig
, "sig", 3) == 0)

110 
sig
 += 3;

111 
n
 = 1;Ç < 
sys_nsig
;Ç++)

112 i‡(
sys_sig«me
[
n
] &&

113 
	`°rˇ£cmp
(
sys_sig«me
[
n
], 
sig
) == 0)

114  (
n
);

117 
	}
}

124 
	$¥ötsig«ls
()

126 
n
, 
ouéí
;

128 
ouéí
 = 0;

129 
n
 = 1;Ç < 
sys_nsig
;Ç++) {

130 i‡(
sys_sig«me
[
n
]) {

131 
	`out1fmt
("%s", 
sys_sig«me
[
n
]);

132 
ouéí
 +
	`°æí
(
sys_sig«me
[
n
]);

134 
	`out1fmt
("%d", 
n
);

135 
ouéí
 += 3;

137 ++
ouéí
;

138 i‡(
ouéí
 > 70 || 
n
 =
sys_nsig
 - 1) {

139 
	`out1°r
("\n");

140 
ouéí
 = 0;

142 
	`out1c
(' ');

145 
	}
}

152 
	$å≠cmd
(
¨gc
, **
¨gv
)

154 *
a˘i⁄
;

155 
signo
;

157 i‡(
¨gc
 <= 1) {

158 
signo
 = 0 ; signÿ< 
sys_nsig
 ; signo++) {

159 i‡(
signo
 < 
NSIG
 && 
å≠
[signo] !
NULL
) {

160 
	`out1°r
("trap -- ");

161 
	`out1q°r
(
å≠
[
signo
]);

162 i‡(
signo
 == 0) {

163 
	`out1°r
("Éxit\n");

164 } i‡(
sys_sig«me
[
signo
]) {

165 
	`out1fmt
(" %s\n", 
sys_sig«me
[
signo
]);

167 
	`out1fmt
(" %d\n", 
signo
);

173 
a˘i⁄
 = 
NULL
;

174 i‡(*++
¨gv
 && 
	`°rcmp
(*argv, "--") == 0)

175 
¨gv
++;

176 i‡(*
¨gv
 && 
	`sig°rög_to_signum
(*argv) == -1) {

177 i‡((*
¨gv
)[0] != '-') {

178 
a˘i⁄
 = *
¨gv
;

179 
¨gv
++;

180 } i‡((*
¨gv
)[1] == '\0') {

181 
¨gv
++;

182 } i‡((*
¨gv
)[1] == 'l' && (*argv)[2] == '\0') {

183 
	`¥ötsig«ls
();

186 
	`îr‹
("bad o±i⁄ %s", *
¨gv
);

189 *
¨gv
) {

190 i‡((
signo
 = 
	`sig°rög_to_signum
(*
¨gv
)) == -1)

191 
	`îr‹
("bad sig«»%s", *
¨gv
);

192 
INTOFF
;

193 i‡(
a˘i⁄
)

194 
a˘i⁄
 = 
	`ßve°r
(action);

195 i‡(
å≠
[
signo
])

196 
	`ck‰ì
(
å≠
[
signo
]);

197 
å≠
[
signo
] = 
a˘i⁄
;

198 i‡(
signo
 != 0)

199 
	`£tsig«l
(
signo
);

200 
INTON
;

201 
¨gv
++;

204 
	}
}

211 
	$˛ór_å≠s
()

213 *vﬁ©ûê*
ç
;

215 
ç
 = 
å≠
 ;Å∞<&å≠[
NSIG
 - 1] ;Åp++) {

216 i‡(*
ç
 && **tp) {

217 
INTOFF
;

218 
	`ck‰ì
(*
ç
);

219 *
ç
 = 
NULL
;

220 i‡(
ç
 !&
å≠
[0])

221 
	`£tsig«l
(
ç
 - 
å≠
);

222 
INTON
;

225 
	}
}

233 
	$£tsig«l
(
signo
)

235 
a˘i⁄
;

236 
sig_t
 
sig
, 
siga˘
 = 
SIG_DFL
;

237 *
t
;

239 i‡((
t
 = 
å≠
[
signo
]Ë=
NULL
)

240 
a˘i⁄
 = 
S_DFL
;

241 i‡(*
t
 != '\0')

242 
a˘i⁄
 = 
S_CATCH
;

244 
a˘i⁄
 = 
S_IGN
;

245 i‡(
a˘i⁄
 =
S_DFL
) {

246 
signo
) {

247 
SIGINT
:

248 
a˘i⁄
 = 
S_CATCH
;

250 
SIGQUIT
:

251 #ifde‡
DEBUG


253 
debug
;

255 i‡(
debug
)

259 
a˘i⁄
 = 
S_CATCH
;

261 
SIGTERM
:

262 i‡(
roŸshñl
 && 
iÊag
)

263 
a˘i⁄
 = 
S_IGN
;

265 #i‡
JOBS


266 
SIGTSTP
:

267 
SIGTTOU
:

268 i‡(
roŸshñl
 && 
mÊag
)

269 
a˘i⁄
 = 
S_IGN
;

272 #i‚de‡
NO_HISTORY


273 
SIGWINCH
:

274 i‡(
roŸshñl
 && 
iÊag
)

275 
a˘i⁄
 = 
S_CATCH
;

281 
t
 = &
sigmode
[
signo
];

282 i‡(*
t
 == 0) {

286 i‡(!
	`gësiga˘i⁄
(
signo
, &
siga˘
)) {

294 i‡(
siga˘
 =
SIG_IGN
) {

295 i‡(
mÊag
 && (
signo
 =
SIGTSTP
 ||

296 
signo
 =
SIGTTIN
 || signÿ=
SIGTTOU
)) {

297 *
t
 = 
S_IGN
;

299 *
t
 = 
S_HARD_IGN
;

301 *
t
 = 
S_RESET
;

304 i‡(*
t
 =
S_HARD_IGN
 || *à=
a˘i⁄
)

306 
a˘i⁄
) {

307 
S_DFL
: 
siga˘
 = 
SIG_DFL
; ;

308 
S_CATCH
: 
siga˘
 = 
⁄sig
; ;

309 
S_IGN
: 
siga˘
 = 
SIG_IGN
; ;

311 *
t
 = 
a˘i⁄
;

312 
sig
 = 
	`sig«l
(
signo
, 
siga˘
);

313 i‡(
sig
 !
SIG_ERR
 && 
a˘i⁄
 =
S_CATCH
)

314 
	`sigöãºu±
(
signo
, 1);

315 
	}
}

322 
	$gësiga˘i⁄
(
signo
, 
sig_t
 *
siga˘
)

324 
siga˘i⁄
 
ß
;

326 i‡(
	`siga˘i⁄
(
signo
, (
siga˘i⁄
 *)0, &
ß
) == -1)

328 *
siga˘
 = (
sig_t
Ë
ß
.
ß_h™dÀr
;

330 
	}
}

337 
	$ign‹esig
(
signo
)

340 i‡(
sigmode
[
signo
] !
S_IGN
 && sigmode[signo] !
S_HARD_IGN
) {

341 
	`sig«l
(
signo
, 
SIG_IGN
);

343 
sigmode
[
signo
] = 
S_HARD_IGN
;

344 
	}
}

347 #ifde‡
mköô


348 
	gINCLUDE
 <
	gsig«l
.
	gh
>

349 
	gINCLUDE
 "trap.h"

351 
	gSHELLPROC
 {

352 *
	gsm
;

354 
˛ór_å≠s
();

355 
	gsm
 = 
sigmode
 ; sm < 
	gsigmode
 + 
	gNSIG
 ; sm++) {

356 i‡(*
	gsm
 =
S_IGN
)

357 *
sm
 = 
S_HARD_IGN
;

367 
	$⁄sig
(
signo
)

370 i‡(
signo
 =
SIGINT
 && 
å≠
[SIGINT] =
NULL
) {

371 
	`⁄öt
();

375 i‡(
signo
 !
SIGCHLD
 || !
ign‹e_sigchld
)

376 
gŸsig
[
signo
] = 1;

377 
≥ndögsigs
++;

380 i‡((
signo
 =
SIGINT
 || signÿ=
SIGQUIT
Ë&& 
ö_waôcmd
 != 0)

381 
bªakwaôcmd
 = 1;

386 i‡(
TÊag
 &&

387 
å≠
[
signo
] !
NULL
 &&

388 ! (
å≠
[
signo
][0] == '\0') &&

389 ! (
å≠
[
signo
][0] == ':' &&Årap[signo][1] == '\0'))

390 
bªakwaôcmd
 = 1;

392 #i‚de‡
NO_HISTORY


393 i‡(
signo
 =
SIGWINCH
)

394 
gŸwöch
 = 1;

396 
	}
}

404 
	$dŸøp
()

406 
i
;

407 
ßve°©us
;

409 
ö_dŸøp
++;

411 
i
 = 1; i < 
NSIG
; i++) {

412 i‡(
gŸsig
[
i
]) {

413 
gŸsig
[
i
] = 0;

414 i‡(
å≠
[
i
]) {

420 i‡(
i
 =
SIGCHLD
)

421 
ign‹e_sigchld
++;

422 
ßve°©us
 = 
exô°©us
;

423 
	`evÆ°rög
(
å≠
[
i
]);

424 
exô°©us
 = 
ßve°©us
;

425 i‡(
i
 =
SIGCHLD
)

426 
ign‹e_sigchld
--;

431 i‡(
i
 >
NSIG
)

434 
ö_dŸøp
--;

435 
≥ndögsigs
 = 0;

436 
	}
}

443 
	$£töãø˘ive
(
⁄
)

445 
is_öãø˘ive
 = -1;

447 i‡(
⁄
 =
is_öãø˘ive
)

449 
	`£tsig«l
(
SIGINT
);

450 
	`£tsig«l
(
SIGQUIT
);

451 
	`£tsig«l
(
SIGTERM
);

452 #i‚de‡
NO_HISTORY


453 
	`£tsig«l
(
SIGWINCH
);

455 
is_öãø˘ive
 = 
⁄
;

456 
	}
}

463 
	$exôshñl
(
°©us
)

465 
jm∂oc
 
loc1
, 
loc2
;

466 *
p
;

468 
	`TRACE
(("exôshñl(%dËpid=%d\n", 
°©us
, 
	`gëpid
()));

469 i‡(
	`£tjmp
(
loc1
.
loc
)) {

470 
l1
;

472 i‡(
	`£tjmp
(
loc2
.
loc
)) {

473 
l2
;

475 
h™dÀr
 = &
loc1
;

476 i‡((
p
 = 
å≠
[0]Ë!
NULL
 && *p != '\0') {

477 
å≠
[0] = 
NULL
;

478 
	`evÆ°rög
(
p
);

480 
l1
: 
h™dÀr
 = &
loc2
;

481 
	`ÊushÆl
();

482 #i‡
JOBS


483 
	`£tjob˘l
(0);

485 
l2
: 
	`_exô
(
°©us
);

486 
	}
}

	@trap.h

36 
≥ndögsigs
;

37 
ö_dŸøp
;

38 vﬁ©ûê
sig_©omic_t
 
gŸwöch
;

40 
å≠cmd
(, **);

41 
˛ór_å≠s
();

42 
£tsig«l
();

43 
ign‹esig
();

44 
⁄sig
();

45 
dŸøp
();

46 
£töãø˘ive
();

47 
exôshñl
();

	@var.c

33 #i‚de‡
löt


35 
	gsccsid
[] = "@(#)var.c 8.3 (Berkeley) 5/4/95";

38 
	~<sys/cdefs.h
>

39 
__FBSDID
("$FreeBSD: src/bin/sh/var.c,v 1.37.6.1 2008/11/25 02:59:29 kensmith Exp $");

41 
	~<uni°d.h
>

42 
	~<°dlib.h
>

43 
	~<∑ths.h
>

49 
	~<loˇÀ.h
>

51 
	~"shñl.h
"

52 
	~"ouçut.h
"

53 
	~"ex∑nd.h
"

54 
	~"nodes.h
"

55 
	~"evÆ.h
"

56 
	~"exec.h
"

57 
	~"sy¡ax.h
"

58 
	~"›ti⁄s.h
"

59 
	~"maû.h
"

60 
	~"v¨.h
"

61 
	~"memÆloc.h
"

62 
	~"îr‹.h
"

63 
	~"my°rög.h
"

64 
	~"∑r£r.h
"

65 #i‚de‡
NO_HISTORY


66 
	~"myhi°edô.h
"

70 
	#VTABSIZE
 39

	)

73 
	sv¨öô
 {

74 
v¨
 *
	mv¨
;

75 
	mÊags
;

76 *
	mãxt
;

77 (*
	mfunc
)(const *);

81 #i‚de‡
NO_HISTORY


82 
v¨
 
	gvhi°size
;

84 
v¨
 
	gvifs
;

85 
v¨
 
	gvmaû
;

86 
v¨
 
	gvm∑th
;

87 
v¨
 
	gv∑th
;

88 
v¨
 
	gvµid
;

89 
v¨
 
	gvps1
;

90 
v¨
 
	gvps2
;

91 
v¨
 
	gvps4
;

92 
v¨
 
	gvvîs
;

93 
STATIC
 
v¨
 
	gv›töd
;

95 
STATIC
 c⁄° 
v¨öô
 
	gv¨öô
[] = {

96 #i‚de‡
NO_HISTORY


97 { &
vhi°size
, 
VSTRFIXED
|
VTEXTFIXED
|
VUNSET
, "HISTSIZE=",

98 
£thi°size
 },

100 { &
vifs
, 
VSTRFIXED
|
VTEXTFIXED
, "IFS= \t\n",

101 
NULL
 },

102 { &
vmaû
, 
VSTRFIXED
|
VTEXTFIXED
|
VUNSET
, "MAIL=",

103 
NULL
 },

104 { &
vm∑th
, 
VSTRFIXED
|
VTEXTFIXED
|
VUNSET
, "MAILPATH=",

105 
NULL
 },

106 { &
v∑th
, 
VSTRFIXED
|
VTEXTFIXED
, "PATH=" 
_PATH_DEFPATH
,

107 
ch™gï©h
 },

108 { &
vµid
, 
VSTRFIXED
|
VTEXTFIXED
|
VUNSET
, "PPID=",

109 
NULL
 },

113 { &
vps2
, 
VSTRFIXED
|
VTEXTFIXED
, "PS2=> ",

114 
NULL
 },

115 { &
vps4
, 
VSTRFIXED
|
VTEXTFIXED
, "PS4=+ ",

116 
NULL
 },

117 { &
v›töd
, 
VSTRFIXED
|
VTEXTFIXED
, "OPTIND=1",

118 
gë›t§e£t
 },

119 { 
NULL
, 0, NULL,

120 
NULL
 }

123 
STATIC
 
v¨
 *
	gv¨èb
[
VTABSIZE
];

125 
STATIC
 
v¨
 **
hashv¨
(*);

126 
STATIC
 
v¨equÆ
(*, *);

127 
STATIC
 
loˇÀv¨
(*);

133 #ifde‡
mköô


134 
	gINCLUDE
 "var.h"

135 
	gINIT
 {

136 **
	gívp
;

137 **
ívú⁄
;

139 
öôv¨
();

140 
	gívp
 = 
ívú⁄
 ; *envp ;Énvp++) {

141 i‡(
°rchr
(*
ívp
, '=')) {

142 
£tv¨eq
(*
ívp
, 
VEXPORT
|
VTEXTFIXED
);

155 
	$öôv¨
()

157 
µid
[20];

158 c⁄° 
v¨öô
 *
ù
;

159 
v¨
 *
vp
;

160 
v¨
 **
vµ
;

162 
ù
 = 
v¨öô
 ; (
vp
 = ip->
v¨
Ë!
NULL
 ; ip++) {

163 i‡((
vp
->
Êags
 & 
VEXPORT
) == 0) {

164 
vµ
 = 
	`hashv¨
(
ù
->
ãxt
);

165 
vp
->
√xt
 = *
vµ
;

166 *
vµ
 = 
vp
;

167 
vp
->
ãxt
 = 
ù
->text;

168 
vp
->
Êags
 = 
ù
->flags;

169 
vp
->
func
 = 
ù
->func;

175 i‡((
vps1
.
Êags
 & 
VEXPORT
) == 0) {

176 
vµ
 = 
	`hashv¨
("PS1=");

177 
vps1
.
√xt
 = *
vµ
;

178 *
vµ
 = &
vps1
;

179 
vps1
.
ãxt
 = 
	`gëeuid
() ? "PS1=$ " : "PS1=# ";

180 
vps1
.
Êags
 = 
VSTRFIXED
|
VTEXTFIXED
;

182 i‡((
vµid
.
Êags
 & 
VEXPORT
) == 0) {

183 
	`fmt°r
(
µid
, ’pid), "%d", ()
	`gëµid
());

184 
	`£tv¨ß„
("PPID", 
µid
, 0);

186 
	}
}

193 
	$£tv¨ß„
(*
«me
, *
vÆ
, 
Êags
)

195 
jm∂oc
 jmploc;

196 
jm∂oc
 *vﬁ©ûê
ßveh™dÀr
 = 
h™dÀr
;

197 
îr
 = 0;

198 #i‡
__GNUC__


200 (Ë&
îr
;

203 i‡(
	`£tjmp
(
jm∂oc
.
loc
))

204 
îr
 = 1;

206 
h™dÀr
 = &
jm∂oc
;

207 
	`£tv¨
(
«me
, 
vÆ
, 
Êags
);

209 
h™dÀr
 = 
ßveh™dÀr
;

210  
îr
;

211 
	}
}

219 
	$£tv¨
(*
«me
, *
vÆ
, 
Êags
)

221 *
p
, *
q
;

222 
Àn
;

223 
«mñí
;

224 *
«mìq
;

225 
isbad
;

227 
isbad
 = 0;

228 
p
 = 
«me
;

229 i‡(! 
	`is_«me
(*
p
))

230 
isbad
 = 1;

231 
p
++;

233 i‡(! 
	`is_ö_«me
(*
p
)) {

234 i‡(*
p
 == '\0' || *p == '=')

236 
isbad
 = 1;

238 
p
++;

240 
«mñí
 = 
p
 - 
«me
;

241 i‡(
isbad
)

242 
	`îr‹
("%.*s: bad v¨übÀÇame", 
«mñí
, 
«me
);

243 
Àn
 = 
«mñí
 + 2;

244 i‡(
vÆ
 =
NULL
) {

245 
Êags
 |
VUNSET
;

247 
Àn
 +
	`°æí
(
vÆ
);

249 
p
 = 
«mìq
 = 
	`ckmÆloc
(
Àn
);

250 
q
 = 
«me
;

251 --
«mñí
 >= 0)

252 *
p
++ = *
q
++;

253 *
p
++ = '=';

254 *
p
 = '\0';

255 i‡(
vÆ
)

256 
	`sc›y
(
vÆ
, 
p
);

257 
	`£tv¨eq
(
«mìq
, 
Êags
);

258 
	}
}

260 
STATIC
 

261 
	$loˇÀv¨
(*
s
)

263 *
 ames
[7] = {

265 "NUMERIC", "TIME", 
NULL


267 **
ss
;

269 i‡(*
s
 != 'L')

271 i‡(
	`v¨equÆ
(
s
 + 1, "ANG"))

273 i‡(
	`°∫cmp
(
s
 + 1, "C_", 2) != 0)

275 
ss
 = 
 ames
; *ss ; ss++)

276 i‡(
	`v¨equÆ
(
s
 + 3, *
ss
))

279 
	}
}

287 
	$ch™ge_ív
(*
s
, 
£t
)

289 *
eqp
;

290 *
ss
;

292 
ss
 = 
	`ßve°r
(
s
);

293 i‡((
eqp
 = 
	`°rchr
(
ss
, '=')Ë!
NULL
)

294 *
eqp
 = '\0';

295 i‡(
£t
 && 
eqp
 !
NULL
)

296 (Ë
	`£ãnv
(
ss
, 
eqp
 + 1, 1);

298 (Ë
	`un£ãnv
(
ss
);

299 
	`ck‰ì
(
ss
);

302 
	}
}

313 
	$£tv¨eq
(*
s
, 
Êags
)

315 
v¨
 *
vp
, **
vµ
;

316 
Àn
;

318 i‡(
aÊag
)

319 
Êags
 |
VEXPORT
;

320 
vµ
 = 
	`hashv¨
(
s
);

321 
vp
 = *
vµ
 ; v∞; v∞vp->
√xt
) {

322 i‡(
	`v¨equÆ
(
s
, 
vp
->
ãxt
)) {

323 i‡(
vp
->
Êags
 & 
VREADONLY
) {

324 
Àn
 = 
	`°rchr
(
s
, '=') - s;

325 
	`îr‹
("%.*s: i†ªad o∆y", 
Àn
, 
s
);

327 
INTOFF
;

329 i‡(
vp
->
func
 && (
Êags
 & 
VNOFUNC
) == 0)

330 (*
vp
->
func
)(
	`°rchr
(
s
, '=') + 1);

332 i‡((
vp
->
Êags
 & (
VTEXTFIXED
|
VSTACK
)) == 0)

333 
	`ck‰ì
(
vp
->
ãxt
);

335 
vp
->
Êags
 &~(
VTEXTFIXED
|
VSTACK
|
VUNSET
);

336 
vp
->
Êags
 |= flags;

337 
vp
->
ãxt
 = 
s
;

343 i‡(
vp
 =&
vm∑th
 || (v∞=&
vmaû
 && ! 
	`m∑th£t
()))

344 
	`chkmaû
(1);

345 i‡((
vp
->
Êags
 & 
VEXPORT
Ë&& 
	`loˇÀv¨
(
s
)) {

346 
	`ch™ge_ív
(
s
, 1);

347 (Ë
	`£éoˇÀ
(
LC_ALL
, "");

349 
INTON
;

354 
vp
 = 
	`ckmÆloc
( (*vp));

355 
vp
->
Êags
 = flags;

356 
vp
->
ãxt
 = 
s
;

357 
vp
->
√xt
 = *
vµ
;

358 
vp
->
func
 = 
NULL
;

359 
INTOFF
;

360 *
vµ
 = 
vp
;

361 i‡((
vp
->
Êags
 & 
VEXPORT
Ë&& 
	`loˇÀv¨
(
s
)) {

362 
	`ch™ge_ív
(
s
, 1);

363 (Ë
	`£éoˇÀ
(
LC_ALL
, "");

365 
INTON
;

366 
	}
}

375 
	$li°£tv¨
(
°æi°
 *
li°
)

377 
°æi°
 *
Õ
;

379 
INTOFF
;

380 
Õ
 = 
li°
 ;Ü∞;Ü∞Õ->
√xt
) {

381 
	`£tv¨eq
(
	`ßve°r
(
Õ
->
ãxt
), 0);

383 
INTON
;

384 
	}
}

393 
	$lookupv¨
(*
«me
)

395 
v¨
 *
v
;

397 
v
 = *
	`hashv¨
(
«me
Ë; v ; v = v->
√xt
) {

398 i‡(
	`v¨equÆ
(
v
->
ãxt
, 
«me
)) {

399 i‡(
v
->
Êags
 & 
VUNSET
)

400  
NULL
;

401  
	`°rchr
(
v
->
ãxt
, '=') + 1;

404  
NULL
;

405 
	}
}

416 
	$b…ölookup
(*
«me
, 
dﬂŒ
)

418 
°æi°
 *
•
;

419 
v¨
 *
v
;

421 
•
 = 
cmdívú⁄
 ; s∞; s∞•->
√xt
) {

422 i‡(
	`v¨equÆ
(
•
->
ãxt
, 
«me
))

423  
	`°rchr
(
•
->
ãxt
, '=') + 1;

425 
v
 = *
	`hashv¨
(
«me
Ë; v ; v = v->
√xt
) {

426 i‡(
	`v¨equÆ
(
v
->
ãxt
, 
«me
)) {

427 i‡((
v
->
Êags
 & 
VUNSET
)

428 || (!
dﬂŒ
 && (
v
->
Êags
 & 
VEXPORT
) == 0))

429  
NULL
;

430  
	`°rchr
(
v
->
ãxt
, '=') + 1;

433  
NULL
;

434 
	}
}

444 
	$ívú⁄mít
()

446 
√nv
;

447 
v¨
 **
vµ
;

448 
v¨
 *
vp
;

449 **
ív
, **
ï
;

451 
√nv
 = 0;

452 
vµ
 = 
v¨èb
 ; vµ < v¨èb + 
VTABSIZE
 ; vpp++) {

453 
vp
 = *
vµ
 ; v∞; v∞vp->
√xt
)

454 i‡(
vp
->
Êags
 & 
VEXPORT
)

455 
√nv
++;

457 
ï
 = 
ív
 = 
	`°Æloc
((
√nv
 + 1) *  *env);

458 
vµ
 = 
v¨èb
 ; vµ < v¨èb + 
VTABSIZE
 ; vpp++) {

459 
vp
 = *
vµ
 ; v∞; v∞vp->
√xt
)

460 i‡(
vp
->
Êags
 & 
VEXPORT
)

461 *
ï
++ = 
vp
->
ãxt
;

463 *
ï
 = 
NULL
;

464  
ív
;

465 
	}
}

474 #ifde‡
mköô


475 
MKINIT
 
sh¥ocv¨
();

477 
	gSHELLPROC
 {

478 
sh¥ocv¨
();

483 
	$sh¥ocv¨
()

485 
v¨
 **
vµ
;

486 
v¨
 *
vp
, **
¥ev
;

488 
vµ
 = 
v¨èb
 ; vµ < v¨èb + 
VTABSIZE
 ; vpp++) {

489 
¥ev
 = 
vµ
 ; (
vp
 = *¥evË!
NULL
 ; ) {

490 i‡((
vp
->
Êags
 & 
VEXPORT
) == 0) {

491 *
¥ev
 = 
vp
->
√xt
;

492 i‡((
vp
->
Êags
 & 
VTEXTFIXED
) == 0)

493 
	`ck‰ì
(
vp
->
ãxt
);

494 i‡((
vp
->
Êags
 & 
VSTRFIXED
) == 0)

495 
	`ck‰ì
(
vp
);

497 i‡(
vp
->
Êags
 & 
VSTACK
) {

498 
vp
->
ãxt
 = 
	`ßve°r
(vp->text);

499 
vp
->
Êags
 &=~ 
VSTACK
;

501 
¥ev
 = &
vp
->
√xt
;

505 
	`öôv¨
();

506 
	}
}

510 
	$v¨_com∑ª
(c⁄° *
a
, c⁄° *
b
)

512 c⁄° *c⁄° *
ß
, *c⁄° *
sb
;

514 
ß
 = 
a
;

515 
sb
 = 
b
;

521  
	`°rcﬁl
(*
ß
, *
sb
);

522 
	}
}

532 
	$showv¨scmd
(
¨gc
 
__unu£d
, **
¨gv
 __unused)

534 
v¨
 **
vµ
;

535 
v¨
 *
vp
;

536 c⁄° *
s
;

537 c⁄° **
v¨s
;

538 
i
, 
n
;

543 
n
 = 0;

544 
vµ
 = 
v¨èb
; vµ < v¨èb + 
VTABSIZE
; vpp++) {

545 
vp
 = *
vµ
; vp; v∞vp->
√xt
) {

546 i‡(!(
vp
->
Êags
 & 
VUNSET
))

547 
n
++;

551 
INTON
;

552 
v¨s
 = 
	`ckmÆloc
(
n
 * (*vars));

553 
i
 = 0;

554 
vµ
 = 
v¨èb
; vµ < v¨èb + 
VTABSIZE
; vpp++) {

555 
vp
 = *
vµ
; vp; v∞vp->
√xt
) {

556 i‡(!(
vp
->
Êags
 & 
VUNSET
))

557 
v¨s
[
i
++] = 
vp
->
ãxt
;

561 
	`qs‹t
(
v¨s
, 
n
, (*v¨s), 
v¨_com∑ª
);

562 
i
 = 0; i < 
n
; i++) {

563 
s
 = 
v¨s
[
i
]; *s != '='; s++)

564 
	`out1c
(*
s
);

565 
	`out1c
('=');

566 
	`out1q°r
(
s
 + 1);

567 
	`out1c
('\n');

569 
	`ck‰ì
(
v¨s
);

570 
INTOFF
;

573 
	}
}

582 
	$exp‹tcmd
(
¨gc
, **
¨gv
)

584 
v¨
 **
vµ
;

585 
v¨
 *
vp
;

586 *
«me
;

587 *
p
;

588 *
cmd«me
;

589 
ch
, 
vÆues
;

590 
Êag
 = 
¨gv
[0][0] ='r'? 
VREADONLY
 : 
VEXPORT
;

592 
cmd«me
 = 
¨gv
[0];

593 
›åe£t
 = 
›töd
 = 1;

594 
›ãº
 = 0;

595 
vÆues
 = 0;

596 (
ch
 = 
	`gë›t
(
¨gc
, 
¨gv
, "p")) != -1) {

597 
ch
) {

599 
vÆues
 = 1;

603 
	`îr‹
("unknow¿›ti⁄: -%c", 
›t›t
);

606 
¨gc
 -
›töd
;

607 
¨gv
 +
›töd
;

609 i‡(
vÆues
 && 
¨gc
 != 0)

610 
	`îr‹
("-pÑequiresÇoárguments");

611 
	`li°£tv¨
(
cmdívú⁄
);

612 i‡(
¨gc
 != 0) {

613 (
«me
 = *
¨gv
++Ë!
NULL
) {

614 i‡((
p
 = 
	`°rchr
(
«me
, '=')Ë!
NULL
) {

615 
p
++;

617 
vµ
 = 
	`hashv¨
(
«me
);

618 
vp
 = *
vµ
 ; v∞; v∞vp->
√xt
) {

619 i‡(
	`v¨equÆ
(
vp
->
ãxt
, 
«me
)) {

621 
vp
->
Êags
 |
Êag
;

622 i‡((
vp
->
Êags
 & 
VEXPORT
Ë&& 
	`loˇÀv¨
(vp->
ãxt
)) {

623 
	`ch™ge_ív
(
vp
->
ãxt
, 1);

624 (Ë
	`£éoˇÀ
(
LC_ALL
, "");

626 
found
;

630 
	`£tv¨
(
«me
, 
p
, 
Êag
);

631 
found
:;

634 
vµ
 = 
v¨èb
 ; vµ < v¨èb + 
VTABSIZE
 ; vpp++) {

635 
vp
 = *
vµ
 ; v∞; v∞vp->
√xt
) {

636 i‡(
vp
->
Êags
 & 
Êag
) {

637 i‡(
vÆues
) {

638 
	`out1°r
(
cmd«me
);

639 
	`out1c
(' ');

641 
p
 = 
vp
->
ãxt
 ; *p != '=' ;Ö++)

642 
	`out1c
(*
p
);

643 i‡(
vÆues
 && !(
vp
->
Êags
 & 
VUNSET
)) {

644 
	`out1c
('=');

645 
	`out1q°r
(
p
 + 1);

647 
	`out1c
('\n');

653 
	}
}

661 
	$loˇlcmd
(
¨gc
 
__unu£d
, **
¨gv
 __unused)

663 *
«me
;

665 i‡(! 
	`ö_fun˘i⁄
())

666 
	`îr‹
("Not iná function");

667 (
«me
 = *
¨g±r
++Ë!
NULL
) {

668 
	`mkloˇl
(
«me
);

671 
	}
}

682 
	$mkloˇl
(*
«me
)

684 
loˇlv¨
 *
lvp
;

685 
v¨
 **
vµ
;

686 
v¨
 *
vp
;

688 
INTOFF
;

689 
lvp
 = 
	`ckmÆloc
( (
loˇlv¨
));

690 i‡(
«me
[0] == '-' &&Çame[1] == '\0') {

691 
lvp
->
ãxt
 = 
	`ckmÆloc
( 
›éi°
);

692 
	`mem˝y
(
lvp
->
ãxt
, 
›éi°
,  optlist);

693 
vp
 = 
NULL
;

695 
vµ
 = 
	`hashv¨
(
«me
);

696 
vp
 = *
vµ
 ; v∞&& ! 
	`v¨equÆ
(vp->
ãxt
, 
«me
Ë; v∞vp->
√xt
);

697 i‡(
vp
 =
NULL
) {

698 i‡(
	`°rchr
(
«me
, '='))

699 
	`£tv¨eq
(
	`ßve°r
(
«me
), 
VSTRFIXED
);

701 
	`£tv¨
(
«me
, 
NULL
, 
VSTRFIXED
);

702 
vp
 = *
vµ
;

703 
lvp
->
ãxt
 = 
NULL
;

704 
lvp
->
Êags
 = 
VUNSET
;

706 
lvp
->
ãxt
 = 
vp
->text;

707 
lvp
->
Êags
 = 
vp
->flags;

708 
vp
->
Êags
 |
VSTRFIXED
|
VTEXTFIXED
;

709 i‡(
	`°rchr
(
«me
, '='))

710 
	`£tv¨eq
(
	`ßve°r
(
«me
), 0);

713 
lvp
->
vp
 = vp;

714 
lvp
->
√xt
 = 
loˇlv¨s
;

715 
loˇlv¨s
 = 
lvp
;

716 
INTON
;

717 
	}
}

725 
	$p›loˇlv¨s
()

727 
loˇlv¨
 *
lvp
;

728 
v¨
 *
vp
;

730 (
lvp
 = 
loˇlv¨s
Ë!
NULL
) {

731 
loˇlv¨s
 = 
lvp
->
√xt
;

732 
vp
 = 
lvp
->vp;

733 i‡(
vp
 =
NULL
) {

734 
	`mem˝y
(
›éi°
, 
lvp
->
ãxt
,  optlist);

735 
	`ck‰ì
(
lvp
->
ãxt
);

736 } i‡((
lvp
->
Êags
 & (
VUNSET
|
VSTRFIXED
)) == VUNSET) {

737 ()
	`un£tv¨
(
vp
->
ãxt
);

739 i‡((
vp
->
Êags
 & 
VTEXTFIXED
) == 0)

740 
	`ck‰ì
(
vp
->
ãxt
);

741 
vp
->
Êags
 = 
lvp
->flags;

742 
vp
->
ãxt
 = 
lvp
->text;

744 
	`ck‰ì
(
lvp
);

746 
	}
}

750 
	$£tv¨cmd
(
¨gc
, **
¨gv
)

752 i‡(
¨gc
 <= 2)

753  
	`un£tcmd
(
¨gc
, 
¨gv
);

754 i‡(
¨gc
 == 3)

755 
	`£tv¨
(
¨gv
[1],árgv[2], 0);

757 
	`îr‹
("ListássignmentÇot implemented");

759 
	}
}

769 
	$un£tcmd
(
¨gc
 
__unu£d
, **
¨gv
 __unused)

771 **
≠
;

772 
i
;

773 
Êg_func
 = 0;

774 
Êg_v¨
 = 0;

775 
ªt
 = 0;

777 (
i
 = 
	`√xt›t
("vf")) != '\0') {

778 i‡(
i
 == 'f')

779 
Êg_func
 = 1;

781 
Êg_v¨
 = 1;

783 i‡(
Êg_func
 =0 && 
Êg_v¨
 == 0)

784 
Êg_v¨
 = 1;

786 
≠
 = 
¨g±r
; *ap ;áp++) {

787 i‡(
Êg_func
)

788 
ªt
 |
	`un£tfunc
(*
≠
);

789 i‡(
Êg_v¨
)

790 
ªt
 |
	`un£tv¨
(*
≠
);

792  
ªt
;

793 
	}
}

801 
	$un£tv¨
(*
s
)

803 
v¨
 **
vµ
;

804 
v¨
 *
vp
;

806 
vµ
 = 
	`hashv¨
(
s
);

807 
vp
 = *
vµ
 ; v∞; vµ = &vp->
√xt
, vp = *vpp) {

808 i‡(
	`v¨equÆ
(
vp
->
ãxt
, 
s
)) {

809 i‡(
vp
->
Êags
 & 
VREADONLY
)

811 
INTOFF
;

812 i‡(*(
	`°rchr
(
vp
->
ãxt
, '=') + 1) != '\0')

813 
	`£tv¨
(
s
, 
nuŒ°r
, 0);

814 i‡((
vp
->
Êags
 & 
VEXPORT
Ë&& 
	`loˇÀv¨
(vp->
ãxt
)) {

815 
	`ch™ge_ív
(
s
, 0);

816 
	`£éoˇÀ
(
LC_ALL
, "");

818 
vp
->
Êags
 &~
VEXPORT
;

819 
vp
->
Êags
 |
VUNSET
;

820 i‡((
vp
->
Êags
 & 
VSTRFIXED
) == 0) {

821 i‡((
vp
->
Êags
 & 
VTEXTFIXED
) == 0)

822 
	`ck‰ì
(
vp
->
ãxt
);

823 *
vµ
 = 
vp
->
√xt
;

824 
	`ck‰ì
(
vp
);

826 
INTON
;

832 
	}
}

840 
STATIC
 
v¨
 **

841 
	$hashv¨
(*
p
)

843 
hashvÆ
;

845 
hashvÆ
 = ((Ë*
p
) << 4;

846 *
p
 && *p != '=')

847 
hashvÆ
 +(Ë*
p
++;

848  &
v¨èb
[
hashvÆ
 % 
VTABSIZE
];

849 
	}
}

859 
STATIC
 

860 
	$v¨equÆ
(*
p
, *
q
)

862 *
p
 =*
q
++) {

863 i‡(*
p
++ == '=')

866 i‡(*
p
 ='=' && *(
q
 - 1) == '\0')

869 
	}
}

	@var.h

41 
	#VEXPORT
 0x01

	)

42 
	#VREADONLY
 0x02

	)

43 
	#VSTRFIXED
 0x04

	)

44 
	#VTEXTFIXED
 0x08

	)

45 
	#VSTACK
 0x10

	)

46 
	#VUNSET
 0x20

	)

47 
	#VNOFUNC
 0x40

	)

50 
	sv¨
 {

51 
v¨
 *
	m√xt
;

52 
	mÊags
;

53 *
	mãxt
;

54 (*
	mfunc
)(const *);

60 
	sloˇlv¨
 {

61 
loˇlv¨
 *
	m√xt
;

62 
v¨
 *
	mvp
;

63 
	mÊags
;

64 *
	mãxt
;

68 
loˇlv¨
 *
	gloˇlv¨s
;

70 
v¨
 
vifs
;

71 
v¨
 
vmaû
;

72 
v¨
 
vm∑th
;

73 
v¨
 
v∑th
;

74 
v¨
 
vµid
;

75 
v¨
 
vps1
;

76 
v¨
 
vps2
;

77 
v¨
 
vps4
;

78 #i‚de‡
NO_HISTORY


79 
v¨
 
vhi°size
;

88 
	#ifsvÆ
(Ë(
vifs
.
ãxt
 + 4)

	)

89 
	#ifs£t
(Ë((
vifs
.
Êags
 & 
VUNSET
Ë=0)

	)

90 
	#maûvÆ
(Ë(
vmaû
.
ãxt
 + 5)

	)

91 
	#m∑thvÆ
(Ë(
vm∑th
.
ãxt
 + 9)

	)

92 
	#∑thvÆ
(Ë(
v∑th
.
ãxt
 + 5)

	)

93 
	#ps1vÆ
(Ë(
vps1
.
ãxt
 + 4)

	)

94 
	#ps2vÆ
(Ë(
vps2
.
ãxt
 + 4)

	)

95 
	#ps4vÆ
(Ë(
vps4
.
ãxt
 + 4)

	)

96 
	#›tödvÆ
(Ë(
v›töd
.
ãxt
 + 7)

	)

97 #i‚de‡
NO_HISTORY


98 
	#hi°sizevÆ
(Ë(
vhi°size
.
ãxt
 + 9)

	)

101 
	#m∑th£t
(Ë((
vm∑th
.
Êags
 & 
VUNSET
Ë=0)

	)

103 
öôv¨
();

104 
£tv¨
(*, *, );

105 
£tv¨eq
(*, );

106 
	g°æi°
;

107 
li°£tv¨
(
°æi°
 *);

108 *
lookupv¨
(*);

109 *
b…ölookup
(*, );

110 **
ívú⁄mít
();

111 
sh¥ocv¨
();

112 
showv¨scmd
(, **);

113 
exp‹tcmd
(, **);

114 
loˇlcmd
(, **);

115 
mkloˇl
(*);

116 
p›loˇlv¨s
();

117 
£tv¨cmd
(, **);

118 
un£tcmd
(, **);

119 
un£tv¨
(*);

120 
£tv¨ß„
(*, *, );

	@y.tab.c

46 
	#YYBISON
 1

	)

49 
	#YYBISON_VERSION
 "2.4.1"

	)

52 
	#YYSKELETON_NAME
 "yacc.c"

	)

55 
	#YYPURE
 0

	)

58 
	#YYPUSH
 0

	)

61 
	#YYPULL
 1

	)

64 
	#YYLSP_NEEDED
 0

	)

106 #i‚de‡
löt


107 
	gsccsid
[] = "@(#)arith.y 8.3 (Berkeley) 5/4/95";

111 
	~<sys/cdefs.h
>

112 
__FBSDID
("$FreeBSD: src/bin/sh/arith.y,v 1.21.2.1.2.1 2008/11/25 02:59:29 kensmith Exp $");

114 
	~<limôs.h
>

115 
	~<°dio.h
>

117 
	~"¨ôh.h
"

118 
	~"shñl.h
"

119 
	~"v¨.h
"

126 #i‚de‡
YYDEBUG


127 
	#YYDEBUG
 0

	)

131 #ifde‡
YYERROR_VERBOSE


132 #unde‡
YYERROR_VERBOSE


133 
	#YYERROR_VERBOSE
 1

	)

135 
	#YYERROR_VERBOSE
 0

	)

139 #i‚de‡
YYTOKEN_TABLE


140 
	#YYTOKEN_TABLE
 0

	)

145 #i‚de‡
YYTOKENTYPE


146 
	#YYTOKENTYPE


	)

149 
	eyytokíty≥
 {

150 
	mARITH_NUM
 = 258,

151 
	mARITH_LPAREN
 = 259,

152 
	mARITH_RPAREN
 = 260,

153 
	mARITH_VAR
 = 261,

154 
	mARITH_ASSIGN
 = 262,

155 
	mARITH_SUBASSIGN
 = 263,

156 
	mARITH_ADDASSIGN
 = 264,

157 
	mARITH_REMASSIGN
 = 265,

158 
	mARITH_DIVASSIGN
 = 266,

159 
	mARITH_MULASSIGN
 = 267,

160 
	mARITH_LSHASSIGN
 = 268,

161 
	mARITH_RSHASSIGN
 = 269,

162 
	mARITH_BORASSIGN
 = 270,

163 
	mARITH_BXORASSIGN
 = 271,

164 
	mARITH_BANDASSIGN
 = 272,

165 
	mARITH_OR
 = 273,

166 
	mARITH_AND
 = 274,

167 
	mARITH_BOR
 = 275,

168 
	mARITH_BXOR
 = 276,

169 
	mARITH_BAND
 = 277,

170 
	mARITH_NE
 = 278,

171 
	mARITH_EQ
 = 279,

172 
	mARITH_LE
 = 280,

173 
	mARITH_GE
 = 281,

174 
	mARITH_GT
 = 282,

175 
	mARITH_LT
 = 283,

176 
	mARITH_RSHIFT
 = 284,

177 
	mARITH_LSHIFT
 = 285,

178 
	mARITH_SUB
 = 286,

179 
	mARITH_ADD
 = 287,

180 
	mARITH_REM
 = 288,

181 
	mARITH_DIV
 = 289,

182 
	mARITH_MUL
 = 290,

183 
	mARITH_BNOT
 = 291,

184 
	mARITH_NOT
 = 292,

185 
	mARITH_UNARYPLUS
 = 293,

186 
	mARITH_UNARYMINUS
 = 294

190 
	#ARITH_NUM
 258

	)

191 
	#ARITH_LPAREN
 259

	)

192 
	#ARITH_RPAREN
 260

	)

193 
	#ARITH_VAR
 261

	)

194 
	#ARITH_ASSIGN
 262

	)

195 
	#ARITH_SUBASSIGN
 263

	)

196 
	#ARITH_ADDASSIGN
 264

	)

197 
	#ARITH_REMASSIGN
 265

	)

198 
	#ARITH_DIVASSIGN
 266

	)

199 
	#ARITH_MULASSIGN
 267

	)

200 
	#ARITH_LSHASSIGN
 268

	)

201 
	#ARITH_RSHASSIGN
 269

	)

202 
	#ARITH_BORASSIGN
 270

	)

203 
	#ARITH_BXORASSIGN
 271

	)

204 
	#ARITH_BANDASSIGN
 272

	)

205 
	#ARITH_OR
 273

	)

206 
	#ARITH_AND
 274

	)

207 
	#ARITH_BOR
 275

	)

208 
	#ARITH_BXOR
 276

	)

209 
	#ARITH_BAND
 277

	)

210 
	#ARITH_NE
 278

	)

211 
	#ARITH_EQ
 279

	)

212 
	#ARITH_LE
 280

	)

213 
	#ARITH_GE
 281

	)

214 
	#ARITH_GT
 282

	)

215 
	#ARITH_LT
 283

	)

216 
	#ARITH_RSHIFT
 284

	)

217 
	#ARITH_LSHIFT
 285

	)

218 
	#ARITH_SUB
 286

	)

219 
	#ARITH_ADD
 287

	)

220 
	#ARITH_REM
 288

	)

221 
	#ARITH_DIV
 289

	)

222 
	#ARITH_MUL
 290

	)

223 
	#ARITH_BNOT
 291

	)

224 
	#ARITH_NOT
 292

	)

225 
	#ARITH_UNARYPLUS
 293

	)

226 
	#ARITH_UNARYMINUS
 294

	)

231 #i‡! 
deföed
 
YYSTYPE
 && ! deföed 
YYSTYPE_IS_DECLARED


232 
	uYYSTYPE


238 
¨ôh_t
 
	ml_vÆue
;

239 * 
	ms_vÆue
;

245 } 
	tYYSTYPE
;

246 
	#YYSTYPE_IS_TRIVIAL
 1

	)

247 
	#yy°y≥
 
YYSTYPE


	)

248 
	#YYSTYPE_IS_DECLARED
 1

	)

262 #ifde‡
YYTYPE_UINT8


263 
YYTYPE_UINT8
 
	tyyty≥_uöt8
;

265 
	tyyty≥_uöt8
;

268 #ifde‡
YYTYPE_INT8


269 
YYTYPE_INT8
 
	tyyty≥_öt8
;

270 #ñi‡(
deföed
 
__STDC__
 || deföed 
__C99__FUNC__
 \

271 || 
deföed
 
	g__˝lu•lus
 || deföed 
	g_MSC_VER
)

272 sig√d 
	tyyty≥_öt8
;

274 
	tyyty≥_öt8
;

277 #ifde‡
YYTYPE_UINT16


278 
YYTYPE_UINT16
 
	tyyty≥_uöt16
;

280 
	tyyty≥_uöt16
;

283 #ifde‡
YYTYPE_INT16


284 
YYTYPE_INT16
 
	tyyty≥_öt16
;

286 
	tyyty≥_öt16
;

289 #i‚de‡
YYSIZE_T


290 #ifde‡
__SIZE_TYPE__


291 
	#YYSIZE_T
 
__SIZE_TYPE__


	)

292 #ñi‡
deföed
 
size_t


293 
	#YYSIZE_T
 
size_t


	)

294 #ñi‡! 
deföed
 
YYSIZE_T
 && (deföed 
__STDC__
 || deföed 
__C99__FUNC__
 \

295 || 
deföed
 
	g__˝lu•lus
 || deföed 
	g_MSC_VER
)

296 
	~<°ddef.h
>

297 
	#YYSIZE_T
 
size_t


	)

299 
	#YYSIZE_T
 

	)

303 
	#YYSIZE_MAXIMUM
 ((
YYSIZE_T
Ë-1)

	)

305 #i‚de‡
YY_


306 #i‡
YYENABLE_NLS


307 #i‡
ENABLE_NLS


308 
	~<liböé.h
>

309 
	#YY_
(
msgid
Ë
	`dgëãxt
 ("bis⁄-ru¡ime", msgid)

	)

312 #i‚de‡
YY_


313 
	#YY_
(
msgid
Ë
	)
msgid

318 #i‡! 
deföed
 
löt
 || deföed 
__GNUC__


319 
	#YYUSE
(
e
Ë((Ë”))

	)

321 
	#YYUSE
(
e
Ë

	)

325 #i‚de‡
löt


326 
	#YYID
(
n
Ë“)

	)

328 #i‡(
deföed
 
__STDC__
 || deföed 
__C99__FUNC__
 \

329 || 
deföed
 
	g__˝lu•lus
 || deföed 
	g_MSC_VER
)

331 
	$YYID
 (
yyi
)

334 
	$YYID
 (
yyi
)

335 
yyi
;

338  
yyi
;

339 
	}
}

342 #i‡! 
deföed
 
yyovîÊow
 || 
YYERROR_VERBOSE


346 #ifde‡
YYSTACK_USE_ALLOCA


347 #i‡
YYSTACK_USE_ALLOCA


348 #ifde‡
__GNUC__


349 
	#YYSTACK_ALLOC
 
__buûtö_Æloˇ


	)

350 #ñi‡
deföed
 
__BUILTIN_VA_ARG_INCR


351 
	~<Æloˇ.h
>

352 #ñi‡
deföed
 
_AIX


353 
	#YYSTACK_ALLOC
 
__Æloˇ


	)

354 #ñi‡
deföed
 
_MSC_VER


355 
	~<mÆloc.h
>

356 
	#Æloˇ
 
_Æloˇ


	)

358 
	#YYSTACK_ALLOC
 
Æloˇ


	)

359 #i‡! 
deföed
 
_ALLOCA_H
 && ! deföed 
_STDLIB_H
 && (deföed 
__STDC__
 || deföed 
__C99__FUNC__
 \

360 || 
deföed
 
	g__˝lu•lus
 || deföed 
	g_MSC_VER
)

361 
	~<°dlib.h
>

362 #i‚de‡
_STDLIB_H


363 
	#_STDLIB_H
 1

	)

370 #ifde‡
YYSTACK_ALLOC


372 
	#YYSTACK_FREE
(
På
Ëdÿ{ ; } 
	`YYID
 (0))

	)

373 #i‚de‡
YYSTACK_ALLOC_MAXIMUM


378 
	#YYSTACK_ALLOC_MAXIMUM
 4032

	)

381 
	#YYSTACK_ALLOC
 
YYMALLOC


	)

382 
	#YYSTACK_FREE
 
YYFREE


	)

383 #i‚de‡
YYSTACK_ALLOC_MAXIMUM


384 
	#YYSTACK_ALLOC_MAXIMUM
 
YYSIZE_MAXIMUM


	)

386 #i‡(
deföed
 
__˝lu•lus
 && ! deföed 
_STDLIB_H
 \

387 && ! ((
deföed
 
	gYYMALLOC
 || deföed 
	gmÆloc
) \

388 && (
deföed
 
	gYYFREE
 || deföed 
	g‰ì
)))

389 
	~<°dlib.h
>

390 #i‚de‡
_STDLIB_H


391 
	#_STDLIB_H
 1

	)

394 #i‚de‡
YYMALLOC


395 
	#YYMALLOC
 
mÆloc


	)

396 #i‡! 
deföed
 
mÆloc
 && ! deföed 
_STDLIB_H
 && (deföed 
__STDC__
 || deföed 
__C99__FUNC__
 \

397 || 
deföed
 
	g__˝lu•lus
 || deföed 
	g_MSC_VER
)

398 *
mÆloc
 (
YYSIZE_T
);

401 #i‚de‡
YYFREE


402 
	#YYFREE
 
‰ì


	)

403 #i‡! 
deföed
 
‰ì
 && ! deföed 
_STDLIB_H
 && (deföed 
__STDC__
 || deföed 
__C99__FUNC__
 \

404 || 
deföed
 
	g__˝lu•lus
 || deföed 
	g_MSC_VER
)

405 
‰ì
 (*);

412 #i‡(! 
deföed
 
yyovîÊow
 \

413 && (! 
deföed
 
	g__˝lu•lus
 \

414 || (
deföed
 
	gYYSTYPE_IS_TRIVIAL
 && YYSTYPE_IS_TRIVIAL)))

417 
	uyyÆloc


419 
yyty≥_öt16
 
	myyss_Æloc
;

420 
YYSTYPE
 
	myyvs_Æloc
;

424 
	#YYSTACK_GAP_MAXIMUM
 ( (
yyÆloc
Ë- 1)

	)

428 
	#YYSTACK_BYTES
(
N
) \

429 ((
N
Ë* ( (
yyty≥_öt16
Ë+  (
YYSTYPE
)) \

430 + 
YYSTACK_GAP_MAXIMUM
)

	)

434 #i‚de‡
YYCOPY


435 #i‡
deföed
 
__GNUC__
 && 1 < __GNUC__

436 
	#YYCOPY
(
To
, 
From
, 
Cou¡
) \

437 
	`__buûtö_mem˝y
 (
To
, 
From
, (
Cou¡
Ë*  (*(From)))

	)

439 
	#YYCOPY
(
To
, 
From
, 
Cou¡
) \

442 
YYSIZE_T
 
yyi
; \

443 
yyi
 = 0; yyò< (
Cou¡
); yyi++) \

444 (
To
)[
yyi
] = (
From
)[yyi]; \

446 
	`YYID
 (0))

	)

455 
	#YYSTACK_RELOCATE
(
Sèck_Æloc
, 
Sèck
) \

458 
YYSIZE_T
 
yy√wbyãs
; \

459 
	`YYCOPY
 (&
yy±r
->
Sèck_Æloc
, 
Sèck
, 
yysize
); \

460 
Sèck
 = &
yy±r
->
Sèck_Æloc
; \

461 
yy√wbyãs
 = 
yy°acksize
 *  (*
Sèck
Ë+ 
YYSTACK_GAP_MAXIMUM
; \

462 
yy±r
 +
yy√wbyãs
 /  (*yyptr); \

464 
	`YYID
 (0))

	)

469 
	#YYFINAL
 26

	)

471 
	#YYLAST
 201

	)

474 
	#YYNTOKENS
 40

	)

476 
	#YYNNTS
 3

	)

478 
	#YYNRULES
 38

	)

480 
	#YYNSTATES
 75

	)

483 
	#YYUNDEFTOK
 2

	)

484 
	#YYMAXUTOK
 294

	)

486 
	#YYTRANSLATE
(
YYX
) \

487 ((Ë(
YYX
Ë<
YYMAXUTOK
 ? 
yyå™¶©e
[YYX] : 
YYUNDEFTOK
)

	)

490 c⁄° 
yyty≥_uöt8
 
	gyyå™¶©e
[] =

524 #i‡
YYDEBUG


527 c⁄° 
yyty≥_uöt8
 
	gyy¥hs
[] =

536 c⁄° 
yyty≥_öt8
 
	gyyrhs
[] =

556 c⁄° 
yyty≥_uöt8
 
	gyyæöe
[] =

565 #i‡
YYDEBUG
 || 
YYERROR_VERBOSE
 || 
YYTOKEN_TABLE


568 c⁄° *c⁄° 
	gyyäame
[] =

583 #ifde‡
YYPRINT


586 c⁄° 
yyty≥_uöt16
 
	gyytoknum
[] =

596 c⁄° 
yyty≥_uöt8
 
	gyyr1
[] =

605 c⁄° 
yyty≥_uöt8
 
	gyyr2
[] =

616 c⁄° 
yyty≥_uöt8
 
	gyydeÁ˘
[] =

629 c⁄° 
yyty≥_öt8
 
	gyydefgŸo
[] =

636 
	#YYPACT_NINF
 -28

	)

637 c⁄° 
yyty≥_öt16
 
	gyy∑˘
[] =

650 c⁄° 
yyty≥_öt8
 
	gyypgŸo
[] =

659 
	#YYTABLE_NINF
 -1

	)

660 c⁄° 
yyty≥_uöt8
 
	gyyèbÀ
[] =

685 c⁄° 
yyty≥_öt8
 
	gyycheck
[] =

712 c⁄° 
yyty≥_uöt8
 
	gyy°os
[] =

724 
	#yyîrok
 (
yyîr°©us
 = 0)

	)

725 
	#yy˛órö
 (
yych¨
 = 
YYEMPTY
)

	)

726 
	#YYEMPTY
 (-2)

	)

727 
	#YYEOF
 0

	)

729 
	#YYACCEPT
 
yyac˚±œb


	)

730 
	#YYABORT
 
yyab‹éab


	)

731 
	#YYERROR
 
yyîr‹œb


	)

738 
	#YYFAIL
 
yyîæab


	)

740 
	#YYRECOVERING
(Ë(!!
yyîr°©us
)

	)

742 
	#YYBACKUP
(
Tokí
, 
VÆue
) \

744 i‡(
yych¨
 =
YYEMPTY
 && 
yyÀn
 == 1) \

746 
yych¨
 = (
Tokí
); \

747 
yylvÆ
 = (
VÆue
); \

748 
yytokí
 = 
	`YYTRANSLATE
 (
yych¨
); \

749 
	`YYPOPSTACK
 (1); \

750 
yybackup
; \

754 
	`yyîr‹
 (
	`YY_
("syntaxÉrror: cannot back up")); \

755 
YYERROR
; \

757 
	`YYID
 (0))

	)

760 
	#YYTERROR
 1

	)

761 
	#YYERRCODE
 256

	)

768 
	#YYRHSLOC
(
Rhs
, 
K
Ë((Rhs)[K])

	)

769 #i‚de‡
YYLLOC_DEFAULT


770 
	#YYLLOC_DEFAULT
(
Cuºít
, 
Rhs
, 
N
) \

772 i‡(
	`YYID
 (
N
)) \

774 (
Cuºít
).
fú°_löe
 = 
	`YYRHSLOC
 (
Rhs
, 1).first_line; \

775 (
Cuºít
).
fú°_cﬁumn
 = 
	`YYRHSLOC
 (
Rhs
, 1).first_column; \

776 (
Cuºít
).
œ°_löe
 = 
	`YYRHSLOC
 (
Rhs
, 
N
).last_line; \

777 (
Cuºít
).
œ°_cﬁumn
 = 
	`YYRHSLOC
 (
Rhs
, 
N
).last_column; \

781 (
Cuºít
).
fú°_löe
 = (Cuºít).
œ°_löe
 = \

782 
	`YYRHSLOC
 (
Rhs
, 0).
œ°_löe
; \

783 (
Cuºít
).
fú°_cﬁumn
 = (Cuºít).
œ°_cﬁumn
 = \

784 
	`YYRHSLOC
 (
Rhs
, 0).
œ°_cﬁumn
; \

786 
	`YYID
 (0))

	)

794 #i‚de‡
YY_LOCATION_PRINT


795 #i‡
YYLTYPE_IS_TRIVIAL


796 
	#YY_LOCATION_PRINT
(
Fûe
, 
Loc
) \

797 
	`Ârötf
 (
Fûe
, "%d.%d-%d.%d", \

798 (
Loc
).
fú°_löe
, (Loc).
fú°_cﬁumn
, \

799 (
Loc
).
œ°_löe
, (Loc).
œ°_cﬁumn
)

	)

801 
	#YY_LOCATION_PRINT
(
Fûe
, 
Loc
Ë((Ë0)

	)

808 #ifde‡
YYLEX_PARAM


809 
	#YYLEX
 
	`yyÀx
 (
YYLEX_PARAM
)

	)

811 
	#YYLEX
 
	`yyÀx
 ()

	)

815 #i‡
YYDEBUG


817 #i‚de‡
YYFPRINTF


818 
	~<°dio.h
>

819 
	#YYFPRINTF
 
Ârötf


	)

822 
	#YYDPRINTF
(
Args
) \

824 i‡(
yydebug
) \

825 
YYFPRINTF
 
Args
; \

826 } 
	`YYID
 (0))

	)

828 
	#YY_SYMBOL_PRINT
(
TôÀ
, 
Ty≥
, 
VÆue
, 
Loˇti⁄
) \

830 i‡(
yydebug
) \

832 
	`YYFPRINTF
 (
°dîr
, "%†", 
TôÀ
); \

833 
	`yy_symbﬁ_¥öt
 (
°dîr
, \

834 
Ty≥
, 
VÆue
); \

835 
	`YYFPRINTF
 (
°dîr
, "\n"); \

837 } 
	`YYID
 (0))

	)

845 #i‡(
deföed
 
__STDC__
 || deföed 
__C99__FUNC__
 \

846 || 
deföed
 
	g__˝lu•lus
 || deföed 
	g_MSC_VER
)

848 
	$yy_symbﬁ_vÆue_¥öt
 (
FILE
 *
yyouçut
, 
yyty≥
, 
YYSTYPE
 c⁄° * c⁄° 
yyvÆuï
)

851 
	$yy_symbﬁ_vÆue_¥öt
 (
yyouçut
, 
yyty≥
, 
yyvÆuï
)

852 
FILE
 *
yyouçut
;

853 
yyty≥
;

854 
YYSTYPE
 c⁄° * c⁄° 
yyvÆuï
;

857 i‡(!
yyvÆuï
)

859 #ifde‡
YYPRINT


860 i‡(
yyty≥
 < 
YYNTOKENS
)

861 
	`YYPRINT
 (
yyouçut
, 
yytoknum
[
yyty≥
], *
yyvÆuï
);

863 
	`YYUSE
 (
yyouçut
);

865 
yyty≥
)

870 
	}
}

877 #i‡(
deföed
 
__STDC__
 || deföed 
__C99__FUNC__
 \

878 || 
deföed
 
	g__˝lu•lus
 || deföed 
	g_MSC_VER
)

880 
	$yy_symbﬁ_¥öt
 (
FILE
 *
yyouçut
, 
yyty≥
, 
YYSTYPE
 c⁄° * c⁄° 
yyvÆuï
)

883 
	$yy_symbﬁ_¥öt
 (
yyouçut
, 
yyty≥
, 
yyvÆuï
)

884 
FILE
 *
yyouçut
;

885 
yyty≥
;

886 
YYSTYPE
 c⁄° * c⁄° 
yyvÆuï
;

889 i‡(
yyty≥
 < 
YYNTOKENS
)

890 
	`YYFPRINTF
 (
yyouçut
, "tokí %†(", 
yyäame
[
yyty≥
]);

892 
	`YYFPRINTF
 (
yyouçut
, "¡îm %†(", 
yyäame
[
yyty≥
]);

894 
	`yy_symbﬁ_vÆue_¥öt
 (
yyouçut
, 
yyty≥
, 
yyvÆuï
);

895 
	`YYFPRINTF
 (
yyouçut
, ")");

896 
	}
}

903 #i‡(
deföed
 
__STDC__
 || deföed 
__C99__FUNC__
 \

904 || 
deföed
 
	g__˝lu•lus
 || deföed 
	g_MSC_VER
)

906 
	$yy_°ack_¥öt
 (
yyty≥_öt16
 *
yybŸtom
, yyty≥_öt16 *
yyt›
)

909 
	$yy_°ack_¥öt
 (
yybŸtom
, 
yyt›
)

910 
yyty≥_öt16
 *
yybŸtom
;

911 
yyty≥_öt16
 *
yyt›
;

914 
	`YYFPRINTF
 (
°dîr
, "StackÇow");

915 ; 
yybŸtom
 <
yyt›
; yybottom++)

917 
yybŸ
 = *
yybŸtom
;

918 
	`YYFPRINTF
 (
°dîr
, " %d", 
yybŸ
);

920 
	`YYFPRINTF
 (
°dîr
, "\n");

921 
	}
}

923 
	#YY_STACK_PRINT
(
BŸtom
, 
T›
) \

925 i‡(
yydebug
) \

926 
	`yy_°ack_¥öt
 ((
BŸtom
), (
T›
)); \

927 } 
	`YYID
 (0))

	)

934 #i‡(
deföed
 
__STDC__
 || deföed 
__C99__FUNC__
 \

935 || 
deföed
 
	g__˝lu•lus
 || deföed 
	g_MSC_VER
)

937 
	$yy_ªdu˚_¥öt
 (
YYSTYPE
 *
yyv•
, 
yyruÀ
)

940 
	$yy_ªdu˚_¥öt
 (
yyv•
, 
yyruÀ
)

941 
YYSTYPE
 *
yyv•
;

942 
yyruÀ
;

945 
yyƒhs
 = 
yyr2
[
yyruÀ
];

946 
yyi
;

947 
yy o
 = 
yyæöe
[
yyruÀ
];

948 
	`YYFPRINTF
 (
°dîr
, "Reducing stack byÑule %d (line %lu):\n",

949 
yyruÀ
 - 1, 
yy o
);

951 
yyi
 = 0; yyò< 
yyƒhs
; yyi++)

953 
	`YYFPRINTF
 (
°dîr
, " $%d = ", 
yyi
 + 1);

954 
	`yy_symbﬁ_¥öt
 (
°dîr
, 
yyrhs
[
yy¥hs
[
yyruÀ
] + 
yyi
],

955 &(
yyv•
[(
yyi
 + 1Ë- (
yyƒhs
)])

957 
	`YYFPRINTF
 (
°dîr
, "\n");

959 
	}
}

961 
	#YY_REDUCE_PRINT
(
RuÀ
) \

963 i‡(
yydebug
) \

964 
	`yy_ªdu˚_¥öt
 (
yyv•
, 
RuÀ
); \

965 } 
	`YYID
 (0))

	)

969 
	gyydebug
;

971 
	#YYDPRINTF
(
Args
)

	)

972 
	#YY_SYMBOL_PRINT
(
TôÀ
, 
Ty≥
, 
VÆue
, 
Loˇti⁄
)

	)

973 
	#YY_STACK_PRINT
(
BŸtom
, 
T›
)

	)

974 
	#YY_REDUCE_PRINT
(
RuÀ
)

	)

979 #i‚def 
YYINITDEPTH


980 
	#YYINITDEPTH
 200

	)

990 #i‚de‡
YYMAXDEPTH


991 
	#YYMAXDEPTH
 10000

	)

996 #i‡
YYERROR_VERBOSE


998 #i‚de‡
yy°æí


999 #i‡
deföed
 
__GLIBC__
 && deföed 
_STRING_H


1000 
	#yy°æí
 
°æí


	)

1003 #i‡(
deföed
 
__STDC__
 || deföed 
__C99__FUNC__
 \

1004 || 
deföed
 
	g__˝lu•lus
 || deföed 
	g_MSC_VER
)

1005 
YYSIZE_T


1006 
	$yy°æí
 (c⁄° *
yy°r
)

1008 
YYSIZE_T


1009 
	$yy°æí
 (
yy°r
)

1010 c⁄° *
yy°r
;

1013 
YYSIZE_T
 
yyÀn
;

1014 
yyÀn
 = 0; 
yy°r
[yylen]; yylen++)

1016  
yyÀn
;

1017 
	}
}

1021 #i‚de‡
yy°p˝y


1022 #i‡
deföed
 
__GLIBC__
 && deföed 
_STRING_H
 && deföed 
_GNU_SOURCE


1023 
	#yy°p˝y
 
°p˝y


	)

1027 #i‡(
deföed
 
__STDC__
 || deföed 
__C99__FUNC__
 \

1028 || 
deföed
 
	g__˝lu•lus
 || deföed 
	g_MSC_VER
)

1030 
	$yy°p˝y
 (*
yyde°
, c⁄° *
yy§c
)

1033 
	$yy°p˝y
 (
yyde°
, 
yy§c
)

1034 *
yyde°
;

1035 c⁄° *
yy§c
;

1038 *
yyd
 = 
yyde°
;

1039 c⁄° *
yys
 = 
yy§c
;

1041 (*
yyd
++ = *
yys
++) != '\0')

1044  
yyd
 - 1;

1045 
	}
}

1049 #i‚de‡
yyäamîr


1057 
YYSIZE_T


1058 
	$yyäamîr
 (*
yyªs
, c⁄° *
yy°r
)

1060 i‡(*
yy°r
 == '"')

1062 
YYSIZE_T
 
yyn
 = 0;

1063 c⁄° *
yyp
 = 
yy°r
;

1066 *++
yyp
)

1070 
do_nŸ_°rù_quŸes
;

1073 i‡(*++
yyp
 != '\\')

1074 
do_nŸ_°rù_quŸes
;

1077 i‡(
yyªs
)

1078 
yyªs
[
yyn
] = *
yyp
;

1079 
yyn
++;

1083 i‡(
yyªs
)

1084 
yyªs
[
yyn
] = '\0';

1085  
yyn
;

1087 
do_nŸ_°rù_quŸes
: ;

1090 i‡(! 
yyªs
)

1091  
	`yy°æí
 (
yy°r
);

1093  
	`yy°p˝y
 (
yyªs
, 
yy°r
) - yyres;

1094 
	}
}

1104 
YYSIZE_T


1105 
	$yysy¡ax_îr‹
 (*
yyªsu…
, 
yy°©e
, 
yych¨
)

1107 
yyn
 = 
yy∑˘
[
yy°©e
];

1109 i‡(! (
YYPACT_NINF
 < 
yyn
 && yy¿<
YYLAST
))

1113 
yyty≥
 = 
	`YYTRANSLATE
 (
yych¨
);

1114 
YYSIZE_T
 
yysize0
 = 
	`yyäamîr
 (0, 
yyäame
[
yyty≥
]);

1115 
YYSIZE_T
 
yysize
 = 
yysize0
;

1116 
YYSIZE_T
 
yysize1
;

1117 
yysize_ovîÊow
 = 0;

1118 íum { 
YYERROR_VERBOSE_ARGS_MAXIMUM
 = 5 };

1119 c⁄° *
yy¨g
[
YYERROR_VERBOSE_ARGS_MAXIMUM
];

1120 
yyx
;

1125 
	`YY_
("syntaxÉrror, unexpected %s");

1126 
	`YY_
("syntaxÉrror, unexpected %s,Éxpecting %s");

1127 
	`YY_
("syntaxÉrror, unexpected %s,Éxpecting %s or %s");

1128 
	`YY_
("syntaxÉrror, unexpected %s,Éxpecting %s or %s or %s");

1129 
	`YY_
("syntaxÉrror, unexpected %s,Éxpecting %s or %s or %s or %s");

1131 *
yyfmt
;

1132 c⁄° *
yyf
;

1133 c⁄° 
yyu√x≥˘ed
[] = "syntaxÉrror, unexpected %s";

1134 c⁄° 
yyex≥˘ög
[] = ",Éxpecting %s";

1135 c⁄° 
yy‹
[] = " or %s";

1136 
yyf‹m©
[ 
yyu√x≥˘ed


1137 +  
yyex≥˘ög
 - 1

1138 + ((
YYERROR_VERBOSE_ARGS_MAXIMUM
 - 2)

1139 * ( 
yy‹
 - 1))];

1140 c⁄° *
yy¥efix
 = 
yyex≥˘ög
;

1144 
yyxbegö
 = 
yyn
 < 0 ? -yyn : 0;

1147 
yychecklim
 = 
YYLAST
 - 
yyn
 + 1;

1148 
yyxíd
 = 
yychecklim
 < 
YYNTOKENS
 ? yychecklim : YYNTOKENS;

1149 
yycou¡
 = 1;

1151 
yy¨g
[0] = 
yyäame
[
yyty≥
];

1152 
yyfmt
 = 
	`yy°p˝y
 (
yyf‹m©
, 
yyu√x≥˘ed
);

1154 
yyx
 = 
yyxbegö
; yyx < 
yyxíd
; ++yyx)

1155 i‡(
yycheck
[
yyx
 + 
yyn
] =yyx && yyx !
YYTERROR
)

1157 i‡(
yycou¡
 =
YYERROR_VERBOSE_ARGS_MAXIMUM
)

1159 
yycou¡
 = 1;

1160 
yysize
 = 
yysize0
;

1161 
yyf‹m©
[ 
yyu√x≥˘ed
 - 1] = '\0';

1164 
yy¨g
[
yycou¡
++] = 
yyäame
[
yyx
];

1165 
yysize1
 = 
yysize
 + 
	`yyäamîr
 (0, 
yyäame
[
yyx
]);

1166 
yysize_ovîÊow
 |(
yysize1
 < 
yysize
);

1167 
yysize
 = 
yysize1
;

1168 
yyfmt
 = 
	`yy°p˝y
 (yyfmt, 
yy¥efix
);

1169 
yy¥efix
 = 
yy‹
;

1172 
yyf
 = 
	`YY_
(
yyf‹m©
);

1173 
yysize1
 = 
yysize
 + 
	`yy°æí
 (
yyf
);

1174 
yysize_ovîÊow
 |(
yysize1
 < 
yysize
);

1175 
yysize
 = 
yysize1
;

1177 i‡(
yysize_ovîÊow
)

1178  
YYSIZE_MAXIMUM
;

1180 i‡(
yyªsu…
)

1185 *
yyp
 = 
yyªsu…
;

1186 
yyi
 = 0;

1187 (*
yyp
 = *
yyf
) != '\0')

1189 i‡(*
yyp
 ='%' && 
yyf
[1] ='s' && 
yyi
 < 
yycou¡
)

1191 
yyp
 +
	`yyäamîr
 (yyp, 
yy¨g
[
yyi
++]);

1192 
yyf
 += 2;

1196 
yyp
++;

1197 
yyf
++;

1201  
yysize
;

1203 
	}
}

1212 #i‡(
deföed
 
__STDC__
 || deföed 
__C99__FUNC__
 \

1213 || 
deföed
 
	g__˝lu•lus
 || deföed 
	g_MSC_VER
)

1215 
	$yyde°ru˘
 (c⁄° *
yymsg
, 
yyty≥
, 
YYSTYPE
 *
yyvÆuï
)

1218 
	$yyde°ru˘
 (
yymsg
, 
yyty≥
, 
yyvÆuï
)

1219 c⁄° *
yymsg
;

1220 
yyty≥
;

1221 
YYSTYPE
 *
yyvÆuï
;

1224 
	`YYUSE
 (
yyvÆuï
);

1226 i‡(!
yymsg
)

1227 
yymsg
 = "Deleting";

1228 
	`YY_SYMBOL_PRINT
 (
yymsg
, 
yyty≥
, 
yyvÆuï
, 
yyloˇti⁄p
);

1230 
yyty≥
)

1236 
	}
}

1239 #ifde‡
YYPARSE_PARAM


1240 #i‡
deföed
 
__STDC__
 || deföed 
__˝lu•lus


1241 
yy∑r£
 (*
YYPARSE_PARAM
);

1243 
yy∑r£
 ();

1246 #i‡
deföed
 
__STDC__
 || deföed 
__˝lu•lus


1247 
yy∑r£
 ();

1249 
yy∑r£
 ();

1255 
	gyych¨
;

1258 
YYSTYPE
 
	gyylvÆ
;

1261 
	gyy√ºs
;

1269 #ifde‡
YYPARSE_PARAM


1270 #i‡(
deföed
 
__STDC__
 || deföed 
__C99__FUNC__
 \

1271 || 
deföed
 
	g__˝lu•lus
 || deföed 
	g_MSC_VER
)

1273 
	$yy∑r£
 (*
YYPARSE_PARAM
)

1276 
	$yy∑r£
 (
YYPARSE_PARAM
)

1277 *
YYPARSE_PARAM
;

1280 #i‡(
deföed
 
__STDC__
 || deföed 
__C99__FUNC__
 \

1281 || 
deföed
 
__˝lu•lus
 || deföed 
_MSC_VER
)

1283 
	$yy∑r£
 ()

1286 
	$yy∑r£
 ()

1293 
yy°©e
;

1295 
yyîr°©us
;

1305 
yyty≥_öt16
 
yysß
[
YYINITDEPTH
];

1306 
yyty≥_öt16
 *
yyss
;

1307 
yyty≥_öt16
 *
yys•
;

1310 
YYSTYPE
 
yyvß
[
YYINITDEPTH
];

1311 
YYSTYPE
 *
yyvs
;

1312 
YYSTYPE
 *
yyv•
;

1314 
YYSIZE_T
 
yy°acksize
;

1316 
yyn
;

1317 
yyªsu…
;

1319 
yytokí
;

1322 
YYSTYPE
 
yyvÆ
;

1324 #i‡
YYERROR_VERBOSE


1326 
yymsgbuf
[128];

1327 *
yymsg
 = 
yymsgbuf
;

1328 
YYSIZE_T
 
yymsg_Æloc
 =  
yymsgbuf
;

1331 
	#YYPOPSTACK
(
N
Ë(
yyv•
 -(N), 
yys•
 -(N))

	)

1335 
yyÀn
 = 0;

1337 
yytokí
 = 0;

1338 
yyss
 = 
yysß
;

1339 
yyvs
 = 
yyvß
;

1340 
yy°acksize
 = 
YYINITDEPTH
;

1342 
	`YYDPRINTF
 ((
°dîr
, "StartingÖarse\n"));

1344 
yy°©e
 = 0;

1345 
yyîr°©us
 = 0;

1346 
yy√ºs
 = 0;

1347 
yych¨
 = 
YYEMPTY
;

1353 
yys•
 = 
yyss
;

1354 
yyv•
 = 
yyvs
;

1356 
yy£t°©e
;

1361 
yy√w°©e
:

1364 
yys•
++;

1366 
yy£t°©e
:

1367 *
yys•
 = 
yy°©e
;

1369 i‡(
yyss
 + 
yy°acksize
 - 1 <
yys•
)

1372 
YYSIZE_T
 
yysize
 = 
yys•
 - 
yyss
 + 1;

1374 #ifde‡
yyovîÊow


1379 
YYSTYPE
 *
yyvs1
 = 
yyvs
;

1380 
yyty≥_öt16
 *
yyss1
 = 
yyss
;

1386 
	`yyovîÊow
 (
	`YY_
("memoryÉxhausted"),

1387 &
yyss1
, 
yysize
 *  (*
yys•
),

1388 &
yyvs1
, 
yysize
 *  (*
yyv•
),

1389 &
yy°acksize
);

1391 
yyss
 = 
yyss1
;

1392 
yyvs
 = 
yyvs1
;

1395 #i‚de‡
YYSTACK_RELOCATE


1396 
yyexhau°edœb
;

1399 i‡(
YYMAXDEPTH
 <
yy°acksize
)

1400 
yyexhau°edœb
;

1401 
yy°acksize
 *= 2;

1402 i‡(
YYMAXDEPTH
 < 
yy°acksize
)

1403 
yy°acksize
 = 
YYMAXDEPTH
;

1406 
yyty≥_öt16
 *
yyss1
 = 
yyss
;

1407 
yyÆloc
 *
yy±r
 =

1408 (
yyÆloc
 *Ë
	`YYSTACK_ALLOC
 (
	`YYSTACK_BYTES
 (
yy°acksize
));

1409 i‡(! 
yy±r
)

1410 
yyexhau°edœb
;

1411 
	`YYSTACK_RELOCATE
 (
yyss_Æloc
, 
yyss
);

1412 
	`YYSTACK_RELOCATE
 (
yyvs_Æloc
, 
yyvs
);

1413 #unde‡
YYSTACK_RELOCATE


1414 i‡(
yyss1
 !
yysß
)

1415 
	`YYSTACK_FREE
 (
yyss1
);

1420 
yys•
 = 
yyss
 + 
yysize
 - 1;

1421 
yyv•
 = 
yyvs
 + 
yysize
 - 1;

1423 
	`YYDPRINTF
 ((
°dîr
, "Stack size increasedÅo %lu\n",

1424 (Ë
yy°acksize
));

1426 i‡(
yyss
 + 
yy°acksize
 - 1 <
yys•
)

1427 
YYABORT
;

1430 
	`YYDPRINTF
 ((
°dîr
, "E¡îög sèã %d\n", 
yy°©e
));

1432 i‡(
yy°©e
 =
YYFINAL
)

1433 
YYACCEPT
;

1435 
yybackup
;

1440 
yybackup
:

1446 
yyn
 = 
yy∑˘
[
yy°©e
];

1447 i‡(
yyn
 =
YYPACT_NINF
)

1448 
yydeÁu…
;

1453 i‡(
yych¨
 =
YYEMPTY
)

1455 
	`YYDPRINTF
 ((
°dîr
, "ReadingáÅoken: "));

1456 
yych¨
 = 
YYLEX
;

1459 i‡(
yych¨
 <
YYEOF
)

1461 
yych¨
 = 
yytokí
 = 
YYEOF
;

1462 
	`YYDPRINTF
 ((
°dîr
, "NowátÉnd of input.\n"));

1466 
yytokí
 = 
	`YYTRANSLATE
 (
yych¨
);

1467 
	`YY_SYMBOL_PRINT
 ("Nexàtokí is", 
yytokí
, &
yylvÆ
, &
yyŒoc
);

1472 
yyn
 +
yytokí
;

1473 i‡(
yyn
 < 0 || 
YYLAST
 < yy¿|| 
yycheck
[yyn] !
yytokí
)

1474 
yydeÁu…
;

1475 
yyn
 = 
yyèbÀ
[yyn];

1476 i‡(
yyn
 <= 0)

1478 i‡(
yyn
 =0 || yy¿=
YYTABLE_NINF
)

1479 
yyîæab
;

1480 
yyn
 = -yyn;

1481 
yyªdu˚
;

1486 i‡(
yyîr°©us
)

1487 
yyîr°©us
--;

1490 
	`YY_SYMBOL_PRINT
 ("Shi·ög", 
yytokí
, &
yylvÆ
, &
yyŒoc
);

1493 
yych¨
 = 
YYEMPTY
;

1495 
yy°©e
 = 
yyn
;

1496 *++
yyv•
 = 
yylvÆ
;

1498 
yy√w°©e
;

1504 
yydeÁu…
:

1505 
yyn
 = 
yydeÁ˘
[
yy°©e
];

1506 i‡(
yyn
 == 0)

1507 
yyîæab
;

1508 
yyªdu˚
;

1514 
yyªdu˚
:

1516 
yyÀn
 = 
yyr2
[
yyn
];

1526 
yyvÆ
 = 
yyv•
[1-
yyÀn
];

1529 
	`YY_REDUCE_PRINT
 (
yyn
);

1530 
yyn
)

1537 *
YYPARSE_PARAM
 = (
yyv•
[(1Ë- (1)].
l_vÆue
);

1546 { (
yyvÆ
.
l_vÆue
Ë(
yyv•
[(2) - (3)].l_value); }

1553 { (
yyvÆ
.
l_vÆue
Ë(
yyv•
[(1) - (3)].l_value) ? (yyvsp[(1) - (3)].l_value) : (yyvsp[(3) - (3)].l_value) ? (yyvsp[(3) - (3)].l_value) : 0; }

1560 { (
yyvÆ
.
l_vÆue
Ë(
yyv•
[(1) - (3)].l_value) ? ( (yyvsp[(3) - (3)].l_value) ? (yyvsp[(3) - (3)].l_value) : 0 ) : 0; }

1567 { (
yyvÆ
.
l_vÆue
Ë(
yyv•
[(1) - (3)].l_value) | (yyvsp[(3) - (3)].l_value); }

1574 { (
yyvÆ
.
l_vÆue
Ë(
yyv•
[(1) - (3)].l_value) ^ (yyvsp[(3) - (3)].l_value); }

1581 { (
yyvÆ
.
l_vÆue
Ë(
yyv•
[(1) - (3)].l_value) & (yyvsp[(3) - (3)].l_value); }

1588 { (
yyvÆ
.
l_vÆue
Ë(
yyv•
[(1) - (3)].l_value) == (yyvsp[(3) - (3)].l_value); }

1595 { (
yyvÆ
.
l_vÆue
Ë(
yyv•
[(1) - (3)].l_value) > (yyvsp[(3) - (3)].l_value); }

1602 { (
yyvÆ
.
l_vÆue
Ë(
yyv•
[(1) - (3)].l_value) >= (yyvsp[(3) - (3)].l_value); }

1609 { (
yyvÆ
.
l_vÆue
Ë(
yyv•
[(1) - (3)].l_value) < (yyvsp[(3) - (3)].l_value); }

1616 { (
yyvÆ
.
l_vÆue
Ë(
yyv•
[(1) - (3)].l_value) <= (yyvsp[(3) - (3)].l_value); }

1623 { (
yyvÆ
.
l_vÆue
Ë(
yyv•
[(1) - (3)].l_value) != (yyvsp[(3) - (3)].l_value); }

1630 { (
yyvÆ
.
l_vÆue
Ë(
yyv•
[(1) - (3)].l_value) << (yyvsp[(3) - (3)].l_value); }

1637 { (
yyvÆ
.
l_vÆue
Ë(
yyv•
[(1) - (3)].l_value) >> (yyvsp[(3) - (3)].l_value); }

1644 { (
yyvÆ
.
l_vÆue
Ë(
yyv•
[(1) - (3)].l_value) + (yyvsp[(3) - (3)].l_value); }

1651 { (
yyvÆ
.
l_vÆue
Ë(
yyv•
[(1) - (3)].l_value) - (yyvsp[(3) - (3)].l_value); }

1658 { (
yyvÆ
.
l_vÆue
Ë(
yyv•
[(1) - (3)].l_value) * (yyvsp[(3) - (3)].l_value); }

1666 i‡((
yyv•
[(3Ë- (3)].
l_vÆue
) == 0)

1667 
	`yyîr‹
("division by zero");

1668 (
yyvÆ
.
l_vÆue
Ë(
yyv•
[(1) - (3)].l_value) / (yyvsp[(3) - (3)].l_value);

1677 i‡((
yyv•
[(3Ë- (3)].
l_vÆue
) == 0)

1678 
	`yyîr‹
("division by zero");

1679 (
yyvÆ
.
l_vÆue
Ë(
yyv•
[(1) - (3)].l_value) % (yyvsp[(3) - (3)].l_value);

1687 { (
yyvÆ
.
l_vÆue
Ë!((
yyv•
[(2) - (2)].l_value)); }

1694 { (
yyvÆ
.
l_vÆue
Ë~((
yyv•
[(2) - (2)].l_value)); }

1701 { (
yyvÆ
.
l_vÆue
Ë-((
yyv•
[(2) - (2)].l_value)); }

1708 { (
yyvÆ
.
l_vÆue
Ë(
yyv•
[(2) - (2)].l_value); }

1716 *
p
;

1717 
¨ôh_t
 
¨ôh_vÆ
;

1718 *
°r_vÆ
;

1720 i‡(
	`lookupv¨
((
yyv•
[(1Ë- (1)].
s_vÆue
)Ë=
NULL
)

1721 
	`£tv¨ß„
((
yyv•
[(1Ë- (1)].
s_vÆue
), "0", 0);

1722 
°r_vÆ
 = 
	`lookupv¨
((
yyv•
[(1Ë- (1)].
s_vÆue
));

1723 
¨ôh_vÆ
 = 
	`°πﬂrôh_t
(
°r_vÆ
, &
p
, 0);

1728 i‡(*
p
 != '\0')

1729 
	`yyîr‹
("variable conversionÉrror");

1730 (
yyvÆ
.
l_vÆue
Ë
¨ôh_vÆ
;

1739 i‡(
	`¨ôh_assign
((
yyv•
[(1Ë- (3)].
s_vÆue
), (yyv•[(3Ë- (3)].
l_vÆue
)) != 0)

1740 
	`yyîr‹
("variableássignmentÉrror");

1741 (
yyvÆ
.
l_vÆue
Ë(
yyv•
[(3) - (3)].l_value);

1750 
¨ôh_t
 
vÆue
;

1752 
vÆue
 = 
	`©ﬂrôh_t
(
	`lookupv¨
((
yyv•
[(1Ë- (3)].
s_vÆue
))Ë+ (yyv•[(3Ë- (3)].
l_vÆue
);

1753 i‡(
	`¨ôh_assign
((
yyv•
[(1Ë- (3)].
s_vÆue
), 
vÆue
) != 0)

1754 
	`yyîr‹
("variableássignmentÉrror");

1755 (
yyvÆ
.
l_vÆue
Ë
vÆue
;

1764 
¨ôh_t
 
vÆue
;

1766 
vÆue
 = 
	`©ﬂrôh_t
(
	`lookupv¨
((
yyv•
[(1Ë- (3)].
s_vÆue
))Ë- (yyv•[(3Ë- (3)].
l_vÆue
);

1767 i‡(
	`¨ôh_assign
((
yyv•
[(1Ë- (3)].
s_vÆue
), 
vÆue
) != 0)

1768 
	`yyîr‹
("variableássignmentÉrror");

1769 (
yyvÆ
.
l_vÆue
Ë
vÆue
;

1778 
¨ôh_t
 
vÆue
;

1780 
vÆue
 = 
	`©ﬂrôh_t
(
	`lookupv¨
((
yyv•
[(1Ë- (3)].
s_vÆue
))Ë* (yyv•[(3Ë- (3)].
l_vÆue
);

1781 i‡(
	`¨ôh_assign
((
yyv•
[(1Ë- (3)].
s_vÆue
), 
vÆue
) != 0)

1782 
	`yyîr‹
("variableássignmentÉrror");

1783 (
yyvÆ
.
l_vÆue
Ë
vÆue
;

1792 
¨ôh_t
 
vÆue
;

1794 i‡((
yyv•
[(3Ë- (3)].
l_vÆue
) == 0)

1795 
	`yyîr‹
("division by zero");

1797 
vÆue
 = 
	`©ﬂrôh_t
(
	`lookupv¨
((
yyv•
[(1Ë- (3)].
s_vÆue
))Ë/ (yyv•[(3Ë- (3)].
l_vÆue
);

1798 i‡(
	`¨ôh_assign
((
yyv•
[(1Ë- (3)].
s_vÆue
), 
vÆue
) != 0)

1799 
	`yyîr‹
("variableássignmentÉrror");

1800 (
yyvÆ
.
l_vÆue
Ë
vÆue
;

1809 
¨ôh_t
 
vÆue
;

1811 i‡((
yyv•
[(3Ë- (3)].
l_vÆue
) == 0)

1812 
	`yyîr‹
("division by zero");

1814 
vÆue
 = 
	`©ﬂrôh_t
(
	`lookupv¨
((
yyv•
[(1Ë- (3)].
s_vÆue
))Ë% (yyv•[(3Ë- (3)].
l_vÆue
);

1815 i‡(
	`¨ôh_assign
((
yyv•
[(1Ë- (3)].
s_vÆue
), 
vÆue
) != 0)

1816 
	`yyîr‹
("variableássignmentÉrror");

1817 (
yyvÆ
.
l_vÆue
Ë
vÆue
;

1826 
¨ôh_t
 
vÆue
;

1828 
vÆue
 = 
	`©ﬂrôh_t
(
	`lookupv¨
((
yyv•
[(1Ë- (3)].
s_vÆue
))Ë>> (yyv•[(3Ë- (3)].
l_vÆue
);

1829 i‡(
	`¨ôh_assign
((
yyv•
[(1Ë- (3)].
s_vÆue
), 
vÆue
) != 0)

1830 
	`yyîr‹
("variableássignmentÉrror");

1831 (
yyvÆ
.
l_vÆue
Ë
vÆue
;

1840 
¨ôh_t
 
vÆue
;

1842 
vÆue
 = 
	`©ﬂrôh_t
(
	`lookupv¨
((
yyv•
[(1Ë- (3)].
s_vÆue
))Ë<< (yyv•[(3Ë- (3)].
l_vÆue
);

1843 i‡(
	`¨ôh_assign
((
yyv•
[(1Ë- (3)].
s_vÆue
), 
vÆue
) != 0)

1844 
	`yyîr‹
("variableássignmentÉrror");

1845 (
yyvÆ
.
l_vÆue
Ë
vÆue
;

1854 
¨ôh_t
 
vÆue
;

1856 
vÆue
 = 
	`©ﬂrôh_t
(
	`lookupv¨
((
yyv•
[(1Ë- (3)].
s_vÆue
))Ë& (yyv•[(3Ë- (3)].
l_vÆue
);

1857 i‡(
	`¨ôh_assign
((
yyv•
[(1Ë- (3)].
s_vÆue
), 
vÆue
) != 0)

1858 
	`yyîr‹
("variableássignmentÉrror");

1859 (
yyvÆ
.
l_vÆue
Ë
vÆue
;

1868 
¨ôh_t
 
vÆue
;

1870 
vÆue
 = 
	`©ﬂrôh_t
(
	`lookupv¨
((
yyv•
[(1Ë- (3)].
s_vÆue
))Ë^ (yyv•[(3Ë- (3)].
l_vÆue
);

1871 i‡(
	`¨ôh_assign
((
yyv•
[(1Ë- (3)].
s_vÆue
), 
vÆue
) != 0)

1872 
	`yyîr‹
("variableássignmentÉrror");

1873 (
yyvÆ
.
l_vÆue
Ë
vÆue
;

1882 
¨ôh_t
 
vÆue
;

1884 
vÆue
 = 
	`©ﬂrôh_t
(
	`lookupv¨
((
yyv•
[(1Ë- (3)].
s_vÆue
))Ë| (yyv•[(3Ë- (3)].
l_vÆue
);

1885 i‡(
	`¨ôh_assign
((
yyv•
[(1Ë- (3)].
s_vÆue
), 
vÆue
) != 0)

1886 
	`yyîr‹
("variableássignmentÉrror");

1887 (
yyvÆ
.
l_vÆue
Ë
vÆue
;

1897 
	`YY_SYMBOL_PRINT
 ("-> $$ =", 
yyr1
[
yyn
], &
yyvÆ
, &
yyloc
);

1899 
	`YYPOPSTACK
 (
yyÀn
);

1900 
yyÀn
 = 0;

1901 
	`YY_STACK_PRINT
 (
yyss
, 
yys•
);

1903 *++
yyv•
 = 
yyvÆ
;

1909 
yyn
 = 
yyr1
[yyn];

1911 
yy°©e
 = 
yypgŸo
[
yyn
 - 
YYNTOKENS
] + *
yys•
;

1912 i‡(0 <
yy°©e
 && yy°©ê<
YYLAST
 && 
yycheck
[yy°©e] =*
yys•
)

1913 
yy°©e
 = 
yyèbÀ
[yystate];

1915 
yy°©e
 = 
yydefgŸo
[
yyn
 - 
YYNTOKENS
];

1917 
yy√w°©e
;

1923 
yyîæab
:

1925 i‡(!
yyîr°©us
)

1927 ++
yy√ºs
;

1928 #i‡! 
YYERROR_VERBOSE


1929 
	`yyîr‹
 (
	`YY_
("syntaxÉrror"));

1932 
YYSIZE_T
 
yysize
 = 
	`yysy¡ax_îr‹
 (0, 
yy°©e
, 
yych¨
);

1933 i‡(
yymsg_Æloc
 < 
yysize
 && yymsg_Ælo¯< 
YYSTACK_ALLOC_MAXIMUM
)

1935 
YYSIZE_T
 
yyÆloc
 = 2 * 
yysize
;

1936 i‡(! (
yysize
 <
yyÆloc
 && yyÆlo¯<
YYSTACK_ALLOC_MAXIMUM
))

1937 
yyÆloc
 = 
YYSTACK_ALLOC_MAXIMUM
;

1938 i‡(
yymsg
 !
yymsgbuf
)

1939 
	`YYSTACK_FREE
 (
yymsg
);

1940 
yymsg
 = (*Ë
	`YYSTACK_ALLOC
 (
yyÆloc
);

1941 i‡(
yymsg
)

1942 
yymsg_Æloc
 = 
yyÆloc
;

1945 
yymsg
 = 
yymsgbuf
;

1946 
yymsg_Æloc
 =  
yymsgbuf
;

1950 i‡(0 < 
yysize
 && yysizê<
yymsg_Æloc
)

1952 (Ë
	`yysy¡ax_îr‹
 (
yymsg
, 
yy°©e
, 
yych¨
);

1953 
	`yyîr‹
 (
yymsg
);

1957 
	`yyîr‹
 (
	`YY_
("syntaxÉrror"));

1958 i‡(
yysize
 != 0)

1959 
yyexhau°edœb
;

1967 i‡(
yyîr°©us
 == 3)

1972 i‡(
yych¨
 <
YYEOF
)

1975 i‡(
yych¨
 =
YYEOF
)

1976 
YYABORT
;

1980 
	`yyde°ru˘
 ("Error: discarding",

1981 
yytokí
, &
yylvÆ
);

1982 
yych¨
 = 
YYEMPTY
;

1988 
yyîæab1
;

1994 
yyîr‹œb
:

2000 
yyîr‹œb
;

2004 
	`YYPOPSTACK
 (
yyÀn
);

2005 
yyÀn
 = 0;

2006 
	`YY_STACK_PRINT
 (
yyss
, 
yys•
);

2007 
yy°©e
 = *
yys•
;

2008 
yyîæab1
;

2014 
yyîæab1
:

2015 
yyîr°©us
 = 3;

2019 
yyn
 = 
yy∑˘
[
yy°©e
];

2020 i‡(
yyn
 !
YYPACT_NINF
)

2022 
yyn
 +
YYTERROR
;

2023 i‡(0 <
yyn
 && yy¿<
YYLAST
 && 
yycheck
[yyn] =
YYTERROR
)

2025 
yyn
 = 
yyèbÀ
[yyn];

2026 i‡(0 < 
yyn
)

2032 i‡(
yys•
 =
yyss
)

2033 
YYABORT
;

2036 
	`yyde°ru˘
 ("Error:Öopping",

2037 
yy°os
[
yy°©e
], 
yyv•
);

2038 
	`YYPOPSTACK
 (1);

2039 
yy°©e
 = *
yys•
;

2040 
	`YY_STACK_PRINT
 (
yyss
, 
yys•
);

2043 *++
yyv•
 = 
yylvÆ
;

2047 
	`YY_SYMBOL_PRINT
 ("Shi·ög", 
yy°os
[
yyn
], 
yyv•
, 
yyl•
);

2049 
yy°©e
 = 
yyn
;

2050 
yy√w°©e
;

2056 
yyac˚±œb
:

2057 
yyªsu…
 = 0;

2058 
yyªtu∫
;

2063 
yyab‹éab
:

2064 
yyªsu…
 = 1;

2065 
yyªtu∫
;

2067 #i‡!
	`deföed
(
yyovîÊow
Ë|| 
YYERROR_VERBOSE


2071 
yyexhau°edœb
:

2072 
	`yyîr‹
 (
	`YY_
("memoryÉxhausted"));

2073 
yyªsu…
 = 2;

2077 
yyªtu∫
:

2078 i‡(
yych¨
 !
YYEMPTY
)

2079 
	`yyde°ru˘
 ("Cleanup: discardingÜookahead",

2080 
yytokí
, &
yylvÆ
);

2083 
	`YYPOPSTACK
 (
yyÀn
);

2084 
	`YY_STACK_PRINT
 (
yyss
, 
yys•
);

2085 
yys•
 !
yyss
)

2087 
	`yyde°ru˘
 ("Cleanup:Öopping",

2088 
yy°os
[*
yys•
], 
yyv•
);

2089 
	`YYPOPSTACK
 (1);

2091 #i‚de‡
yyovîÊow


2092 i‡(
yyss
 !
yysß
)

2093 
	`YYSTACK_FREE
 (
yyss
);

2095 #i‡
YYERROR_VERBOSE


2096 i‡(
yymsg
 !
yymsgbuf
)

2097 
	`YYSTACK_FREE
 (
yymsg
);

2100  
	`YYID
 (
yyªsu…
);

2101 
	}
}

2108 
	~"îr‹.h
"

2109 
	~"ouçut.h
"

2110 
	~"memÆloc.h
"

2112 
	#YYPARSE_PARAM_TYPE
 
¨ôh_t
 *

	)

2113 
	#YYPARSE_PARAM
 
ªsu…


	)

2115 *
	g¨ôh_buf
, *
	g¨ôh_°¨tbuf
;

2117 
yyÀx
();

2118 
yy∑r£
(
YYPARSE_PARAM_TYPE
);

2121 
	$¨ôh_assign
(*
«me
, 
¨ôh_t
 
vÆue
)

2123 *
°r
;

2124 
ªt
;

2126 
°r
 = (*)
	`ckmÆloc
(
	`DIGITS
(
vÆue
));

2127 
	`•rötf
(
°r
, 
ARITH_FORMAT_STR
, 
vÆue
);

2128 
ªt
 = 
	`£tv¨ß„
(
«me
, 
°r
, 0);

2129 
	`‰ì
(
°r
);

2130  
ªt
;

2131 
	}
}

2133 
¨ôh_t


2134 
	$¨ôh
(*
s
)

2136 
¨ôh_t
 
ªsu…
;

2138 
¨ôh_buf
 = 
¨ôh_°¨tbuf
 = 
s
;

2140 
INTOFF
;

2141 
	`yy∑r£
(&
ªsu…
);

2142 
	`¨ôh_Àx_ª£t
();

2143 
INTON
;

2145  
ªsu…
;

2146 
	}
}

2149 
	$yyîr‹
(*
s
)

2152 
yyîrok
;

2153 
yy˛órö
;

2154 
	`¨ôh_Àx_ª£t
();

2155 
	`îr‹
("¨ôhmëi¯ex¥essi⁄: %s: \"%s\"", 
s
, 
¨ôh_°¨tbuf
);

2156 
	}
}

2162 
	$expcmd
(
¨gc
, **
¨gv
)

2164 *
p
;

2165 *
c⁄ˇt
;

2166 **
≠
;

2167 
¨ôh_t
 
i
;

2169 i‡(
¨gc
 > 1) {

2170 
p
 = 
¨gv
[1];

2171 i‡(
¨gc
 > 2) {

2175 
	`STARTSTACKSTR
(
c⁄ˇt
);

2176 
≠
 = 
¨gv
 + 2;

2178 *
p
)

2179 
	`STPUTC
(*
p
++, 
c⁄ˇt
);

2180 i‡((
p
 = *
≠
++Ë=
NULL
)

2182 
	`STPUTC
(' ', 
c⁄ˇt
);

2184 
	`STPUTC
('\0', 
c⁄ˇt
);

2185 
p
 = 
	`gøb°ack°r
(
c⁄ˇt
);

2188 
p
 = "";

2190 
i
 = 
	`¨ôh
(
p
);

2192 
	`out1fmt
(
ARITH_FORMAT_STR
 "\n", 
i
);

2193  !
i
;

2194 
	}
}

2197 #ifde‡
TEST_ARITH


2198 
	~<°dio.h
>

2199 
	$maö
(
¨gc
, *
¨gv
[])

2201 
	`¥ötf
("%d\n", 
	`exp
(
¨gv
[1]));

2202 
	}
}

2204 
	$îr‹
(*
s
)

2206 
	`Ârötf
(
°dîr
, "exp: %s\n", 
s
);

2207 
	`exô
(1);

2208 
	}
}

	@y.tab.h

37 #i‚de‡
YYTOKENTYPE


38 
	#YYTOKENTYPE


	)

41 
	eyytokíty≥
 {

42 
	mARITH_NUM
 = 258,

43 
	mARITH_LPAREN
 = 259,

44 
	mARITH_RPAREN
 = 260,

45 
	mARITH_VAR
 = 261,

46 
	mARITH_ASSIGN
 = 262,

47 
	mARITH_SUBASSIGN
 = 263,

48 
	mARITH_ADDASSIGN
 = 264,

49 
	mARITH_REMASSIGN
 = 265,

50 
	mARITH_DIVASSIGN
 = 266,

51 
	mARITH_MULASSIGN
 = 267,

52 
	mARITH_LSHASSIGN
 = 268,

53 
	mARITH_RSHASSIGN
 = 269,

54 
	mARITH_BORASSIGN
 = 270,

55 
	mARITH_BXORASSIGN
 = 271,

56 
	mARITH_BANDASSIGN
 = 272,

57 
	mARITH_OR
 = 273,

58 
	mARITH_AND
 = 274,

59 
	mARITH_BOR
 = 275,

60 
	mARITH_BXOR
 = 276,

61 
	mARITH_BAND
 = 277,

62 
	mARITH_NE
 = 278,

63 
	mARITH_EQ
 = 279,

64 
	mARITH_LE
 = 280,

65 
	mARITH_GE
 = 281,

66 
	mARITH_GT
 = 282,

67 
	mARITH_LT
 = 283,

68 
	mARITH_RSHIFT
 = 284,

69 
	mARITH_LSHIFT
 = 285,

70 
	mARITH_SUB
 = 286,

71 
	mARITH_ADD
 = 287,

72 
	mARITH_REM
 = 288,

73 
	mARITH_DIV
 = 289,

74 
	mARITH_MUL
 = 290,

75 
	mARITH_BNOT
 = 291,

76 
	mARITH_NOT
 = 292,

77 
	mARITH_UNARYPLUS
 = 293,

78 
	mARITH_UNARYMINUS
 = 294

82 
	#ARITH_NUM
 258

	)

83 
	#ARITH_LPAREN
 259

	)

84 
	#ARITH_RPAREN
 260

	)

85 
	#ARITH_VAR
 261

	)

86 
	#ARITH_ASSIGN
 262

	)

87 
	#ARITH_SUBASSIGN
 263

	)

88 
	#ARITH_ADDASSIGN
 264

	)

89 
	#ARITH_REMASSIGN
 265

	)

90 
	#ARITH_DIVASSIGN
 266

	)

91 
	#ARITH_MULASSIGN
 267

	)

92 
	#ARITH_LSHASSIGN
 268

	)

93 
	#ARITH_RSHASSIGN
 269

	)

94 
	#ARITH_BORASSIGN
 270

	)

95 
	#ARITH_BXORASSIGN
 271

	)

96 
	#ARITH_BANDASSIGN
 272

	)

97 
	#ARITH_OR
 273

	)

98 
	#ARITH_AND
 274

	)

99 
	#ARITH_BOR
 275

	)

100 
	#ARITH_BXOR
 276

	)

101 
	#ARITH_BAND
 277

	)

102 
	#ARITH_NE
 278

	)

103 
	#ARITH_EQ
 279

	)

104 
	#ARITH_LE
 280

	)

105 
	#ARITH_GE
 281

	)

106 
	#ARITH_GT
 282

	)

107 
	#ARITH_LT
 283

	)

108 
	#ARITH_RSHIFT
 284

	)

109 
	#ARITH_LSHIFT
 285

	)

110 
	#ARITH_SUB
 286

	)

111 
	#ARITH_ADD
 287

	)

112 
	#ARITH_REM
 288

	)

113 
	#ARITH_DIV
 289

	)

114 
	#ARITH_MUL
 290

	)

115 
	#ARITH_BNOT
 291

	)

116 
	#ARITH_NOT
 292

	)

117 
	#ARITH_UNARYPLUS
 293

	)

118 
	#ARITH_UNARYMINUS
 294

	)

123 #i‡! 
deföed
 
YYSTYPE
 && ! deföed 
YYSTYPE_IS_DECLARED


124 
	uYYSTYPE


130 
¨ôh_t
 
	ml_vÆue
;

131 * 
	ms_vÆue
;

137 } 
	tYYSTYPE
;

138 
	#YYSTYPE_IS_TRIVIAL
 1

	)

139 
	#yy°y≥
 
YYSTYPE


	)

140 
	#YYSTYPE_IS_DECLARED
 1

	)

143 
YYSTYPE
 
yylvÆ
;

	@
1
.
0
62
534
alias.c
alias.h
arith.h
arith.y
arith_lex.l
bltin/bltin.h
bltin/echo.c
builtins.c
builtins.h
cd.c
cd.h
error.c
error.h
eval.c
eval.h
exec.c
exec.h
expand.c
expand.h
histedit.c
init.c
init.h
input.c
input.h
jobs.c
jobs.h
lex.yy.c
mail.c
mail.h
main.c
main.h
memalloc.c
memalloc.h
miscbltin.c
mkinit.c
mknodes.c
mksyntax.c
myhistedit.h
mystring.c
mystring.h
nodes.c
nodes.h
options.c
options.h
output.c
output.h
parser.c
parser.h
redir.c
redir.h
shell.h
show.c
show.h
syntax.c
syntax.h
token.h
trap.c
trap.h
var.c
var.h
y.tab.c
y.tab.h
