cscope 15 $HOME/Desktop/nvi-1.79               0001034442
	@build/acconfig.h

4 #unde‡
ssize_t


7 #unde‡
DEBUG


10 #unde‡
HAVE_BROKEN_GETTIMEOFDAY


13 #unde‡
HAVE_BROKEN_VDISABLE


16 #unde‡
HAVE_BSD_CURSES


19 #unde‡
HAVE_CURSES_ADDNSTR


22 #unde‡
HAVE_CURSES_BEEP


25 #unde‡
HAVE_CURSES_FLASH


28 #unde‡
HAVE_CURSES_IDLOK


31 #unde‡
HAVE_CURSES_KEYPAD


34 #unde‡
HAVE_CURSES_NEWTERM


37 #unde‡
HAVE_CURSES_SETUPTERM


40 #unde‡
HAVE_CURSES_TIGETSTR


43 #unde‡
HAVE_DB_HASH_OPEN


46 #unde‡
HAVE_FTRUNCATE_CHSIZE


49 #unde‡
HAVE_FTRUNCATE_FTRUNCATE


52 #unde‡
HAVE_LOCK_FCNTL


55 #unde‡
HAVE_LOCK_FLOCK


58 #unde‡
HAVE_PERL_INTERP


61 #unde‡
HAVE_PERL_5_003_01


64 #unde‡
HAVE_REVOKE


67 #unde‡
HAVE_STRSEP


70 #unde‡
HAVE_SYS_MMAN_H


73 #unde‡
HAVE_SYS_SELECT_H


76 #unde‡
HAVE_SYS5_PTY


79 #unde‡
HAVE_TCL_INTERP


82 #unde‡
SPRINTF_RET_CHARPNT


	@build/config.h

11 
	#HAVE_ST_BLKSIZE
 1

	)

29 
	#STDC_HEADERS
 1

	)

57 
	#HAVE_CURSES_ADDNSTR
 1

	)

66 
	#HAVE_CURSES_IDLOK
 1

	)

84 
	#HAVE_FTRUNCATE_FTRUNCATE
 1

	)

120 
	#HAVE_GETHOSTNAME
 1

	)

123 
	#HAVE_GETOPT
 1

	)

126 
	#HAVE_GETPAGESIZE
 1

	)

129 
	#HAVE_MEMCHR
 1

	)

132 
	#HAVE_MEMCPY
 1

	)

135 
	#HAVE_MEMMOVE
 1

	)

138 
	#HAVE_MEMSET
 1

	)

150 
	#HAVE_SETENV
 1

	)

153 
	#HAVE_SNPRINTF
 1

	)

156 
	#HAVE_STRDUP
 1

	)

159 
	#HAVE_STRERROR
 1

	)

162 
	#HAVE_STRPBRK
 1

	)

165 
	#HAVE_STRSEP
 1

	)

168 
	#HAVE_STRTOL
 1

	)

171 
	#HAVE_STRTOUL
 1

	)

174 
	#HAVE_UNSETENV
 1

	)

177 
	#HAVE_VALLOC
 1

	)

180 
	#HAVE_VSNPRINTF
 1

	)

	@build/pathnames.h

3 #i‚def 
_PATH_BSHELL


4 
	#_PATH_BSHELL
 "/bö/sh"

	)

7 #i‚def 
_PATH_EXRC


8 
	#_PATH_EXRC
 ".exrc"

	)

11 #i‚def 
_PATH_MSGCAT


12 
	#_PATH_MSGCAT
 "./"

	)

15 #i‚def 
_PATH_NEXRC


16 
	#_PATH_NEXRC
 ".√xrc"

	)

19 #i‚def 
_PATH_PRESERVE


20 
	#_PATH_PRESERVE
 "/v¨/tmp/vi.ªcovî"

	)

23 #i‚de‡
_PATH_SYSV_PTY


24 
	#_PATH_SYSV_PTY
 "/dev/±mx"

	)

27 #i‚def 
_PATH_SENDMAIL


28 
	#_PATH_SENDMAIL
 "/u§/bö/£ndmaû"

	)

31 #i‚def 
_PATH_SYSEXRC


32 
	#_PATH_SYSEXRC
 "/ëc/vi.exrc"

	)

35 #i‚def 
_PATH_TAGS


36 
	#_PATH_TAGS
 "ègs"

	)

39 #i‚def 
_PATH_TMP


40 
	#_PATH_TMP
 "/tmp"

	)

43 #i‚def 
_PATH_TTY


44 
	#_PATH_TTY
 "/dev/ây"

	)

	@build/port.h

7 #i‚de‡
__BIT_TYPES_DEFINED__


8 
	#__BIT_TYPES_DEFINED__


	)

26 #unde‡
__P


27 #i‡
deföed
(
__STDC__
Ë|| deföed(
__˝lu•lus
)

28 
	#__P
(
¥Ÿos
Ë¥Ÿo†

	)

30 
	#__P
(
¥Ÿos
Ë(Ë

	)

38 #ifde‡
HAVE_BROKEN_GETTIMEOFDAY


39 
	#gëtimeofday
(
tv
, 
tz
Ë
	`gëtimeofday
—v)

	)

47 #i‚de‡
HAVE_SYS_MMAN_H


48 
	#MAP_SHARED
 1

	)

49 
	#MAP_PRIVATE
 2

	)

50 
	#PROT_READ
 0x1

	)

51 
	#PROT_WRITE
 0x2

	)

52 
	#PROT_EXEC
 0x4

	)

59 #i‚de‡
STDERR_FILENO


60 
	#STDIN_FILENO
 0

	)

61 
	#STDOUT_FILENO
 1

	)

62 
	#STDERR_FILENO
 2

	)

69 #i‚de‡
SEEK_END


70 
	#SEEK_SET
 0

	)

71 
	#SEEK_CUR
 1

	)

72 
	#SEEK_END
 2

	)

80 #ifde‡
HAVE_BROKEN_VDISABLE


81 #unde‡
_POSIX_VDISABLE


82 
	#_POSIX_VDISABLE
 (()'\377')

	)

89 #i‚de‡
_POSIX_VDISABLE


90 
	#_POSIX_VDISABLE
 0

	)

97 #i‚def 
TCSASOFT


98 
	#TCSASOFT
 0

	)

105 #i‚de‡
MAXPATHLEN


106 #ifde‡
PATH_MAX


107 
	#MAXPATHLEN
 
PATH_MAX


	)

109 
	#MAXPATHLEN
 1024

	)

117 #i‚def 
MAX


118 
	#MAX
(
_a
,
_b
Ë((_a)<(_b)?(_b):(_a))

	)

120 #i‚def 
MIN


121 
	#MIN
(
_a
,
_b
Ë((_a)<(_b)?(_a):(_b))

	)

128 
	#DB
 
L__DB


	)

129 #unde‡
pgno_t


130 
	#pgno_t
 
L__db_pgno_t


	)

136 #i‚de‡
O_EXLOCK


137 
	#O_EXLOCK
 0

	)

140 #i‚de‡
O_SHLOCK


141 
	#O_SHLOCK
 0

	)

148 #i‚de‡
EFTYPE


149 
	#EFTYPE
 
EINVAL


	)

156 #i‚def 
_POSIX2_RE_DUP_MAX


157 
	#_POSIX2_RE_DUP_MAX
 255

	)

165 #i‚def 
WCOREDUMP


166 
	#WCOREDUMP
(
a
Ë0

	)

173 #i‡!
deföed
(
LITTLE_ENDIAN
)

174 
	#LITTLE_ENDIAN
 1234

	)

176 #i‡!
deföed
(
BIG_ENDIAN
)

177 
	#BIG_ENDIAN
 4321

	)

179 #i‡!
deföed
(
BYTE_ORDER
)

180 #i‡
WORDS_BIGENDIAN
 == 1

181 
	#BYTE_ORDER
 
BIG_ENDIAN


	)

183 
	#BYTE_ORDER
 
LITTLE_ENDIAN


	)

	@catalog/dump.c

34 #i‚de‡
löt


35 
	gc›yright
[] =

40 #i‚de‡
löt


41 
	gsccsid
[] = "@(#)dump.c 8.1 (Berkeley) 8/31/94";

44 
	~<˘y≥.h
>

45 
	~<°dio.h
>

48 
	$∑r£
(
Â
)

49 
FILE
 *
Â
;

51 
ch
, 
s1
, 
s2
, 
s3
;

53 
	#TESTD
(
s
) { \

54 i‡((
s
 = 
	`gëc
(
Â
)Ë=
EOF
) \

56 i‡(!
	`isdigô
(
s
)) \

58 }

	)

59 
	#TESTP
 { \

60 i‡((
ch
 = 
	`gëc
(
Â
)Ë=
EOF
) \

62 i‡(
ch
 != '|') \

64 }

	)

65 
	#MOVEC
(
t
) { \

67 i‡((
ch
 = 
	`gëc
(
Â
)Ë=
EOF
) \

69 } 
ch
 !(
t
)); \

70 }

	)

72 
	`MOVEC
('"');

73 
	`TESTD
(
s1
);

74 
	`TESTD
(
s2
);

75 
	`TESTD
(
s3
);

76 
TESTP
;

77 
	`putch¨
('"');

78 
	`putch¨
(
s1
);

79 
	`putch¨
(
s2
);

80 
	`putch¨
(
s3
);

81 
	`putch¨
('|');

83 i‡((
ch
 = 
	`gëc
(
Â
)Ë=
EOF
)

85 
	`putch¨
(
ch
);

86 i‡(
ch
 == '"')

88 i‡(
ch
 == '\\') {

89 i‡((
ch
 = 
	`gëc
(
Â
)Ë=
EOF
)

91 
	`putch¨
(
ch
);

94 
	`putch¨
('\n');

96 
	}
}

99 
	$maö
(
¨gc
, 
¨gv
)

100 
¨gc
;

101 *
¨gv
[];

103 
FILE
 *
Â
;

105 ; *
¨gv
 !
NULL
; ++argv) {

106 i‡((
Â
 = 
	`f›í
(*
¨gv
, "r")Ë=
NULL
) {

107 
	`≥º‹
(*
¨gv
);

108 
	`exô
 (1);

110 
	`∑r£
(
Â
);

111 ()
	`f˛o£
(
Â
);

113 
	`exô
 (0);

114 
	}
}

	@cl/cl.h

12 
	s_˛_¥iv©e
 {

13 
CHAR_T
 
	mibuf
[256];

15 
	meof_cou¡
;

17 
ãrmios
 
	m‹ig
;

18 
ãrmios
 
	mex_íãr
;

19 
ãrmios
 
	mvi_íãr
;

21 *
	mñ
;

22 *
	mcup
;

23 *
	mcuu1
;

24 *
	mrmso
, *
	msmso
;

25 *
	msmcup
, *
	mrmcup
;

27 
	mkûÀrsig
;

28 
	#INDX_HUP
 0

	)

29 
	#INDX_INT
 1

	)

30 
	#INDX_TERM
 2

	)

31 
	#INDX_WINCH
 3

	)

32 
	#INDX_MAX
 4

	)

33 
siga˘i⁄
 
	mﬂ˘
[
INDX_MAX
];

36 
	mTGW_UNKNOWN
=0, 
	mTGW_SET
, 
	mTGW_UNSET
 } 
	mtgw
;

39 
	mTE_SENT
=0, 
	mTI_SENT
 } 
	mti_ã
;

41 
	#CL_IN_EX
 0x0001

	)

42 
	#CL_RENAME
 0x0002

	)

43 
	#CL_RENAME_OK
 0x0004

	)

44 
	#CL_SCR_EX_INIT
 0x0008

	)

45 
	#CL_SCR_VI_INIT
 0x0010

	)

46 
	#CL_SIGHUP
 0x0020

	)

47 
	#CL_SIGINT
 0x0040

	)

48 
	#CL_SIGTERM
 0x0080

	)

49 
	#CL_SIGWINCH
 0x0100

	)

50 
	#CL_STDIN_TTY
 0x0200

	)

51 
u_öt32_t
 
	mÊags
;

52 } 
	tCL_PRIVATE
;

54 
	#CLP
(
•
Ë((
CL_PRIVATE
 *)((•)->
gp
->
˛_¥iv©e
))

	)

55 
	#GCLP
(
gp
Ë((
CL_PRIVATE
 *)gp->
˛_¥iv©e
)

	)

58 íum { 
	mINP_OK
=0, 
	mINP_EOF
, 
	mINP_ERR
, 
	mINP_INTR
, 
	mINP_TIMEOUT
 } 
	töput_t
;

61 
	#RLNO
(
•
, 
 o
Ë(•)->
woff
 + ( o)

	)

64 
	#XTERM_RENAME
 "\033]0;%s\007"

	)

71 #i‚de‡
TRUE


72 
	#TRUE
 1

	)

74 #i‚de‡
FALSE


75 
	#FALSE
 0

	)

78 
	~"˛_exã∫.h
"

	@cl/cl_bsd.c

8 
	~"c⁄fig.h
"

10 #i‚de‡
löt


11 c⁄° 
	gsccsid
[] = "@(#)cl_bsd.c 8.29 (Berkeley) 7/1/96";

14 
	~<sys/ty≥s.h
>

15 
	~<sys/queue.h
>

16 
	~<sys/time.h
>

18 
	~<bô°rög.h
>

19 
	~<˘y≥.h
>

20 
	~<cur£s.h
>

21 
	~<sig«l.h
>

22 
	~<°dio.h
>

23 
	~<°dlib.h
>

24 
	~<°rög.h
>

25 
	~<ãrmios.h
>

26 
	~<uni°d.h
>

28 
	~"../comm⁄/comm⁄.h
"

29 
	~"../vi/vi.h
"

30 
	~"˛.h
"

32 *
	gke
;

33 *
	gks
;

34 *
	gvb
;

43 #i‚de‡
HAVE_CURSES_ADDNSTR


52 
	$addn°r
(
s
, 
n
)

53 *
s
;

54 
n
;

56 
ch
;

58 
n
-- && (
ch
 = *
s
++))

59 
	`addch
(
ch
);

60  (
OK
);

61 
	}
}

64 #i‚def 
HAVE_CURSES_BEEP


73 
	$bìp
()

75 ()
	`wrôe
(1, "\007", 1);

76 
	}
}

79 #i‚def 
HAVE_CURSES_FLASH


89 
	$Êash
()

91 i‡(
vb
 !
NULL
) {

92 ()
	`çuts
(
vb
, 1, 
˛_putch¨
);

93 ()
	`fÊush
(
°dout
);

95 
	`bìp
();

96 
	}
}

99 #i‚def 
HAVE_CURSES_IDLOK


109 
	$idlok
(
wö
, 
bf
)

110 
WINDOW
 *
wö
;

111 
bf
;

114 
	}
}

117 #i‚def 
HAVE_CURSES_KEYPAD


127 
	$key∑d
(
a
, 
⁄
)

128 *
a
;

129 
⁄
;

131 *
p
;

133 i‡((
p
 = 
	`tigë°r
(
⁄
 ? "smkx" : "rmkx")) != (*)-1) {

134 ()
	`çuts
(
p
, 0, 
˛_putch¨
);

135 ()
	`fÊush
(
°dout
);

138 
	}
}

141 #i‚def 
HAVE_CURSES_NEWTERM


151 
	$√wãrm
(
a
, 
b
, 
c
)

152 c⁄° *
a
;

153 
FILE
 *
b
, *
c
;

155  (
	`öôs¸
());

156 
	}
}

159 #i‚def 
HAVE_CURSES_SETUPTERM


169 
	$£tu±îm
(
ây≥
, 
‚o
, 
îΩ
)

170 *
ây≥
;

171 
‚o
, *
îΩ
;

173 
buf
[2048];

174 *
p
;

176 i‡((*
îΩ
 = 
	`tgëít
(
buf
, 
ây≥
)) > 0) {

177 i‡(
ke
 !
NULL
)

178 
	`‰ì
(
ke
);

179 
ke
 = ((
p
 = 
	`tigë°r
("rmkx")) == (*)-1) ?

180 
NULL
 : 
	`°rdup
(
p
);

181 i‡(
ks
 !
NULL
)

182 
	`‰ì
(
ks
);

183 
ks
 = ((
p
 = 
	`tigë°r
("smkx")) == (*)-1) ?

184 
NULL
 : 
	`°rdup
(
p
);

185 i‡(
vb
 !
NULL
)

186 
	`‰ì
(
vb
);

187 
vb
 = ((
p
 = 
	`tigë°r
("flash")) == (*)-1) ?

188 
NULL
 : 
	`°rdup
(
p
);

190 
	}
}

193 #i‚def 
HAVE_CURSES_TIGETSTR


195 
	s_é
 {

196 *
	mãrmöfo
;

197 *
	mãrmˇp
;

198 } 
	tTL
;

199 c⁄° 
TL
 
	gli°
[] = {

230 #ifde‡
_AIX


235 c⁄° 
	gcodes
[] = {

253 c⁄° 
	gcodes
[] = {

268 
	$lcmp
(
a
, 
b
)

269 c⁄° *
a
, *
b
;

271  (
	`°rcmp
(
a
, ((
TL
 *)
b
)->
ãrmöfo
));

272 
	}
}

288 
	$tigë°r
(
«me
)

289 *
«me
;

291 
sbuf
[256];

292 
TL
 *
ép
;

293 
n
;

294 *
p
, 
key«me
[3];

296 i‡((
ép
 = 
	`b£¨ch
(
«me
,

297 
li°
, ÷i°Ë/ (
TL
), (TL), 
lcmp
)Ë=
NULL
) {

298 #ifde‡
_AIX


299 i‡(
«me
[0] == 'k' &&

300 
«me
[1] ='f' && (
n
 = 
	`©oi
(name + 2)) <= 36) {

301 
key«me
[0] = 'k';

302 
key«me
[1] = 
codes
[
n
];

303 
key«me
[2] = '\0';

305 i‡(
«me
[0] == 'k' &&

306 
«me
[1] ='f' && (
n
 = 
	`©oi
(name + 2)) <= 63) {

307 
key«me
[0] = 
n
 <= 10 ? 'k' : 'F';

308 
key«me
[1] = 
codes
[
n
];

309 
key«me
[2] = '\0';

311 
«me
 = 
key«me
;

314 
«me
 = 
ép
->
ãrmˇp
;

316 
p
 = 
sbuf
;

317 #ifde‡
_AIX


318  ((
p
 = 
	`tgë°r
(
«me
, &p)Ë=
NULL
 ? (*)-1 : 
	`°r˝y
(
sbuf
,Ö));

320  (
	`tgë°r
(
«me
, &
p
Ë=
NULL
 ? (*)-1 : 
sbuf
);

322 
	}
}

332 
	$tigënum
(
«me
)

333 *
«me
;

335 
TL
 *
ép
;

336 
vÆ
;

338 i‡((
ép
 = 
	`b£¨ch
(
«me
,

339 
li°
, ÷i°Ë/ (
TL
), (TL), 
lcmp
)Ë!
NULL
) {

340 
«me
 = 
ép
->
ãrmˇp
;

343  ((
vÆ
 = 
	`tgënum
(
«me
)) == -1 ? -2 : val);

344 
	}
}

	@cl/cl_funcs.c

10 
	~"c⁄fig.h
"

12 #i‚de‡
löt


13 c⁄° 
	gsccsid
[] = "@(#)cl_funcs.c 10.50 (Berkeley) 9/24/96";

16 
	~<sys/ty≥s.h
>

17 
	~<sys/queue.h
>

18 
	~<sys/time.h
>

20 
	~<bô°rög.h
>

21 
	~<˘y≥.h
>

22 
	~<cur£s.h
>

23 
	~<sig«l.h
>

24 
	~<°dio.h
>

25 
	~<°dlib.h
>

26 
	~<°rög.h
>

27 
	~<ãrmios.h
>

28 
	~<uni°d.h
>

30 
	~"../comm⁄/comm⁄.h
"

31 
	~"../vi/vi.h
"

32 
	~"˛.h
"

41 
	$˛_add°r
(
•
, 
°r
, 
Àn
)

42 
SCR
 *
•
;

43 c⁄° *
°r
;

44 
size_t
 
Àn
;

46 
CL_PRIVATE
 *
˛p
;

47 
size_t
 
ﬁdy
, 
ﬁdx
;

48 
iv
;

50 
˛p
 = 
	`CLP
(
•
);

56 
iv
 = 0;

57 
	`gëyx
(
°ds¸
, 
ﬁdy
, 
ﬁdx
);

58 i‡(!
	`F_ISSET
(
•
, 
SC_SCR_EXWROTE
) &&

59 
ﬁdy
 =
	`RLNO
(
•
, 
	`LASTLINE
(•)Ë&& 
	`IS_SPLIT
(sp)) {

60 
iv
 = 1;

61 ()
	`°™dout
();

64 i‡(
	`addn°r
(
°r
, 
Àn
Ë=
ERR
)

67 i‡(
iv
)

68 ()
	`°™díd
();

70 
	}
}

79 
	$˛_©å
(
•
, 
©åibuã
, 
⁄
)

80 
SCR
 *
•
;

81 
s¸_©å_t
 
©åibuã
;

82 
⁄
;

84 
CL_PRIVATE
 *
˛p
;

86 
˛p
 = 
	`CLP
(
•
);

88 
©åibuã
) {

89 
SA_ALTERNATE
:

119 i‡(
⁄
) {

120 i‡(
˛p
->
ti_ã
 !
TI_SENT
) {

121 
˛p
->
ti_ã
 = 
TI_SENT
;

122 i‡(
˛p
->
smcup
 =
NULL
)

123 ()
	`˛_gëˇp
(
•
, "smcup", &
˛p
->
smcup
);

124 i‡(
˛p
->
smcup
 !
NULL
)

125 ()
	`çuts
(
˛p
->
smcup
, 1, 
˛_putch¨
);

128 i‡(
˛p
->
ti_ã
 !
TE_SENT
) {

129 
˛p
->
ti_ã
 = 
TE_SENT
;

130 i‡(
˛p
->
rmcup
 =
NULL
)

131 ()
	`˛_gëˇp
(
•
, "rmcup", &
˛p
->
rmcup
);

132 i‡(
˛p
->
rmcup
 !
NULL
)

133 ()
	`çuts
(
˛p
->
rmcup
, 1, 
˛_putch¨
);

134 ()
	`fÊush
(
°dout
);

136 ()
	`fÊush
(
°dout
);

138 
SA_INVERSE
:

139 i‡(
	`F_ISSET
(
•
, 
SC_EX
 | 
SC_SCR_EXWROTE
)) {

140 i‡(
˛p
->
smso
 =
NULL
)

142 i‡(
⁄
)

143 ()
	`çuts
(
˛p
->
smso
, 1, 
˛_putch¨
);

145 ()
	`çuts
(
˛p
->
rmso
, 1, 
˛_putch¨
);

146 ()
	`fÊush
(
°dout
);

148 i‡(
⁄
)

149 ()
	`°™dout
();

151 ()
	`°™díd
();

155 
	`ab‹t
();

158 
	}
}

167 
	$˛_baud
(
•
, 
øãp
)

168 
SCR
 *
•
;

169 
u_l⁄g
 *
øãp
;

171 
CL_PRIVATE
 *
˛p
;

181 
˛p
 = 
	`CLP
(
•
);

182 
	`cfgëo•ìd
(&
˛p
->
‹ig
)) {

183 
B50
:

184 
B75
:

185 
B110
:

186 
B134
:

187 
B150
:

188 
B200
:

189 
B300
:

190 
B600
:

191 *
øãp
 = 600;

193 
B1200
:

194 *
øãp
 = 1200;

197 *
øãp
 = 9600;

201 
	}
}

210 
	$˛_bñl
(
•
)

211 
SCR
 *
•
;

213 i‡(
	`F_ISSET
(
•
, 
SC_EX
 | 
SC_SCR_EXWROTE
))

214 ()
	`wrôe
(
STDOUT_FILENO
, "\07", 1);

220 i‡(
	`O_ISSET
(
•
, 
O_FLASH
))

221 ()
	`Êash
();

223 ()
	`bìp
();

226 
	}
}

235 
	$˛_˛π€ﬁ
(
•
)

236 
SCR
 *
•
;

238  (
	`˛π€ﬁ
(Ë=
ERR
);

239 
	}
}

248 
	$˛_curs‹
(
•
, 
yp
, 
xp
)

249 
SCR
 *
•
;

250 
size_t
 *
yp
, *
xp
;

259 
	`gëyx
(
°ds¸
, *
yp
, *
xp
);

260 *
yp
 -
•
->
woff
;

262 
	}
}

271 
	$˛_dñëñn
(
•
)

272 
SCR
 *
•
;

274 
CHAR_T
 
ch
;

275 
CL_PRIVATE
 *
˛p
;

276 
size_t
 
cﬁ
, 
 o
, 
•˙t
, 
ﬁdy
, 
ﬁdx
;

278 
˛p
 = 
	`CLP
(
•
);

298 i‡(!
	`F_ISSET
(
•
, 
SC_SCR_EXWROTE
Ë&& 
	`IS_SPLIT
(sp)) {

299 
	`gëyx
(
°ds¸
, 
ﬁdy
, 
ﬁdx
);

300 #ifde‡
mvchg©


301 
	`mvchg©
(
	`RLNO
(
•
, 
	`LASTLINE
(•)), 0, -1, 
A_NORMAL
, 0, 
NULL
);

303 
 o
 = 
	`RLNO
(
•
, 
	`LASTLINE
(•)), 
cﬁ
 = 
•˙t
 = 0;;) {

304 ()
	`move
(
 o
, 
cﬁ
);

305 
ch
 = 
	`wöch
(
°ds¸
);

306 i‡(
	`isbœnk
(
ch
))

307 ++
•˙t
;

309 ()
	`move
(
 o
, 
cﬁ
 - 
•˙t
);

310 ; 
•˙t
 > 0; --spcnt)

311 ()
	`addch
(' ');

312 ()
	`addch
(
ch
);

314 i‡(++
cﬁ
 >
•
->
cﬁs
)

318 ()
	`move
(
ﬁdy
, 
ﬁdx
);

325  (
	`dñëñn
(Ë=
ERR
);

326 
	}
}

336 
	$˛_ex_adju°
(
•
, 
a˘i⁄
)

337 
SCR
 *
•
;

338 
exadj_t
 
a˘i⁄
;

340 
CL_PRIVATE
 *
˛p
;

341 
˙t
;

343 
˛p
 = 
	`CLP
(
•
);

344 
a˘i⁄
) {

345 
EX_TERM_SCROLL
:

347 i‡(
˛p
->
cuu1
 !
NULL
)

348 ()
	`çuts
(
˛p
->
cuu1
, 1, 
˛_putch¨
);

349 i‡(
˛p
->
cup
 !
NULL
)

350 ()
	`çuts
(
	`tgŸo
(
˛p
->
cup
,

351 0, 
LINES
 - 2), 1, 
˛_putch¨
);

355 
EX_TERM_CE
:

357 i‡(
˛p
->
ñ
 !
NULL
) {

358 ()
	`putch¨
('\r');

359 ()
	`çuts
(
˛p
->
ñ
, 1, 
˛_putch¨
);

372 
˙t
 = 0; c¡ < 
MAX_CHARACTER_COLUMNS
; ++cnt)

373 ()
	`putch¨
('\b');

374 
˙t
 = 0; c¡ < 
MAX_CHARACTER_COLUMNS
; ++cnt)

375 ()
	`putch¨
(' ');

376 ()
	`putch¨
('\r');

377 ()
	`fÊush
(
°dout
);

381 
	`ab‹t
();

384 
	}
}

393 
	$˛_ö£π 
(
•
)

394 
SCR
 *
•
;

400  (
	`ö£π 
(Ë=
ERR
);

401 
	}
}

410 
	$˛_keyvÆ
(
•
, 
vÆ
, 
chp
, 
d√p
)

411 
SCR
 *
•
;

412 
s¸_keyvÆ_t
 
vÆ
;

413 
CHAR_T
 *
chp
;

414 *
d√p
;

416 
CL_PRIVATE
 *
˛p
;

422 
˛p
 = 
	`CLP
(
•
);

423 
vÆ
) {

424 
KEY_VEOF
:

425 *
d√p
 = (*
chp
 = 
˛p
->
‹ig
.
c_cc
[
VEOF
]Ë=
_POSIX_VDISABLE
;

427 
KEY_VERASE
:

428 *
d√p
 = (*
chp
 = 
˛p
->
‹ig
.
c_cc
[
VERASE
]Ë=
_POSIX_VDISABLE
;

430 
KEY_VKILL
:

431 *
d√p
 = (*
chp
 = 
˛p
->
‹ig
.
c_cc
[
VKILL
]Ë=
_POSIX_VDISABLE
;

433 #ifde‡
VWERASE


434 
KEY_VWERASE
:

435 *
d√p
 = (*
chp
 = 
˛p
->
‹ig
.
c_cc
[
VWERASE
]Ë=
_POSIX_VDISABLE
;

439 *
d√p
 = 1;

443 
	}
}

452 
	$˛_move
(
•
, 
 o
, 
˙o
)

453 
SCR
 *
•
;

454 
size_t
 
 o
, 
˙o
;

457 i‡(
	`move
(
	`RLNO
(
•
, 
 o
), 
˙o
Ë=
ERR
) {

458 
	`msgq
(
•
, 
M_ERR
,

459 "Eº‹: move:Ü(%uËc(%uËo(%u)", 
 o
, 
˙o
, 
•
->
woff
);

463 
	}
}

472 
	$˛_ª‰esh
(
•
, 
ª∑öt
)

473 
SCR
 *
•
;

474 
ª∑öt
;

476 
CL_PRIVATE
 *
˛p
;

478 
˛p
 = 
	`CLP
(
•
);

484 i‡(
˛p
->
kûÀrsig
)

495 i‡(
ª∑öt
)

496 
	`˛órok
(
curs¸
, 1);

497  (
	`ª‰esh
(Ë=
ERR
);

498 
	}
}

507 
	$˛_ª«me
(
•
, 
«me
, 
⁄
)

508 
SCR
 *
•
;

509 *
«me
;

510 
⁄
;

512 
GS
 *
gp
;

513 
CL_PRIVATE
 *
˛p
;

514 *
ây≥
;

516 
gp
 = 
•
->gp;

517 
˛p
 = 
	`CLP
(
•
);

519 
ây≥
 = 
	`OG_STR
(
gp
, 
GO_TERM
);

525 i‡(
⁄
) {

526 i‡(
	`F_ISSET
(
˛p
, 
CL_RENAME_OK
) &&

527 !
	`°∫cmp
(
ây≥
, "xterm", ("xterm") - 1)) {

528 
	`F_SET
(
˛p
, 
CL_RENAME
);

529 ()
	`¥ötf
(
XTERM_RENAME
, 
«me
);

530 ()
	`fÊush
(
°dout
);

533 i‡(
	`F_ISSET
(
˛p
, 
CL_RENAME
)) {

534 
	`F_CLR
(
˛p
, 
CL_RENAME
);

535 ()
	`¥ötf
(
XTERM_RENAME
, 
ây≥
);

536 ()
	`fÊush
(
°dout
);

539 
	}
}

548 
	$˛_su•íd
(
•
, 
Ælowedp
)

549 
SCR
 *
•
;

550 *
Ælowedp
;

552 
ãrmios
 
t
;

553 
CL_PRIVATE
 *
˛p
;

554 
GS
 *
gp
;

555 
size_t
 
ﬁdy
, 
ﬁdx
;

556 
ch™ged
;

558 
gp
 = 
•
->gp;

559 
˛p
 = 
	`CLP
(
•
);

560 *
Ælowedp
 = 1;

573 i‡(
	`F_ISSET
(
•
, 
SC_EX
)) {

575 i‡(
	`F_ISSET
(
˛p
, 
CL_STDIN_TTY
)) {

576 ()
	`tcgë©å
(
STDIN_FILENO
, &
t
);

577 ()
	`tc£èâr
(
STDIN_FILENO
,

578 
TCSASOFT
 | 
TCSADRAIN
, &
˛p
->
‹ig
);

582 ()
	`kûl
(0, 
SIGTSTP
);

587 i‡(
	`F_ISSET
(
˛p
, 
CL_STDIN_TTY
))

588 ()
	`tc£èâr
(
STDIN_FILENO
, 
TCSASOFT
 | 
TCSADRAIN
, &
t
);

599 
	`gëyx
(
°ds¸
, 
ﬁdy
, 
ﬁdx
);

600 ()
	`move
(
LINES
 - 1, 0);

601 ()
	`ª‰esh
();

610 #ifde‡
HAVE_BSD_CURSES


612 ()
	`tcgë©å
(
STDIN_FILENO
, &
t
);

616 ()
	`key∑d
(
°ds¸
, 
FALSE
);

619 ()
	`˛_ª«me
(
•
, 
NULL
, 0);

621 #ifde‡
HAVE_BSD_CURSES


622 ()
	`˛_©å
(
•
, 
SA_ALTERNATE
, 0);

624 ()
	`ídwö
();

633 ()
	`tc£èâr
(
STDIN_FILENO
, 
TCSADRAIN
 | 
TCSASOFT
, &
˛p
->
‹ig
);

636 ()
	`kûl
(0, 
SIGTSTP
);

645 i‡(
˛p
->
kûÀrsig
) {

646 
	`F_CLR
(
˛p
, 
CL_SCR_EX_INIT
 | 
CL_SCR_VI_INIT
);

650 #ifde‡
HAVE_BSD_CURSES


652 i‡(
	`F_ISSET
(
˛p
, 
CL_STDIN_TTY
))

653 ()
	`tc£èâr
(
STDIN_FILENO
, 
TCSASOFT
 | 
TCSADRAIN
, &
t
);

655 ()
	`˛_©å
(
•
, 
SA_ALTERNATE
, 1);

659 ()
	`˛_ª«me
(
•
, sp->
‰p
->
«me
, 1);

662 ()
	`key∑d
(
°ds¸
, 
TRUE
);

665 ()
	`move
(
ﬁdy
, 
ﬁdx
);

666 ()
	`˛_ª‰esh
(
•
, 1);

669 i‡(
	`˛_ssize
(
•
, 1, 
NULL
, NULL, &
ch™ged
))

671 i‡(
ch™ged
)

672 
	`F_SET
(
	`CLP
(
•
), 
CL_SIGWINCH
);

675 
	}
}

684 
	$˛_ußge
()

686 
	#USAGE
 "\
:Éx [-eFRrSsv] [-¯comm™d] [-àèg] [-w size] [fûê...]\n\
: vò[-eFlRrSv] [-¯comm™d] [-àèg] [-w size] [fûê...]\n"

	)

689 ()
	`Ârötf
(
°dîr
, "%s", 
USAGE
);

690 #unde‡
USAGE


691 
	}
}

693 #ifde‡
DEBUG


699 
	$gdbª‰esh
()

701 
	`ª‰esh
();

703 
	}
}

	@cl/cl_main.c

10 
	~"c⁄fig.h
"

12 #i‚de‡
löt


13 c⁄° 
	gsccsid
[] = "@(#)cl_main.c 10.36 (Berkeley) 10/14/96";

16 
	~<sys/ty≥s.h
>

17 
	~<sys/queue.h
>

19 
	~<bô°rög.h
>

20 
	~<cur£s.h
>

21 
	~<î∫o.h
>

22 
	~<f˙é.h
>

23 
	~<sig«l.h
>

24 
	~<°dio.h
>

25 
	~<°dlib.h
>

26 
	~<°rög.h
>

27 
	~<ãrmios.h
>

28 
	~<uni°d.h
>

30 
	~"../comm⁄/comm⁄.h
"

31 #ifde‡
RUNNING_IP


32 
	~"../ù/ù.h
"

34 
	~"˛.h
"

35 
	~"∑th«mes.h
"

37 
GS
 *
	g__globÆ_li°
;

38 
sig£t_t
 
	g__sigblock£t
;

40 
˛_func_°d
 
__P
((
GS
 *));

41 
CL_PRIVATE
 *
˛_öô
 
__P
((
GS
 *));

42 
GS
 *
gs_öô
 
__P
((*));

43 
≥º
 
__P
((*, *));

44 
£tsig
 
__P
((, 
siga˘i⁄
 *, (*)()));

45 
sig_íd
 
	`__P
((
GS
 *));

46 
ãrm_öô
 
	`__P
((*, *));

53 
	$maö
(
¨gc
, 
¨gv
)

54 
¨gc
;

55 *
¨gv
[];

57 
ªíãr
;

58 
CL_PRIVATE
 *
˛p
;

59 
GS
 *
gp
;

60 
size_t
 
rows
, 
cﬁs
;

61 
rvÆ
;

62 *
ù_¨g
, **
p_av
, **
t_av
, *
ây≥
;

65 i‡(
ªíãr
++)

66 
	`ab‹t
();

69 
__globÆ_li°
 = 
gp
 = 
	`gs_öô
(
¨gv
[0]);

76 #ifde‡
RUNNING_IP


77 
ù_¨g
 = 
NULL
;

78 
p_av
 = 
t_av
 = 
¨gv
;;) {

79 i‡(*
t_av
 =
NULL
) {

80 *
p_av
 = 
NULL
;

83 i‡(!
	`°rcmp
(*
t_av
, "--")) {

84 (*
p_av
++ = *
t_av
++Ë!
NULL
);

87 i‡(!
	`memcmp
(*
t_av
, "-I", ("-I") - 1)) {

88 i‡(
t_av
[0][2] != '\0') {

89 
ù_¨g
 = 
t_av
[0] + 2;

90 ++
t_av
;

91 --
¨gc
;

94 i‡(
t_av
[1] !
NULL
) {

95 
ù_¨g
 = 
t_av
[1];

96 
t_av
 += 2;

97 
¨gc
 -= 2;

101 *
p_av
++ = *
t_av
++;

108 i‡(
ù_¨g
 !
NULL
)

109 
	`exô
 (
	`ù_maö
(
¨gc
, 
¨gv
, 
gp
, 
ù_¨g
));

111 
ù_¨g
 = 
¨gv
[0];

115 
˛p
 = 
	`˛_öô
(
gp
);

123 i‡((
ây≥
 = 
	`gëív
("TERM")Ë=
NULL
)

124 
ây≥
 = "unknown";

125 
	`ãrm_öô
(
gp
->
¥og«me
, 
ây≥
);

128 i‡((
	`OG_D_STR
(
gp
, 
GO_TERM
) =

129 
	`OG_STR
(
gp
, 
GO_TERM
Ë
	`°rdup
(
ây≥
)Ë=
NULL
)

130 
	`≥º
(
gp
->
¥og«me
, 
NULL
);

133 i‡(
	`˛_ssize
(
NULL
, 0, &
rows
, &
cﬁs
, NULL))

134 
	`exô
 (1);

137 
	`OG_VAL
(
gp
, 
GO_LINES
Ë
	`OG_D_VAL
(gp, GO_LINESË
rows
;

138 
	`OG_VAL
(
gp
, 
GO_COLUMNS
Ë
	`OG_D_VAL
(gp, GO_COLUMNSË
cﬁs
;

141 ()
	`£tvbuf
(
°dout
, 
NULL
, 
_IOFBF
, 0);

144 i‡(
	`sig_öô
(
gp
, 
NULL
))

145 
	`exô
 (1);

148 
rvÆ
 = 
	`edô‹
(
gp
, 
¨gc
, 
¨gv
);

151 
	`sig_íd
(
gp
);

154 ()
	`˛_quô
(
gp
);

160 i‡(
˛p
->
tgw
 !
TGW_UNKNOWN
)

161 ()
	`˛_omesg
(
NULL
, 
˛p
, cÕ->
tgw
 =
TGW_SET
);

167 i‡(
	`F_ISSET
(
˛p
, 
CL_RENAME
)) {

168 ()
	`¥ötf
(
XTERM_RENAME
, 
ây≥
);

169 ()
	`fÊush
(
°dout
);

173 i‡(
˛p
->
kûÀrsig
) {

174 ()
	`sig«l
(
˛p
->
kûÀrsig
, 
SIG_DFL
);

175 ()
	`kûl
(
	`gëpid
(), 
˛p
->
kûÀrsig
);

180 #i‡
	`deföed
(
DEBUG
Ë|| deföed(
PURIFY
Ë|| deföed(
LIBRARY
)

181 
	`‰ì
(
˛p
);

182 
	`‰ì
(
gp
);

185 
	`exô
 (
rvÆ
);

186 
	}
}

192 
GS
 *

193 
	$gs_öô
(
«me
)

194 *
«me
;

196 
CL_PRIVATE
 *
˛p
;

197 
GS
 *
gp
;

198 *
p
;

201 i‡((
p
 = 
	`°ºchr
(
«me
, '/')Ë!
NULL
)

202 
«me
 = 
p
 + 1;

205 
	`CALLOC_NOMSG
(
NULL
, 
gp
, 
GS
 *, 1, (GS));

206 i‡(
gp
 =
NULL
)

207 
	`≥º
(
«me
, 
NULL
);

210 
gp
->
¥og«me
 = 
«me
;

211  (
gp
);

212 
	}
}

218 
CL_PRIVATE
 *

219 
	$˛_öô
(
gp
)

220 
GS
 *
gp
;

222 
CL_PRIVATE
 *
˛p
;

223 
fd
;

226 
	`CALLOC_NOMSG
(
NULL
, 
˛p
, 
CL_PRIVATE
 *, 1, (CL_PRIVATE));

227 i‡(
˛p
 =
NULL
)

228 
	`≥º
(
gp
->
¥og«me
, 
NULL
);

229 
gp
->
˛_¥iv©e
 = 
˛p
;

237 i‡(
	`ißây
(
STDIN_FILENO
))

238 
	`F_SET
(
˛p
, 
CL_STDIN_TTY
);

240 
	`F_SET
(
gp
, 
G_SCRIPTED
);

246 i‡(
	`F_ISSET
(
˛p
, 
CL_STDIN_TTY
)) {

247 i‡(
	`tcgë©å
(
STDIN_FILENO
, &
˛p
->
‹ig
) == -1)

248 
tcÁû
;

249 } i‡((
fd
 = 
	`›í
(
_PATH_TTY
, 
O_RDONLY
, 0)) != -1) {

250 i‡(
	`tcgë©å
(
fd
, &
˛p
->
‹ig
) == -1) {

251 
tcÁû
: 
	`≥º
(
gp
->
¥og«me
, "tcgetattr");

252 
	`exô
 (1);

254 ()
	`˛o£
(
fd
);

258 
	`˛_func_°d
(
gp
);

260  (
˛p
);

261 
	}
}

268 
	$ãrm_öô
(
«me
, 
ây≥
)

269 *
«me
, *
ây≥
;

271 
îr
;

274 
	`£tu±îm
(
ây≥
, 
STDOUT_FILENO
, &
îr
);

275 
îr
) {

277 ()
	`Ârötf
(
°dîr
,

278 "%s: NÿãrmöÆ d©aba£ found\n", 
«me
);

279 
	`exô
 (1);

281 ()
	`Ârötf
(
°dîr
,

282 "%s: %s: unknow¿ãrmöÆÅy≥\n", 
«me
, 
ây≥
);

283 
	`exô
 (1);

285 
	}
}

287 
	#GLOBAL_CLP
 \

288 
CL_PRIVATE
 *
˛p
 = 
	`GCLP
(
__globÆ_li°
);

	)

290 
	$h_hup
(
signo
)

291 
signo
;

293 
GLOBAL_CLP
;

295 
	`F_SET
(
˛p
, 
CL_SIGHUP
);

296 
˛p
->
kûÀrsig
 = 
SIGHUP
;

297 
	}
}

300 
	$h_öt
(
signo
)

301 
signo
;

303 
GLOBAL_CLP
;

305 
	`F_SET
(
˛p
, 
CL_SIGINT
);

306 
	}
}

309 
	$h_ãrm
(
signo
)

310 
signo
;

312 
GLOBAL_CLP
;

314 
	`F_SET
(
˛p
, 
CL_SIGTERM
);

315 
˛p
->
kûÀrsig
 = 
SIGTERM
;

316 
	}
}

319 
	$h_wöch
(
signo
)

320 
signo
;

322 
GLOBAL_CLP
;

324 
	`F_SET
(
˛p
, 
CL_SIGWINCH
);

325 
	}
}

326 #unde‡
GLOBAL_CLP


335 
	$sig_öô
(
gp
, 
•
)

336 
GS
 *
gp
;

337 
SCR
 *
•
;

339 
CL_PRIVATE
 *
˛p
;

341 
˛p
 = 
	`GCLP
(
gp
);

343 i‡(
•
 =
NULL
) {

344 ()
	`sigem±y£t
(&
__sigblock£t
);

345 i‡(
	`sigadd£t
(&
__sigblock£t
, 
SIGHUP
) ||

346 
	`£tsig
(
SIGHUP
, &
˛p
->
ﬂ˘
[
INDX_HUP
], 
h_hup
) ||

347 
	`sigadd£t
(&
__sigblock£t
, 
SIGINT
) ||

348 
	`£tsig
(
SIGINT
, &
˛p
->
ﬂ˘
[
INDX_INT
], 
h_öt
) ||

349 
	`sigadd£t
(&
__sigblock£t
, 
SIGTERM
) ||

350 
	`£tsig
(
SIGTERM
, &
˛p
->
ﬂ˘
[
INDX_TERM
], 
h_ãrm
)

351 #ifde‡
SIGWINCH


353 
	`sigadd£t
(&
__sigblock£t
, 
SIGWINCH
) ||

354 
	`£tsig
(
SIGWINCH
, &
˛p
->
ﬂ˘
[
INDX_WINCH
], 
h_wöch
)

357 
	`≥º
(
gp
->
¥og«me
, 
NULL
);

361 i‡(
	`£tsig
(
SIGHUP
, 
NULL
, 
h_hup
) ||

362 
	`£tsig
(
SIGINT
, 
NULL
, 
h_öt
) ||

363 
	`£tsig
(
SIGTERM
, 
NULL
, 
h_ãrm
)

364 #ifde‡
SIGWINCH


366 
	`£tsig
(
SIGWINCH
, 
NULL
, 
h_wöch
)

369 
	`msgq
(
•
, 
M_SYSERR
, "signal-reset");

372 
	}
}

379 
	$£tsig
(
signo
, 
ﬂ˘p
, 
h™dÀr
)

380 
signo
;

381 
siga˘i⁄
 *
ﬂ˘p
;

382 (*
h™dÀr
Ë
	`__P
(());

384 
siga˘i⁄
 
a˘
;

397 
a˘
.
ß_h™dÀr
 = 
h™dÀr
;

398 
	`sigem±y£t
(&
a˘
.
ß_mask
);

400 #ifde‡
SA_INTERRUPT


401 
a˘
.
ß_Êags
 = 
SA_INTERRUPT
;

403 
a˘
.
ß_Êags
 = 0;

405  (
	`siga˘i⁄
(
signo
, &
a˘
, 
ﬂ˘p
));

406 
	}
}

413 
	$sig_íd
(
gp
)

414 
GS
 *
gp
;

416 
CL_PRIVATE
 *
˛p
;

418 
˛p
 = 
	`GCLP
(
gp
);

419 ()
	`siga˘i⁄
(
SIGHUP
, 
NULL
, &
˛p
->
ﬂ˘
[
INDX_HUP
]);

420 ()
	`siga˘i⁄
(
SIGINT
, 
NULL
, &
˛p
->
ﬂ˘
[
INDX_INT
]);

421 ()
	`siga˘i⁄
(
SIGTERM
, 
NULL
, &
˛p
->
ﬂ˘
[
INDX_TERM
]);

422 #ifde‡
SIGWINCH


423 ()
	`siga˘i⁄
(
SIGWINCH
, 
NULL
, &
˛p
->
ﬂ˘
[
INDX_WINCH
]);

425 
	}
}

432 
	$˛_func_°d
(
gp
)

433 
GS
 *
gp
;

435 
gp
->
s¸_add°r
 = 
˛_add°r
;

436 
gp
->
s¸_©å
 = 
˛_©å
;

437 
gp
->
s¸_baud
 = 
˛_baud
;

438 
gp
->
s¸_bñl
 = 
˛_bñl
;

439 
gp
->
s¸_busy
 = 
NULL
;

440 
gp
->
s¸_˛π€ﬁ
 = 
˛_˛π€ﬁ
;

441 
gp
->
s¸_curs‹
 = 
˛_curs‹
;

442 
gp
->
s¸_dñëñn
 = 
˛_dñëñn
;

443 
gp
->
s¸_evít
 = 
˛_evít
;

444 
gp
->
s¸_ex_adju°
 = 
˛_ex_adju°
;

445 
gp
->
s¸_fm≠
 = 
˛_fm≠
;

446 
gp
->
s¸_ö£π 
 = 
˛_ö£π 
;

447 
gp
->
s¸_keyvÆ
 = 
˛_keyvÆ
;

448 
gp
->
s¸_move
 = 
˛_move
;

449 
gp
->
s¸_msg
 = 
NULL
;

450 
gp
->
s¸_›tch™ge
 = 
˛_›tch™ge
;

451 
gp
->
s¸_ª‰esh
 = 
˛_ª‰esh
;

452 
gp
->
s¸_ª«me
 = 
˛_ª«me
;

453 
gp
->
s¸_s¸ìn
 = 
˛_s¸ìn
;

454 
gp
->
s¸_su•íd
 = 
˛_su•íd
;

455 
gp
->
s¸_ußge
 = 
˛_ußge
;

456 
	}
}

463 
	$≥º
(
«me
, 
msg
)

464 *
«me
, *
msg
;

466 ()
	`Ârötf
(
°dîr
, "%s:", 
«me
);

467 i‡(
msg
 !
NULL
)

468 ()
	`Ârötf
(
°dîr
, "%s:", 
msg
);

469 ()
	`Ârötf
(
°dîr
, "%s\n", 
	`°ªº‹
(
î∫o
));

470 
	`exô
(1);

471 
	}
}

	@cl/cl_read.c

10 
	~"c⁄fig.h
"

12 #i‚de‡
löt


13 c⁄° 
	gsccsid
[] = "@(#)cl_read.c 10.15 (Berkeley) 9/24/96";

16 
	~<sys/ty≥s.h
>

17 
	~<sys/queue.h
>

18 #ifde‡
HAVE_SYS_SELECT_H


19 
	~<sys/£À˘.h
>

21 
	~<sys/time.h
>

23 
	~<bô°rög.h
>

24 
	~<cur£s.h
>

25 
	~<î∫o.h
>

26 
	~<f˙é.h
>

27 
	~<sig«l.h
>

28 
	~<°dio.h
>

29 
	~<°dlib.h
>

30 
	~<°rög.h
>

31 
	~<ãrmios.h
>

32 
	~<uni°d.h
>

34 
	~"../comm⁄/comm⁄.h
"

35 
	~"../ex/s¸ùt.h
"

36 
	~"˛.h
"

38 
öput_t
 
˛_ªad
 
__P
((
SCR
 *,

39 
u_öt32_t
, 
CHAR_T
 *, 
size_t
, *, 
timevÆ
 *));

40 
˛_ªsize
 
__P
((
SCR
 *, 
size_t
, size_t));

49 
	$˛_evít
(
•
, 
evp
, 
Êags
, 
ms
)

50 
SCR
 *
•
;

51 
EVENT
 *
evp
;

52 
u_öt32_t
 
Êags
;

53 
ms
;

55 
timevÆ
 
t
, *
ç
;

56 
CL_PRIVATE
 *
˛p
;

57 
size_t
 
löes
, 
cﬁumns
;

58 
ch™ged
, 
ƒ
;

64 
˛p
 = 
	`CLP
(
•
);

65 
ªã°
: i‡(
	`LF_ISSET
(
EC_INTERRUPT
Ë|| 
	`F_ISSET
(
˛p
, 
CL_SIGINT
)) {

66 i‡(
	`F_ISSET
(
˛p
, 
CL_SIGINT
)) {

67 
	`F_CLR
(
˛p
, 
CL_SIGINT
);

68 
evp
->
e_evít
 = 
E_INTERRUPT
;

70 
evp
->
e_evít
 = 
E_TIMEOUT
;

73 i‡(
	`F_ISSET
(
˛p
, 
CL_SIGHUP
 | 
CL_SIGTERM
 | 
CL_SIGWINCH
)) {

74 i‡(
	`F_ISSET
(
˛p
, 
CL_SIGHUP
)) {

75 
evp
->
e_evít
 = 
E_SIGHUP
;

78 i‡(
	`F_ISSET
(
˛p
, 
CL_SIGTERM
)) {

79 
evp
->
e_evít
 = 
E_SIGTERM
;

82 i‡(
	`F_ISSET
(
˛p
, 
CL_SIGWINCH
)) {

83 
	`F_CLR
(
˛p
, 
CL_SIGWINCH
);

84 i‡(
	`˛_ssize
(
•
, 1, &
löes
, &
cﬁumns
, &
ch™ged
))

86 i‡(
ch™ged
) {

87 ()
	`˛_ªsize
(
•
, 
löes
, 
cﬁumns
);

88 
evp
->
e_evít
 = 
E_WRESIZE
;

96 i‡(
ms
 == 0)

97 
ç
 = 
NULL
;

99 
t
.
tv_£c
 = 
ms
 / 1000;

100 
t
.
tv_u£c
 = (
ms
 % 1000) * 1000;

101 
ç
 = &
t
;

105 
	`˛_ªad
(
•
, 
	`LF_ISSET
(
EC_QUOTED
 | 
EC_RAW
),

106 
˛p
->
ibuf
, (˛p->ibuf), &
ƒ
, 
ç
)) {

107 
INP_OK
:

108 
evp
->
e_c•
 = 
˛p
->
ibuf
;

109 
evp
->
e_Àn
 = 
ƒ
;

110 
evp
->
e_evít
 = 
E_STRING
;

112 
INP_EOF
:

113 
evp
->
e_evít
 = 
E_EOF
;

115 
INP_ERR
:

116 
evp
->
e_evít
 = 
E_ERR
;

118 
INP_INTR
:

119 
ªã°
;

120 
INP_TIMEOUT
:

121 
evp
->
e_evít
 = 
E_TIMEOUT
;

124 
	`ab‹t
();

127 
	}
}

133 
öput_t


134 
	$˛_ªad
(
•
, 
Êags
, 
bp
, 
bÀn
, 
ƒp
, 
ç
)

135 
SCR
 *
•
;

136 
u_öt32_t
 
Êags
;

137 
CHAR_T
 *
bp
;

138 
size_t
 
bÀn
;

139 *
ƒp
;

140 
timevÆ
 *
ç
;

142 
ãrmios
 
ãrm1
, 
ãrm2
;

143 
timevÆ
 
pﬁl
;

144 
CL_PRIVATE
 *
˛p
;

145 
GS
 *
gp
;

146 
SCR
 *
t•
;

147 
fd_£t
 
rdfd
;

148 
öput_t
 
rvÆ
;

149 
maxfd
, 
ƒ
, 
ãrm_ª£t
;

151 
gp
 = 
•
->gp;

152 
˛p
 = 
	`CLP
(
•
);

153 
ãrm_ª£t
 = 0;

161 i‡(!
	`F_ISSET
(
˛p
, 
CL_STDIN_TTY
)) {

162 
ƒ
 = 
	`ªad
(
STDIN_FILENO
, 
bp
, 
bÀn
)) {

164  (
INP_EOF
);

166 
îr
;

168 *
ƒp
 = 
ƒ
;

169  (
INP_OK
);

178 
	`FD_ZERO
(&
rdfd
);

179 
pﬁl
.
tv_£c
 = 0;

180 
pﬁl
.
tv_u£c
 = 0;

181 i‡(
ç
 !
NULL
) {

182 
	`FD_SET
(
STDIN_FILENO
, &
rdfd
);

183 
	`£À˘
(
STDIN_FILENO
 + 1,

184 &
rdfd
, 
NULL
, NULL, 
ç
 =NULL ? &
pﬁl
 :Åp)) {

186  (
INP_TIMEOUT
);

188 
îr
;

204 i‡(
	`LF_ISSET
(
EC_QUOTED
 | 
EC_RAW
Ë&& !
	`tcgë©å
(
STDIN_FILENO
, &
ãrm1
)) {

205 
ãrm_ª£t
 = 1;

206 i‡(
	`LF_ISSET
(
EC_QUOTED
)) {

207 
ãrm2
 = 
ãrm1
;

208 
ãrm2
.
c_lÊag
 &~
ISIG
;

209 
ãrm2
.
c_iÊag
 &~(
IXON
 | 
IXOFF
);

210 ()
	`tc£èâr
(
STDIN_FILENO
,

211 
TCSASOFT
 | 
TCSADRAIN
, &
ãrm2
);

213 ()
	`tc£èâr
(
STDIN_FILENO
,

214 
TCSASOFT
 | 
TCSADRAIN
, &
˛p
->
vi_íãr
);

224 i‡(
	`F_ISSET
(
gp
, 
G_SCRWIN
)) {

225 
lo›
: 
	`FD_ZERO
(&
rdfd
);

226 
	`FD_SET
(
STDIN_FILENO
, &
rdfd
);

227 
maxfd
 = 
STDIN_FILENO
;

228 
t•
 = 
gp
->
dq
.
cqh_fú°
;

229 
t•
 !(*)&
gp
->
dq
;Å• =Å•->
q
.
cqe_√xt
)

230 i‡(
	`F_ISSET
(
•
, 
SC_SCRIPT
)) {

231 
	`FD_SET
(
•
->
s¸ùt
->
sh_ma°î
, &
rdfd
);

232 i‡(
•
->
s¸ùt
->
sh_ma°î
 > 
maxfd
)

233 
maxfd
 = 
•
->
s¸ùt
->
sh_ma°î
;

235 
	`£À˘
(
maxfd
 + 1, &
rdfd
, 
NULL
, NULL, NULL)) {

237 
	`ab‹t
();

239 
îr
;

243 i‡(!
	`FD_ISSET
(
STDIN_FILENO
, &
rdfd
)) {

244 i‡(
	`ss¸_öput
(
•
))

245  (
INP_ERR
);

246 
lo›
;

265 
	#ONE_FOR_EOF
 1

	)

266 
ƒ
 = 
	`ªad
(
STDIN_FILENO
, 
bp
, 
bÀn
 - 
ONE_FOR_EOF
)) {

276 i‡(++
˛p
->
eof_cou¡
 < 50) {

277 
bp
[0] = 
˛p
->
‹ig
.
c_cc
[
VEOF
];

278 *
ƒp
 = 1;

279 
rvÆ
 = 
INP_OK
;

282 
rvÆ
 = 
INP_EOF
;

285 
îr
: i‡(
î∫o
 =
EINTR
)

286 
rvÆ
 = 
INP_INTR
;

288 
rvÆ
 = 
INP_ERR
;

289 
	`msgq
(
•
, 
M_SYSERR
, "input");

293 i‡(
	`F_ISSET
(
•
, 
SC_EX
Ë&& 
bp
[
ƒ
 - 1] != '\n')

294 
bp
[
ƒ
++] = 
˛p
->
‹ig
.
c_cc
[
VEOF
];

295 *
ƒp
 = 
ƒ
;

296 
˛p
->
eof_cou¡
 = 0;

297 
rvÆ
 = 
INP_OK
;

302 i‡(
ãrm_ª£t
)

303 ()
	`tc£èâr
(
STDIN_FILENO
, 
TCSASOFT
 | 
TCSADRAIN
, &
ãrm1
);

304  (
rvÆ
);

305 
	}
}

312 
	$˛_ªsize
(
•
, 
löes
, 
cﬁumns
)

313 
SCR
 *
•
;

314 
size_t
 
löes
, 
cﬁumns
;

316 
ARGS
 *
¨gv
[2], 
a
, 
b
;

317 
b1
[1024];

319 
a
.
bp
 = 
b1
;

320 
b
.
bp
 = 
NULL
;

321 
a
.
Àn
 = 
b
.len = 0;

322 
¨gv
[0] = &
a
;

323 
¨gv
[1] = &
b
;

325 ()
	`¢¥ötf
(
b1
, (b1), "löes=%lu", (
u_l⁄g
)
löes
);

326 
a
.
Àn
 = 
	`°æí
(
b1
);

327 i‡(
	`›ts_£t
(
•
, 
¨gv
, 
NULL
))

329 ()
	`¢¥ötf
(
b1
, (b1), "cﬁumns=%lu", (
u_l⁄g
)
cﬁumns
);

330 
a
.
Àn
 = 
	`°æí
(
b1
);

331 i‡(
	`›ts_£t
(
•
, 
¨gv
, 
NULL
))

334 
	}
}

	@cl/cl_screen.c

10 
	~"c⁄fig.h
"

12 #i‚de‡
löt


13 c⁄° 
	gsccsid
[] = "@(#)cl_screen.c 10.49 (Berkeley) 9/24/96";

16 
	~<sys/ty≥s.h
>

17 
	~<sys/queue.h
>

19 
	~<bô°rög.h
>

20 
	~<cur£s.h
>

21 
	~<î∫o.h
>

22 
	~<sig«l.h
>

23 
	~<°dio.h
>

24 
	~<°dlib.h
>

25 
	~<°rög.h
>

26 
	~<ãrmios.h
>

27 
	~<uni°d.h
>

29 
	~"../comm⁄/comm⁄.h
"

30 
	~"˛.h
"

32 
˛_ex_íd
 
__P
((
GS
 *));

33 
˛_ex_öô
 
__P
((
SCR
 *));

34 
˛_‰ìˇp
 
__P
((
CL_PRIVATE
 *));

35 
˛_vi_íd
 
__P
((
GS
 *));

36 
˛_vi_öô
 
__P
((
SCR
 *));

37 
˛_puãnv
 
__P
((*, *, 
u_l⁄g
));

46 
	$˛_s¸ìn
(
•
, 
Êags
)

47 
SCR
 *
•
;

48 
u_öt32_t
 
Êags
;

50 
CL_PRIVATE
 *
˛p
;

51 
GS
 *
gp
;

53 
gp
 = 
•
->gp;

54 
˛p
 = 
	`CLP
(
•
);

57 i‡(
	`F_ISSET
(
gp
, 
G_SRESTART
)) {

58 i‡(
	`˛_quô
(
gp
))

60 
	`F_CLR
(
gp
, 
G_SRESTART
);

64 i‡(
	`LF_ISSET
(
SC_EX
Ë&& 
	`F_ISSET
(
•
, 
SC_SCR_EX
) ||

65 
	`LF_ISSET
(
SC_VI
Ë&& 
	`F_ISSET
(
•
, 
SC_SCR_VI
))

77 i‡(
	`F_ISSET
(
•
, 
SC_SCR_EX
))

78 
	`F_CLR
(
•
, 
SC_SCR_EX
);

90 i‡(
	`F_ISSET
(
•
, 
SC_SCR_VI
)) {

91 
	`F_CLR
(
•
, 
SC_SCR_VI
);

93 i‡(
•
->
q
.
cqe_√xt
 !(*)&
gp
->
dq
) {

94 ()
	`move
(
	`RLNO
(
•
, sp->
rows
), 0);

95 
	`˛πobŸ
();

97 ()
	`move
(
	`RLNO
(
•
, sp->
rows
) - 1, 0);

98 
	`ª‰esh
();

102 i‡(
	`LF_ISSET
(
SC_EX
)) {

103 i‡(
	`˛_ex_öô
(
•
))

105 
	`F_SET
(
˛p
, 
CL_IN_EX
 | 
CL_SCR_EX_INIT
);

111 i‡(
	`F_ISSET
(
•
, 
SC_EX
Ë&& 
˛p
->
cup
 !
NULL
)

112 
	`çuts
(
	`tgŸo
(
˛p
->
cup
,

113 0, 
	`O_VAL
(
•
, 
O_LINES
Ë- 1), 1, 
˛_putch¨
);

115 i‡(
	`˛_vi_öô
(
•
))

117 
	`F_CLR
(
˛p
, 
CL_IN_EX
);

118 
	`F_SET
(
˛p
, 
CL_SCR_VI_INIT
);

121 
	}
}

130 
	$˛_quô
(
gp
)

131 
GS
 *
gp
;

133 
CL_PRIVATE
 *
˛p
;

134 
rvÆ
;

136 
rvÆ
 = 0;

137 
˛p
 = 
	`GCLP
(
gp
);

143 i‡(!
	`F_ISSET
(
˛p
, 
CL_SCR_EX_INIT
 | 
CL_SCR_VI_INIT
))

147 i‡(
	`˛_ãrm_íd
(
gp
))

148 
rvÆ
 = 1;

151 i‡(
	`F_ISSET
(
˛p
, 
CL_STDIN_TTY
) &&

152 
	`F_ISSET
(
˛p
, 
CL_SCR_VI_INIT
Ë&& 
	`˛_vi_íd
(
gp
))

153 
rvÆ
 = 1;

156 i‡(
	`F_ISSET
(
˛p
, 
CL_STDIN_TTY
) &&

157 
	`F_ISSET
(
˛p
, 
CL_SCR_EX_INIT
Ë&& 
	`˛_ex_íd
(
gp
))

158 
rvÆ
 = 1;

170 ()
	`tc£èâr
(
STDIN_FILENO
, 
TCSADRAIN
 | 
TCSASOFT
, &
˛p
->
‹ig
);

172 
	`F_CLR
(
˛p
, 
CL_SCR_EX_INIT
 | 
CL_SCR_VI_INIT
);

173  (
rvÆ
);

174 
	}
}

181 
	$˛_vi_öô
(
•
)

182 
SCR
 *
•
;

184 
CL_PRIVATE
 *
˛p
;

185 
GS
 *
gp
;

186 *
o_cﬁs
, *
o_löes
, *
o_ãrm
, *
ây≥
;

188 
gp
 = 
•
->gp;

189 
˛p
 = 
	`CLP
(
•
);

192 i‡(
	`F_ISSET
(
˛p
, 
CL_SCR_VI_INIT
))

193 
Á°
;

196 i‡(!
	`F_ISSET
(
˛p
, 
CL_STDIN_TTY
Ë|| !
	`ißây
(
STDOUT_FILENO
)) {

197 
	`msgq
(
•
, 
M_ERR
,

203 i‡(
	`›ts_em±y
(
•
, 
O_TERM
, 0))

205 
ây≥
 = 
	`O_STR
(
•
, 
O_TERM
);

224 
o_ãrm
 = 
	`gëív
("TERM");

225 
	`˛_puãnv
("TERM", 
ây≥
, 0);

226 
o_löes
 = 
	`gëív
("LINES");

227 
	`˛_puãnv
("LINES", 
NULL
, (
u_l⁄g
)
	`O_VAL
(
•
, 
O_LINES
));

228 
o_cﬁs
 = 
	`gëív
("COLUMNS");

229 
	`˛_puãnv
("COLUMNS", 
NULL
, (
u_l⁄g
)
	`O_VAL
(
•
, 
O_COLUMNS
));

245 
î∫o
 = 0;

246 i‡(
	`√wãrm
(
ây≥
, 
°dout
, 
°dö
Ë=
NULL
) {

247 i‡(
î∫o
)

248 
	`msgq
(
•
, 
M_SYSERR
, "%s", 
ây≥
);

250 
	`msgq
(
•
, 
M_ERR
, "%s: unknow¿ãrmöÆÅy≥", 
ây≥
);

254 i‡(
o_ãrm
 =
NULL
)

255 
	`un£ãnv
("TERM");

256 i‡(
o_löes
 =
NULL
)

257 
	`un£ãnv
("LINES");

258 i‡(
o_cﬁs
 =
NULL
)

259 
	`un£ãnv
("COLUMNS");

267 ()
	`sig_öô
(
•
->
gp
, sp);

279 
	`n€cho
();

280 
	`n⁄l
();

281 
	`øw
();

282 
	`idlok
(
°ds¸
, 1);

285 ()
	`key∑d
(
°ds¸
, 
TRUE
);

292 
˛p
->
ti_ã
 = 
TI_SENT
;

310 ()
	`sig«l
(
SIGTSTP
, 
SIG_DFL
);

333 i‡(
	`tcgë©å
(
STDIN_FILENO
, &
˛p
->
vi_íãr
)) {

334 
	`msgq
(
•
, 
M_SYSERR
, "tcgetattr");

335 
îr
;

337 i‡(
˛p
->
‹ig
.
c_iÊag
 & 
IXON
)

338 
˛p
->
vi_íãr
.
c_iÊag
 |
IXON
;

339 i‡(
˛p
->
‹ig
.
c_iÊag
 & 
IXOFF
)

340 
˛p
->
vi_íãr
.
c_iÊag
 |
IXOFF
;

342 
˛p
->
vi_íãr
.
c_lÊag
 |
ISIG
;

343 #ifde‡
VDSUSP


344 
˛p
->
vi_íãr
.
c_cc
[
VDSUSP
] = 
_POSIX_VDISABLE
;

346 
˛p
->
vi_íãr
.
c_cc
[
VQUIT
] = 
_POSIX_VDISABLE
;

347 
˛p
->
vi_íãr
.
c_cc
[
VSUSP
] = 
_POSIX_VDISABLE
;

355 #ifde‡
VDISCARD


356 
˛p
->
vi_íãr
.
c_cc
[
VDISCARD
] = 
_POSIX_VDISABLE
;

358 #ifde‡
VLNEXT


359 
˛p
->
vi_íãr
.
c_cc
[
VLNEXT
] = 
_POSIX_VDISABLE
;

361 #ifde‡
VSTATUS


362 
˛p
->
vi_íãr
.
c_cc
[
VSTATUS
] = 
_POSIX_VDISABLE
;

366 i‡(
	`˛_ãrm_öô
(
•
))

367 
îr
;

369 
Á°
:

370 i‡(
	`tc£èâr
(
STDIN_FILENO
, 
TCSASOFT
 | 
TCSADRAIN
, &
˛p
->
vi_íãr
)) {

371 
	`msgq
(
•
, 
M_SYSERR
, "tcsetattr");

372 
îr
: ()
	`˛_vi_íd
(
•
->
gp
);

376 
	}
}

383 
	$˛_vi_íd
(
gp
)

384 
GS
 *
gp
;

386 
CL_PRIVATE
 *
˛p
;

388 
˛p
 = 
	`GCLP
(
gp
);

391 ()
	`key∑d
(
°ds¸
, 
FALSE
);

400 i‡(!
	`F_ISSET
(
˛p
, 
CL_IN_EX
)) {

401 ()
	`move
(0, 0);

402 ()
	`dñëñn
();

403 ()
	`move
(
LINES
 - 1, 0);

404 ()
	`ª‰esh
();

407 
	`˛_‰ìˇp
(
˛p
);

410 ()
	`ídwö
();

417 
˛p
->
ti_ã
 = 
TE_SENT
;

420 
	}
}

427 
	$˛_ex_öô
(
•
)

428 
SCR
 *
•
;

430 
CL_PRIVATE
 *
˛p
;

432 
˛p
 = 
	`CLP
(
•
);

435 i‡(
	`F_ISSET
(
˛p
, 
CL_SCR_EX_INIT
))

436 
Á°
;

439 i‡(!
	`F_ISSET
(
˛p
, 
CL_STDIN_TTY
))

443 ()
	`˛_gëˇp
(
•
, "cup", &
˛p
->
cup
);

444 ()
	`˛_gëˇp
(
•
, "smso", &
˛p
->
smso
);

445 ()
	`˛_gëˇp
(
•
, "rmso", &
˛p
->
rmso
);

446 ()
	`˛_gëˇp
(
•
, "ñ", &
˛p
->
ñ
);

447 ()
	`˛_gëˇp
(
•
, "cuu1", &
˛p
->
cuu1
);

450 i‡(
˛p
->
smso
 =
NULL
 || cÕ->
rmso
 == NULL) {

451 i‡(
˛p
->
smso
 !
NULL
) {

452 
	`‰ì
(
˛p
->
smso
);

453 
˛p
->
smso
 = 
NULL
;

455 i‡(
˛p
->
rmso
 !
NULL
) {

456 
	`‰ì
(
˛p
->
rmso
);

457 
˛p
->
rmso
 = 
NULL
;

474 
˛p
->
ex_íãr
 = cÕ->
‹ig
;

475 
˛p
->
ex_íãr
.
c_lÊag
 |
ECHO
 | 
ECHOE
 | 
ECHOK
 | 
ICANON
 | 
IEXTEN
 | 
ISIG
;

476 #ifde‡
ECHOCTL


477 
˛p
->
ex_íãr
.
c_lÊag
 |
ECHOCTL
;

479 #ifde‡
ECHOKE


480 
˛p
->
ex_íãr
.
c_lÊag
 |
ECHOKE
;

482 
˛p
->
ex_íãr
.
c_iÊag
 |
ICRNL
;

483 
˛p
->
ex_íãr
.
c_oÊag
 |
OPOST
;

484 #ifde‡
ONLCR


485 
˛p
->
ex_íãr
.
c_oÊag
 |
ONLCR
;

488 
Á°
: i‡(
	`tc£èâr
(
STDIN_FILENO
, 
TCSADRAIN
 | 
TCSASOFT
, &
˛p
->
ex_íãr
)) {

489 
	`msgq
(
•
, 
M_SYSERR
, "tcsetattr");

493 
	}
}

500 
	$˛_ex_íd
(
gp
)

501 
GS
 *
gp
;

503 
CL_PRIVATE
 *
˛p
;

505 
˛p
 = 
	`GCLP
(
gp
);

507 
	`˛_‰ìˇp
(
˛p
);

510 
	}
}

519 
	$˛_gëˇp
(
•
, 
«me
, 
ñemíç
)

520 
SCR
 *
•
;

521 *
«me
, **
ñemíç
;

523 
size_t
 
Àn
;

524 *
t
;

526 i‡((
t
 = 
	`tigë°r
(
«me
)Ë!
NULL
 &&

527 
t
 !(*)-1 && (
Àn
 = 
	`°æí
(t)) != 0) {

528 
	`MALLOC_RET
(
•
, *
ñemíç
, *, 
Àn
 + 1);

529 
	`memmove
(*
ñemíç
, 
t
, 
Àn
 + 1);

532 
	}
}

539 
	$˛_‰ìˇp
(
˛p
)

540 
CL_PRIVATE
 *
˛p
;

542 i‡(
˛p
->
ñ
 !
NULL
) {

543 
	`‰ì
(
˛p
->
ñ
);

544 
˛p
->
ñ
 = 
NULL
;

546 i‡(
˛p
->
cup
 !
NULL
) {

547 
	`‰ì
(
˛p
->
cup
);

548 
˛p
->
cup
 = 
NULL
;

550 i‡(
˛p
->
cuu1
 !
NULL
) {

551 
	`‰ì
(
˛p
->
cuu1
);

552 
˛p
->
cuu1
 = 
NULL
;

554 i‡(
˛p
->
rmso
 !
NULL
) {

555 
	`‰ì
(
˛p
->
rmso
);

556 
˛p
->
rmso
 = 
NULL
;

558 i‡(
˛p
->
smso
 !
NULL
) {

559 
	`‰ì
(
˛p
->
smso
);

560 
˛p
->
smso
 = 
NULL
;

562 
	}
}

569 
	$˛_puãnv
(
«me
, 
°r
, 
vÆue
)

570 *
«me
, *
°r
;

571 
u_l⁄g
 
vÆue
;

574 
buf
[40];

576 i‡(
°r
 =
NULL
) {

577 ()
	`¢¥ötf
(
buf
, (buf), "%lu", 
vÆue
);

578  (
	`£ãnv
(
«me
, 
buf
, 1));

580  (
	`£ãnv
(
«me
, 
°r
, 1));

581 
	}
}

	@cl/cl_term.c

10 
	~"c⁄fig.h
"

12 #i‚de‡
löt


13 c⁄° 
	gsccsid
[] = "@(#)cl_term.c 10.22 (Berkeley) 9/15/96";

16 
	~<sys/ty≥s.h
>

17 
	~<sys/io˘l.h
>

18 
	~<sys/queue.h
>

19 
	~<sys/°©.h
>

21 
	~<bô°rög.h
>

22 
	~<cur£s.h
>

23 
	~<î∫o.h
>

24 
	~<limôs.h
>

25 
	~<sig«l.h
>

26 
	~<°dio.h
>

27 
	~<°dlib.h
>

28 
	~<°rög.h
>

29 
	~<ãrmios.h
>

30 
	~<uni°d.h
>

32 
	~"../comm⁄/comm⁄.h
"

33 
	~"˛.h
"

35 
˛_pfm≠
 
__P
((
SCR
 *, 
£q_t
, 
CHAR_T
 *, 
size_t
, CHAR_T *, size_t));

41 
	s_tkli°
 {

42 *
	mts
;

43 *
	mouçut
;

44 *
	m«me
;

45 
u_ch¨
 
	mvÆue
;

46 } 
	tTKLIST
;

47 
TKLIST
 c⁄° 
	gc_tkli°
[] = {

64 {
NULL
},

66 
TKLIST
 c⁄° 
	gm1_tkli°
[] = {

67 {
NULL
},

69 
TKLIST
 c⁄° 
	gm2_tkli°
[] = {

74 {
NULL
},

84 
	$˛_ãrm_öô
(
•
)

85 
SCR
 *
•
;

87 
KEYLIST
 *
kp
;

88 
SEQ
 *
qp
;

89 
TKLIST
 c⁄° *
tkp
;

90 *
t
;

93 
tkp
 = 
c_tkli°
;Åkp->
«me
 !
NULL
; ++tkp) {

94 i‡((
t
 = 
	`tigë°r
(
tkp
->
ts
)Ë=
NULL
 ||Å == (*)-1)

96 i‡(
	`£q_£t
(
•
, 
tkp
->
«me
, 
	`°æí
—kp->«me), 
t
, strlen(t),

97 
tkp
->
ouçut
, 
	`°æí
—kp->ouçut), 
SEQ_COMMAND
,

98 
SEQ_NOOVERWRITE
 | 
SEQ_SCREEN
))

103 
tkp
 = 
m1_tkli°
;Åkp->
«me
 !
NULL
; ++tkp) {

104 i‡((
t
 = 
	`tigë°r
(
tkp
->
ts
)Ë=
NULL
 ||Å == (*)-1)

106 
kp
 = 
keyli°
;; ++kp)

107 i‡(
kp
->
vÆue
 =
tkp
->value)

109 i‡(
kp
 =
NULL
)

111 i‡(
	`£q_£t
(
•
, 
tkp
->
«me
, 
	`°æí
—kp->«me), 
t
, strlen(t),

112 &
kp
->
ch
, 1, 
SEQ_INPUT
, 
SEQ_NOOVERWRITE
 | 
SEQ_SCREEN
))

117 
tkp
 = 
m2_tkli°
;Åkp->
«me
 !
NULL
; ++tkp) {

118 i‡((
t
 = 
	`tigë°r
(
tkp
->
ts
)Ë=
NULL
 ||Å == (*)-1)

127 i‡(!
	`°rcmp
(
t
, "\b"))

129 i‡(
tkp
->
ouçut
 =
NULL
) {

130 i‡(
	`£q_£t
(
•
, 
tkp
->
«me
, 
	`°æí
(tkp->name),

131 
t
, 
	`°æí
—), 
NULL
, 0,

132 
SEQ_INPUT
, 
SEQ_NOOVERWRITE
 | 
SEQ_SCREEN
))

135 i‡(
	`£q_£t
(
•
, 
tkp
->
«me
, 
	`°æí
(tkp->name),

136 
t
, 
	`°æí
—), 
tkp
->
ouçut
, strlen(tkp->output),

137 
SEQ_INPUT
, 
SEQ_NOOVERWRITE
 | 
SEQ_SCREEN
))

145 
qp
 = 
•
->
gp
->
£qq
.
lh_fú°
; q∞!
NULL
; q∞qp->
q
.
À_√xt
)

146 i‡(
	`F_ISSET
(
qp
, 
SEQ_FUNCMAP
))

147 ()
	`˛_pfm≠
(
•
, 
qp
->
°y≥
,

148 
qp
->
öput
, qp->
ûí
, qp->
ouçut
, qp->
ﬁí
);

150 
	}
}

159 
	$˛_ãrm_íd
(
gp
)

160 
GS
 *
gp
;

162 
SEQ
 *
qp
, *
nqp
;

165 
qp
 = 
gp
->
£qq
.
lh_fú°
; q∞!
NULL
; q∞
nqp
) {

166 
nqp
 = 
qp
->
q
.
À_√xt
;

167 i‡(
	`F_ISSET
(
qp
, 
SEQ_SCREEN
))

168 ()
	`£q_mdñ
(
qp
);

171 
	}
}

180 
	$˛_fm≠
(
•
, 
°y≥
, 
‰om
, 
Êí
, 
to
, 
éí
)

181 
SCR
 *
•
;

182 
£q_t
 
°y≥
;

183 
CHAR_T
 *
‰om
, *
to
;

184 
size_t
 
Êí
, 
éí
;

187 i‡(
	`F_ISSET
(
•
, 
SC_VI
Ë&& !F_ISSET(•, 
SC_SCR_VI
))

189 i‡(
	`F_ISSET
(
•
, 
SC_EX
Ë&& !F_ISSET(•, 
SC_SCR_EX
))

192  (
	`˛_pfm≠
(
•
, 
°y≥
, 
‰om
, 
Êí
, 
to
, 
éí
));

193 
	}
}

200 
	$˛_pfm≠
(
•
, 
°y≥
, 
‰om
, 
Êí
, 
to
, 
éí
)

201 
SCR
 *
•
;

202 
£q_t
 
°y≥
;

203 
CHAR_T
 *
‰om
, *
to
;

204 
size_t
 
Êí
, 
éí
;

206 
size_t
 
∆í
;

207 *
p
, 
key«me
[64];

209 ()
	`¢¥ötf
(
key«me
, (key«me), "kf%d", 
	`©oi
(
‰om
 + 1));

210 i‡((
p
 = 
	`tigë°r
(
key«me
)Ë=
NULL
 ||

211 
p
 =(*)-1 || 
	`°æí
(p) == 0)

212 
p
 = 
NULL
;

213 i‡(
p
 =
NULL
) {

214 
	`msgq_°r
(
•
, 
M_ERR
, 
‰om
, "233|ThisÅerminal hasÇo %s key");

218 
∆í
 = 
	`¢¥ötf
(
key«me
,

219 (
key«me
), "fun˘i⁄ key %d", 
	`©oi
(
‰om
 + 1));

220  (
	`£q_£t
(
•
, 
key«me
, 
∆í
,

221 
p
, 
	`°æí
’), 
to
, 
éí
, 
°y≥
, 
SEQ_NOOVERWRITE
 | 
SEQ_SCREEN
));

222 
	}
}

231 
	$˛_›tch™ge
(
•
, 
›t
, 
°r
, 
vÆp
)

232 
SCR
 *
•
;

233 
›t
;

234 *
°r
;

235 
u_l⁄g
 *
vÆp
;

237 
CL_PRIVATE
 *
˛p
;

239 
˛p
 = 
	`CLP
(
•
);

241 
›t
) {

242 
O_COLUMNS
:

243 
O_LINES
:

244 
O_TERM
:

249 
	`F_SET
(
•
->
gp
, 
G_SRESTART
);

250 
	`F_CLR
(
•
, 
SC_SCR_EX
 | 
SC_SCR_VI
);

252 
O_MESG
:

253 ()
	`˛_omesg
(
•
, 
˛p
, !*
vÆp
);

255 
O_WINDOWNAME
:

256 i‡(*
vÆp
) {

257 
	`F_CLR
(
˛p
, 
CL_RENAME_OK
);

259 ()
	`˛_ª«me
(
•
, 
NULL
, 0);

261 
	`F_SET
(
˛p
, 
CL_RENAME_OK
);

267 i‡(
•
->
‰p
 !
NULL
 && sp->‰p->
«me
 != NULL)

268 ()
	`˛_ª«me
(
•
, sp->
‰p
->
«me
, 1);

273 
	}
}

282 
	$˛_omesg
(
•
, 
˛p
, 
⁄
)

283 
SCR
 *
•
;

284 
CL_PRIVATE
 *
˛p
;

285 
⁄
;

287 
°©
 
sb
;

288 *
ây
;

291 i‡((
ây
 = 
	`ây«me
(
STDERR_FILENO
)Ë=
NULL
) {

292 i‡(
•
 !
NULL
)

293 
	`msgq
(
•
, 
M_SYSERR
, "stderr");

296 i‡(
	`°©
(
ây
, &
sb
) < 0) {

297 i‡(
•
 !
NULL
)

298 
	`msgq
(
•
, 
M_SYSERR
, "%s", 
ây
);

303 i‡(
˛p
->
tgw
 =
TGW_UNKNOWN
)

304 
˛p
->
tgw
 = 
sb
.
°_mode
 & 
S_IWGRP
 ? 
TGW_SET
 : 
TGW_UNSET
;

307 i‡(
⁄
) {

308 i‡(
	`chmod
(
ây
, 
sb
.
°_mode
 | 
S_IWGRP
) < 0) {

309 i‡(
•
 !
NULL
)

310 
	`msgq
(
•
, 
M_SYSERR
,

311 "046|mesßge†nŸÅu∫ed on: %s", 
ây
);

315 i‡(
	`chmod
(
ây
, 
sb
.
°_mode
 & ~
S_IWGRP
) < 0) {

316 i‡(
•
 !
NULL
)

317 
	`msgq
(
•
, 
M_SYSERR
,

318 "045|mesßge†nŸÅu∫ed off: %s", 
ây
);

322 
	}
}

331 
	$˛_ssize
(
•
, 
sigwöch
, 
rowp
, 
cﬁp
, 
ch™gedp
)

332 
SCR
 *
•
;

333 
sigwöch
;

334 
size_t
 *
rowp
, *
cﬁp
;

335 *
ch™gedp
;

337 #ifde‡
TIOCGWINSZ


338 
wösize
 
wö
;

340 
size_t
 
cﬁ
, 
row
;

341 
rvÆ
;

342 *
p
;

345 i‡(
ch™gedp
 !
NULL
)

346 *
ch™gedp
 = 1;

359 
row
 = 
cﬁ
 = 0;

360 #ifde‡
TIOCGWINSZ


361 i‡(
	`io˘l
(
STDERR_FILENO
, 
TIOCGWINSZ
, &
wö
) != -1) {

362 
row
 = 
wö
.
ws_row
;

363 
cﬁ
 = 
wö
.
ws_cﬁ
;

367 i‡(
sigwöch
) {

373 i‡(
row
 =0 || 
cﬁ
 == 0) {

374 i‡(
ch™gedp
 !
NULL
)

375 *
ch™gedp
 = 0;

387 i‡(
•
 !
NULL
 &&

388 
row
 =
	`O_VAL
(
•
, 
O_LINES
Ë&& 
cﬁ
 =O_VAL(•, 
O_COLUMNS
)) {

389 i‡(
ch™gedp
 !
NULL
)

390 *
ch™gedp
 = 0;

394 i‡(
rowp
 !
NULL
)

395 *
rowp
 = 
row
;

396 i‡(
cﬁp
 !
NULL
)

397 *
cﬁp
 = 
cﬁ
;

408 i‡(
row
 =0 || 
cﬁ
 == 0) {

409 i‡((
p
 = 
	`gëív
("TERM")Ë=
NULL
)

410 
nŸîm
;

411 i‡(
row
 == 0)

412 i‡((
rvÆ
 = 
	`tigënum
("lines")) < 0)

413 
	`msgq
(
•
, 
M_SYSERR
, "tigetnum:Üines");

415 
row
 = 
rvÆ
;

416 i‡(
cﬁ
 == 0)

417 i‡((
rvÆ
 = 
	`tigënum
("cols")) < 0)

418 
	`msgq
(
•
, 
M_SYSERR
, "tigetnum: cols");

420 
cﬁ
 = 
rvÆ
;

424 
nŸîm
: i‡(
row
 == 0)

425 
row
 = 24;

426 i‡(
cﬁ
 == 0)

427 
cﬁ
 = 80;

436 i‡((
p
 = 
	`gëív
("LINES")Ë!
NULL
)

437 
row
 = 
	`°πﬁ
(
p
, 
NULL
, 10);

438 i‡((
p
 = 
	`gëív
("COLUMNS")Ë!
NULL
)

439 
cﬁ
 = 
	`°πﬁ
(
p
, 
NULL
, 10);

441 i‡(
rowp
 !
NULL
)

442 *
rowp
 = 
row
;

443 i‡(
cﬁp
 !
NULL
)

444 *
cﬁp
 = 
cﬁ
;

446 
	}
}

455 
	$˛_putch¨
(
ch
)

456 
ch
;

458  (
	`putch¨
(
ch
));

459 
	}
}

	@clib/bsearch.c

34 
	~"c⁄fig.h
"

36 #i‡
deföed
(
LIBC_SCCS
Ë&& !deföed(
löt
)

37 c⁄° 
	gsccsid
[] = "@(#)bsearch.c 8.1 (Berkeley) 6/4/93";

40 
	~<°ddef.h
>

41 
	~<°dlib.h
>

43 
	~"p‹t.h
"

67 
	$b£¨ch
(
key
, 
ba£0
, 
nmemb
, 
size
, 
com∑r
)

68 c⁄° *
key
;

69 c⁄° *
ba£0
;

70 
size_t
 
nmemb
;

71 
size_t
 
size
;

72 (*
com∑r
Ë
	`__P
((const *, const *));

74 c⁄° *
ba£
 = 
ba£0
;

75 
size_t
 
lim
;

76 
cmp
;

77 c⁄° *
p
;

79 
lim
 = 
nmemb
;Üim != 0;Üim >>= 1) {

80 
p
 = 
ba£
 + (
lim
 >> 1Ë* 
size
;

81 
cmp
 = (*
com∑r
)(
key
, 
p
);

82 i‡(
cmp
 == 0)

83  ((*)
p
);

84 i‡(
cmp
 > 0) {

85 
ba£
 = (*)
p
 + 
size
;

86 
lim
--;

89  (
NULL
);

90 
	}
}

	@clib/env.c

34 
	~"c⁄fig.h
"

36 #i‡
deföed
(
LIBC_SCCS
Ë&& !deföed(
löt
)

37 c⁄° 
	gsccsid
[] = "@(#)getenv.c 8.1 (Berkeley) 6/4/93";

38 c⁄° 
	gsccsid
[] = "@(#)setenv.c 8.1 (Berkeley) 6/4/93";

41 
	~<°dlib.h
>

42 
	~<°rög.h
>

54 
	$__födív
(
«me
, 
off£t
)

55 *
«me
;

56 *
off£t
;

58 **
ívú⁄
;

59 
Àn
;

60 *
≈
;

61 **
p
, *
c
;

63 i‡(
«me
 =
NULL
 || 
ívú⁄
 == NULL)

64  (
NULL
);

65 
≈
 = 
«me
; *np && *np != '='; ++np)

67 
Àn
 = 
≈
 - 
«me
;

68 
p
 = 
ívú⁄
; (
c
 = *pË!
NULL
; ++p)

69 i‡(
	`°∫cmp
(
c
, 
«me
, 
Àn
) == 0 && c[len] == '=') {

70 *
off£t
 = 
p
 - 
ívú⁄
;

71  (
c
 + 
Àn
 + 1);

73  (
NULL
);

74 
	}
}

76 #i‚de‡
HAVE_SETENV


86 
	$£ãnv
(
«me
, 
vÆue
, 
ªwrôe
)

87 *
«me
;

88 *
vÆue
;

89 
ªwrôe
;

91 **
ívú⁄
;

92 
Ælo˚d
;

93 *
c
;

94 
l_vÆue
, 
off£t
;

96 i‡(*
vÆue
 == '=')

97 ++
vÆue
;

98 
l_vÆue
 = 
	`°æí
(
vÆue
);

99 i‡((
c
 = 
	`__födív
(
«me
, &
off£t
))) {

100 i‡(!
ªwrôe
)

102 i‡(
	`°æí
(
c
Ë>
l_vÆue
) {

103 *
c
++ = *
vÆue
++);

107 
˙t
;

108 **
p
;

110 
p
 = 
ívú⁄
, 
˙t
 = 0; *p; ++p, ++cnt);

111 i‡(
Ælo˚d
) {

112 
ívú⁄
 = (**)
	`ªÆloc
((*)environ,

113 (
size_t
)((*Ë* (
˙t
 + 2)));

114 i‡(!
ívú⁄
)

118 
Ælo˚d
 = 1;

119 
p
 = 
	`mÆloc
((
size_t
)((*Ë* (
˙t
 + 2)));

120 i‡(!
p
)

122 
	`memmove
(
p
, 
ívú⁄
, 
˙t
 * (*));

123 
ívú⁄
 = 
p
;

125 
ívú⁄
[
˙t
 + 1] = 
NULL
;

126 
off£t
 = 
˙t
;

128 
c
 = (*)
«me
; *c && *c != '='; ++c);

129 i‡(!(
ívú⁄
[
off£t
] =

130 
	`mÆloc
((
size_t
)(()(
c
 - 
«me
Ë+ 
l_vÆue
 + 2))))

132 
c
 = 
ívú⁄
[
off£t
]; (*¯*
«me
++) && *c != '='; ++c);

133 *
c
++ = '='; *c++ = *
vÆue
++;);

135 
	}
}

138 #i‚de‡
HAVE_UNSETENV


148 
	$un£ãnv
(
«me
)

149 *
«me
;

151 **
ívú⁄
;

152 **
p
;

153 
off£t
;

155 
	`__födív
(
«me
, &
off£t
))

156 
p
 = &
ívú⁄
[
off£t
];; ++p)

157 i‡(!(*
p
 = *(p + 1)))

159 
	}
}

	@clib/gethostname.c

1 
	~"c⁄fig.h
"

6 
	~<sys/ut¢ame.h
>

7 
	~<sys/sy°emöfo.h
>

9 
	~<√tdb.h
>

17 
	$gëho°«me
(
ho°
, 
Àn
)

18 *
ho°
;

19 
Àn
;

21  (
	`sysöfo
(
SI_HOSTNAME
, 
ho°
, 
Àn
) == -1 ? -1 : 0);

22 
	}
}

	@clib/getopt.c

34 
	~"c⁄fig.h
"

36 #i‡
deföed
(
LIBC_SCCS
Ë&& !deföed(
löt
)

37 c⁄° 
	gsccsid
[] = "@(#)getopt.c 8.2 (Berkeley) 4/2/94";

40 
	~<°dio.h
>

41 
	~<°dlib.h
>

42 
	~<°rög.h
>

44 
	g›ãº
 = 1,

45 
	g›töd
 = 1,

46 
	g›t›t
,

47 
	g›åe£t
;

48 *
	g›èrg
;

50 
	#BADCH
 ()'?'

	)

51 
	#BADARG
 ()':'

	)

52 
	#EMSG
 ""

	)

63 
	$gë›t
(
«rgc
, 
«rgv
, 
o°r
)

64 
«rgc
;

65 * c⁄° *
«rgv
;

66 c⁄° *
o°r
;

68 *
¥og«me
;

69 *
∂a˚
 = 
EMSG
;

70 *
ﬁi
;

72 i‡(!
¥og«me
) {

73 i‡((
¥og«me
 = 
	`°ºchr
(*
«rgv
, '/')Ë=
NULL
)

74 
¥og«me
 = *
«rgv
;

76 ++
¥og«me
;

79 i‡(
›åe£t
 || !*
∂a˚
) {

80 
›åe£t
 = 0;

81 i‡(
›töd
 >
«rgc
 || *(
∂a˚
 = 
«rgv
[optind]) != '-') {

82 
∂a˚
 = 
EMSG
;

83  (
EOF
);

85 i‡(
∂a˚
[1] && *++place == '-') {

86 ++
›töd
;

87 
∂a˚
 = 
EMSG
;

88  (
EOF
);

91 i‡((
›t›t
 = ()*
∂a˚
++) == ()':' ||

92 !(
ﬁi
 = 
	`°rchr
(
o°r
, 
›t›t
))) {

97 i‡(
›t›t
 == ()'-')

98  (
EOF
);

99 i‡(!*
∂a˚
)

100 ++
›töd
;

101 i‡(
›ãº
 && *
o°r
 != ':')

102 ()
	`Ârötf
(
°dîr
,

103 "%s: iŒegÆ o±i⁄ -- %c\n", 
¥og«me
, 
›t›t
);

104  (
BADCH
);

106 i‡(*++
ﬁi
 != ':') {

107 
›èrg
 = 
NULL
;

108 i‡(!*
∂a˚
)

109 ++
›töd
;

112 i‡(*
∂a˚
)

113 
›èrg
 = 
∂a˚
;

114 i‡(
«rgc
 <++
›töd
) {

115 
∂a˚
 = 
EMSG
;

116 i‡(*
o°r
 == ':')

117  (
BADARG
);

118 i‡(
›ãº
)

119 ()
	`Ârötf
(
°dîr
,

121 
¥og«me
, 
›t›t
);

122  (
BADCH
);

125 
›èrg
 = 
«rgv
[
›töd
];

126 
∂a˚
 = 
EMSG
;

127 ++
›töd
;

129  (
›t›t
);

130 
	}
}

	@clib/memchr.c

37 
	~"c⁄fig.h
"

39 #i‡
deföed
(
LIBC_SCCS
Ë&& !deföed(
löt
)

40 c⁄° 
	gsccsid
[] = "@(#)memchr.c 8.1 (Berkeley) 6/4/93";

43 
	~<°rög.h
>

51 
	$memchr
(
s
, 
c
, 
n
)

52 c⁄° *
s
;

53 
c
;

54 
size_t
 
n
;

56 i‡(
n
 != 0) {

57 c⁄° *
p
 = 
s
;

60 i‡(*
p
++ =
c
)

61  ((*)(
p
 - 1));

62 } --
n
 != 0);

64  (
NULL
);

65 
	}
}

	@clib/memmove.c

37 
	~"c⁄fig.h
"

39 #i‡
deföed
(
LIBC_SCCS
Ë&& !deföed(
löt
)

40 c⁄° 
	gsccsid
[] = "@(#)bcopy.c 8.1 (Berkeley) 6/4/93";

43 
	~<°rög.h
>

49 
	tw‹d
;

51 
	#wsize
 (
w‹d
)

	)

52 
	#wmask
 (
wsize
 - 1)

	)

66 #ifde‡
MEMCOPY


68 
	$mem˝y
(
d°0
, 
§c0
, 
Àngth
)

70 #ifde‡
MEMMOVE


72 
	$memmove
(
d°0
, 
§c0
, 
Àngth
)

75 
	$bc›y
(
§c0
, 
d°0
, 
Àngth
)

78 *
d°0
;

79 c⁄° *
§c0
;

80 
size_t
 
Àngth
;

82 *
d°
 = 
d°0
;

83 c⁄° *
§c
 = 
§c0
;

84 
size_t
 
t
;

86 i‡(
Àngth
 =0 || 
d°
 =
§c
)

87 
d⁄e
;

92 
	#TLOOP
(
s
Ëi‡(
t
Ë
	`TLOOP1
(s)

	)

93 
	#TLOOP1
(
s
Ëdÿ{ s; } --
t
)

	)

95 i‡(()
d°
 < ()
§c
) {

99 
t
 = ()
§c
;

100 i‡((
t
 | ()
d°
Ë& 
wmask
) {

105 i‡((
t
 ^ ()
d°
Ë& 
wmask
 || 
Àngth
 < 
wsize
)

106 
t
 = 
Àngth
;

108 
t
 = 
wsize
 - (à& 
wmask
);

109 
Àngth
 -
t
;

110 
	`TLOOP1
(*
d°
++ = *
§c
++);

115 
t
 = 
Àngth
 / 
wsize
;

116 
	`TLOOP
(*(
w‹d
 *)
d°
 = *(w‹d *)
§c
; sr¯+
wsize
; dst += wsize);

117 
t
 = 
Àngth
 & 
wmask
;

118 
	`TLOOP
(*
d°
++ = *
§c
++);

125 
§c
 +
Àngth
;

126 
d°
 +
Àngth
;

127 
t
 = ()
§c
;

128 i‡((
t
 | ()
d°
Ë& 
wmask
) {

129 i‡((
t
 ^ ()
d°
Ë& 
wmask
 || 
Àngth
 <
wsize
)

130 
t
 = 
Àngth
;

132 
t
 &
wmask
;

133 
Àngth
 -
t
;

134 
	`TLOOP1
(*--
d°
 = *--
§c
);

136 
t
 = 
Àngth
 / 
wsize
;

137 
	`TLOOP
(
§c
 -
wsize
; 
d°
 -wsize; *(
w‹d
 *)dst = *(word *)src);

138 
t
 = 
Àngth
 & 
wmask
;

139 
	`TLOOP
(*--
d°
 = *--
§c
);

141 
d⁄e
:

142 #i‡
	`deföed
(
MEMCOPY
Ë|| deföed(
MEMMOVE
)

143  (
d°0
);

147 
	}
}

	@clib/memset.c

37 
	~"c⁄fig.h
"

39 #i‡
deföed
(
LIBC_SCCS
Ë&& !deföed(
löt
)

40 c⁄° 
	gsccsid
[] = "@(#)memset.c 8.1 (Berkeley) 6/4/93";

43 
	~<sys/ty≥s.h
>

45 
	~<limôs.h
>

46 
	~<°rög.h
>

53 
	#wsize
 (
u_öt
)

	)

54 
	#wmask
 (
wsize
 - 1)

	)

56 #ifde‡
BZERO


57 
	#RETURN
 

	)

58 
	#VAL
 0

	)

59 
	#WIDEVAL
 0

	)

62 
	$bzîo
(
d°0
, 
Àngth
)

63 *
d°0
;

64 
size_t
 
Àngth
;

66 
	#RETURN
  (
d°0
)

	)

67 
	#VAL
 
c0


	)

68 
	#WIDEVAL
 
c


	)

71 
	$mem£t
(
d°0
, 
c0
, 
Àngth
)

72 *
d°0
;

73 
c0
;

74 
size_t
 
Àngth
;

77 
size_t
 
t
;

78 
u_öt
 
c
;

79 
u_ch¨
 *
d°
;

81 
d°
 = 
d°0
;

95 i‡(
Àngth
 < 3 * 
wsize
) {

96 
Àngth
 != 0) {

97 *
d°
++ = 
VAL
;

98 --
Àngth
;

100 
RETURN
;

103 #i‚de‡
BZERO


104 i‡((
c
 = (
u_ch¨
)
c0
) != 0) {

105 
c
 = (c << 8) | c;

106 #i‡
UINT_MAX
 > 0xffff

107 
c
 = (c << 16) | c;

109 #i‡
UINT_MAX
 > 0xffffffff

110 
c
 = (c << 32) | c;

115 i‡((
t
 = ()
d°
 & 
wmask
) != 0) {

116 
t
 = 
wsize
 -Å;

117 
Àngth
 -
t
;

119 *
d°
++ = 
VAL
;

120 } --
t
 != 0);

124 
t
 = 
Àngth
 / 
wsize
;

126 *(
u_öt
 *)
d°
 = 
WIDEVAL
;

127 
d°
 +
wsize
;

128 } --
t
 != 0);

131 
t
 = 
Àngth
 & 
wmask
;

132 i‡(
t
 != 0)

134 *
d°
++ = 
VAL
;

135 } --
t
 != 0);

136 
RETURN
;

137 
	}
}

	@clib/mkstemp.c

34 
	~"c⁄fig.h
"

36 #i‡
deföed
(
LIBC_SCCS
Ë&& !deföed(
löt
)

37 c⁄° 
	gsccsid
[] = "@(#)mktemp.c 8.1 (Berkeley) 6/4/93";

40 
	~<sys/ty≥s.h
>

41 
	~<sys/°©.h
>

42 
	~<f˙é.h
>

43 
	~<î∫o.h
>

44 
	~<°dio.h
>

45 
	~<˘y≥.h
>

47 
_gëãmp
();

54 
	$mk°emp
(
∑th
)

55 *
∑th
;

57 
fd
;

59  (
	`_gëãmp
(
∑th
, &
fd
) ? fd : -1);

60 
	}
}

63 
	$mkãmp
(
∑th
)

64 *
∑th
;

66 (
	`_gëãmp
(
∑th
, (*)
NULL
) ?Öath : (*)NULL);

67 
	}
}

70 
	$_gëãmp
(
∑th
, 
do›í
)

71 *
∑th
;

72 *
do›í
;

74 
î∫o
;

75 *
°¨t
, *
åv
;

76 
°©
 
sbuf
;

77 
u_öt
 
pid
;

79 
pid
 = 
	`gëpid
();

80 
åv
 = 
∑th
; *trv; ++trv);

81 *--
åv
 == 'X') {

82 *
åv
 = (
pid
 % 10) + '0';

83 
pid
 /= 10;

90 
°¨t
 = 
åv
 + 1;; --trv) {

91 i‡(
åv
 <
∑th
)

93 i‡(*
åv
 == '/') {

94 *
åv
 = '\0';

95 i‡(
	`°©
(
∑th
, &
sbuf
))

97 i‡(!
	`S_ISDIR
(
sbuf
.
°_mode
)) {

98 
î∫o
 = 
ENOTDIR
;

101 *
åv
 = '/';

107 i‡(
do›í
) {

108 i‡((*
do›í
 =

109 
	`›í
(
∑th
, 
O_CREAT
|
O_EXCL
|
O_RDWR
, 0600)) >= 0)

111 i‡(
î∫o
 !
EEXIST
)

114 i‡(
	`°©
(
∑th
, &
sbuf
))

115 (
î∫o
 =
ENOENT
 ? 1 : 0);

118 
åv
 = 
°¨t
;;) {

119 i‡(!*
åv
)

121 i‡(*
åv
 == 'z')

122 *
åv
++ = 'a';

124 i‡(
	`isdigô
(*
åv
))

125 *
åv
 = 'a';

127 ++*
åv
;

133 
	}
}

	@clib/mmap.c

1 
	~"c⁄fig.h
"

3 
	~<sys/ty≥s.h
>

5 
	~<°dlib.h
>

6 
	~<uni°d.h
>

21 
	$mm≠
(
addr
, 
Àn
, 
¥Ÿ
, 
Êags
, 
fd
, 
off
)

22 *
addr
;

23 
size_t
 
Àn
;

24 
¥Ÿ
, 
Êags
, 
fd
;

25 
off_t
 
off
;

27 *
±r
;

29 i‡((
±r
 = (*)
	`mÆloc
(
Àn
)) == 0)

31 i‡(
	`ªad
(
fd
, 
±r
, 
Àn
) < 0) {

32 
	`‰ì
(
±r
);

35  (
±r
);

36 
	}
}

44 
	$munm≠
(
addr
, 
Àn
)

45 *
addr
;

46 
size_t
 
Àn
;

48 
	`‰ì
(
addr
);

50 
	}
}

	@clib/snprintf.c

1 
	~"c⁄fig.h
"

3 
	~<sys/ty≥s.h
>

5 
	~<°dio.h
>

7 #ifde‡
__STDC__


8 
	~<°d¨g.h
>

10 
	~<v¨¨gs.h
>

19 #ifde‡
__STDC__


20 
	$¢¥ötf
(*
°r
, 
size_t
 
n
, c⁄° *
fmt
, ...)

22 
	$¢¥ötf
(
°r
, 
n
, 
fmt
, 
va_Æi°
)

23 *
°r
;

24 
size_t
 
n
;

25 c⁄° *
fmt
;

26 
va_d˛


29 
va_li°
 
≠
;

30 
rvÆ
;

31 #ifde‡
__STDC__


32 
	`va_°¨t
(
≠
, 
fmt
);

34 
	`va_°¨t
(
≠
);

36 #ifde‡
SPRINTF_RET_CHARPNT


37 ()
	`v•rötf
(
°r
, 
fmt
, 
≠
);

38 
	`va_íd
(
≠
);

39  (
	`°æí
(
°r
));

41 
rvÆ
 = 
	`v•rötf
(
°r
, 
fmt
, 
≠
);

42 
	`va_íd
(
≠
);

43  (
rvÆ
);

45 
	}
}

	@clib/strdup.c

34 
	~"c⁄fig.h
"

36 #i‡
deföed
(
LIBC_SCCS
Ë&& !deföed(
löt
)

37 c⁄° 
	gsccsid
[] = "@(#)strdup.c 8.1 (Berkeley) 6/4/93";

40 
	~<sys/ty≥s.h
>

42 
	~<°ddef.h
>

43 
	~<°dlib.h
>

44 
	~<°rög.h
>

52 
	$°rdup
(
°r
)

53 c⁄° *
°r
;

55 
size_t
 
Àn
;

56 *
c›y
;

58 
Àn
 = 
	`°æí
(
°r
) + 1;

59 i‡(!(
c›y
 = 
	`mÆloc
((
u_öt
)
Àn
)))

60  (
NULL
);

61 
	`mem˝y
(
c›y
, 
°r
, 
Àn
);

62  (
c›y
);

63 
	}
}

	@clib/strerror.c

34 
	~"c⁄fig.h
"

36 #i‡
deföed
(
LIBC_SCCS
Ë&& !deföed(
löt
)

37 c⁄° 
	gsccsid
[] = "@(#)strerror.c 8.1 (Berkeley) 6/4/93";

40 
	~<°rög.h
>

48 
	$°ªº‹
(
num
)

49 
num
;

51 
sys_√º
;

52 *
sys_îæi°
[];

53 
	#UPREFIX
 "Unknow¿îr‹: "

	)

54 
ebuf
[40] = 
UPREFIX
;

55 
î∫um
;

56 *
p
, *
t
;

57 
tmp
[40];

59 
î∫um
 = 
num
;

60 i‡(
î∫um
 < 
sys_√º
)

61 (
sys_îæi°
[
î∫um
]);

64 
t
 = 
tmp
;

66 *
t
++ = "0123456789"[
î∫um
 % 10];

67 } 
î∫um
 /= 10);

68 
p
 = 
ebuf
 + (
UPREFIX
) - 1;;) {

69 *
p
++ = *--
t
;

70 i‡(
t
 <
tmp
)

73 (
ebuf
);

74 
	}
}

	@clib/strpbrk.c

34 
	~"c⁄fig.h
"

36 #i‡
deföed
(
LIBC_SCCS
Ë&& !deföed(
löt
)

37 c⁄° 
	gsccsid
[] = "@(#)strpbrk.c 8.1 (Berkeley) 6/4/93";

40 
	~<°rög.h
>

50 
	$°Ωbrk
(
s1
, 
s2
)

51 c⁄° *
s1
, *
s2
;

53 c⁄° *
sˇ≈
;

54 
c
, 
sc
;

56 (
c
 = *
s1
++) != 0) {

57 
sˇ≈
 = 
s2
; (
sc
 = *scanp++) != 0;)

58 i‡(
sc
 =
c
)

59  ((*)(
s1
 - 1));

61  (
NULL
);

62 
	}
}

	@clib/strsep.c

34 
	~"c⁄fig.h
"

36 #i‡
deföed
(
LIBC_SCCS
Ë&& !deföed(
löt
)

37 c⁄° 
	gsccsid
[] = "@(#)strsep.c 8.1 (Berkeley) 6/4/93";

40 
	~<°rög.h
>

41 
	~<°dio.h
>

59 
	$°r£p
(
°rögp
, 
dñim
)

60 **
°rögp
;

61 c⁄° *
dñim
;

63 *
s
;

64 c⁄° *
•™p
;

65 
c
, 
sc
;

66 *
tok
;

68 i‡((
s
 = *
°rögp
Ë=
NULL
)

69  (
NULL
);

70 
tok
 = 
s
;;) {

71 
c
 = *
s
++;

72 
•™p
 = 
dñim
;

74 i‡((
sc
 = *
•™p
++Ë=
c
) {

75 i‡(
c
 == 0)

76 
s
 = 
NULL
;

78 
s
[-1] = 0;

79 *
°rögp
 = 
s
;

80  (
tok
);

82 } 
sc
 != 0);

85 
	}
}

	@clib/strtol.c

34 
	~"c⁄fig.h
"

36 #i‡
deföed
(
LIBC_SCCS
Ë&& !deföed(
löt
)

37 c⁄° 
	gsccsid
[] = "@(#)strtol.c 8.1 (Berkeley) 6/4/93";

40 
	~<limôs.h
>

41 
	~<˘y≥.h
>

42 
	~<î∫o.h
>

43 
	~<°dlib.h
>

56 
	$°πﬁ
(
≈å
, 
íd±r
, 
ba£
)

57 c⁄° *
≈å
;

58 **
íd±r
;

59 
ba£
;

61 c⁄° *
s
 = 
≈å
;

62 
acc
;

63 
c
;

64 
cutoff
;

65 
√g
 = 0, 
™y
, 
cuéim
;

73 
c
 = *
s
++;

74 } 
	`is•a˚
(
c
));

75 i‡(
c
 == '-') {

76 
√g
 = 1;

77 
c
 = *
s
++;

78 } i‡(
c
 == '+')

79 
c
 = *
s
++;

80 i‡((
ba£
 == 0 || base == 16) &&

81 
c
 ='0' && (*
s
 == 'x' || *s == 'X')) {

82 
c
 = 
s
[1];

83 
s
 += 2;

84 
ba£
 = 16;

86 i‡(
ba£
 == 0)

87 
ba£
 = 
c
 == '0' ? 8 : 10;

106 
cutoff
 = 
√g
 ? -()
LONG_MIN
 : 
LONG_MAX
;

107 
cuéim
 = 
cutoff
 % ()
ba£
;

108 
cutoff
 /()
ba£
;

109 
acc
 = 0, 
™y
 = 0;; 
c
 = *
s
++) {

110 i‡(
	`isdigô
(
c
))

111 
c
 -= '0';

112 i‡(
	`ißÕha
(
c
))

113 
c
 -
	`isuµî
(c) ? 'A' - 10 : 'a' - 10;

116 i‡(
c
 >
ba£
)

118 i‡(
™y
 < 0 || 
acc
 > 
cutoff
 ||ác¯=cutof‡&& 
c
 > 
cuéim
)

119 
™y
 = -1;

121 
™y
 = 1;

122 
acc
 *
ba£
;

123 
acc
 +
c
;

126 i‡(
™y
 < 0) {

127 
acc
 = 
√g
 ? 
LONG_MIN
 : 
LONG_MAX
;

128 
î∫o
 = 
ERANGE
;

129 } i‡(
√g
)

130 
acc
 = -acc;

131 i‡(
íd±r
 != 0)

132 *
íd±r
 = (*)(
™y
 ? 
s
 - 1 : 
≈å
);

133  (
acc
);

134 
	}
}

	@clib/strtoul.c

34 
	~"c⁄fig.h
"

36 #i‡
deföed
(
LIBC_SCCS
Ë&& !deföed(
löt
)

37 c⁄° 
	gsccsid
[] = "@(#)strtoul.c 8.1 (Berkeley) 6/4/93";

40 
	~<limôs.h
>

41 
	~<˘y≥.h
>

42 
	~<î∫o.h
>

43 
	~<°dlib.h
>

56 
	$°πoul
(
≈å
, 
íd±r
, 
ba£
)

57 c⁄° *
≈å
;

58 **
íd±r
;

59 
ba£
;

61 c⁄° *
s
 = 
≈å
;

62 
acc
;

63 
c
;

64 
cutoff
;

65 
√g
 = 0, 
™y
, 
cuéim
;

71 
c
 = *
s
++;

72 } 
	`is•a˚
(
c
));

73 i‡(
c
 == '-') {

74 
√g
 = 1;

75 
c
 = *
s
++;

76 } i‡(
c
 == '+')

77 
c
 = *
s
++;

78 i‡((
ba£
 == 0 || base == 16) &&

79 
c
 ='0' && (*
s
 == 'x' || *s == 'X')) {

80 
c
 = 
s
[1];

81 
s
 += 2;

82 
ba£
 = 16;

84 i‡(
ba£
 == 0)

85 
ba£
 = 
c
 == '0' ? 8 : 10;

86 
cutoff
 = ()
ULONG_MAX
 / ()
ba£
;

87 
cuéim
 = ()
ULONG_MAX
 % ()
ba£
;

88 
acc
 = 0, 
™y
 = 0;; 
c
 = *
s
++) {

89 i‡(
	`isdigô
(
c
))

90 
c
 -= '0';

91 i‡(
	`ißÕha
(
c
))

92 
c
 -
	`isuµî
(c) ? 'A' - 10 : 'a' - 10;

95 i‡(
c
 >
ba£
)

97 i‡(
™y
 < 0 || 
acc
 > 
cutoff
 ||ác¯=cutof‡&& 
c
 > 
cuéim
)

98 
™y
 = -1;

100 
™y
 = 1;

101 
acc
 *
ba£
;

102 
acc
 +
c
;

105 i‡(
™y
 < 0) {

106 
acc
 = 
ULONG_MAX
;

107 
î∫o
 = 
ERANGE
;

108 } i‡(
√g
)

109 
acc
 = -acc;

110 i‡(
íd±r
 != 0)

111 *
íd±r
 = (*)(
™y
 ? 
s
 - 1 : 
≈å
);

112  (
acc
);

113 
	}
}

	@clib/vsnprintf.c

1 
	~"c⁄fig.h
"

3 
	~<sys/ty≥s.h
>

5 
	~<°dio.h
>

7 #ifde‡
__STDC__


8 
	~<°d¨g.h
>

10 
	~<v¨¨gs.h
>

19 
	$v¢¥ötf
(
°r
, 
n
, 
fmt
, 
≠
)

20 *
°r
;

21 
size_t
 
n
;

22 c⁄° *
fmt
;

23 
va_li°
 
≠
;

25 #ifde‡
SPRINTF_RET_CHARPNT


26 ()
	`v•rötf
(
°r
, 
fmt
, 
≠
);

27  (
	`°æí
(
°r
));

29  (
	`v•rötf
(
°r
, 
fmt
, 
≠
));

31 
	}
}

	@common/api.c

12 
	~"c⁄fig.h
"

14 #i‚de‡
löt


15 c⁄° 
	gsccsid
[] = "@(#)api.c 8.26 (Berkeley) 10/14/96";

18 
	~<sys/ty≥s.h
>

19 
	~<sys/queue.h
>

20 
	~<sys/time.h
>

22 
	~<bô°rög.h
>

23 
	~<limôs.h
>

24 
	~<°dio.h
>

25 
	~<°dlib.h
>

26 
	~<°rög.h
>

27 
	~<ãrmios.h
>

28 
	~<uni°d.h
>

30 
	~"../comm⁄/comm⁄.h
"

32 
GS
 *
__globÆ_li°
;

41 
SCR
 *

42 
	$≠i_fs¸ìn
(
id
, 
«me
)

43 
id
;

44 *
«me
;

46 
GS
 *
gp
;

47 
SCR
 *
t•
;

49 
gp
 = 
__globÆ_li°
;

52 
t•
 = 
gp
->
dq
.
cqh_fú°
;

53 
t•
 !(*)&
gp
->
dq
;Å• =Å•->
q
.
cqe_√xt
)

54 i‡(
«me
 =
NULL
) {

55 i‡(
id
 =
t•
->id)

56  (
t•
);

57 } i‡(!
	`°rcmp
(
«me
, 
t•
->
‰p
->name))

58  (
t•
);

61 
t•
 = 
gp
->
hq
.
cqh_fú°
;

62 
t•
 !(*)&
gp
->
hq
;Å• =Å•->
q
.
cqe_√xt
)

63 i‡(
«me
 =
NULL
) {

64 i‡(
id
 =
t•
->id)

65  (
t•
);

66 } i‡(!
	`°rcmp
(
«me
, 
t•
->
‰p
->name))

67  (
t•
);

68  (
NULL
);

69 
	}
}

78 
	$≠i_Æöe
(
•
, 
 o
, 
löe
, 
Àn
)

79 
SCR
 *
•
;

80 
ª˙o_t
 
 o
;

81 *
löe
;

82 
size_t
 
Àn
;

84  (
	`db_≠≥nd
(
•
, 1, 
 o
, 
löe
, 
Àn
));

85 
	}
}

94 
	$≠i_dlöe
(
•
, 
 o
)

95 
SCR
 *
•
;

96 
ª˙o_t
 
 o
;

98  (
	`db_dñëe
(
•
, 
 o
));

99 
	}
}

108 
	$≠i_glöe
(
•
, 
 o
, 
löïp
, 
À≈
)

109 
SCR
 *
•
;

110 
ª˙o_t
 
 o
;

111 **
löïp
;

112 
size_t
 *
À≈
;

114 
i£m±y
;

116 i‡(
	`db_egë
(
•
, 
 o
, 
löïp
, 
À≈
, &
i£m±y
)) {

117 i‡(
i£m±y
)

118 
	`msgq
(
•
, 
M_ERR
, "209|The file isÉmpty");

122 
	}
}

131 
	$≠i_ûöe
(
•
, 
 o
, 
löe
, 
Àn
)

132 
SCR
 *
•
;

133 
ª˙o_t
 
 o
;

134 *
löe
;

135 
size_t
 
Àn
;

137  (
	`db_ö£π
(
•
, 
 o
, 
löe
, 
Àn
));

138 
	}
}

147 
	$≠i_Œöe
(
•
, 
 ›
)

148 
SCR
 *
•
;

149 
ª˙o_t
 *
 ›
;

151  (
	`db_œ°
(
•
, 
 ›
));

152 
	}
}

161 
	$≠i_¶öe
(
•
, 
 o
, 
löe
, 
Àn
)

162 
SCR
 *
•
;

163 
ª˙o_t
 
 o
;

164 *
löe
;

165 
size_t
 
Àn
;

167  (
	`db_£t
(
•
, 
 o
, 
löe
, 
Àn
));

168 
	}
}

177 
	$≠i_gëm¨k
(
•
, 
m¨k«me
, 
mp
)

178 
SCR
 *
•
;

179 
m¨k«me
;

180 
MARK
 *
mp
;

182  (
	`m¨k_gë
(
•
, (
ARG_CHAR_T
)
m¨k«me
, 
mp
, 
M_ERR
));

183 
	}
}

192 
	$≠i_£tm¨k
(
•
, 
m¨k«me
, 
mp
)

193 
SCR
 *
•
;

194 
m¨k«me
;

195 
MARK
 *
mp
;

197  (
	`m¨k_£t
(
•
, (
ARG_CHAR_T
)
m¨k«me
, 
mp
, 1));

198 
	}
}

208 
	$≠i_√xtm¨k
(
•
, 
√xt
, 
«mï
)

209 
SCR
 *
•
;

210 
√xt
;

211 *
«mï
;

213 
LMARK
 *
mp
;

215 
mp
 = 
•
->
ï
->
m¨ks
.
lh_fú°
;

216 i‡(
√xt
)

217 ; 
mp
 !
NULL
; m∞mp->
q
.
À_√xt
)

218 i‡(
mp
->
«me
 =*
«mï
) {

219 
mp
 = mp->
q
.
À_√xt
;

222 i‡(
mp
 =
NULL
)

224 *
«mï
 = 
mp
->
«me
;

226 
	}
}

235 
	$≠i_gëcurs‹
(
•
, 
mp
)

236 
SCR
 *
•
;

237 
MARK
 *
mp
;

239 
mp
->
 o
 = 
•
->lno;

240 
mp
->
˙o
 = 
•
->cno;

242 
	}
}

251 
	$≠i_£tcurs‹
(
•
, 
mp
)

252 
SCR
 *
•
;

253 
MARK
 *
mp
;

255 
size_t
 
Àn
;

257 i‡(
	`db_gë
(
•
, 
mp
->
 o
, 
DBG_FATAL
, 
NULL
, &
Àn
))

259 i‡(
mp
->
˙o
 < 0 || mp->˙ÿ> 
Àn
) {

260 
	`msgq
(
•
, 
M_ERR
, "Cursor setÅoÇonexistent column");

265 
•
->
 o
 = 
mp
->lno;

266 
•
->
˙o
 = 
mp
->cno;

268 
	}
}

277 
	$≠i_emesßge
(
•
, 
ãxt
)

278 
SCR
 *
•
;

279 *
ãxt
;

281 
	`msgq
(
•
, 
M_ERR
, "%s", 
ãxt
);

282 
	}
}

291 
	$≠i_imesßge
(
•
, 
ãxt
)

292 
SCR
 *
•
;

293 *
ãxt
;

295 
	`msgq
(
•
, 
M_INFO
, "%s", 
ãxt
);

296 
	}
}

306 
	$≠i_edô
(
•
, 
fûe
, 
•p
, 
√ws¸ìn
)

307 
SCR
 *
•
;

308 *
fûe
;

309 
SCR
 **
•p
;

310 
√ws¸ìn
;

312 
ARGS
 *
≠
[2], 
a
;

313 
EXCMD
 
cmd
;

315 i‡(
fûe
) {

316 
	`ex_cöô
(&
cmd
, 
C_EDIT
, 0, 
OOBLNO
, OOBLNO, 0, 
≠
);

317 
	`ex_ˇdd
(&
cmd
, &
a
, 
fûe
, 
	`°æí
(file));

319 
	`ex_cöô
(&
cmd
, 
C_EDIT
, 0, 
OOBLNO
, OOBLNO, 0, 
NULL
);

320 i‡(
√ws¸ìn
)

321 
cmd
.
Êags
 |
E_NEWSCREEN
;

322 i‡(
cmd
.cmd->
	`‚
(
•
, &cmd))

324 *
•p
 = 
•
->
√xtdi•
;

326 
	}
}

335 
	$≠i_es¸ìn
(
•
)

336 
SCR
 *
•
;

338 
EXCMD
 
cmd
;

345 
	`ex_cöô
(&
cmd
, 
C_QUIT
, 0, 
OOBLNO
, OOBLNO, 0, 
NULL
);

346  (
cmd
.cmd->
	`‚
(
•
, &cmd));

347 
	}
}

356 
	$≠i_sws¸ìn
(
•
, 
√w
)

357 
SCR
 *
•
, *
√w
;

364 
•
->
√xtdi•
 = 
√w
;

365 
	`F_SET
(
•
, 
SC_SSWITCH
);

368 
	}
}

377 
	$≠i_m≠
(
•
, 
«me
, 
m≠
, 
Àn
)

378 
SCR
 *
•
;

379 *
«me
, *
m≠
;

380 
size_t
 
Àn
;

382 
ARGS
 *
≠
[3], 
a
, 
b
;

383 
EXCMD
 
cmd
;

385 
	`ex_cöô
(&
cmd
, 
C_MAP
, 0, 
OOBLNO
, OOBLNO, 0, 
≠
);

386 
	`ex_ˇdd
(&
cmd
, &
a
, 
«me
, 
	`°æí
(name));

387 
	`ex_ˇdd
(&
cmd
, &
b
, 
m≠
, 
Àn
);

388  (
cmd
.cmd->
	`‚
(
•
, &cmd));

389 
	}
}

398 
	$≠i_unm≠
(
•
, 
«me
)

399 
SCR
 *
•
;

400 *
«me
;

402 
ARGS
 *
≠
[2], 
a
;

403 
EXCMD
 
cmd
;

405 
	`ex_cöô
(&
cmd
, 
C_UNMAP
, 0, 
OOBLNO
, OOBLNO, 0, 
≠
);

406 
	`ex_ˇdd
(&
cmd
, &
a
, 
«me
, 
	`°æí
(name));

407  (
cmd
.cmd->
	`‚
(
•
, &cmd));

408 
	}
}

419 
	$≠i_›ts_gë
(
•
, 
«me
, 
vÆue
, 
boﬁvÆue
)

420 
SCR
 *
•
;

421 *
«me
, **
vÆue
;

422 *
boﬁvÆue
;

424 
OPTLIST
 c⁄° *
›
;

425 
off£t
;

427 i‡((
›
 = 
	`›ts_£¨ch
(
«me
)Ë=
NULL
) {

428 
	`›ts_nom©ch
(
•
, 
«me
);

432 
off£t
 = 
›
 - 
›éi°
;

433 i‡(
boﬁvÆue
 !
NULL
)

434 *
boﬁvÆue
 = -1;

435 
›
->
ty≥
) {

436 
OPT_0BOOL
:

437 
OPT_1BOOL
:

438 
	`MALLOC_RET
(
•
, *
vÆue
, *, 
	`°æí
(
›
->
«me
) + 2 + 1);

439 ()
	`•rötf
(*
vÆue
,

440 "%s%s", 
	`O_ISSET
(
•
, 
off£t
Ë? "" : "no", 
›
->
«me
);

441 i‡(
boﬁvÆue
 !
NULL
)

442 *
boﬁvÆue
 = 
	`O_ISSET
(
•
, 
off£t
);

444 
OPT_NUM
:

445 
	`MALLOC_RET
(
•
, *
vÆue
, *, 20);

446 ()
	`•rötf
(*
vÆue
, "%lu", (
u_l⁄g
)
	`O_VAL
(
•
, 
off£t
));

448 
OPT_STR
:

449 i‡(
	`O_STR
(
•
, 
off£t
Ë=
NULL
) {

450 
	`MALLOC_RET
(
•
, *
vÆue
, *, 2);

451 
vÆue
[0] = '\0';

453 
	`MALLOC_RET
(
•
,

454 *
vÆue
, *, 
	`°æí
(
	`O_STR
(
•
, 
off£t
)) + 1);

455 ()
	`•rötf
(*
vÆue
, "%s", 
	`O_STR
(
•
, 
off£t
));

460 
	}
}

469 
	$≠i_›ts_£t
(
•
, 
«me
, 
°r_vÆue
, 
num_vÆue
, 
boﬁ_vÆue
)

470 
SCR
 *
•
;

471 *
«me
, *
°r_vÆue
;

472 
u_l⁄g
 
num_vÆue
;

473 
boﬁ_vÆue
;

475 
ARGS
 *
≠
[2], 
a
, 
b
;

476 
OPTLIST
 c⁄° *
›
;

477 
rvÆ
;

478 
size_t
 
bÀn
;

479 *
bp
;

481 i‡((
›
 = 
	`›ts_£¨ch
(
«me
)Ë=
NULL
) {

482 
	`›ts_nom©ch
(
•
, 
«me
);

486 
›
->
ty≥
) {

487 
OPT_0BOOL
:

488 
OPT_1BOOL
:

489 
	`GET_SPACE_RET
(
•
, 
bp
, 
bÀn
, 64);

490 
a
.
Àn
 = 
	`¢¥ötf
(
bp
, 64, "%s%s", 
boﬁ_vÆue
 ? "" : "no", 
«me
);

492 
OPT_NUM
:

493 
	`GET_SPACE_RET
(
•
, 
bp
, 
bÀn
, 64);

494 
a
.
Àn
 = 
	`¢¥ötf
(
bp
, 64, "%s=%lu", 
«me
, 
num_vÆue
);

496 
OPT_STR
:

497 
	`GET_SPACE_RET
(
•
, 
bp
, 
bÀn
, 1024);

498 
a
.
Àn
 = 
	`¢¥ötf
(
bp
, 1024, "%s=%s", 
«me
, 
°r_vÆue
);

501 
a
.
bp
 = bp;

502 
b
.
Àn
 = 0;

503 
b
.
bp
 = 
NULL
;

504 
≠
[0] = &
a
;

505 
≠
[1] = &
b
;

506 
rvÆ
 = 
	`›ts_£t
(
•
, 
≠
, 
NULL
);

508 
	`FREE_SPACE
(
•
, 
bp
, 
bÀn
);

510  (
rvÆ
);

511 
	}
}

520 
	$≠i_run_°r
(
•
, 
cmd
)

521 
SCR
 *
•
;

522 *
cmd
;

524  (
	`ex_run_°r
(
•
, 
NULL
, 
cmd
, 
	`°æí
(cmd), 0, 0));

525 
	}
}

	@common/args.h

22 
	s_¨gs
 {

23 
CHAR_T
 *
	mbp
;

24 
size_t
 
	mbÀn
;

25 
size_t
 
	mÀn
;

27 
	#A_ALLOCATED
 0x01

	)

28 
u_öt8_t
 
	mÊags
;

29 } 
	tARGS
;

	@common/common.h

16 
	~"p‹t.h
"

23 
	~<db.h
>

24 
	~<ªgex.h
>

30 
_cb
 
	tCB
;

31 
_csc
 
	tCSC
;

32 
_evít
 
	tEVENT
;

33 
_excmd
 
	tEXCMD
;

34 
_exf
 
	tEXF
;

35 
_‰ef
 
	tFREF
;

36 
_gs
 
	tGS
;

37 
_lm¨k
 
	tLMARK
;

38 
_m¨k
 
	tMARK
;

39 
_msg
 
	tMSGS
;

40 
_›ti⁄
 
	tOPTION
;

41 
_›éi°
 
	tOPTLIST
;

42 
_s¸
 
	tSCR
;

43 
_s¸ùt
 
	tSCRIPT
;

44 
_£q
 
	tSEQ
;

45 
_èg
 
	tTAG
;

46 
_ègf
 
	tTAGF
;

47 
_ègq
 
	tTAGQ
;

48 
_ãxt
 
	tTEXT
;

51 íum { 
	mC_NOTSET
, 
	mC_CARATSET
, 
	mC_NOCHANGE
, 
	mC_ZEROSET
 } 
	tˇøt_t
;

54 íum { 
	mBUSY_ON
 = 1, 
	mBUSY_OFF
, 
	mBUSY_UPDATE
 } 
	tbusy_t
;

63 íum { 
	mCONF_NO
, 
	mCONF_QUIT
, 
	mCONF_YES
 } 
	tc⁄f_t
;

66 íum { 
	mNOTSET
, 
	mFORWARD
, 
	mBACKWARD
 } 
	tdú_t
;

69 íum { 
	mLINE_APPEND
, 
	mLINE_DELETE
, 
	mLINE_INSERT
, 
	mLINE_RESET
 } 
	t ›_t
;

72 íum { 
	mLOCK_FAILED
, 
	mLOCK_SUCCESS
, 
	mLOCK_UNAVAIL
 } 
	tlockr_t
;

75 íum { 
	mSEQ_ABBREV
, 
	mSEQ_COMMAND
, 
	mSEQ_INPUT
 } 
	t£q_t
;

80 
	~"key.h
"

81 
	~"¨gs.h
"

82 
	~"›ti⁄s.h
"

84 
	~"msg.h
"

85 
	~"cut.h
"

86 
	~"£q.h
"

87 
	~"utû.h
"

88 
	~"m¨k.h
"

89 
	~"../ex/ex.h
"

90 
	~"gs.h
"

91 
	~"s¸ìn.h
"

92 
	~"exf.h
"

93 
	~"log.h
"

94 
	~"mem.h
"

96 
	~"com_exã∫.h
"

	@common/cut.c

10 
	~"c⁄fig.h
"

12 #i‚de‡
löt


13 c⁄° 
	gsccsid
[] = "@(#)cut.c 10.10 (Berkeley) 9/15/96";

16 
	~<sys/ty≥s.h
>

17 
	~<sys/queue.h
>

19 
	~<bô°rög.h
>

20 
	~<˘y≥.h
>

21 
	~<î∫o.h
>

22 
	~<f˙é.h
>

23 
	~<limôs.h
>

24 
	~<°dio.h
>

25 
	~<°dlib.h
>

26 
	~<°rög.h
>

28 
	~"comm⁄.h
"

30 
cb_rŸ©e
 
__P
((
SCR
 *));

67 
	$cut
(
•
, 
«mï
, 
fm
, 
tm
, 
Êags
)

68 
SCR
 *
•
;

69 
CHAR_T
 *
«mï
;

70 
MARK
 *
fm
, *
tm
;

71 
Êags
;

73 
CB
 *
cbp
;

74 
CHAR_T
 
«me
;

75 
ª˙o_t
 
 o
;

76 
≠≥nd
, 
c›y_⁄e
, 
c›y_def
;

100 
≠≥nd
 = 
c›y_⁄e
 = 
c›y_def
 = 0;

101 i‡(
«mï
 !
NULL
) {

102 
«me
 = *
«mï
;

103 i‡(
	`LF_ISSET
(
CUT_NUMREQ
Ë|| LF_ISSET(
CUT_NUMOPT
) &&

104 (
	`LF_ISSET
(
CUT_LINEMODE
Ë|| 
fm
->
 o
 !
tm
->lno)) {

105 
c›y_⁄e
 = 1;

106 
	`cb_rŸ©e
(
•
);

108 i‡((
≠≥nd
 = 
	`isuµî
(
«me
)) == 1) {

109 i‡(!
c›y_⁄e
)

110 
c›y_def
 = 1;

111 
«me
 = 
	`tﬁowî
(name);

113 
«mecb
: 
	`CBNAME
(
•
, 
cbp
, 
«me
);

114 } i‡(
	`LF_ISSET
(
CUT_NUMREQ
Ë|| LF_ISSET(
CUT_NUMOPT
) &&

115 (
	`LF_ISSET
(
CUT_LINEMODE
Ë|| 
fm
->
 o
 !
tm
->lno)) {

116 
«me
 = '1';

117 
	`cb_rŸ©e
(
•
);

118 
«mecb
;

120 
cbp
 = &
•
->
gp
->
dcb_°‹e
;

122 
c›ylo›
:

127 i‡(
cbp
 =
NULL
) {

128 
	`CALLOC_RET
(
•
, 
cbp
, 
CB
 *, 1, (CB));

129 
cbp
->
«me
 =Çame;

130 
	`CIRCLEQ_INIT
(&
cbp
->
ãxtq
);

131 
	`LIST_INSERT_HEAD
(&
•
->
gp
->
cutq
, 
cbp
, 
q
);

132 } i‡(!
≠≥nd
) {

133 
	`ãxt_l‰ì
(&
cbp
->
ãxtq
);

134 
cbp
->
Àn
 = 0;

135 
cbp
->
Êags
 = 0;

139 
	#ENTIRE_LINE
 0

	)

141 i‡(
	`LF_ISSET
(
CUT_LINEMODE
)) {

142 
cbp
->
Êags
 |
CB_LMODE
;

143 
 o
 = 
fm
-> o;Ünÿ<
tm
->lno; ++lno)

144 i‡(
	`cut_löe
(
•
, 
 o
, 0, 0, 
cbp
))

145 
cut_löe_îr
;

151 i‡(
	`cut_löe
(
•
, 
fm
->
 o
, fm->
˙o
, fm-> ÿ!
tm
->lno ?

152 
ENTIRE_LINE
 : (
tm
->
˙o
 - 
fm
->˙oË+ 1, 
cbp
))

153 
cut_löe_îr
;

156 
 o
 = 
fm
-> o; ++ ÿ< 
tm
->lno;)

157 i‡(
	`cut_löe
(
•
, 
 o
, 0, 
ENTIRE_LINE
, 
cbp
))

158 
cut_löe_îr
;

161 i‡(
tm
->
 o
 !
fm
->lno &&

162 
	`cut_löe
(
•
, 
 o
, 0, 
tm
->
˙o
 + 1, 
cbp
))

163 
cut_löe_îr
;

166 
≠≥nd
 = 0;

167 
•
->
gp
->
dcbp
 = 
cbp
;

169 i‡(
c›y_⁄e
) {

170 
«me
 = '1';

171 
	`CBNAME
(
•
, 
cbp
, 
«me
);

172 
c›y_⁄e
 = 0;

173 
c›ylo›
;

175 i‡(
c›y_def
) {

176 
cbp
 = &
•
->
gp
->
dcb_°‹e
;

177 
c›y_def
 = 0;

178 
c›ylo›
;

182 
cut_löe_îr
:

183 
	`ãxt_l‰ì
(&
cbp
->
ãxtq
);

184 
cbp
->
Àn
 = 0;

185 
cbp
->
Êags
 = 0;

187 
	}
}

194 
	$cb_rŸ©e
(
•
)

195 
SCR
 *
•
;

197 
CB
 *
cbp
, *
dñ_cbp
;

199 
dñ_cbp
 = 
NULL
;

200 
cbp
 = 
•
->
gp
->
cutq
.
lh_fú°
; cb∞!
NULL
; cb∞cbp->
q
.
À_√xt
)

201 
cbp
->
«me
) {

203 
cbp
->
«me
 = '2';

206 
cbp
->
«me
 = '3';

209 
cbp
->
«me
 = '4';

212 
cbp
->
«me
 = '5';

215 
cbp
->
«me
 = '6';

218 
cbp
->
«me
 = '7';

221 
cbp
->
«me
 = '8';

224 
cbp
->
«me
 = '9';

227 
dñ_cbp
 = 
cbp
;

230 i‡(
dñ_cbp
 !
NULL
) {

231 
	`LIST_REMOVE
(
dñ_cbp
, 
q
);

232 
	`ãxt_l‰ì
(&
dñ_cbp
->
ãxtq
);

233 
	`‰ì
(
dñ_cbp
);

235 
	}
}

244 
	$cut_löe
(
•
, 
 o
, 
f˙o
, 
˛í
, 
cbp
)

245 
SCR
 *
•
;

246 
ª˙o_t
 
 o
;

247 
size_t
 
f˙o
, 
˛í
;

248 
CB
 *
cbp
;

250 
TEXT
 *
ç
;

251 
size_t
 
Àn
;

252 *
p
;

255 i‡(
	`db_gë
(
•
, 
 o
, 
DBG_FATAL
, &
p
, &
Àn
))

259 i‡((
ç
 = 
	`ãxt_öô
(
•
, 
NULL
, 0, 
Àn
)) == NULL)

266 i‡(
Àn
 != 0) {

267 i‡(
˛í
 == 0)

268 
˛í
 = 
Àn
 - 
f˙o
;

269 
	`mem˝y
(
ç
->
lb
, 
p
 + 
f˙o
, 
˛í
);

270 
ç
->
Àn
 = 
˛í
;

274 
	`CIRCLEQ_INSERT_TAIL
(&
cbp
->
ãxtq
, 
ç
, 
q
);

275 
cbp
->
Àn
 +
ç
->len;

278 
	}
}

287 
	$cut_˛o£
(
gp
)

288 
GS
 *
gp
;

290 
CB
 *
cbp
;

293 (
cbp
 = 
gp
->
cutq
.
lh_fú°
Ë!
NULL
) {

294 i‡(
cbp
->
ãxtq
.
cqh_fú°
 != (*)&cbp->textq)

295 
	`ãxt_l‰ì
(&
cbp
->
ãxtq
);

296 
	`LIST_REMOVE
(
cbp
, 
q
);

297 
	`‰ì
(
cbp
);

301 
cbp
 = &
gp
->
dcb_°‹e
;

302 i‡(
cbp
->
ãxtq
.
cqh_fú°
 != (*)&cbp->textq)

303 
	`ãxt_l‰ì
(&
cbp
->
ãxtq
);

304 
	}
}

312 
TEXT
 *

313 
	$ãxt_öô
(
•
, 
p
, 
Àn
, 
tŸÆ_Àn
)

314 
SCR
 *
•
;

315 c⁄° *
p
;

316 
size_t
 
Àn
, 
tŸÆ_Àn
;

318 
TEXT
 *
ç
;

320 
	`CALLOC
(
•
, 
ç
, 
TEXT
 *, 1, (TEXT));

321 i‡(
ç
 =
NULL
)

322  (
NULL
);

324 i‡((
ç
->
lb_Àn
 = 
tŸÆ_Àn
) != 0) {

325 
	`MALLOC
(
•
, 
ç
->
lb
, 
CHAR_T
 *,Åp->
lb_Àn
);

326 i‡(
ç
->
lb
 =
NULL
) {

327 
	`‰ì
(
ç
);

328  (
NULL
);

330 i‡(
p
 !
NULL
 && 
Àn
 != 0)

331 
	`mem˝y
(
ç
->
lb
, 
p
, 
Àn
);

333 
ç
->
Àn
 =Üen;

334  (
ç
);

335 
	}
}

344 
	$ãxt_l‰ì
(
hódp
)

345 
TEXTH
 *
hódp
;

347 
TEXT
 *
ç
;

349 (
ç
 = 
hódp
->
cqh_fú°
) != (*)headp) {

350 
	`CIRCLEQ_REMOVE
(
hódp
, 
ç
, 
q
);

351 
	`ãxt_‰ì
(
ç
);

353 
	}
}

362 
	$ãxt_‰ì
(
ç
)

363 
TEXT
 *
ç
;

365 i‡(
ç
->
lb
 !
NULL
)

366 
	`‰ì
(
ç
->
lb
);

367 
	`‰ì
(
ç
);

368 
	}
}

	@common/cut.h

12 
_ãxth
 
	tTEXTH
;

13 
CIRCLEQ_HEAD
(
_ãxth
, 
_ãxt
);

16 
	s_cb
 {

17 
LIST_ENTRY
(
_cb
Ë
	mq
;

18 
TEXTH
 
	mãxtq
;

19 
CHAR_T
 
	m«me
;

20 
size_t
 
	mÀn
;

22 
	#CB_LMODE
 0x01

	)

23 
u_öt8_t
 
	mÊags
;

27 
	s_ãxt
 {

28 
CIRCLEQ_ENTRY
(
_ãxt
Ë
	mq
;

29 *
	mlb
;

30 
size_t
 
	mlb_Àn
;

31 
size_t
 
	mÀn
;

34 
ª˙o_t
 
	m o
;

35 
size_t
 
	m˙o
;

36 
size_t
 
	mai
;

37 
size_t
 
	mö£π
;

38 
size_t
 
	moff£t
;

39 
size_t
 
	mowrôe
;

40 
size_t
 
	mR_îa£
;

41 
size_t
 
	msv_˙o
;

42 
size_t
 
	msv_Àn
;

57 
	mTERM_BS
, 
	mTERM_CEDIT
, 
	mTERM_CR
, 
	mTERM_ESC
, 
	mTERM_OK
, 
	mTERM_SEARCH


58 } 
	mãrm
;

65 
	#CBNAME
(
•
, 
cbp
, 
nch
) { \

66 
CHAR_T
 
L__«me
; \

67 
L__«me
 = 
	`isuµî
(
nch
Ë? 
	`tﬁowî
(nch) : (nch); \

68 
cbp
 = 
•
->
gp
->
cutq
.
lh_fú°
; \

69 
cbp
 !
NULL
; cb∞cbp->
q
.
À_√xt
) \

70 i‡(
cbp
->
«me
 =
L__«me
) \

72 }

	)

75 
	#CUT_LINEMODE
 0x01

	)

76 
	#CUT_NUMOPT
 0x02

	)

77 
	#CUT_NUMREQ
 0x04

	)

	@common/delete.c

10 
	~"c⁄fig.h
"

12 #i‚de‡
löt


13 c⁄° 
	gsccsid
[] = "@(#)delete.c 10.12 (Berkeley) 10/23/96";

16 
	~<sys/ty≥s.h
>

17 
	~<sys/queue.h
>

19 
	~<bô°rög.h
>

20 
	~<î∫o.h
>

21 
	~<limôs.h
>

22 
	~<°dio.h
>

23 
	~<°dlib.h
>

24 
	~<°rög.h
>

26 
	~"comm⁄.h
"

35 
	$dñ
(
•
, 
fm
, 
tm
, 
lmode
)

36 
SCR
 *
•
;

37 
MARK
 *
fm
, *
tm
;

38 
lmode
;

40 
ª˙o_t
 
 o
;

41 
size_t
 
bÀn
, 
Àn
, 
∆í
, 
éí
;

42 *
bp
, *
p
;

43 
eof
, 
rvÆ
;

45 
bp
 = 
NULL
;

48 i‡(
lmode
) {

49 
 o
 = 
tm
-> o;Ünÿ>
fm
->lno; --lno) {

50 i‡(
	`db_dñëe
(
•
, 
 o
))

52 ++
•
->
Ωéöes
[
L_DELETED
];

53 i‡(
 o
 % 
INTERRUPT_CHECK
 =0 && 
	`INTERRUPTED
(
•
))

56 
d⁄e
;

63 i‡(
	`db_œ°
(
•
, &
 o
))

65 i‡(
tm
->
 o
 >=Üno) {

66 i‡(
tm
->
 o
 ==Üno) {

67 i‡(
	`db_gë
(
•
, 
 o
, 
DBG_FATAL
, &
p
, &
Àn
))

69 
eof
 = 
tm
->
˙o
 >
Àn
 ? 1 : 0;

71 
eof
 = 1;

72 i‡(
eof
) {

73 
 o
 = 
tm
-> o;Ünÿ> 
fm
->lno; --lno) {

74 i‡(
	`db_dñëe
(
•
, 
 o
))

76 ++
•
->
Ωéöes
[
L_DELETED
];

77 i‡(
 o
 %

78 
INTERRUPT_CHECK
 =0 && 
	`INTERRUPTED
(
•
))

81 i‡(
	`db_gë
(
•
, 
fm
->
 o
, 
DBG_FATAL
, &
p
, &
Àn
))

83 
	`GET_SPACE_RET
(
•
, 
bp
, 
bÀn
, 
fm
->
˙o
);

84 
	`mem˝y
(
bp
, 
p
, 
fm
->
˙o
);

85 i‡(
	`db_£t
(
•
, 
fm
->
 o
, 
bp
, fm->
˙o
))

87 
d⁄e
;

92 i‡(
tm
->
 o
 =
fm
->lno) {

93 i‡(
	`db_gë
(
•
, 
fm
->
 o
, 
DBG_FATAL
, &
p
, &
Àn
))

95 
	`GET_SPACE_RET
(
•
, 
bp
, 
bÀn
, 
Àn
);

96 i‡(
fm
->
˙o
 != 0)

97 
	`mem˝y
(
bp
, 
p
, 
fm
->
˙o
);

98 
	`mem˝y
(
bp
 + 
fm
->
˙o
, 
p
 + (
tm
->˙ÿ+ 1), 
Àn
 - (tm->cno + 1));

99 i‡(
	`db_£t
(
•
, 
fm
->
 o
,

100 
bp
, 
Àn
 - ((
tm
->
˙o
 - 
fm
->cno) + 1)))

101 
îr
;

102 
d⁄e
;

110 i‡((
éí
 = 
fm
->
˙o
) != 0) {

111 i‡(
	`db_gë
(
•
, 
fm
->
 o
, 
DBG_FATAL
, &
p
, 
NULL
))

113 
	`GET_SPACE_RET
(
•
, 
bp
, 
bÀn
, 
éí
 + 256);

114 
	`mem˝y
(
bp
, 
p
, 
éí
);

118 i‡(
	`db_gë
(
•
, 
tm
->
 o
, 
DBG_FATAL
, &
p
, &
Àn
))

119 
îr
;

120 i‡(
Àn
 !0 && 
tm
->
˙o
 !=Üen - 1) {

127 
∆í
 = (
Àn
 - (
tm
->
˙o
 + 1)Ë+ 
éí
;

128 i‡(
éí
 > 
∆í
) {

129 
	`msgq
(
•
, 
M_ERR
, "002|LineÜength overflow");

130 
îr
;

132 i‡(
éí
 == 0) {

133 
	`GET_SPACE_RET
(
•
, 
bp
, 
bÀn
, 
∆í
);

135 
	`ADD_SPACE_RET
(
•
, 
bp
, 
bÀn
, 
∆í
);

137 
	`mem˝y
(
bp
 + 
éí
, 
p
 + (
tm
->
˙o
 + 1), 
Àn
 - (tm->cno + 1));

138 
éí
 +
Àn
 - (
tm
->
˙o
 + 1);

142 i‡(
	`db_£t
(
•
, 
fm
->
 o
, 
bp
, 
éí
))

143 
îr
;

146 
 o
 = 
tm
-> o;Ünÿ> 
fm
->lno; --lno) {

147 i‡(
	`db_dñëe
(
•
, 
 o
))

148 
îr
;

149 ++
•
->
Ωéöes
[
L_DELETED
];

150 i‡(
 o
 % 
INTERRUPT_CHECK
 =0 && 
	`INTERRUPTED
(
•
))

154 
d⁄e
: 
rvÆ
 = 0;

156 
îr
: 
rvÆ
 = 1;

157 i‡(
bp
 !
NULL
)

158 
	`FREE_SPACE
(
•
, 
bp
, 
bÀn
);

159  (
rvÆ
);

160 
	}
}

	@common/exf.c

10 
	~"c⁄fig.h
"

12 #i‚de‡
löt


13 c⁄° 
	gsccsid
[] = "@(#)exf.c 10.49 (Berkeley) 10/10/96";

16 
	~<sys/∑øm.h
>

17 
	~<sys/ty≥s.h
>

18 
	~<sys/queue.h
>

19 
	~<sys/°©.h
>

26 
	~<sys/fûe.h
>

28 
	~<bô°rög.h
>

29 
	~<dúít.h
>

30 
	~<î∫o.h
>

31 
	~<f˙é.h
>

32 
	~<limôs.h
>

33 
	~<°dio.h
>

34 
	~<°dlib.h
>

35 
	~<°rög.h
>

36 
	~<uni°d.h
>

38 
	~"comm⁄.h
"

40 
fûe_backup
 
__P
((
SCR
 *, *, *));

41 
fûe_cöô
 
__P
((
SCR
 *));

42 
fûe_commít
 
__P
((
SCR
 *));

43 
fûe_•©h
 
__P
((
SCR
 *, 
FREF
 *, 
°©
 *, *));

60 
FREF
 *

61 
	$fûe_add
(
•
, 
«me
)

62 
SCR
 *
•
;

63 
CHAR_T
 *
«me
;

65 
GS
 *
gp
;

66 
FREF
 *
‰p
, *
t‰p
;

77 
gp
 = 
•
->gp;

78 i‡(
«me
 !
NULL
)

79 
‰p
 = 
gp
->
‰efq
.
cqh_fú°
;

80 
‰p
 !(
FREF
 *)&
gp
->
‰efq
; fΩ = fΩ->
q
.
cqe_√xt
) {

81 i‡(
‰p
->
«me
 =
NULL
) {

82 
t‰p
 = 
‰p
->
q
.
cqe_√xt
;

83 
	`CIRCLEQ_REMOVE
(&
gp
->
‰efq
, 
‰p
, 
q
);

84 i‡(
‰p
->
«me
 !
NULL
)

85 
	`‰ì
(
‰p
->
«me
);

86 
	`‰ì
(
‰p
);

87 
‰p
 = 
t‰p
;

90 i‡(!
	`°rcmp
(
‰p
->
«me
,Çame))

91  (
‰p
);

95 
	`CALLOC
(
•
, 
‰p
, 
FREF
 *, 1, (FREF));

96 i‡(
‰p
 =
NULL
)

97  (
NULL
);

104 i‡(
«me
 !
NULL
 && 
	`°rcmp
“ame, 
TEMPORARY_FILE_STRING
) &&

105 (
‰p
->
«me
 = 
	`°rdup
“ame)Ë=
NULL
) {

106 
	`‰ì
(
‰p
);

107 
	`msgq
(
•
, 
M_SYSERR
, 
NULL
);

108  (
NULL
);

112 
	`CIRCLEQ_INSERT_TAIL
(&
gp
->
‰efq
, 
‰p
, 
q
);

114  (
‰p
);

115 
	}
}

126 
	$fûe_öô
(
•
, 
‰p
, 
rcv_«me
, 
Êags
)

127 
SCR
 *
•
;

128 
FREF
 *
‰p
;

129 *
rcv_«me
;

130 
Êags
;

132 
EXF
 *
ï
;

133 
RECNOINFO
 
oöfo
;

134 
°©
 
sb
;

135 
size_t
 
psize
;

136 
fd
, 
exi°s
, 
›í_îr
, 
ªad⁄ly
;

137 *
⁄ame
, 
äame
[
MAXPATHLEN
];

139 
›í_îr
 = 
ªad⁄ly
 = 0;

148 i‡(
	`F_ISSET
(
‰p
, 
FR_RECOVER
)) {

149 
	`F_CLR
(
‰p
, 
FR_RECOVER
);

150  (
	`rcv_ªad
(
•
, 
‰p
));

157 
	`F_CLR
(
‰p
, ~
FR_CURSORSET
);

165 
	`CALLOC_RET
(
•
, 
ï
, 
EXF
 *, 1, (EXF));

166 
ï
->
c_ o
 =Ép->
c_∆öes
 = 
OOBLNO
;

167 
ï
->
rcv_fd
 =Ép->
f˙é_fd
 = -1;

168 
	`F_SET
(
ï
, 
F_FIRSTMODIFY
);

174 i‡(
	`fûe_•©h
(
•
, 
‰p
, &
sb
, &
exi°s
))

183 
⁄ame
 = 
‰p
->
«me
;

184 i‡(
	`LF_ISSET
(
FS_OPENERR
Ë|| 
⁄ame
 =
NULL
 || !
exi°s
) {

185 i‡(
	`›ts_em±y
(
•
, 
O_DIRECTORY
, 0))

186 
îr
;

187 ()
	`¢¥ötf
(
äame
, (tname),

188 "%s/vi.XXXXXX", 
	`O_STR
(
•
, 
O_DIRECTORY
));

189 i‡((
fd
 = 
	`mk°emp
(
äame
)) == -1) {

190 
	`msgq
(
•
, 
M_SYSERR
,

192 
îr
;

194 ()
	`˛o£
(
fd
);

196 i‡(
‰p
->
«me
 =
NULL
)

197 
	`F_SET
(
‰p
, 
FR_TMPFILE
);

198 i‡((
‰p
->
äame
 = 
	`°rdup
—«me)Ë=
NULL
 ||

199 
‰p
->
«me
 =
NULL
 && (‰p->«mê
	`°rdup
(
äame
)) == NULL) {

200 i‡(
‰p
->
äame
 !
NULL
)

201 
	`‰ì
(
‰p
->
äame
);

202 
	`msgq
(
•
, 
M_SYSERR
, 
NULL
);

203 ()
	`u∆ök
(
äame
);

204 
îr
;

206 
⁄ame
 = 
‰p
->
äame
;

207 
psize
 = 1024;

208 i‡(!
	`LF_ISSET
(
FS_OPENERR
))

209 
	`F_SET
(
‰p
, 
FR_NEWFILE
);

211 
	`time
(&
ï
->
mtime
);

219 
psize
 = ((
sb
.
°_size
 / 15) + 1023) / 1024;

220 i‡(
psize
 > 10)

221 
psize
 = 10;

222 i‡(
psize
 == 0)

223 
psize
 = 1;

224 
psize
 *= 1024;

226 
	`F_SET
(
ï
, 
F_DEVSET
);

227 
ï
->
mdev
 = 
sb
.
°_dev
;

228 
ï
->
möode
 = 
sb
.
°_öo
;

230 
ï
->
mtime
 = 
sb
.
°_mtime
;

232 i‡(!
	`S_ISREG
(
sb
.
°_mode
))

233 
	`msgq_°r
(
•
, 
M_ERR
, 
⁄ame
,

238 
	`mem£t
(&
oöfo
, 0, (
RECNOINFO
));

239 
oöfo
.
bvÆ
 = '\n';

240 
oöfo
.
psize
 =Ösize;

241 
oöfo
.
Êags
 = 
	`F_ISSET
(
•
->
gp
, 
G_SNAPSHOT
Ë? 
R_SNAPSHOT
 : 0;

242 i‡(
rcv_«me
 =
NULL
) {

243 i‡(!
	`rcv_tmp
(
•
, 
ï
, 
‰p
->
«me
))

244 
oöfo
.
b‚ame
 = 
ï
->
rcv_∑th
;

246 i‡((
ï
->
rcv_∑th
 = 
	`°rdup
(
rcv_«me
)Ë=
NULL
) {

247 
	`msgq
(
•
, 
M_SYSERR
, 
NULL
);

248 
îr
;

250 
oöfo
.
b‚ame
 = 
ï
->
rcv_∑th
;

251 
	`F_SET
(
ï
, 
F_MODIFIED
);

255 i‡((
ï
->
db
 = 
	`db›í
(
rcv_«me
 =
NULL
 ? 
⁄ame
 : NULL,

256 
O_NONBLOCK
 | 
O_RDONLY
,

257 
S_IRUSR
 | 
S_IWUSR
 | 
S_IRGRP
 | 
S_IWGRP
 | 
S_IROTH
 | 
S_IWOTH
,

258 
DB_RECNO
, &
oöfo
)Ë=
NULL
) {

259 
	`msgq_°r
(
•
,

260 
M_SYSERR
, 
rcv_«me
 =
NULL
 ? 
⁄ame
 :Ñcv_name, "%s");

268 
›í_îr
 = 1;

269 
€º
;

276 i‡(
	`m¨k_öô
(
•
, 
ï
Ë|| 
	`log_öô
(sp,Ép))

277 
îr
;

288 i‡(
	`LF_ISSET
(
FS_SETALT
))

289 
	`£t_Æt_«me
(
•
, sp->
‰p
 =
NULL
 ||

290 
	`F_ISSET
(
•
->
‰p
, 
FR_TMPFILE
Ë? 
NULL
 : sp->‰p->
«me
);

307 i‡(
•
->
ï
 !
NULL
) {

308 
	`F_SET
(
‰p
, 
FR_DONTDELETE
);

309 i‡(
	`fûe_íd
(
•
, 
NULL
, 
	`LF_ISSET
(
FS_FORCE
))) {

310 ()
	`fûe_íd
(
•
, 
ï
, 1);

311 
îr
;

313 
	`F_CLR
(
‰p
, 
FR_DONTDELETE
);

335 i‡(
rcv_«me
 =
NULL
)

336 
	`fûe_lock
(
•
, 
⁄ame
,

337 &
ï
->
f˙é_fd
,Ép->
db
->
	`fd
(ep->db), 0)) {

338 
LOCK_FAILED
:

339 
	`F_SET
(
‰p
, 
FR_UNLOCKED
);

341 
LOCK_UNAVAIL
:

342 
ªad⁄ly
 = 1;

343 
	`msgq_°r
(
•
, 
M_INFO
, 
⁄ame
,

346 
LOCK_SUCCESS
:

393 i‡(
ªad⁄ly
 || 
	`F_ISSET
(
•
, 
SC_READONLY
) ||

394 !
	`F_ISSET
(
‰p
, 
FR_NEWFILE
) &&

395 (!(
sb
.
°_mode
 & (
S_IWUSR
 | 
S_IWGRP
 | 
S_IWOTH
)) ||

396 
	`ac˚ss
(
‰p
->
«me
, 
W_OK
)))

397 
	`O_SET
(
•
, 
O_READONLY
);

399 
	`O_CLR
(
•
, 
O_READONLY
);

402 ++
ï
->
ªf˙t
;

403 
•
->
ï
 =Ép;

404 
•
->
‰p
 = frp;

407 
	`fûe_cöô
(
•
);

410 
	`F_SET
(
•
, 
SC_SCR_REFORMAT
 | 
SC_STATUS
);

414 
îr
: i‡(
‰p
->
«me
 !
NULL
) {

415 
	`‰ì
(
‰p
->
«me
);

416 
‰p
->
«me
 = 
NULL
;

418 i‡(
‰p
->
äame
 !
NULL
) {

419 ()
	`u∆ök
(
‰p
->
äame
);

420 
	`‰ì
(
‰p
->
äame
);

421 
‰p
->
äame
 = 
NULL
;

424 
€º
: i‡(
	`F_ISSET
(
ï
, 
F_RCV_ON
))

425 ()
	`u∆ök
(
ï
->
rcv_∑th
);

426 i‡(
ï
->
rcv_∑th
 !
NULL
) {

427 
	`‰ì
(
ï
->
rcv_∑th
);

428 
ï
->
rcv_∑th
 = 
NULL
;

430 i‡(
ï
->
db
 !
NULL
)

431 ()
ï
->
db
->
	`˛o£
(ep->db);

432 
	`‰ì
(
ï
);

434  (
›í_îr
 ?

435 
	`fûe_öô
(
•
, 
‰p
, 
rcv_«me
, 
Êags
 | 
FS_OPENERR
) : 1);

436 
	}
}

444 
	$fûe_•©h
(
•
, 
‰p
, 
sbp
, 
exi°•
)

445 
SCR
 *
•
;

446 
FREF
 *
‰p
;

447 
°©
 *
sbp
;

448 *
exi°•
;

450 
CHAR_T
 
ßvech
;

451 
size_t
 
Àn
;

452 
found
;

453 *
«me
, *
p
, *
t
, 
∑th
[
MAXPATHLEN
];

459 
«me
 = 
‰p
->name;

460 i‡(
«me
 =
NULL
) {

461 *
exi°•
 = 0;

464 i‡(
«me
[0] == '/' ||Çame[0] == '.' &&

465 (
«me
[1] == '/' ||Çame[1] == '.' &&Çame[2] == '/')) {

466 *
exi°•
 = !
	`°©
(
«me
, 
sbp
);

471 i‡(!
	`°©
(
«me
, 
sbp
)) {

472 *
exi°•
 = 1;

477 
found
 = 0, 
p
 = 
t
 = 
	`O_STR
(
•
, 
O_PATH
);; ++p)

478 i‡(*
p
 == ':' || *p == '\0') {

479 i‡(
t
 < 
p
 - 1) {

480 
ßvech
 = *
p
;

481 *
p
 = '\0';

482 
Àn
 = 
	`¢¥ötf
(
∑th
,

483 (
∑th
), "%s/%s", 
t
, 
«me
);

484 *
p
 = 
ßvech
;

485 i‡(!
	`°©
(
∑th
, 
sbp
)) {

486 
found
 = 1;

490 
t
 = 
p
 + 1;

491 i‡(*
p
 == '\0')

496 i‡(
found
) {

497 
	`MALLOC_RET
(
•
, 
p
, *, 
Àn
 + 1);

498 
	`mem˝y
(
p
, 
∑th
, 
Àn
 + 1);

499 
	`‰ì
(
‰p
->
«me
);

500 
‰p
->
«me
 = 
p
;

502 *
exi°•
 = 
found
;

504 
	}
}

511 
	$fûe_cöô
(
•
)

512 
SCR
 *
•
;

514 
GS
 *
gp
;

515 
MARK
 
m
;

516 
size_t
 
Àn
;

517 
nb
;

520 
•
->
 o
 = 1;

521 
•
->
˙o
 = 0;

542 
nb
 = 0;

543 
gp
 = 
•
->gp;

544 i‡(
gp
->
c_›ti⁄
 !
NULL
 && !
	`F_ISSET
(
•
->
‰p
, 
FR_NEWFILE
)) {

545 i‡(
	`db_œ°
(
•
, &•->
 o
))

547 i‡(
•
->
 o
 == 0) {

548 
•
->
 o
 = 1;

549 
•
->
˙o
 = 0;

551 i‡(
	`ex_run_°r
(
•
,

552 "-¯›ti⁄", 
gp
->
c_›ti⁄
, 
	`°æí
(gp->c_option), 1, 1))

554 
gp
->
c_›ti⁄
 = 
NULL
;

555 } i‡(
	`F_ISSET
(
•
, 
SC_EX
)) {

556 i‡(
	`db_œ°
(
•
, &•->
 o
))

558 i‡(
•
->
 o
 == 0) {

559 
•
->
 o
 = 1;

560 
•
->
˙o
 = 0;

563 
nb
 = 1;

565 i‡(
	`F_ISSET
(
•
->
‰p
, 
FR_CURSORSET
)) {

566 
•
->
 o
 = sp->
‰p
->lno;

567 
•
->
˙o
 = sp->
‰p
->cno;

570 
	`F_SET
(
•
, 
SC_SCR_CENTER
);

572 i‡(
	`O_ISSET
(
•
, 
O_COMMENT
))

573 
	`fûe_commít
(
•
);

575 
•
->
 o
 = 1;

576 
nb
 = 1;

578 i‡(
	`db_gë
(
•
, sp->
 o
, 0, 
NULL
, &
Àn
)) {

579 
•
->
 o
 = 1;

580 
•
->
˙o
 = 0;

583 i‡(!
nb
 && 
•
->
˙o
 > 
Àn
)

584 
nb
 = 1;

586 i‡(
nb
) {

587 
•
->
˙o
 = 0;

588 ()
	`n⁄bœnk
(
•
, sp->
 o
, &•->
˙o
);

595 
•
->
rcm
 = sp->
˙o
;

608 
m
.
 o
 = 
•
->lno;

609 
m
.
˙o
 = 
•
->cno;

610 ()
	`m¨k_£t
(
•
, 
ABSMARK1
, &
m
, 0);

611 
	}
}

620 
	$fûe_íd
(
•
, 
ï
, 
f‹˚
)

621 
SCR
 *
•
;

622 
EXF
 *
ï
;

623 
f‹˚
;

625 
FREF
 *
‰p
;

634 i‡(
ï
 =
NULL
)

635 
ï
 = 
•
->ep;

636 i‡(--
ï
->
ªf˙t
 != 0)

649 
‰p
 = 
•
->frp;

650 
‰p
->
 o
 = 
•
->lno;

651 
‰p
->
˙o
 = 
•
->cno;

652 
	`F_SET
(
‰p
, 
FR_CURSORSET
);

662 i‡(!
	`F_ISSET
(
‰p
, 
FR_DONTDELETE
Ë&& fΩ->
äame
 !
NULL
) {

663 i‡(
	`u∆ök
(
‰p
->
äame
))

664 
	`msgq_°r
(
•
, 
M_SYSERR
, 
‰p
->
äame
, "240|%s:Ñemove");

665 
	`‰ì
(
‰p
->
äame
);

666 
‰p
->
äame
 = 
NULL
;

667 i‡(
	`F_ISSET
(
‰p
, 
FR_TMPFILE
)) {

668 
	`CIRCLEQ_REMOVE
(&
•
->
gp
->
‰efq
, 
‰p
, 
q
);

669 i‡(
‰p
->
«me
 !
NULL
)

670 
	`‰ì
(
‰p
->
«me
);

671 
	`‰ì
(
‰p
);

673 
•
->
‰p
 = 
NULL
;

681 i‡(
ï
->
db
->
˛o£
 !
NULL
 &&Ép->db->
	`˛o£
”p->dbË&& !
f‹˚
) {

682 
	`msgq_°r
(
•
, 
M_SYSERR
, 
‰p
->
«me
, "241|%s: close");

683 ++
ï
->
ªf˙t
;

690 ()
	`log_íd
(
•
, 
ï
);

693 ()
	`m¨k_íd
(
•
, 
ï
);

704 i‡(!
	`F_ISSET
(
ï
, 
F_RCV_NORM
)) {

705 i‡(
ï
->
rcv_∑th
 !
NULL
 && 
	`u∆ök
(ep->rcv_path))

706 
	`msgq_°r
(
•
, 
M_SYSERR
, 
ï
->
rcv_∑th
, "242|%s:Ñemove");

707 i‡(
ï
->
rcv_m∑th
 !
NULL
 && 
	`u∆ök
(ep->rcv_mpath))

708 
	`msgq_°r
(
•
, 
M_SYSERR
, 
ï
->
rcv_m∑th
, "243|%s:Ñemove");

710 i‡(
ï
->
f˙é_fd
 != -1)

711 ()
	`˛o£
(
ï
->
f˙é_fd
);

712 i‡(
ï
->
rcv_fd
 != -1)

713 ()
	`˛o£
(
ï
->
rcv_fd
);

714 i‡(
ï
->
rcv_∑th
 !
NULL
)

715 
	`‰ì
(
ï
->
rcv_∑th
);

716 i‡(
ï
->
rcv_m∑th
 !
NULL
)

717 
	`‰ì
(
ï
->
rcv_m∑th
);

719 
	`‰ì
(
ï
);

721 
	}
}

732 
	$fûe_wrôe
(
•
, 
fm
, 
tm
, 
«me
, 
Êags
)

733 
SCR
 *
•
;

734 
MARK
 *
fm
, *
tm
;

735 *
«me
;

736 
Êags
;

738 íum { 
NEWFILE
, 
OLDFILE
 } 
mty≥
;

739 
°©
 
sb
;

740 
EXF
 *
ï
;

741 
FILE
 *
Â
;

742 
FREF
 *
‰p
;

743 
MARK
 
‰om
, 
to
;

744 
size_t
 
Àn
;

745 
u_l⁄g
 
∆no
, 
nch
;

746 
fd
, 
nf
, 
n⁄ame
, 
oÊags
, 
rvÆ
;

747 *
p
, *
s
, *
t
, 
buf
[
MAXPATHLEN
 + 64];

748 c⁄° *
msg°r
;

750 
ï
 = 
•
->ep;

751 
‰p
 = 
•
->frp;

757 i‡(
«me
 =
NULL
 || !
	`°rcmp
“ame, 
‰p
->name)) {

758 
n⁄ame
 = 1;

759 
«me
 = 
‰p
->name;

761 
n⁄ame
 = 0;

764 i‡(!
	`LF_ISSET
(
FS_FORCE
Ë&& 
n⁄ame
 && 
	`O_ISSET
(
•
, 
O_READONLY
)) {

765 
	`msgq
(
•
, 
M_ERR
, 
	`LF_ISSET
(
FS_POSSIBLE
) ?

772 i‡(!
	`LF_ISSET
(
FS_FORCE
 | 
FS_APPEND
Ë&& !
	`O_ISSET
(
•
, 
O_WRITEANY
)) {

774 i‡((!
n⁄ame
 || 
	`F_ISSET
(
‰p
, 
FR_NAMECHANGE
)) &&

775 !
	`°©
(
«me
, &
sb
)) {

776 
	`msgq_°r
(
•
, 
M_ERR
, 
«me
,

777 
	`LF_ISSET
(
FS_POSSIBLE
) ?

787 i‡(!
	`LF_ISSET
(
FS_ALL
Ë&& 
n⁄ame
 && !
	`°©
(
«me
, &
sb
)) {

788 
	`msgq
(
•
, 
M_ERR
, 
	`LF_ISSET
(
FS_POSSIBLE
) ?

806 i‡(
	`°©
(
«me
, &
sb
))

807 
mty≥
 = 
NEWFILE
;

809 i‡(
n⁄ame
 && !
	`LF_ISSET
(
FS_FORCE
 | 
FS_APPEND
) &&

810 (
	`F_ISSET
(
ï
, 
F_DEVSET
) &&

811 (
sb
.
°_dev
 !
ï
->
mdev
 || sb.
°_öo
 !ï->
möode
) ||

812 
sb
.
°_mtime
 !
ï
->
mtime
)) {

813 
	`msgq_°r
(
•
, 
M_ERR
, 
«me
, 
	`LF_ISSET
(
FS_POSSIBLE
) ?

819 
mty≥
 = 
OLDFILE
;

823 
oÊags
 = 
O_CREAT
 | 
O_WRONLY
 |

824 (
	`LF_ISSET
(
FS_APPEND
Ë? 
O_APPEND
 : 
O_TRUNC
);

827 i‡(!
	`›ts_em±y
(
•
, 
O_BACKUP
, 1) &&

828 
	`fûe_backup
(
•
, 
«me
, 
	`O_STR
(•, 
O_BACKUP
)Ë&& !
	`LF_ISSET
(
FS_FORCE
))

832 
SIGBLOCK
;

833 i‡((
fd
 = 
	`›í
(
«me
, 
oÊags
,

834 
S_IRUSR
 | 
S_IWUSR
 | 
S_IRGRP
 | 
S_IWGRP
 | 
S_IROTH
 | 
S_IWOTH
)) < 0) {

835 
	`msgq_°r
(
•
, 
M_SYSERR
, 
«me
, "%s");

836 
SIGUNBLOCK
;

839 
SIGUNBLOCK
;

842 i‡(!
n⁄ame
 && 
	`fûe_lock
(
•
, 
NULL
, NULL, 
fd
, 0Ë=
LOCK_UNAVAIL
)

843 
	`msgq_°r
(
•
, 
M_ERR
, 
«me
,

846 #i‡
__löux__


855 i‡(
	`LF_ISSET
(
FS_APPEND
Ë&& 
	`l£ek
(
fd
, (
off_t
)0, 
SEEK_END
) < 0) {

856 
	`msgq
(
•
, 
M_SYSERR
, 
«me
);

868 i‡((
Â
 = 
	`fd›í
(
fd
, 
	`LF_ISSET
(
FS_APPEND
Ë? "a" : "w")Ë=
NULL
) {

869 
	`msgq_°r
(
•
, 
M_SYSERR
, 
«me
, "%s");

870 ()
	`˛o£
(
fd
);

875 i‡(
fm
 =
NULL
) {

876 
‰om
.
 o
 = 1;

877 
‰om
.
˙o
 = 0;

878 
fm
 = &
‰om
;

879 i‡(
	`db_œ°
(
•
, &
to
.
 o
))

881 
to
.
˙o
 = 0;

882 
tm
 = &
to
;

885 
rvÆ
 = 
	`ex_wrôeÂ
(
•
, 
«me
, 
Â
, 
fm
, 
tm
, &
∆no
, &
nch
, 0);

892 i‡(
n⁄ame
)

893 i‡(
	`°©
(
«me
, &
sb
))

894 
	`time
(&
ï
->
mtime
);

896 
	`F_SET
(
ï
, 
F_DEVSET
);

897 
ï
->
mdev
 = 
sb
.
°_dev
;

898 
ï
->
möode
 = 
sb
.
°_öo
;

900 
ï
->
mtime
 = 
sb
.
°_mtime
;

907 i‡(
rvÆ
) {

908 i‡(!
	`LF_ISSET
(
FS_APPEND
))

909 
	`msgq_°r
(
•
, 
M_ERR
, 
«me
,

918 
	`F_CLR
(
‰p
, 
FR_NAMECHANGE
);

928 i‡(
	`LF_ISSET
(
FS_ALL
Ë&& !LF_ISSET(
FS_APPEND
)) {

929 
	`F_CLR
(
ï
, 
F_MODIFIED
);

930 i‡(
	`F_ISSET
(
‰p
, 
FR_TMPFILE
))

931 i‡(
n⁄ame
)

932 
	`F_SET
(
‰p
, 
FR_TMPEXIT
);

934 
	`F_CLR
(
‰p
, 
FR_TMPEXIT
);

937 
p
 = 
	`msg_¥öt
(
•
, 
«me
, &
nf
);

938 
mty≥
) {

939 
NEWFILE
:

940 
msg°r
 = 
	`msg_ˇt
(
•
,

941 "256|%s:Çew fûe: %luÜöes, %lu ch¨a˘îs", 
NULL
);

942 
Àn
 = 
	`¢¥ötf
(
buf
, (buf), 
msg°r
, 
p
, 
∆no
, 
nch
);

944 
OLDFILE
:

945 
msg°r
 = 
	`msg_ˇt
(
•
, 
	`LF_ISSET
(
FS_APPEND
) ?

947 "257|%s: %luÜöes, %lu ch¨a˘îs", 
NULL
);

948 
Àn
 = 
	`¢¥ötf
(
buf
, (buf), 
msg°r
, 
p
, 
∆no
, 
nch
);

951 
	`ab‹t
();

961 
s
 = 
buf
;

962 i‡(
Àn
 >
•
->
cﬁs
) {

963 
s
 = 
buf
, 
t
 = bu‡+ 
	`°æí
(
p
); s <Å &&

964 (*
s
 !'/' || 
Àn
 >
•
->
cﬁs
 - 3); ++s, --len);

965 i‡(
s
 =
t
)

966 
s
 = 
buf
;

968 *--
s
 = '.';

969 *--
s
 = '.';

970 *--
s
 = '.';

973 
	`msgq
(
•
, 
M_INFO
, 
s
);

974 i‡(
nf
)

975 
	`FREE_SPACE
(
•
, 
p
, 0);

977 
	}
}

992 
	$fûe_backup
(
•
, 
«me
, 
b«me
)

993 
SCR
 *
•
;

994 *
«me
, *
b«me
;

996 
dúít
 *
dp
;

997 
°©
 
sb
;

998 
DIR
 *
dúp
;

999 
EXCMD
 
cmd
;

1000 
off_t
 
off
;

1001 
size_t
 
bÀn
;

1002 
Êags
, 
maxnum
, 
ƒ
, 
num
, 
nw
, 
rfd
, 
wfd
, 
vîsi⁄
;

1003 *
bp
, *
e°r
, *
p
, *
p˘
, *
¶ash
, *
t
, *
w‚ame
, 
buf
[8192];

1005 
rfd
 = 
wfd
 = -1;

1006 
bp
 = 
e°r
 = 
w‚ame
 = 
NULL
;

1014 
î∫o
 = 0;

1015 i‡((
rfd
 = 
	`›í
(
«me
, 
O_RDONLY
, 0)) < 0) {

1016 i‡(
î∫o
 =
ENOENT
)

1018 
e°r
 = 
«me
;

1019 
îr
;

1033 
	`¨gv_öô
(
•
, &
cmd
);

1034 
	`ex_cöô
(&
cmd
, 0, 0, 0, 0, 0, 
NULL
);

1035 i‡(
b«me
[0] == 'N') {

1036 
vîsi⁄
 = 1;

1037 ++
b«me
;

1039 
vîsi⁄
 = 0;

1040 i‡(
	`¨gv_exp2
(
•
, &
cmd
, 
b«me
, 
	`°æí
(bname)))

1048 i‡(
cmd
.
¨gc
 != 1) {

1049 
	`msgq_°r
(
•
, 
M_ERR
, 
b«me
,

1051 ()
	`˛o£
(
rfd
);

1063 i‡(
vîsi⁄
) {

1064 
	`GET_SPACE_GOTO
(
•
, 
bp
, 
bÀn
, 
cmd
.
¨gv
[0]->
Àn
 * 2 + 50);

1065 
t
 = 
bp
, 
¶ash
 = 
NULL
,

1066 
p
 = 
cmd
.
¨gv
[0]->
bp
;Ö[0] !'\0'; *
t
++ = *p++)

1067 i‡(
p
[0] == '%') {

1068 i‡(
p
[1] != '%')

1069 *
t
++ = '%';

1070 } i‡(
p
[0] == '/')

1071 
¶ash
 = 
t
;

1072 
p˘
 = 
t
;

1073 *
t
++ = '%';

1074 *
t
++ = 'd';

1075 *
t
 = '\0';

1077 i‡(
¶ash
 =
NULL
) {

1078 
dúp
 = 
	`›ídú
(".");

1079 
p
 = 
bp
;

1081 *
¶ash
 = '\0';

1082 
dúp
 = 
	`›ídú
(
bp
);

1083 *
¶ash
 = '/';

1084 
p
 = 
¶ash
 + 1;

1086 i‡(
dúp
 =
NULL
) {

1087 
e°r
 = 
cmd
.
¨gv
[0]->
bp
;

1088 
îr
;

1091 
maxnum
 = 0; (
dp
 = 
	`ªaddú
(
dúp
)Ë!
NULL
;)

1092 i‡(
	`ssˇnf
(
dp
->
d_«me
, 
p
, &
num
Ë=1 &&Çum > 
maxnum
)

1093 
maxnum
 = 
num
;

1094 ()
	`˛o£dú
(
dúp
);

1097 ()
	`¢¥ötf
(
p˘
, 
bÀn
 - (p˘ - 
bp
), "%d", 
maxnum
 + 1);

1098 
w‚ame
 = 
bp
;

1100 
bp
 = 
NULL
;

1101 
w‚ame
 = 
cmd
.
¨gv
[0]->
bp
;

1105 i‡(
	`°©
(
w‚ame
, &
sb
) == 0) {

1106 i‡(!
	`S_ISREG
(
sb
.
°_mode
)) {

1107 
	`msgq_°r
(
•
, 
M_ERR
, 
b«me
,

1109 
îr
;

1111 i‡(
sb
.
°_uid
 !
	`gëuid
()) {

1112 
	`msgq_°r
(
•
, 
M_ERR
, 
b«me
, "260|%s:Çot owned by you");

1113 
îr
;

1115 i‡(
sb
.
°_mode
 & (
S_IRGRP
 | 
S_IWGRP
 | 
S_IROTH
 | 
S_IWOTH
)) {

1116 
	`msgq_°r
(
•
, 
M_ERR
, 
b«me
,

1118 
îr
;

1120 
Êags
 = 
O_TRUNC
;

1122 
Êags
 = 
O_CREAT
 | 
O_EXCL
;

1123 i‡((
wfd
 = 
	`›í
(
w‚ame
, 
Êags
 | 
O_WRONLY
, 
S_IRUSR
 | 
S_IWUSR
)) < 0) {

1124 
e°r
 = 
b«me
;

1125 
îr
;

1129 (
ƒ
 = 
	`ªad
(
rfd
, 
buf
, (buf))) > 0)

1130 
off
 = 0; 
ƒ
 !0;Ç∏-
nw
, off +=Çw)

1131 i‡((
nw
 = 
	`wrôe
(
wfd
, 
buf
 + 
off
, 
ƒ
)) < 0) {

1132 
e°r
 = 
w‚ame
;

1133 
îr
;

1135 i‡(
ƒ
 < 0) {

1136 
e°r
 = 
«me
;

1137 
îr
;

1140 i‡(
	`˛o£
(
rfd
)) {

1141 
e°r
 = 
«me
;

1142 
îr
;

1144 i‡(
	`˛o£
(
wfd
)) {

1145 
e°r
 = 
w‚ame
;

1146 
îr
;

1148 i‡(
bp
 !
NULL
)

1149 
	`FREE_SPACE
(
•
, 
bp
, 
bÀn
);

1152 
Æloc_îr
:

1153 
îr
: i‡(
rfd
 != -1)

1154 ()
	`˛o£
(
rfd
);

1155 i‡(
wfd
 != -1) {

1156 ()
	`u∆ök
(
w‚ame
);

1157 ()
	`˛o£
(
wfd
);

1159 i‡(
e°r
)

1160 
	`msgq_°r
(
•
, 
M_SYSERR
, 
e°r
, "%s");

1161 i‡(
bp
 !
NULL
)

1162 
	`FREE_SPACE
(
•
, 
bp
, 
bÀn
);

1164 
	}
}

1171 
	$fûe_commít
(
•
)

1172 
SCR
 *
•
;

1174 
ª˙o_t
 
 o
;

1175 
size_t
 
Àn
;

1176 *
p
;

1178 
 o
 = 1; !
	`db_gë
(
•
,Üno, 0, &
p
, &
Àn
) &&Üen == 0; ++lno);

1179 i‡(
p
 =
NULL
)

1181 i‡(
p
[0] == '#') {

1182 
	`F_SET
(
•
, 
SC_SCR_TOP
);

1183 !
	`db_gë
(
•
, ++
 o
, 0, &
p
, &
Àn
))

1184 i‡(
Àn
 < 1 || 
p
[0] != '#') {

1185 
•
->
 o
 =Üno;

1188 } i‡(
Àn
 > 1 && 
p
[0] == '/' &&Ö[1] == '*') {

1189 
	`F_SET
(
•
, 
SC_SCR_TOP
);

1191 ; 
Àn
 > 1; --Àn, ++
p
)

1192 i‡(
p
[0] == '*' &&Ö[1] == '/') {

1193 
•
->
 o
 =Üno;

1196 } !
	`db_gë
(
•
, ++
 o
, 0, &
p
, &
Àn
));

1197 } i‡(
Àn
 > 1 && 
p
[0] == '/' &&Ö[1] == '/') {

1198 
	`F_SET
(
•
, 
SC_SCR_TOP
);

1199 
p
 += 2;

1200 
Àn
 -= 2;

1202 ; 
Àn
 > 1; --Àn, ++
p
)

1203 i‡(
p
[0] == '/' &&Ö[1] == '/') {

1204 
•
->
 o
 =Üno;

1207 } !
	`db_gë
(
•
, ++
 o
, 0, &
p
, &
Àn
));

1209 
	}
}

1219 
	$fûe_m1
(
•
, 
f‹˚
, 
Êags
)

1220 
SCR
 *
•
;

1221 
f‹˚
, 
Êags
;

1223 
EXF
 *
ï
;

1225 
ï
 = 
•
->ep;

1228 i‡(
ï
 =
NULL
)

1237 i‡(
	`F_ISSET
(
ï
, 
F_MODIFIED
))

1238 i‡(
	`O_ISSET
(
•
, 
O_AUTOWRITE
)) {

1239 i‡(!
f‹˚
 && 
	`fûe_aw
(
•
, 
Êags
))

1241 } i‡(
ï
->
ªf˙t
 <1 && !
f‹˚
) {

1242 
	`msgq
(
•
, 
M_ERR
, 
	`LF_ISSET
(
FS_POSSIBLE
) ?

1248  (
	`fûe_m3
(
•
, 
f‹˚
));

1249 
	}
}

1259 
	$fûe_m2
(
•
, 
f‹˚
)

1260 
SCR
 *
•
;

1261 
f‹˚
;

1263 
EXF
 *
ï
;

1265 
ï
 = 
•
->ep;

1268 i‡(
ï
 =
NULL
)

1275 i‡(
	`F_ISSET
(
ï
, 
F_MODIFIED
Ë&&Ép->
ªf˙t
 <1 && !
f‹˚
) {

1276 
	`msgq
(
•
, 
M_ERR
,

1281  (
	`fûe_m3
(
•
, 
f‹˚
));

1282 
	}
}

1291 
	$fûe_m3
(
•
, 
f‹˚
)

1292 
SCR
 *
•
;

1293 
f‹˚
;

1295 
EXF
 *
ï
;

1297 
ï
 = 
•
->ep;

1300 i‡(
ï
 =
NULL
)

1310 i‡(
	`F_ISSET
(
•
->
‰p
, 
FR_TMPEXIT
Ë&& 
ï
->
ªf˙t
 <1 && !
f‹˚
) {

1311 
	`msgq
(
•
, 
M_ERR
,

1316 
	}
}

1327 
	$fûe_aw
(
•
, 
Êags
)

1328 
SCR
 *
•
;

1329 
Êags
;

1331 i‡(!
	`F_ISSET
(
•
->
ï
, 
F_MODIFIED
))

1333 i‡(!
	`O_ISSET
(
•
, 
O_AUTOWRITE
))

1345 i‡(
	`O_ISSET
(
•
, 
O_READONLY
)) {

1346 
	`msgq
(
•
, 
M_INFO
,

1350  (
	`fûe_wrôe
(
•
, 
NULL
, NULL, NULL, 
Êags
));

1351 
	}
}

1388 
	$£t_Æt_«me
(
•
, 
«me
)

1389 
SCR
 *
•
;

1390 *
«me
;

1392 i‡(
•
->
Æt_«me
 !
NULL
)

1393 
	`‰ì
(
•
->
Æt_«me
);

1394 i‡(
«me
 =
NULL
)

1395 
•
->
Æt_«me
 = 
NULL
;

1396 i‡((
•
->
Æt_«me
 = 
	`°rdup
(
«me
)Ë=
NULL
)

1397 
	`msgq
(
•
, 
M_SYSERR
, 
NULL
);

1398 
	}
}

1423 
lockr_t


1424 
	$fûe_lock
(
•
, 
«me
, 
fdp
, 
fd
, 
iswrôe
)

1425 
SCR
 *
•
;

1426 *
«me
;

1427 *
fdp
, 
fd
, 
iswrôe
;

1429 i‡(!
	`O_ISSET
(
•
, 
O_LOCKFILES
))

1430  (
LOCK_SUCCESS
);

1432 #ifde‡
HAVE_LOCK_FLOCK


1440 
î∫o
 = 0;

1441  (
	`Êock
(
fd
, 
LOCK_EX
 | 
LOCK_NB
Ë? 
î∫o
 =
EAGAIN


1442 #ifde‡
EWOULDBLOCK


1443 || 
î∫o
 =
EWOULDBLOCK


1445 ? 
LOCK_UNAVAIL
 : 
LOCK_FAILED
 : 
LOCK_SUCCESS
);

1447 #ifde‡
HAVE_LOCK_FCNTL


1449 
Êock
 
¨g
;

1450 
did›í
, 
svî∫o
;

1452 
¨g
.
l_ty≥
 = 
F_WRLCK
;

1453 
¨g
.
l_whí˚
 = 0;

1454 
¨g
.
l_°¨t
 =árg.
l_Àn
 = 0;

1455 
¨g
.
l_pid
 = 0;

1463 i‡(!
iswrôe
) {

1464 i‡(
«me
 =
NULL
 || 
fdp
 == NULL)

1465  (
LOCK_FAILED
);

1466 i‡((
fd
 = 
	`›í
(
«me
, 
O_RDWR
, 0)) == -1)

1467  (
LOCK_SUCCESS
);

1468 *
fdp
 = 
fd
;

1469 
did›í
 = 1;

1472 
î∫o
 = 0;

1473 i‡(!
	`f˙é
(
fd
, 
F_SETLK
, &
¨g
))

1474  (
LOCK_SUCCESS
);

1475 i‡(
did›í
) {

1476 
svî∫o
 = 
î∫o
;

1477 ()
	`˛o£
(
fd
);

1478 
î∫o
 = 
svî∫o
;

1488  (
î∫o
 =
EACCES
 ||Éºnÿ=
EAGAIN


1489 #ifde‡
EWOULDBLOCK


1490 || 
î∫o
 =
EWOULDBLOCK


1492 ? 
LOCK_UNAVAIL
 : 
LOCK_FAILED
);

1495 #i‡!
	`deföed
(
HAVE_LOCK_FLOCK
Ë&& !deföed(
HAVE_LOCK_FCNTL
)

1496  (
LOCK_SUCCESS
);

1498 
	}
}

	@common/exf.h

16 
	s_exf
 {

17 
	mªf˙t
;

20 
DB
 *
	mdb
;

21 *
	mc_Õ
;

22 
size_t
 
	mc_Àn
;

23 
ª˙o_t
 
	mc_ o
;

24 
ª˙o_t
 
	mc_∆öes
;

26 
DB
 *
	mlog
;

27 *
	ml_Õ
;

28 
size_t
 
	ml_Àn
;

29 
ª˙o_t
 
	ml_high
;

30 
ª˙o_t
 
	ml_cur
;

31 
MARK
 
	ml_curs‹
;

32 
dú_t
 
	mlundo
;

34 
LIST_HEAD
(
_m¨kh
, 
_lm¨k
Ë
	mm¨ks
;

40 
dev_t
 
	mmdev
;

41 
öo_t
 
	mmöode
;

42 
time_t
 
	mmtime
;

44 
	mf˙é_fd
;

50 
	#RCV_PERIOD
 120

	)

51 *
	mrcv_∑th
;

52 *
	mrcv_m∑th
;

53 
	mrcv_fd
;

55 
	#F_DEVSET
 0x001

	)

56 
	#F_FIRSTMODIFY
 0x002

	)

57 
	#F_MODIFIED
 0x004

	)

58 
	#F_MULTILOCK
 0x008

	)

59 
	#F_NOLOG
 0x010

	)

60 
	#F_RCV_NORM
 0x020

	)

61 
	#F_RCV_ON
 0x040

	)

62 
	#F_UNDO
 0x080

	)

63 
u_öt8_t
 
	mÊags
;

67 
	#DBG_FATAL
 0x001

	)

68 
	#DBG_NOCACHE
 0x002

	)

71 
	#FS_ALL
 0x001

	)

72 
	#FS_APPEND
 0x002

	)

73 
	#FS_FORCE
 0x004

	)

74 
	#FS_OPENERR
 0x008

	)

75 
	#FS_POSSIBLE
 0x010

	)

76 
	#FS_SETALT
 0x020

	)

79 
	#RCV_EMAIL
 0x01

	)

80 
	#RCV_ENDSESSION
 0x02

	)

81 
	#RCV_PRESERVE
 0x04

	)

82 
	#RCV_SNAPSHOT
 0x08

	)

	@common/gs.h

12 
	#TEMPORARY_FILE_STRING
 "/tmp"

	)

21 
	s_‰ef
 {

22 
CIRCLEQ_ENTRY
(
_‰ef
Ë
	mq
;

23 *
	m«me
;

24 *
	mäame
;

26 
ª˙o_t
 
	m o
;

27 
size_t
 
	m˙o
;

29 
	#FR_CURSORSET
 0x0001

	)

30 
	#FR_DONTDELETE
 0x0002

	)

31 
	#FR_EXNAMED
 0x0004

	)

32 
	#FR_NAMECHANGE
 0x0008

	)

33 
	#FR_NEWFILE
 0x0010

	)

34 
	#FR_RECOVER
 0x0020

	)

35 
	#FR_TMPEXIT
 0x0040

	)

36 
	#FR_TMPFILE
 0x0080

	)

37 
	#FR_UNLOCKED
 0x0100

	)

38 
u_öt16_t
 
	mÊags
;

42 íum { 
	mEX_TERM_CE
, 
	mEX_TERM_SCROLL
 } 
	texadj_t
;

45 íum { 
	mSA_ALTERNATE
, 
	mSA_INVERSE
 } 
	ts¸_©å_t
;

48 íum { 
	mKEY_VEOF
, 
	mKEY_VERASE
, 
	mKEY_VKILL
, 
	mKEY_VWERASE
 } 
	ts¸_keyvÆ_t
;

55 
	s_gs
 {

56 *
	m¥og«me
;

58 
	mid
;

59 
CIRCLEQ_HEAD
(
_dqh
, 
_s¸
Ë
	mdq
;

60 
CIRCLEQ_HEAD
(
_hqh
, 
_s¸
Ë
	mhq
;

62 
SCR
 *
	mc˛_•
;

64 *
	m≥æ_öãΩ
;

65 *
	mt˛_öãΩ
;

67 *
	m˛_¥iv©e
;

68 *
	mù_¥iv©e
;

69 *
	mtk_¥iv©e
;

72 
CIRCLEQ_HEAD
(
_‰efh
, 
_‰ef
Ë
	m‰efq
;

74 
	#GO_COLUMNS
 0

	)

75 
	#GO_LINES
 1

	)

76 
	#GO_SECURE
 2

	)

77 
	#GO_TERM
 3

	)

78 
OPTION
 
	m›ts
[
GO_TERM
 + 1];

80 
DB
 *
	mmsg
;

81 
MSGH
 
	mmsgq
;

82 
	#DEFAULT_NOPRINT
 '\1'

	)

83 
CHAR_T
 
	mn›röt
;

85 *
	mtmp_bp
;

86 
size_t
 
	mtmp_bÀn
;

92 
	#EXCMD_RUNNING
(
gp
Ë((gp)->
ecq
.
lh_fú°
->
˛í
 !0)

	)

93 
LIST_HEAD
(
_excmdh
, 
_excmd
Ë
	mecq
;

94 
EXCMD
 
	mexcmd
;

95 *
	mif_«me
;

96 
ª˙o_t
 
	mif_ o
;

98 *
	mc_›ti⁄
;

100 #ifde‡
DEBUG


101 
FILE
 *
	måa˚Â
;

104 
EVENT
 *
	mi_evít
;

105 
size_t
 
	mi_√Àm
;

106 
size_t
 
	mi_˙t
;

107 
size_t
 
	mi_√xt
;

109 
CB
 *
	mdcbp
;

110 
CB
 
	mdcb_°‹e
;

111 
LIST_HEAD
(
_cuth
, 
_cb
Ë
	mcutq
;

113 
	#MAX_BIT_SEQ
 128

	)

114 
LIST_HEAD
(
_£qh
, 
_£q
Ë
	m£qq
;

115 
bô°r_t
 
bô_de˛
(
£qb
, 
MAX_BIT_SEQ
);

117 
	#MAX_FAST_KEY
 254

	)

118 
	#KEY_LEN
(
•
, 
ch
) \

119 (()(
ch
Ë<
MAX_FAST_KEY
 ? \

120 
•
->
gp
->
˙ame
[()
ch
].
Àn
 : 
	`v_key_Àn
(•, ch))

	)

121 
	#KEY_NAME
(
•
, 
ch
) \

122 (()(
ch
Ë<
MAX_FAST_KEY
 ? \

123 
•
->
gp
->
˙ame
[()
ch
].
«me
 : 
	`v_key_«me
(•, ch))

	)

125 
CHAR_T
 
	m«me
[
MAX_CHARACTER_COLUMNS
 + 1];

126 
u_öt8_t
 
	mÀn
;

127 } 
	m˙ame
[
MAX_FAST_KEY
 + 1];

129 
	#KEY_VAL
(
•
, 
ch
) \

130 (()(
ch
Ë<
MAX_FAST_KEY
 ? \

131 
•
->
gp
->
•ecül_key
[()
ch
] : \

132 ()(
ch
Ë> 
•
->
gp
->
max_•ecül
 ? 0 : 
	`v_key_vÆ
(•,ch))

	)

133 
CHAR_T
 
	mmax_•ecül
;

134 
u_ch¨


135 
	m•ecül_key
[
MAX_FAST_KEY
 + 1];

138 
	#G_ABBREV
 0x0001

	)

139 
	#G_BELLSCHED
 0x0002

	)

140 
	#G_INTERRUPTED
 0x0004

	)

141 
	#G_RECOVER_SET
 0x0008

	)

142 
	#G_SCRIPTED
 0x0010

	)

143 
	#G_SCRWIN
 0x0020

	)

144 
	#G_SNAPSHOT
 0x0040

	)

145 
	#G_SRESTART
 0x0080

	)

146 
	#G_TMP_INUSE
 0x0100

	)

147 
u_öt32_t
 
	mÊags
;

151 (*
	ms¸_add°r
Ë
__P
((
SCR
 *, c⁄° *, 
size_t
));

153 (*
	ms¸_©å
Ë
__P
((
SCR
 *, 
s¸_©å_t
, ));

155 (*
	ms¸_baud
Ë
__P
((
SCR
 *, 
u_l⁄g
 *));

157 (*
	ms¸_bñl
Ë
__P
((
SCR
 *));

159 (*
	ms¸_busy
Ë
__P
((
SCR
 *, c⁄° *, 
busy_t
));

161 (*
	ms¸_˛π€ﬁ
Ë
__P
((
SCR
 *));

163 (*
	ms¸_curs‹
Ë
__P
((
SCR
 *, 
size_t
 *, size_t *));

165 (*
	ms¸_dñëñn
Ë
__P
((
SCR
 *));

167 (*
	ms¸_evít
Ë
__P
((
SCR
 *, 
EVENT
 *, 
u_öt32_t
, ));

169 (*
	ms¸_ex_adju°
Ë
__P
((
SCR
 *, 
exadj_t
));

170 (*
	ms¸_fm≠
)

171 
__P
((
SCR
 *, 
£q_t
, 
CHAR_T
 *, 
size_t
, CHAR_T *, size_t));

173 (*
	ms¸_keyvÆ
Ë
__P
((
SCR
 *, 
s¸_keyvÆ_t
, 
CHAR_T
 *, *));

175 (*
	ms¸_ö£π 
Ë
__P
((
SCR
 *));

177 (*
	ms¸_›tch™ge
Ë
__P
((
SCR
 *, , *, 
u_l⁄g
 *));

179 (*
	ms¸_move
Ë
__P
((
SCR
 *, 
size_t
, size_t));

181 (*
	ms¸_msg
Ë
__P
((
SCR
 *, 
mty≥_t
, *, 
size_t
));

183 (*
	ms¸_ª‰esh
Ë
__P
((
SCR
 *, ));

185 (*
	ms¸_ª«me
Ë
__P
((
SCR
 *, *, ));

187 (*
	ms¸_s¸ìn
Ë
__P
((
SCR
 *, 
u_öt32_t
));

189 (*
	ms¸_su•íd
Ë
__P
((
SCR
 *, *));

191 (*
	ms¸_ußge
Ë
__P
(());

200 #ifde‡
BLOCK_SIGNALS


201 
	~<sig«l.h
>

202 
sig£t_t
 
__sigblock£t
;

203 
	#SIGBLOCK
 \

204 ()
	`sig¥ocmask
(
SIG_BLOCK
, &
__sigblock£t
, 
NULL
)

	)

205 
	#SIGUNBLOCK
 \

206 ()
	`sig¥ocmask
(
SIG_UNBLOCK
, &
__sigblock£t
, 
NULL
);

	)

208 
	#SIGBLOCK


	)

209 
	#SIGUNBLOCK


	)

	@common/key.c

10 
	~"c⁄fig.h
"

12 #i‚de‡
löt


13 c⁄° 
	gsccsid
[] = "@(#)key.c 10.33 (Berkeley) 9/24/96";

16 
	~<sys/ty≥s.h
>

17 
	~<sys/queue.h
>

18 
	~<sys/time.h
>

20 
	~<bô°rög.h
>

21 
	~<˘y≥.h
>

22 
	~<î∫o.h
>

23 
	~<limôs.h
>

24 
	~<loˇÀ.h
>

25 
	~<°dio.h
>

26 
	~<°dlib.h
>

27 
	~<°rög.h
>

28 
	~<uni°d.h
>

30 
	~"comm⁄.h
"

31 
	~"../vi/vi.h
"

33 
v_evít_≠≥nd
 
__P
((
SCR
 *, 
EVENT
 *));

34 
v_evít_grow
 
__P
((
SCR
 *, ));

35 
v_key_cmp
 
__P
((const *, const *));

36 
v_keyvÆ
 
__P
((
SCR
 *, , 
s¸_keyvÆ_t
));

37 
v_sync
 
__P
((
SCR
 *, ));

64 
KEYLIST
 
	gkeyli°
[] = {

65 {
K_BACKSLASH
, '\\'},

66 {
K_CARAT
, '^'},

67 {
K_CNTRLD
, '\004'},

68 {
K_CNTRLR
, '\022'},

69 {
K_CNTRLT
, '\024'},

70 {
K_CNTRLZ
, '\032'},

71 {
K_COLON
, ':'},

72 {
K_CR
, '\r'},

73 {
K_ESCAPE
, '\033'},

74 {
K_FORMFEED
, '\f'},

75 {
K_HEXCHAR
, '\030'},

76 {
K_NL
, '\n'},

77 {
K_RIGHTBRACE
, '}'},

78 {
K_RIGHTPAREN
, ')'},

79 {
K_TAB
, '\t'},

80 {
K_VERASE
, '\b'},

81 {
K_VKILL
, '\025'},

82 {
K_VLNEXT
, '\021'},

83 {
K_VLNEXT
, '\026'},

84 {
K_VWERASE
, '\027'},

85 {
K_ZERO
, '0'},

87 
	#ADDITIONAL_CHARACTERS
 4

	)

88 {
K_NOTUSED
, 0},

89 {
K_NOTUSED
, 0},

90 {
K_NOTUSED
, 0},

91 {
K_NOTUSED
, 0},

93 
	gnkeyli°
 =

94 ((
keyli°
Ë/ (keyli°[0])Ë- 
ADDITIONAL_CHARACTERS
;

103 
	$v_key_öô
(
•
)

104 
SCR
 *
•
;

106 
CHAR_T
 
ch
;

107 
GS
 *
gp
;

108 
KEYLIST
 *
kp
;

109 
˙t
;

111 
gp
 = 
•
->gp;

118 ()
	`£éoˇÀ
(
LC_ALL
, "");

119 #i‡
__löux__


127 ()
	`£éoˇÀ
(
LC_CTYPE
, "");

129 
	`v_key_ûookup
(
•
);

131 
	`v_keyvÆ
(
•
, 
K_CNTRLD
, 
KEY_VEOF
);

132 
	`v_keyvÆ
(
•
, 
K_VERASE
, 
KEY_VERASE
);

133 
	`v_keyvÆ
(
•
, 
K_VKILL
, 
KEY_VKILL
);

134 
	`v_keyvÆ
(
•
, 
K_VWERASE
, 
KEY_VWERASE
);

137 
	`qs‹t
(
keyli°
, 
nkeyli°
, (keyli°[0]), 
v_key_cmp
);

140 
gp
->
max_•ecül
 = 0, 
kp
 = 
keyli°
, 
˙t
 = 
nkeyli°
; cnt--; ++kp) {

141 i‡(
gp
->
max_•ecül
 < 
kp
->
vÆue
)

142 
gp
->
max_•ecül
 = 
kp
->
vÆue
;

143 i‡(
kp
->
ch
 <
MAX_FAST_KEY
)

144 
gp
->
•ecül_key
[
kp
->
ch
] = kp->
vÆue
;

148 
ch
 = 1; ch <
MAX_CHAR_T
; ++ch)

149 i‡(!
	`i•röt
(
ch
)) {

150 
gp
->
n›röt
 = 
ch
;

153 i‡(
ch
 !
gp
->
n›röt
) {

154 
	`msgq
(
•
, 
M_ERR
, "079|NoÇon-printable character found");

158 
	}
}

169 
	$v_keyvÆ
(
•
, 
vÆ
, 
«me
)

170 
SCR
 *
•
;

171 
vÆ
;

172 
s¸_keyvÆ_t
 
«me
;

174 
KEYLIST
 *
kp
;

175 
CHAR_T
 
ch
;

176 
d√
;

179 i‡(
•
->
gp
->
	`s¸_keyvÆ
(•, 
«me
, &
ch
, &
d√
))

181 i‡(
d√
)

185 
kp
 = 
keyli°
; kp->
vÆue
 !
K_NOTUSED
; ++kp)

186 i‡(
kp
->
ch
 == ch) {

187 
kp
->
vÆue
 = 
vÆ
;

192 i‡(
kp
->
vÆue
 =
K_NOTUSED
) {

193 
keyli°
[
nkeyli°
].
ch
 = ch;

194 
keyli°
[
nkeyli°
].
vÆue
 = 
vÆ
;

195 ++
nkeyli°
;

197 
	}
}

206 
	$v_key_ûookup
(
•
)

207 
SCR
 *
•
;

209 
CHAR_T
 
ch
, *
p
, *
t
;

210 
GS
 *
gp
;

211 
size_t
 
Àn
;

213 
gp
 = 
•
->gp, 
ch
 = 0; ch <
MAX_FAST_KEY
; ++ch)

214 
p
 = 
gp
->
˙ame
[
ch
].
«me
, 
t
 = 
	`v_key_«me
(
•
, ch),

215 
Àn
 = 
gp
->
˙ame
[
ch
].À¿
•
->
˛í
;Üen--;)

216 *
p
++ = *
t
++;

217 
	}
}

226 
size_t


227 
	$v_key_Àn
(
•
, 
ch
)

228 
SCR
 *
•
;

229 
ARG_CHAR_T
 
ch
;

231 ()
	`v_key_«me
(
•
, 
ch
);

232  (
•
->
˛í
);

233 
	}
}

242 
CHAR_T
 *

243 
	$v_key_«me
(
•
, 
ach
)

244 
SCR
 *
•
;

245 
ARG_CHAR_T
 
ach
;

247 c⁄° 
CHAR_T
 
hexdigô
[] = "0123456789abcdef";

248 c⁄° 
CHAR_T
 
o˘digô
[] = "01234567";

249 
CHAR_T
 
ch
, *
chp
, 
mask
;

250 
size_t
 
Àn
;

251 
˙t
, 
shi·
;

253 
ch
 = 
ach
;

256 i‡((
chp
 = 
	`O_STR
(
•
, 
O_PRINT
)Ë!
NULL
)

257 ; *
chp
 != '\0'; ++chp)

258 i‡(*
chp
 =
ch
)

259 
¥
;

260 i‡((
chp
 = 
	`O_STR
(
•
, 
O_NOPRINT
)Ë!
NULL
)

261 ; *
chp
 != '\0'; ++chp)

262 i‡(*
chp
 =
ch
)

263 
n›r
;

284 i‡(
	`i•röt
(
ch
)) {

285 
¥
: 
•
->
˙ame
[0] = 
ch
;

286 
Àn
 = 1;

287 
d⁄e
;

289 
n›r
: i‡(
	`is˙ål
(
ch
) && (ch < 0x20 || ch == 0x7f)) {

290 
•
->
˙ame
[0] = '^';

291 
•
->
˙ame
[1] = 
ch
 == 0x7f ? '?' : '@' + ch;

292 
Àn
 = 2;

293 } i‡(
	`O_ISSET
(
•
, 
O_OCTAL
)) {

294 
	#BITS
 ((
CHAR_T
Ë* 8)

	)

295 
	#SHIFT
 (
BITS
 - BITS % 3)

	)

296 
	#TOPMASK
 (
BITS
 % 3 =2 ? 3 : 1Ë<< (BITS - BITS % 3)

	)

297 
•
->
˙ame
[0] = '\\';

298 
•
->
˙ame
[1] = 
o˘digô
[(
ch
 & 
TOPMASK
Ë>> 
SHIFT
];

299 
shi·
 = 
SHIFT
 - 3;

300 
Àn
 = 2, 
mask
 = 7 << (
SHIFT
 - 3),

301 
˙t
 = 
BITS
 / 3; c¡-- > 0; 
mask
 >>3, 
shi·
 -= 3)

302 
•
->
˙ame
[
Àn
++] = 
o˘digô
[(
ch
 & 
mask
Ë>> 
shi·
];

304 
•
->
˙ame
[0] = '\\';

305 
•
->
˙ame
[1] = 'x';

306 
Àn
 = 2, 
chp
 = (
u_öt8_t
 *)&
ch
,

307 
˙t
 = (
CHAR_T
); c¡-- > 0; ++
chp
) {

308 
•
->
˙ame
[
Àn
++] = 
hexdigô
[(*
chp
 & 0xf0) >> 4];

309 
•
->
˙ame
[
Àn
++] = 
hexdigô
[*
chp
 & 0x0f];

312 
d⁄e
: 
•
->
˙ame
[•->
˛í
 = 
Àn
] = '\0';

313  (
•
->
˙ame
);

314 
	}
}

324 
	$v_key_vÆ
(
•
, 
ch
)

325 
SCR
 *
•
;

326 
ARG_CHAR_T
 
ch
;

328 
KEYLIST
 
k
, *
kp
;

330 
k
.
ch
 = ch;

331 
kp
 = 
	`b£¨ch
(&
k
, 
keyli°
, 
nkeyli°
, (keyli°[0]), 
v_key_cmp
);

332  (
kp
 =
NULL
 ? 
K_NOTUSED
 : kp->
vÆue
);

333 
	}
}

348 
	$v_evít_push
(
•
, 
p_evp
, 
p_s
, 
nôems
, 
Êags
)

349 
SCR
 *
•
;

350 
EVENT
 *
p_evp
;

351 
CHAR_T
 *
p_s
;

352 
size_t
 
nôems
;

353 
u_öt
 
Êags
;

355 
EVENT
 *
evp
;

356 
GS
 *
gp
;

357 
size_t
 
tŸÆ
;

360 
gp
 = 
•
->gp;

361 i‡(
nôems
 <
gp
->
i_√xt
 ||

362 (
gp
->
i_evít
 !
NULL
 && gp->
i_˙t
 =0 && 
nôems
 <gp->
i_√Àm
)) {

363 i‡(
gp
->
i_˙t
 != 0)

364 
gp
->
i_√xt
 -
nôems
;

365 
c›y
;

373 
	#TERM_PUSH_SHIFT
 30

	)

374 
tŸÆ
 = 
gp
->
i_˙t
 + gp->
i_√xt
 + 
nôems
 + 
TERM_PUSH_SHIFT
;

375 i‡(
tŸÆ
 >
gp
->
i_√Àm
 && 
	`v_evít_grow
(
•
, 
	`MAX
(total, 64)))

377 i‡(
gp
->
i_˙t
)

378 
	`MEMMOVE
(
gp
->
i_evít
 + 
TERM_PUSH_SHIFT
 + 
nôems
,

379 
gp
->
i_evít
 + gp->
i_√xt
, gp->
i_˙t
);

380 
gp
->
i_√xt
 = 
TERM_PUSH_SHIFT
;

383 
c›y
: 
gp
->
i_˙t
 +
nôems
;

384 
evp
 = 
gp
->
i_evít
 + gp->
i_√xt
; 
nôems
--; ++evp) {

385 i‡(
p_evp
 !
NULL
)

386 *
evp
 = *
p_evp
++;

388 
evp
->
e_evít
 = 
E_CHARACTER
;

389 
evp
->
e_c
 = *
p_s
++;

390 
evp
->
e_vÆue
 = 
	`KEY_VAL
(
•
,Évp->
e_c
);

391 
	`F_INIT
(&
evp
->
e_ch
, 
Êags
);

395 
	}
}

402 
	$v_evít_≠≥nd
(
•
, 
¨gp
)

403 
SCR
 *
•
;

404 
EVENT
 *
¨gp
;

406 
CHAR_T
 *
s
;

407 
EVENT
 *
evp
;

408 
GS
 *
gp
;

409 
size_t
 
√víts
;

412 
√víts
 = 
¨gp
->
e_evít
 =
E_STRING
 ?árgp->
e_Àn
 : 1;

413 
gp
 = 
•
->gp;

414 i‡(
gp
->
i_evít
 =
NULL
 ||

415 
√víts
 > 
gp
->
i_√Àm
 - (gp->
i_√xt
 + gp->
i_˙t
))

416 
	`v_evít_grow
(
•
, 
	`MAX
(
√víts
, 64));

417 
evp
 = 
gp
->
i_evít
 + gp->
i_√xt
 + gp->
i_˙t
;

418 
gp
->
i_˙t
 +
√víts
;

421 i‡(
¨gp
->
e_evít
 =
E_STRING
)

422 
s
 = 
¨gp
->
e_c•
; 
√víts
--; ++
evp
) {

423 
evp
->
e_evít
 = 
E_CHARACTER
;

424 
evp
->
e_c
 = *
s
++;

425 
evp
->
e_vÆue
 = 
	`KEY_VAL
(
•
,Évp->
e_c
);

426 
evp
->
e_Êags
 = 0;

429 *
evp
 = *
¨gp
;

431 
	}
}

434 
	#QREM
(
Àn
) { \

435 i‡((
gp
->
i_˙t
 -
Àn
) == 0) \

436 
gp
->
i_√xt
 = 0; \

438 
gp
->
i_√xt
 +
Àn
; \

439 }

	)

529 
	$v_evít_gë
(
•
, 
¨gp
, 
timeout
, 
Êags
)

530 
SCR
 *
•
;

531 
EVENT
 *
¨gp
;

532 
timeout
;

533 
u_öt32_t
 
Êags
;

535 
EVENT
 *
evp
, 
ev
;

536 
GS
 *
gp
;

537 
SEQ
 *
qp
;

538 
öô_nom≠
, 
i•¨tül
, 
i°imeout
, 
ªm≠_˙t
;

540 
gp
 = 
•
->gp;

543 i‡(
¨gp
 =
NULL
)

544 
¨gp
 = &
ev
;

546 
ªåy
: 
i°imeout
 = 
ªm≠_˙t
 = 0;

552 i‡(
gp
->
i_˙t
 !0 && 
	`LF_ISSET
(
EC_TIMEOUT
))

559 i‡(
gp
->
i_˙t
 =0 || 
	`LF_ISSET
(
EC_INTERRUPT
 | 
EC_TIMEOUT
)) {

564 i‡(
	`F_ISSET
(
gp
, 
G_SCRWIN
Ë&& 
	`ss¸_öput
(
•
))

566 
lo›
: i‡(
gp
->
	`s¸_evít
(
•
, 
¨gp
,

567 
	`LF_ISSET
(
EC_INTERRUPT
 | 
EC_QUOTED
 | 
EC_RAW
), 
timeout
))

569 
¨gp
->
e_evít
) {

570 
E_ERR
:

571 
E_SIGHUP
:

572 
E_SIGTERM
:

577 
	`v_sync
(
•
, 
RCV_ENDSESSION
 | 
RCV_PRESERVE
 |

578 (
¨gp
->
e_evít
 =
E_SIGTERM
 ? 0: 
RCV_EMAIL
));

580 
E_TIMEOUT
:

581 
i°imeout
 = 1;

583 
E_INTERRUPT
:

585 
	`F_SET
(
•
->
gp
, 
G_INTERRUPTED
);

591 i‡(
	`LF_ISSET
(
EC_INTERRUPT
))

593 
≠≥nd
;

595 
≠≥nd
: i‡(
	`v_evít_≠≥nd
(
•
, 
¨gp
))

606 i‡(
	`LF_ISSET
(
EC_INTERRUPT
 | 
EC_TIMEOUT
))

609 
√wm≠
: 
evp
 = &
gp
->
i_evít
[gp->
i_√xt
];

615 i‡(
evp
->
e_evít
 !
E_CHARACTER
) {

616 *
¨gp
 = *
evp
;

617 
	`QREM
(1);

631 i‡(
i°imeout
 || 
	`F_ISSET
(&
evp
->
e_ch
, 
CH_NOMAP
) ||

632 !
	`LF_ISSET
(
EC_MAPCOMMAND
 | 
EC_MAPINPUT
) ||

633 
evp
->
e_c
 < 
MAX_BIT_SEQ
 && !
	`bô_ã°
(
gp
->
£qb
,Évp->e_c))

634 
nom≠
;

637 
qp
 = 
	`£q_föd
(
•
, 
NULL
, 
evp
, NULL, 
gp
->
i_˙t
,

638 
	`LF_ISSET
(
EC_MAPCOMMAND
Ë? 
SEQ_COMMAND
 : 
SEQ_INPUT
, &
i•¨tül
);

655 i‡(
i•¨tül
) {

656 i‡(
	`O_ISSET
(
•
, 
O_TIMEOUT
))

657 
timeout
 = (
evp
->
e_vÆue
 =
K_ESCAPE
 ?

658 
	`O_VAL
(
•
, 
O_ESCAPETIME
) :

659 
	`O_VAL
(
•
, 
O_KEYTIME
)) * 100;

661 
timeout
 = 0;

662 
lo›
;

666 i‡(
qp
 =
NULL
) {

667 
nom≠
: i‡(!
	`isdigô
(
evp
->
e_c
Ë&& 
	`LF_ISSET
(
EC_MAPNODIGIT
))

668 
nŸ_digô
;

669 *
¨gp
 = *
evp
;

670 
	`QREM
(1);

678 i‡(
	`LF_ISSET
(
EC_MAPNODIGIT
) &&

679 
qp
->
ouçut
 !
NULL
 && !
	`isdigô
(qp->output[0])) {

680 
nŸ_digô
: 
¨gp
->
e_c
 = 
CH_NOT_DIGIT
;

681 
¨gp
->
e_vÆue
 = 
K_NOTUSED
;

682 
¨gp
->
e_evít
 = 
E_CHARACTER
;

683 
	`F_INIT
(&
¨gp
->
e_ch
, 0);

688 
öô_nom≠
 = !
	`e_memcmp
(
qp
->
ouçut
, &
gp
->
i_evít
[gp->
i_√xt
], qp->
ûí
);

691 
	`QREM
(
qp
->
ûí
);

694 i‡(
qp
->
ouçut
 =
NULL
)

695 
ªåy
;

698 i‡(
	`O_ISSET
(
•
, 
O_REMAP
)) {

706 i‡((++
ªm≠_˙t
 == 1 ||Ñemap_cnt % 10 == 0) &&

707 (
gp
->
	`s¸_evít
(
•
, &
ev
,

708 
EC_INTERRUPT
, 0Ë|| 
ev
.
e_evít
 =
E_INTERRUPT
)) {

709 
	`F_SET
(
•
->
gp
, 
G_INTERRUPTED
);

710 
¨gp
->
e_evít
 = 
E_INTERRUPT
;

720 i‡(
öô_nom≠
) {

721 i‡(
	`v_evít_push
(
•
, 
NULL
, 
qp
->
ouçut
 + qp->
ûí
,

722 
qp
->
ﬁí
 - qp->
ûí
, 
CH_MAPPED
))

724 i‡(
	`v_evít_push
(
•
, 
NULL
,

725 
qp
->
ouçut
, qp->
ûí
, 
CH_NOMAP
 | 
CH_MAPPED
))

727 
evp
 = &
gp
->
i_evít
[gp->
i_√xt
];

728 
nom≠
;

730 i‡(
	`v_evít_push
(
•
, 
NULL
, 
qp
->
ouçut
, qp->
ﬁí
, 
CH_MAPPED
))

732 
√wm≠
;

736 i‡(
	`v_evít_push
(
•
, 
NULL
, 
qp
->
ouçut
, qp->
ﬁí
, 
CH_MAPPED
 | 
CH_NOMAP
))

739 
nom≠
;

740 
	}
}

747 
	$v_sync
(
•
, 
Êags
)

748 
SCR
 *
•
;

749 
Êags
;

751 
GS
 *
gp
;

753 
gp
 = 
•
->gp;

754 
•
 = 
gp
->
dq
.
cqh_fú°
; s∞!(*)&gp->dq; s∞•->
q
.
cqe_√xt
)

755 
	`rcv_sync
(
•
, 
Êags
);

756 
•
 = 
gp
->
hq
.
cqh_fú°
; s∞!(*)&gp->hq; s∞•->
q
.
cqe_√xt
)

757 
	`rcv_sync
(
•
, 
Êags
);

758 
	}
}

767 
	$v_evít_îr
(
•
, 
evp
)

768 
SCR
 *
•
;

769 
EVENT
 *
evp
;

771 
evp
->
e_evít
) {

772 
E_CHARACTER
:

773 
	`msgq
(
•
, 
M_ERR
, "276|Unexpected characterÉvent");

775 
E_EOF
:

776 
	`msgq
(
•
, 
M_ERR
, "277|UnexpectedÉnd-of-fileÉvent");

778 
E_INTERRUPT
:

779 
	`msgq
(
•
, 
M_ERR
, "279|Unexpected interruptÉvent");

781 
E_QUIT
:

782 
	`msgq
(
•
, 
M_ERR
, "280|Unexpected quitÉvent");

784 
E_REPAINT
:

785 
	`msgq
(
•
, 
M_ERR
, "281|UnexpectedÑepaintÉvent");

787 
E_STRING
:

788 
	`msgq
(
•
, 
M_ERR
, "285|Unexpected stringÉvent");

790 
E_TIMEOUT
:

791 
	`msgq
(
•
, 
M_ERR
, "286|UnexpectedÅimeoutÉvent");

793 
E_WRESIZE
:

794 
	`msgq
(
•
, 
M_ERR
, "316|UnexpectedÑesizeÉvent");

796 
E_WRITE
:

797 
	`msgq
(
•
, 
M_ERR
, "287|Unexpected writeÉvent");

804 
E_ERR
:

805 
E_SIGHUP
:

806 
E_SIGTERM
:

808 
	`ab‹t
();

812 i‡(
evp
->
e_a•
 !
NULL
)

813 
	`‰ì
(
evp
->
e_a•
);

814 
	}
}

823 
	$v_evít_Êush
(
•
, 
Êags
)

824 
SCR
 *
•
;

825 
u_öt
 
Êags
;

827 
GS
 *
gp
;

828 
rvÆ
;

830 
rvÆ
 = 0, 
gp
 = 
•
->gp; gp->
i_˙t
 != 0 &&

831 
	`F_ISSET
(&
gp
->
i_evít
[gp->
i_√xt
].
e_ch
, 
Êags
); 
rvÆ
 = 1)

832 
	`QREM
(1);

833  (
rvÆ
);

834 
	}
}

841 
	$v_evít_grow
(
•
, 
add
)

842 
SCR
 *
•
;

843 
add
;

845 
GS
 *
gp
;

846 
size_t
 
√w_√Àm
, 
ﬁí
;

848 
gp
 = 
•
->gp;

849 
√w_√Àm
 = 
gp
->
i_√Àm
 + 
add
;

850 
ﬁí
 = 
gp
->
i_√Àm
 * (gp->
i_evít
[0]);

851 
	`BINC_RET
(
•
, 
gp
->
i_evít
, 
ﬁí
, 
√w_√Àm
 * (gp->i_event[0]));

852 
gp
->
i_√Àm
 = 
ﬁí
 / (gp->
i_evít
[0]);

854 
	}
}

861 
	$v_key_cmp
(
≠
, 
bp
)

862 c⁄° *
≠
, *
bp
;

864  (((
KEYLIST
 *)
≠
)->
ch
 - ((KEYLIST *)
bp
)->ch);

865 
	}
}

	@common/key.h

24 
u_ch¨
 
	tCHAR_T
;

25 
u_öt
 
	tARG_CHAR_T
;

26 
	#MAX_CHAR_T
 0xff

	)

29 
	#MAX_CHARACTER_COLUMNS
 4

	)

40 
	mE_NOTUSED
 = 0,

41 
	mE_CHARACTER
,

42 
	mE_EOF
,

43 
	mE_ERR
,

44 
	mE_INTERRUPT
,

45 
	mE_QUIT
,

46 
	mE_REPAINT
,

47 
	mE_SIGHUP
,

48 
	mE_SIGTERM
,

49 
	mE_STRING
,

50 
	mE_TIMEOUT
,

51 
	mE_WRESIZE
,

52 
	mE_WRITE


53 } 
	te_evít_t
;

59 
	mK_NOTUSED
 = 0,

60 
	mK_BACKSLASH
,

61 
	mK_CARAT
,

62 
	mK_CNTRLD
,

63 
	mK_CNTRLR
,

64 
	mK_CNTRLT
,

65 
	mK_CNTRLZ
,

66 
	mK_COLON
,

67 
	mK_CR
,

68 
	mK_ESCAPE
,

69 
	mK_FORMFEED
,

70 
	mK_HEXCHAR
,

71 
	mK_NL
,

72 
	mK_RIGHTBRACE
,

73 
	mK_RIGHTPAREN
,

74 
	mK_TAB
,

75 
	mK_VERASE
,

76 
	mK_VKILL
,

77 
	mK_VLNEXT
,

78 
	mK_VWERASE
,

79 
	mK_ZERO


80 } 
	te_key_t
;

82 
	s_evít
 {

83 
TAILQ_ENTRY
(
_evít
Ë
	mq
;

84 
e_evít_t
 
	me_evít
;

87 
CHAR_T
 
	mc
;

88 
e_key_t
 
	mvÆue
;

90 
	#CH_ABBREVIATED
 0x01

	)

91 
	#CH_MAPPED
 0x02

	)

92 
	#CH_NOMAP
 0x04

	)

93 
	#CH_QUOTED
 0x08

	)

94 
u_öt8_t
 
	mÊags
;

95 } 
	m_e_ch
;

96 
	#e_ch
 
_u_evít
.
_e_ch


	)

97 
	#e_c
 
_u_evít
.
_e_ch
.
c


	)

98 
	#e_vÆue
 
_u_evít
.
_e_ch
.
vÆue


	)

99 
	#e_Êags
 
_u_evít
.
_e_ch
.
Êags


	)

102 
size_t
 
	m o1
;

103 
size_t
 
	m˙o1
;

104 
size_t
 
	m o2
;

105 
size_t
 
	m˙o2
;

106 } 
	m_e_m¨k
;

107 
	#e_ o
 
_u_evít
.
_e_m¨k
.
 o1


	)

108 
	#e_˙o
 
_u_evít
.
_e_m¨k
.
˙o1


	)

109 
	#e_Êno
 
_u_evít
.
_e_m¨k
.
 o1


	)

110 
	#e_f˙o
 
_u_evít
.
_e_m¨k
.
˙o1


	)

111 
	#e_éno
 
_u_evít
.
_e_m¨k
.
 o2


	)

112 
	#e_t˙o
 
_u_evít
.
_e_m¨k
.
˙o2


	)

115 
CHAR_T
 *
	ma•
;

116 
CHAR_T
 *
	mc•
;

117 
size_t
 
	mÀn
;

118 } 
	m_e_°r
;

119 
	#e_a•
 
_u_evít
.
_e_°r
.
a•


	)

120 
	#e_c•
 
_u_evít
.
_e_°r
.
c•


	)

121 
	#e_Àn
 
_u_evít
.
_e_°r
.
Àn


	)

122 } 
	m_u_evít
;

125 
	s_keyli°
 {

126 
e_key_t
 
	mvÆue
;

127 
CHAR_T
 
	mch
;

128 } 
	tKEYLIST
;

129 
KEYLIST
 
keyli°
[];

132 
	#KEYS_WAITING
(
•
Ë((•)->
gp
->
i_˙t
 !0)

	)

133 
	#MAPPED_KEYS_WAITING
(
•
) \

134 (
	`KEYS_WAITING
(
•
) && \

135 
	`F_ISSET
(&
•
->
gp
->
i_evít
[•->gp->
i_√xt
].
e_ch
, 
CH_MAPPED
))

	)

146 #i‚de‡
isbœnk


147 
	#isbœnk
(
ch
Ë((chË=' ' || (chË='\t')

	)

151 
	#STANDARD_TAB
 6

	)

154 
	#CH_BSEARCH
 '?'

	)

155 
	#CH_CURSOR
 ' '

	)

156 
	#CH_ENDMARK
 '$'

	)

157 
	#CH_EXPROMPT
 ':'

	)

158 
	#CH_FSEARCH
 '/'

	)

159 
	#CH_HEX
 '\030'

	)

160 
	#CH_LITERAL
 '\026'

	)

161 
	#CH_NO
 'n'

	)

162 
	#CH_NOT_DIGIT
 'a'

	)

163 
	#CH_QUIT
 'q'

	)

164 
	#CH_YES
 'y'

	)

174 
	#INTERRUPT_CHECK
 100

	)

175 
	#INTERRUPTED
(
•
) \

176 (
	`F_ISSET
((
•
)->
gp
, 
G_INTERRUPTED
) || \

177 (!
	`v_evít_gë
(
•
, 
NULL
, 0, 
EC_INTERRUPT
) && \

178 
	`F_ISSET
((
•
)->
gp
, 
G_INTERRUPTED
)))

	)

179 
	#CLR_INTERRUPT
(
•
) \

180 
	`F_CLR
((
•
)->
gp
, 
G_INTERRUPTED
)

	)

183 
	#EC_INTERRUPT
 0x001

	)

184 
	#EC_MAPCOMMAND
 0x002

	)

185 
	#EC_MAPINPUT
 0x004

	)

186 
	#EC_MAPNODIGIT
 0x008

	)

187 
	#EC_QUOTED
 0x010

	)

188 
	#EC_RAW
 0x020

	)

189 
	#EC_TIMEOUT
 0x040

	)

192 
	#TXT_ADDNEWLINE
 0x00000001

	)

193 
	#TXT_AICHARS
 0x00000002

	)

194 
	#TXT_ALTWERASE
 0x00000004

	)

195 
	#TXT_APPENDEOL
 0x00000008

	)

196 
	#TXT_AUTOINDENT
 0x00000010

	)

197 
	#TXT_BACKSLASH
 0x00000020

	)

198 
	#TXT_BEAUTIFY
 0x00000040

	)

199 
	#TXT_BS
 0x00000080

	)

200 
	#TXT_CEDIT
 0x00000100

	)

201 
	#TXT_CNTRLD
 0x00000200

	)

202 
	#TXT_CNTRLT
 0x00000400

	)

203 
	#TXT_CR
 0x00000800

	)

204 
	#TXT_DOTTERM
 0x00001000

	)

205 
	#TXT_EMARK
 0x00002000

	)

206 
	#TXT_EOFCHAR
 0x00004000

	)

207 
	#TXT_ESCAPE
 0x00008000

	)

208 
	#TXT_FILEC
 0x00010000

	)

209 
	#TXT_INFOLINE
 0x00020000

	)

210 
	#TXT_MAPINPUT
 0x00040000

	)

211 
	#TXT_NLECHO
 0x00080000

	)

212 
	#TXT_NUMBER
 0x00100000

	)

213 
	#TXT_OVERWRITE
 0x00200000

	)

214 
	#TXT_PROMPT
 0x00400000

	)

215 
	#TXT_RECORD
 0x00800000

	)

216 
	#TXT_REPLACE
 0x01000000

	)

217 
	#TXT_REPLAY
 0x02000000

	)

218 
	#TXT_RESOLVE
 0x04000000

	)

219 
	#TXT_SEARCHINCR
 0x08000000

	)

220 
	#TXT_SHOWMATCH
 0x10000000

	)

221 
	#TXT_TTYWERASE
 0x20000000

	)

222 
	#TXT_WRAPMARGIN
 0x40000000

	)

	@common/line.c

10 
	~"c⁄fig.h
"

12 #i‚de‡
löt


13 c⁄° 
	gsccsid
[] = "@(#)line.c 10.21 (Berkeley) 9/15/96";

16 
	~<sys/ty≥s.h
>

17 
	~<sys/queue.h
>

18 
	~<sys/time.h
>

20 
	~<bô°rög.h
>

21 
	~<î∫o.h
>

22 
	~<limôs.h
>

23 
	~<°dio.h
>

24 
	~<°rög.h
>

26 
	~"comm⁄.h
"

27 
	~"../vi/vi.h
"

29 
s¸_upd©e
 
__P
((
SCR
 *, 
ª˙o_t
, 
 ›_t
, ));

38 
	$db_egë
(
•
, 
 o
, 
µ
, 
À≈
, 
i£m±yp
)

39 
SCR
 *
•
;

40 
ª˙o_t
 
 o
;

41 **
µ
;

42 
size_t
 *
À≈
;

43 *
i£m±yp
;

45 
ª˙o_t
 
l1
;

47 i‡(
i£m±yp
 !
NULL
)

48 *
i£m±yp
 = 0;

51 i‡(!
	`db_gë
(
•
, 
 o
, 0, 
µ
, 
À≈
))

59 i‡((
 o
 =0 ||Ünÿ=1Ë&& 
	`db_œ°
(
•
, &
l1
))

63 i‡(
 o
 !0 &&Ünÿ!1 || 
l1
 != 0) {

64 
	`db_îr
(
•
, 
 o
);

68 i‡(
i£m±yp
 !
NULL
)

69 *
i£m±yp
 = 1;

72 
	}
}

82 
	$db_gë
(
•
, 
 o
, 
Êags
, 
µ
, 
À≈
)

83 
SCR
 *
•
;

84 
ª˙o_t
 
 o
;

85 
u_öt32_t
 
Êags
;

86 **
µ
;

87 
size_t
 *
À≈
;

89 
DBT
 
d©a
, 
key
;

90 
EXF
 *
ï
;

91 
TEXT
 *
ç
;

92 
ª˙o_t
 
l1
, 
l2
;

99 i‡(
 o
 == 0)

100 
îr1
;

103 i‡((
ï
 = 
•
->ïË=
NULL
) {

104 
	`ex_emsg
(
•
, 
NULL
, 
EXM_NOFILEYET
);

105 
îr3
;

108 i‡(
	`LF_ISSET
(
DBG_NOCACHE
))

109 
noˇche
;

115 i‡(
	`F_ISSET
(
•
, 
SC_TINPUT
)) {

116 
l1
 = ((
TEXT
 *)
•
->
tiq
.
cqh_fú°
)->
 o
;

117 
l2
 = ((
TEXT
 *)
•
->
tiq
.
cqh_œ°
)->
 o
;

118 i‡(
l1
 <
 o
 && 
l2
 >=Üno) {

119 #i‡
	`deföed
(
DEBUG
) && 0

120 
	`TRACE
(
•
, "ªåõvêTEXT buf„∏löê%lu\n", (
u_l⁄g
)
 o
);

122 
ç
 = 
•
->
tiq
.
cqh_fú°
;

123 
ç
->
 o
 ! o;Å∞ç->
q
.
cqe_√xt
);

124 i‡(
À≈
 !
NULL
)

125 *
À≈
 = 
ç
->
Àn
;

126 i‡(
µ
 !
NULL
)

127 *
µ
 = 
ç
->
lb
;

134 i‡(
 o
 > 
l2
)

135 
 o
 -
l2
 - 
l1
;

139 i‡(
 o
 =
ï
->
c_ o
) {

140 #i‡
	`deföed
(
DEBUG
) && 0

141 
	`TRACE
(
•
, "ªåõvêˇchedÜöê%lu\n", (
u_l⁄g
)
 o
);

143 i‡(
À≈
 !
NULL
)

144 *
À≈
 = 
ï
->
c_Àn
;

145 i‡(
µ
 !
NULL
)

146 *
µ
 = 
ï
->
c_Õ
;

149 
ï
->
c_ o
 = 
OOBLNO
;

151 
noˇche
:

153 
key
.
d©a
 = &
 o
;

154 
key
.
size
 = (
 o
);

155 
ï
->
db
->
	`gë
”p->db, &
key
, &
d©a
, 0)) {

157 
îr2
;

159 
îr1
: i‡(
	`LF_ISSET
(
DBG_FATAL
))

160 
îr2
: 
	`db_îr
(
•
, 
 o
);

161 
îr3
: i‡(
À≈
 !
NULL
)

162 *
À≈
 = 0;

163 i‡(
µ
 !
NULL
)

164 *
µ
 = 
NULL
;

169 
ï
->
c_ o
 = 
 o
;

170 
ï
->
c_Àn
 = 
d©a
.
size
;

171 
ï
->
c_Õ
 = 
d©a
.data;

173 #i‡
	`deföed
(
DEBUG
) && 0

174 
	`TRACE
(
•
, "ªåõvêDBÜöê%lu\n", (
u_l⁄g
)
 o
);

176 i‡(
À≈
 !
NULL
)

177 *
À≈
 = 
d©a
.
size
;

178 i‡(
µ
 !
NULL
)

179 *
µ
 = 
ï
->
c_Õ
;

181 
	}
}

190 
	$db_dñëe
(
•
, 
 o
)

191 
SCR
 *
•
;

192 
ª˙o_t
 
 o
;

194 
DBT
 
key
;

195 
EXF
 *
ï
;

197 #i‡
	`deföed
(
DEBUG
) && 0

198 
	`TRACE
(
•
, "dñëêlöê%lu\n", (
u_l⁄g
)
 o
);

201 i‡((
ï
 = 
•
->ïË=
NULL
) {

202 
	`ex_emsg
(
•
, 
NULL
, 
EXM_NOFILEYET
);

207 i‡(
	`m¨k_ösdñ
(
•
, 
LINE_DELETE
, 
 o
))

209 i‡(
	`ex_g_ösdñ
(
•
, 
LINE_DELETE
, 
 o
))

213 
	`log_löe
(
•
, 
 o
, 
LOG_LINE_DELETE
);

216 
key
.
d©a
 = &
 o
;

217 
key
.
size
 = (
 o
);

218 
SIGBLOCK
;

219 i‡(
ï
->
db
->
	`dñ
”p->db, &
key
, 0) == 1) {

220 
	`msgq
(
•
, 
M_SYSERR
,

221 "003|u«bÀÅÿdñëêlöê%lu", (
u_l⁄g
)
 o
);

224 
SIGUNBLOCK
;

227 i‡(
 o
 <
ï
->
c_ o
)

228 
ï
->
c_ o
 = 
OOBLNO
;

229 i‡(
ï
->
c_∆öes
 !
OOBLNO
)

230 --
ï
->
c_∆öes
;

233 i‡(
	`F_ISSET
(
ï
, 
F_FIRSTMODIFY
))

234 ()
	`rcv_öô
(
•
);

235 
	`F_SET
(
ï
, 
F_MODIFIED
);

238  (
	`s¸_upd©e
(
•
, 
 o
, 
LINE_DELETE
, 1));

239 
	}
}

248 
	$db_≠≥nd
(
•
, 
upd©e
, 
 o
, 
p
, 
Àn
)

249 
SCR
 *
•
;

250 
upd©e
;

251 
ª˙o_t
 
 o
;

252 *
p
;

253 
size_t
 
Àn
;

255 
DBT
 
d©a
, 
key
;

256 
EXF
 *
ï
;

257 
rvÆ
;

259 #i‡
	`deföed
(
DEBUG
) && 0

260 
	`TRACE
(
•
, "≠≥ndÅÿ%lu:Üí %u {%.*s}\n", 
 o
, 
Àn
, 
	`MIN
÷í, 20), 
p
);

263 i‡((
ï
 = 
•
->ïË=
NULL
) {

264 
	`ex_emsg
(
•
, 
NULL
, 
EXM_NOFILEYET
);

269 
key
.
d©a
 = &
 o
;

270 
key
.
size
 = (
 o
);

271 
d©a
.d©®
p
;

272 
d©a
.
size
 = 
Àn
;

273 
SIGBLOCK
;

274 i‡(
ï
->
db
->
	`put
”p->db, &
key
, &
d©a
, 
R_IAFTER
) == -1) {

275 
	`msgq
(
•
, 
M_SYSERR
,

276 "004|u«bÀÅÿ≠≥ndÅÿlöê%lu", (
u_l⁄g
)
 o
);

279 
SIGUNBLOCK
;

282 i‡(
 o
 < 
ï
->
c_ o
)

283 
ï
->
c_ o
 = 
OOBLNO
;

284 i‡(
ï
->
c_∆öes
 !
OOBLNO
)

285 ++
ï
->
c_∆öes
;

288 i‡(
	`F_ISSET
(
ï
, 
F_FIRSTMODIFY
))

289 ()
	`rcv_öô
(
•
);

290 
	`F_SET
(
ï
, 
F_MODIFIED
);

293 
	`log_löe
(
•
, 
 o
 + 1, 
LOG_LINE_APPEND
);

296 
rvÆ
 = 0;

297 i‡(
	`m¨k_ösdñ
(
•
, 
LINE_INSERT
, 
 o
 + 1))

298 
rvÆ
 = 1;

299 i‡(
	`ex_g_ösdñ
(
•
, 
LINE_INSERT
, 
 o
 + 1))

300 
rvÆ
 = 1;

312  (
	`s¸_upd©e
(
•
, 
 o
, 
LINE_APPEND
, 
upd©e
Ë|| 
rvÆ
);

313 
	}
}

322 
	$db_ö£π
(
•
, 
 o
, 
p
, 
Àn
)

323 
SCR
 *
•
;

324 
ª˙o_t
 
 o
;

325 *
p
;

326 
size_t
 
Àn
;

328 
DBT
 
d©a
, 
key
;

329 
EXF
 *
ï
;

330 
rvÆ
;

332 #i‡
	`deföed
(
DEBUG
) && 0

333 
	`TRACE
(
•
, "insert before %lu:Üen %lu {%.*s}\n",

334 (
u_l⁄g
)
 o
, (u_l⁄g)
Àn
, 
	`MIN
÷í, 20), 
p
);

337 i‡((
ï
 = 
•
->ïË=
NULL
) {

338 
	`ex_emsg
(
•
, 
NULL
, 
EXM_NOFILEYET
);

343 
key
.
d©a
 = &
 o
;

344 
key
.
size
 = (
 o
);

345 
d©a
.d©®
p
;

346 
d©a
.
size
 = 
Àn
;

347 
SIGBLOCK
;

348 i‡(
ï
->
db
->
	`put
”p->db, &
key
, &
d©a
, 
R_IBEFORE
) == -1) {

349 
	`msgq
(
•
, 
M_SYSERR
,

350 "005|u«bÀÅÿö£πáàlöê%lu", (
u_l⁄g
)
 o
);

353 
SIGUNBLOCK
;

356 i‡(
 o
 >
ï
->
c_ o
)

357 
ï
->
c_ o
 = 
OOBLNO
;

358 i‡(
ï
->
c_∆öes
 !
OOBLNO
)

359 ++
ï
->
c_∆öes
;

362 i‡(
	`F_ISSET
(
ï
, 
F_FIRSTMODIFY
))

363 ()
	`rcv_öô
(
•
);

364 
	`F_SET
(
ï
, 
F_MODIFIED
);

367 
	`log_löe
(
•
, 
 o
, 
LOG_LINE_INSERT
);

370 
rvÆ
 = 0;

371 i‡(
	`m¨k_ösdñ
(
•
, 
LINE_INSERT
, 
 o
))

372 
rvÆ
 = 1;

373 i‡(
	`ex_g_ösdñ
(
•
, 
LINE_INSERT
, 
 o
))

374 
rvÆ
 = 1;

377  (
	`s¸_upd©e
(
•
, 
 o
, 
LINE_INSERT
, 1Ë|| 
rvÆ
);

378 
	}
}

387 
	$db_£t
(
•
, 
 o
, 
p
, 
Àn
)

388 
SCR
 *
•
;

389 
ª˙o_t
 
 o
;

390 *
p
;

391 
size_t
 
Àn
;

393 
DBT
 
d©a
, 
key
;

394 
EXF
 *
ï
;

396 #i‡
	`deföed
(
DEBUG
) && 0

397 
	`TRACE
(
•
, "replaceÜine %lu:Üen %lu {%.*s}\n",

398 (
u_l⁄g
)
 o
, (u_l⁄g)
Àn
, 
	`MIN
÷í, 20), 
p
);

402 i‡((
ï
 = 
•
->ïË=
NULL
) {

403 
	`ex_emsg
(
•
, 
NULL
, 
EXM_NOFILEYET
);

408 
	`log_löe
(
•
, 
 o
, 
LOG_LINE_RESET_B
);

411 
key
.
d©a
 = &
 o
;

412 
key
.
size
 = (
 o
);

413 
d©a
.d©®
p
;

414 
d©a
.
size
 = 
Àn
;

415 
SIGBLOCK
;

416 i‡(
ï
->
db
->
	`put
”p->db, &
key
, &
d©a
, 0) == -1) {

417 
	`msgq
(
•
, 
M_SYSERR
,

418 "006|u«bÀÅÿ°‹êlöê%lu", (
u_l⁄g
)
 o
);

421 
SIGUNBLOCK
;

424 i‡(
 o
 =
ï
->
c_ o
)

425 
ï
->
c_ o
 = 
OOBLNO
;

428 i‡(
	`F_ISSET
(
ï
, 
F_FIRSTMODIFY
))

429 ()
	`rcv_öô
(
•
);

430 
	`F_SET
(
ï
, 
F_MODIFIED
);

433 
	`log_löe
(
•
, 
 o
, 
LOG_LINE_RESET_F
);

436  (
	`s¸_upd©e
(
•
, 
 o
, 
LINE_RESET
, 1));

437 
	}
}

446 
	$db_exi°
(
•
, 
 o
)

447 
SCR
 *
•
;

448 
ª˙o_t
 
 o
;

450 
EXF
 *
ï
;

453 i‡((
ï
 = 
•
->ïË=
NULL
) {

454 
	`ex_emsg
(
•
, 
NULL
, 
EXM_NOFILEYET
);

458 i‡(
 o
 =
OOBLNO
)

465 i‡(
ï
->
c_∆öes
 !
OOBLNO
)

466  (
 o
 <(
	`F_ISSET
(
•
, 
SC_TINPUT
) ?

467 
ï
->
c_∆öes
 + (((
TEXT
 *)
•
->
tiq
.
cqh_œ°
)->
 o
 -

468 ((
TEXT
 *)
•
->
tiq
.
cqh_fú°
)->
 o
Ë: 
ï
->
c_∆öes
));

471  (!
	`db_gë
(
•
, 
 o
, 0, 
NULL
, NULL));

472 
	}
}

481 
	$db_œ°
(
•
, 
 ›
)

482 
SCR
 *
•
;

483 
ª˙o_t
 *
 ›
;

485 
DBT
 
d©a
, 
key
;

486 
EXF
 *
ï
;

487 
ª˙o_t
 
 o
;

490 i‡((
ï
 = 
•
->ïË=
NULL
) {

491 
	`ex_emsg
(
•
, 
NULL
, 
EXM_NOFILEYET
);

499 i‡(
ï
->
c_∆öes
 !
OOBLNO
) {

500 *
 ›
 = 
ï
->
c_∆öes
;

501 i‡(
	`F_ISSET
(
•
, 
SC_TINPUT
))

502 *
 ›
 +((
TEXT
 *)
•
->
tiq
.
cqh_œ°
)->
 o
 -

503 ((
TEXT
 *)
•
->
tiq
.
cqh_fú°
)->
 o
;

507 
key
.
d©a
 = &
 o
;

508 
key
.
size
 = (
 o
);

510 
ï
->
db
->
	`£q
”p->db, &
key
, &
d©a
, 
R_LAST
)) {

512 
	`msgq
(
•
, 
M_SYSERR
, "007|unableÅo getÜastÜine");

513 *
 ›
 = 0;

516 *
 ›
 = 0;

523 
	`mem˝y
(&
 o
, 
key
.
d©a
, (lno));

524 
ï
->
c_∆öes
 =Ép->
c_ o
 = 
 o
;

525 
ï
->
c_Àn
 = 
d©a
.
size
;

526 
ï
->
c_Õ
 = 
d©a
.data;

529 *
 ›
 = (
	`F_ISSET
(
•
, 
SC_TINPUT
) &&

530 ((
TEXT
 *)
•
->
tiq
.
cqh_œ°
)->
 o
 >Üno ?

531 ((
TEXT
 *)
•
->
tiq
.
cqh_œ°
)->
 o
 :Üno);

533 
	}
}

542 
	$db_îr
(
•
, 
 o
)

543 
SCR
 *
•
;

544 
ª˙o_t
 
 o
;

546 
	`msgq
(
•
, 
M_ERR
,

547 "008|Eº‹: u«bÀÅÿªåõvêlöê%lu", (
u_l⁄g
)
 o
);

548 
	}
}

556 
	$s¸_upd©e
(
•
, 
 o
, 
›
, 
cuºít
)

557 
SCR
 *
•
;

558 
ª˙o_t
 
 o
;

559 
 ›_t
 
›
;

560 
cuºít
;

562 
EXF
 *
ï
;

563 
SCR
 *
t•
;

565 i‡(
	`F_ISSET
(
•
, 
SC_EX
))

568 
ï
 = 
•
->ep;

569 i‡(
ï
->
ªf˙t
 != 1)

570 
t•
 = 
•
->
gp
->
dq
.
cqh_fú°
;

571 
t•
 !(*)&
•
->
gp
->
dq
;Å• =Å•->
q
.
cqe_√xt
)

572 i‡(
•
 !
t•
 &&Å•->
ï
 ==Ép)

573 i‡(
	`vs_ch™ge
(
t•
, 
 o
, 
›
))

575  (
cuºít
 ? 
	`vs_ch™ge
(
•
, 
 o
, 
›
) : 0);

576 
	}
}

	@common/log.c

10 
	~"c⁄fig.h
"

12 #i‚de‡
löt


13 c⁄° 
	gsccsid
[] = "@(#)log.c 10.8 (Berkeley) 3/6/96";

16 
	~<sys/ty≥s.h
>

17 
	~<sys/queue.h
>

18 
	~<sys/°©.h
>

20 
	~<bô°rög.h
>

21 
	~<î∫o.h
>

22 
	~<f˙é.h
>

23 
	~<limôs.h
>

24 
	~<°dio.h
>

25 
	~<°dlib.h
>

26 
	~<°rög.h
>

28 
	~"comm⁄.h
"

65 
log_curs‹1
 
__P
((
SCR
 *, ));

66 
log_îr
 
__P
((
SCR
 *, *, ));

67 #i‡
deföed
(
DEBUG
) && 0

68 
log_åa˚
 
__P
((
SCR
 *, *, 
ª˙o_t
, 
u_ch¨
 *));

72 
	#LOG_ERR
 { \

73 
	`log_îr
(
•
, 
__FILE__
, 
__LINE__
); \

75 }

	)

84 
	$log_öô
(
•
, 
ï
)

85 
SCR
 *
•
;

86 
EXF
 *
ï
;

96 
ï
->
l_Õ
 = 
NULL
;

97 
ï
->
l_Àn
 = 0;

98 
ï
->
l_curs‹
.
 o
 = 1;

99 
ï
->
l_curs‹
.
˙o
 = 0;

100 
ï
->
l_high
 =Ép->
l_cur
 = 1;

102 
ï
->
log
 = 
	`db›í
(
NULL
, 
O_CREAT
 | 
O_NONBLOCK
 | 
O_RDWR
,

103 
S_IRUSR
 | 
S_IWUSR
, 
DB_RECNO
, 
NULL
);

104 i‡(
ï
->
log
 =
NULL
) {

105 
	`msgq
(
•
, 
M_SYSERR
, "009|Log file");

106 
	`F_SET
(
ï
, 
F_NOLOG
);

111 
	}
}

120 
	$log_íd
(
•
, 
ï
)

121 
SCR
 *
•
;

122 
EXF
 *
ï
;

128 i‡(
ï
->
log
 !
NULL
) {

129 ()(
ï
->
log
->
˛o£
)(ep->log);

130 
ï
->
log
 = 
NULL
;

132 i‡(
ï
->
l_Õ
 !
NULL
) {

133 
	`‰ì
(
ï
->
l_Õ
);

134 
ï
->
l_Õ
 = 
NULL
;

136 
ï
->
l_Àn
 = 0;

137 
ï
->
l_curs‹
.
 o
 = 1;

138 
ï
->
l_curs‹
.
˙o
 = 0;

139 
ï
->
l_high
 =Ép->
l_cur
 = 1;

141 
	}
}

150 
	$log_curs‹
(
•
)

151 
SCR
 *
•
;

153 
EXF
 *
ï
;

155 
ï
 = 
•
->ep;

156 i‡(
	`F_ISSET
(
ï
, 
F_NOLOG
))

163 i‡(
ï
->
l_curs‹
.
 o
 =
OOBLNO
) {

164 
ï
->
l_curs‹
.
 o
 = 
•
->lno;

165 
ï
->
l_curs‹
.
˙o
 = 
•
->cno;

166  (
	`log_curs‹1
(
•
, 
LOG_CURSOR_END
));

168 
ï
->
l_curs‹
.
 o
 = 
•
->lno;

169 
ï
->
l_curs‹
.
˙o
 = 
•
->cno;

171 
	}
}

178 
	$log_curs‹1
(
•
, 
ty≥
)

179 
SCR
 *
•
;

180 
ty≥
;

182 
DBT
 
d©a
, 
key
;

183 
EXF
 *
ï
;

185 
ï
 = 
•
->ep;

186 
	`BINC_RET
(
•
, 
ï
->
l_Õ
,Ép->
l_Àn
, (
u_ch¨
Ë+ (
MARK
));

187 
ï
->
l_Õ
[0] = 
ty≥
;

188 
	`memmove
(
ï
->
l_Õ
 + (
u_ch¨
), &ï->
l_curs‹
, (
MARK
));

190 
key
.
d©a
 = &
ï
->
l_cur
;

191 
key
.
size
 = (
ª˙o_t
);

192 
d©a
.d©®
ï
->
l_Õ
;

193 
d©a
.
size
 = (
u_ch¨
Ë+ (
MARK
);

194 i‡(
ï
->
log
->
	`put
”p->log, &
key
, &
d©a
, 0) == -1)

195 
LOG_ERR
;

197 #i‡
	`deföed
(
DEBUG
) && 0

198 
	`TRACE
(
•
, "%lu: %s: %u/%u\n", 
ï
->
l_cur
,

199 
ty≥
 =
LOG_CURSOR_INIT
 ? "log_cursor_init" : "log_cursor_end",

200 
•
->
 o
, sp->
˙o
);

203 
ï
->
l_high
 = ++ï->
l_cur
;

206 
	}
}

215 
	$log_löe
(
•
, 
 o
, 
a˘i⁄
)

216 
SCR
 *
•
;

217 
ª˙o_t
 
 o
;

218 
u_öt
 
a˘i⁄
;

220 
DBT
 
d©a
, 
key
;

221 
EXF
 *
ï
;

222 
size_t
 
Àn
;

223 *
Õ
;

225 
ï
 = 
•
->ep;

226 i‡(
	`F_ISSET
(
ï
, 
F_NOLOG
))

235 
	`F_CLR
(
ï
, 
F_UNDO
);

238 i‡(
ï
->
l_curs‹
.
 o
 !
OOBLNO
) {

239 i‡(
	`log_curs‹1
(
•
, 
LOG_CURSOR_INIT
))

241 
ï
->
l_curs‹
.
 o
 = 
OOBLNO
;

250 i‡(
a˘i⁄
 =
LOG_LINE_RESET_B
) {

251 i‡(
	`db_gë
(
•
, 
 o
, 
DBG_NOCACHE
, &
Õ
, &
Àn
)) {

252 i‡(
 o
 != 1) {

253 
	`db_îr
(
•
, 
 o
);

256 
Àn
 = 0;

257 
Õ
 = "";

260 i‡(
	`db_gë
(
•
, 
 o
, 
DBG_FATAL
, &
Õ
, &
Àn
))

262 
	`BINC_RET
(
•
,

263 
ï
->
l_Õ
,Ép->
l_Àn
, 
Àn
 + (
u_ch¨
Ë+ (
ª˙o_t
));

264 
ï
->
l_Õ
[0] = 
a˘i⁄
;

265 
	`memmove
(
ï
->
l_Õ
 + (
u_ch¨
), &
 o
, (
ª˙o_t
));

266 
	`memmove
(
ï
->
l_Õ
 + (
u_ch¨
Ë+ (
ª˙o_t
), 
Õ
, 
Àn
);

268 
key
.
d©a
 = &
ï
->
l_cur
;

269 
key
.
size
 = (
ª˙o_t
);

270 
d©a
.d©®
ï
->
l_Õ
;

271 
d©a
.
size
 = 
Àn
 + (
u_ch¨
Ë+ (
ª˙o_t
);

272 i‡(
ï
->
log
->
	`put
”p->log, &
key
, &
d©a
, 0) == -1)

273 
LOG_ERR
;

275 #i‡
	`deföed
(
DEBUG
) && 0

276 
a˘i⁄
) {

277 
LOG_LINE_APPEND
:

278 
	`TRACE
(
•
, "%u:Üog_line:áppend: %lu {%u}\n",

279 
ï
->
l_cur
, 
 o
, 
Àn
);

281 
LOG_LINE_DELETE
:

282 
	`TRACE
(
•
, "%lu:Üog_line: delete: %lu {%u}\n",

283 
ï
->
l_cur
, 
 o
, 
Àn
);

285 
LOG_LINE_INSERT
:

286 
	`TRACE
(
•
, "%lu:Üog_line: insert: %lu {%u}\n",

287 
ï
->
l_cur
, 
 o
, 
Àn
);

289 
LOG_LINE_RESET_F
:

290 
	`TRACE
(
•
, "%lu:Üog_line:Ñeset_f: %lu {%u}\n",

291 
ï
->
l_cur
, 
 o
, 
Àn
);

293 
LOG_LINE_RESET_B
:

294 
	`TRACE
(
•
, "%lu:Üog_line:Ñeset_b: %lu {%u}\n",

295 
ï
->
l_cur
, 
 o
, 
Àn
);

300 
ï
->
l_high
 = ++ï->
l_cur
;

303 
	}
}

315 
	$log_m¨k
(
•
, 
lmp
)

316 
SCR
 *
•
;

317 
LMARK
 *
lmp
;

319 
DBT
 
d©a
, 
key
;

320 
EXF
 *
ï
;

322 
ï
 = 
•
->ep;

323 i‡(
	`F_ISSET
(
ï
, 
F_NOLOG
))

327 i‡(
ï
->
l_curs‹
.
 o
 !
OOBLNO
) {

328 i‡(
	`log_curs‹1
(
•
, 
LOG_CURSOR_INIT
))

330 
ï
->
l_curs‹
.
 o
 = 
OOBLNO
;

333 
	`BINC_RET
(
•
, 
ï
->
l_Õ
,

334 
ï
->
l_Àn
, (
u_ch¨
Ë+ (
LMARK
));

335 
ï
->
l_Õ
[0] = 
LOG_MARK
;

336 
	`memmove
(
ï
->
l_Õ
 + (
u_ch¨
), 
lmp
, (
LMARK
));

338 
key
.
d©a
 = &
ï
->
l_cur
;

339 
key
.
size
 = (
ª˙o_t
);

340 
d©a
.d©®
ï
->
l_Õ
;

341 
d©a
.
size
 = (
u_ch¨
Ë+ (
LMARK
);

342 i‡(
ï
->
log
->
	`put
”p->log, &
key
, &
d©a
, 0) == -1)

343 
LOG_ERR
;

345 #i‡
	`deföed
(
DEBUG
) && 0

346 
	`TRACE
(
•
, "%lu: mark %c: %lu/%u\n",

347 
ï
->
l_cur
, 
lmp
->
«me
,Ümp->
 o
,Ümp->
˙o
);

350 
ï
->
l_high
 = ++ï->
l_cur
;

352 
	}
}

361 
	$log_backw¨d
(
•
, 
Ω
)

362 
SCR
 *
•
;

363 
MARK
 *
Ω
;

365 
DBT
 
key
, 
d©a
;

366 
EXF
 *
ï
;

367 
LMARK
 
lm
;

368 
MARK
 
m
;

369 
ª˙o_t
 
 o
;

370 
did›
;

371 
u_ch¨
 *
p
;

373 
ï
 = 
•
->ep;

374 i‡(
	`F_ISSET
(
ï
, 
F_NOLOG
)) {

375 
	`msgq
(
•
, 
M_ERR
,

380 i‡(
ï
->
l_cur
 == 1) {

381 
	`msgq
(
•
, 
M_BERR
, "011|No changesÅo undo");

385 
	`F_SET
(
ï
, 
F_NOLOG
);

387 
key
.
d©a
 = &
ï
->
l_cur
;

388 
key
.
size
 = (
ª˙o_t
);

389 
did›
 = 0;;) {

390 --
ï
->
l_cur
;

391 i‡(
ï
->
log
->
	`gë
”p->log, &
key
, &
d©a
, 0))

392 
LOG_ERR
;

393 #i‡
	`deföed
(
DEBUG
) && 0

394 
	`log_åa˚
(
•
, "log_backw¨d", 
ï
->
l_cur
, 
d©a
.data);

396 *(
p
 = (
u_ch¨
 *)
d©a
.data)) {

397 
LOG_CURSOR_INIT
:

398 i‡(
did›
) {

399 
	`memmove
(
Ω
, 
p
 + (
u_ch¨
), (
MARK
));

400 
	`F_CLR
(
ï
, 
F_NOLOG
);

404 
LOG_CURSOR_END
:

406 
LOG_LINE_APPEND
:

407 
LOG_LINE_INSERT
:

408 
did›
 = 1;

409 
	`memmove
(&
 o
, 
p
 + (
u_ch¨
), (
ª˙o_t
));

410 i‡(
	`db_dñëe
(
•
, 
 o
))

411 
îr
;

412 ++
•
->
Ωéöes
[
L_DELETED
];

414 
LOG_LINE_DELETE
:

415 
did›
 = 1;

416 
	`memmove
(&
 o
, 
p
 + (
u_ch¨
), (
ª˙o_t
));

417 i‡(
	`db_ö£π
(
•
, 
 o
, 
p
 + (
u_ch¨
) +

418 (
ª˙o_t
), 
d©a
.
size
 - (
u_ch¨
) -

419 (
ª˙o_t
)))

420 
îr
;

421 ++
•
->
Ωéöes
[
L_ADDED
];

423 
LOG_LINE_RESET_F
:

425 
LOG_LINE_RESET_B
:

426 
did›
 = 1;

427 
	`memmove
(&
 o
, 
p
 + (
u_ch¨
), (
ª˙o_t
));

428 i‡(
	`db_£t
(
•
, 
 o
, 
p
 + (
u_ch¨
) +

429 (
ª˙o_t
), 
d©a
.
size
 - (
u_ch¨
) -

430 (
ª˙o_t
)))

431 
îr
;

432 i‡(
•
->
Ωéch™ge
 !
 o
) {

433 
•
->
Ωéch™ge
 = 
 o
;

434 ++
•
->
Ωéöes
[
L_CHANGED
];

437 
LOG_MARK
:

438 
did›
 = 1;

439 
	`memmove
(&
lm
, 
p
 + (
u_ch¨
), (
LMARK
));

440 
m
.
 o
 = 
lm
.lno;

441 
m
.
˙o
 = 
lm
.cno;

442 i‡(
	`m¨k_£t
(
•
, 
lm
.
«me
, &
m
, 0))

443 
îr
;

446 
	`ab‹t
();

450 
îr
: 
	`F_CLR
(
ï
, 
F_NOLOG
);

452 
	}
}

467 
	$log_£éöe
(
•
)

468 
SCR
 *
•
;

470 
DBT
 
key
, 
d©a
;

471 
EXF
 *
ï
;

472 
LMARK
 
lm
;

473 
MARK
 
m
;

474 
ª˙o_t
 
 o
;

475 
u_ch¨
 *
p
;

477 
ï
 = 
•
->ep;

478 i‡(
	`F_ISSET
(
ï
, 
F_NOLOG
)) {

479 
	`msgq
(
•
, 
M_ERR
,

484 i‡(
ï
->
l_cur
 == 1)

487 
	`F_SET
(
ï
, 
F_NOLOG
);

489 
key
.
d©a
 = &
ï
->
l_cur
;

490 
key
.
size
 = (
ª˙o_t
);

493 --
ï
->
l_cur
;

494 i‡(
ï
->
log
->
	`gë
”p->log, &
key
, &
d©a
, 0))

495 
LOG_ERR
;

496 #i‡
	`deföed
(
DEBUG
) && 0

497 
	`log_åa˚
(
•
, "log_£éöe", 
ï
->
l_cur
, 
d©a
.data);

499 *(
p
 = (
u_ch¨
 *)
d©a
.data)) {

500 
LOG_CURSOR_INIT
:

501 
	`memmove
(&
m
, 
p
 + (
u_ch¨
), (
MARK
));

502 i‡(
m
.
 o
 !
•
-> ÿ|| 
ï
->
l_cur
 == 1) {

503 
	`F_CLR
(
ï
, 
F_NOLOG
);

507 
LOG_CURSOR_END
:

508 
	`memmove
(&
m
, 
p
 + (
u_ch¨
), (
MARK
));

509 i‡(
m
.
 o
 !
•
->lno) {

510 ++
ï
->
l_cur
;

511 
	`F_CLR
(
ï
, 
F_NOLOG
);

515 
LOG_LINE_APPEND
:

516 
LOG_LINE_INSERT
:

517 
LOG_LINE_DELETE
:

518 
LOG_LINE_RESET_F
:

520 
LOG_LINE_RESET_B
:

521 
	`memmove
(&
 o
, 
p
 + (
u_ch¨
), (
ª˙o_t
));

522 i‡(
 o
 =
•
->lno &&

523 
	`db_£t
(
•
, 
 o
, 
p
 + (
u_ch¨
) +

524 (
ª˙o_t
), 
d©a
.
size
 - (
u_ch¨
) -

525 (
ª˙o_t
)))

526 
îr
;

527 i‡(
•
->
Ωéch™ge
 !
 o
) {

528 
•
->
Ωéch™ge
 = 
 o
;

529 ++
•
->
Ωéöes
[
L_CHANGED
];

531 
LOG_MARK
:

532 
	`memmove
(&
lm
, 
p
 + (
u_ch¨
), (
LMARK
));

533 
m
.
 o
 = 
lm
.lno;

534 
m
.
˙o
 = 
lm
.cno;

535 i‡(
	`m¨k_£t
(
•
, 
lm
.
«me
, &
m
, 0))

536 
îr
;

539 
	`ab‹t
();

543 
îr
: 
	`F_CLR
(
ï
, 
F_NOLOG
);

545 
	}
}

554 
	$log_f‹w¨d
(
•
, 
Ω
)

555 
SCR
 *
•
;

556 
MARK
 *
Ω
;

558 
DBT
 
key
, 
d©a
;

559 
EXF
 *
ï
;

560 
LMARK
 
lm
;

561 
MARK
 
m
;

562 
ª˙o_t
 
 o
;

563 
did›
;

564 
u_ch¨
 *
p
;

566 
ï
 = 
•
->ep;

567 i‡(
	`F_ISSET
(
ï
, 
F_NOLOG
)) {

568 
	`msgq
(
•
, 
M_ERR
,

573 i‡(
ï
->
l_cur
 =ï->
l_high
) {

574 
	`msgq
(
•
, 
M_BERR
, "014|No changesÅoÑe-do");

578 
	`F_SET
(
ï
, 
F_NOLOG
);

580 
key
.
d©a
 = &
ï
->
l_cur
;

581 
key
.
size
 = (
ª˙o_t
);

582 
did›
 = 0;;) {

583 ++
ï
->
l_cur
;

584 i‡(
ï
->
log
->
	`gë
”p->log, &
key
, &
d©a
, 0))

585 
LOG_ERR
;

586 #i‡
	`deföed
(
DEBUG
) && 0

587 
	`log_åa˚
(
•
, "log_f‹w¨d", 
ï
->
l_cur
, 
d©a
.data);

589 *(
p
 = (
u_ch¨
 *)
d©a
.data)) {

590 
LOG_CURSOR_END
:

591 i‡(
did›
) {

592 ++
ï
->
l_cur
;

593 
	`memmove
(
Ω
, 
p
 + (
u_ch¨
), (
MARK
));

594 
	`F_CLR
(
ï
, 
F_NOLOG
);

598 
LOG_CURSOR_INIT
:

600 
LOG_LINE_APPEND
:

601 
LOG_LINE_INSERT
:

602 
did›
 = 1;

603 
	`memmove
(&
 o
, 
p
 + (
u_ch¨
), (
ª˙o_t
));

604 i‡(
	`db_ö£π
(
•
, 
 o
, 
p
 + (
u_ch¨
) +

605 (
ª˙o_t
), 
d©a
.
size
 - (
u_ch¨
) -

606 (
ª˙o_t
)))

607 
îr
;

608 ++
•
->
Ωéöes
[
L_ADDED
];

610 
LOG_LINE_DELETE
:

611 
did›
 = 1;

612 
	`memmove
(&
 o
, 
p
 + (
u_ch¨
), (
ª˙o_t
));

613 i‡(
	`db_dñëe
(
•
, 
 o
))

614 
îr
;

615 ++
•
->
Ωéöes
[
L_DELETED
];

617 
LOG_LINE_RESET_B
:

619 
LOG_LINE_RESET_F
:

620 
did›
 = 1;

621 
	`memmove
(&
 o
, 
p
 + (
u_ch¨
), (
ª˙o_t
));

622 i‡(
	`db_£t
(
•
, 
 o
, 
p
 + (
u_ch¨
) +

623 (
ª˙o_t
), 
d©a
.
size
 - (
u_ch¨
) -

624 (
ª˙o_t
)))

625 
îr
;

626 i‡(
•
->
Ωéch™ge
 !
 o
) {

627 
•
->
Ωéch™ge
 = 
 o
;

628 ++
•
->
Ωéöes
[
L_CHANGED
];

631 
LOG_MARK
:

632 
did›
 = 1;

633 
	`memmove
(&
lm
, 
p
 + (
u_ch¨
), (
LMARK
));

634 
m
.
 o
 = 
lm
.lno;

635 
m
.
˙o
 = 
lm
.cno;

636 i‡(
	`m¨k_£t
(
•
, 
lm
.
«me
, &
m
, 0))

637 
îr
;

640 
	`ab‹t
();

644 
îr
: 
	`F_CLR
(
ï
, 
F_NOLOG
);

646 
	}
}

653 
	$log_îr
(
•
, 
fûe
, 
löe
)

654 
SCR
 *
•
;

655 *
fûe
;

656 
löe
;

658 
EXF
 *
ï
;

660 
	`msgq
(
•
, 
M_SYSERR
, "015|%s/%d:ÜogÖuàîr‹", 
	`èû
(
fûe
), 
löe
);

661 
ï
 = 
•
->ep;

662 ()
ï
->
log
->
	`˛o£
(ep->log);

663 i‡(!
	`log_öô
(
•
, 
ï
))

664 
	`msgq
(
•
, 
M_ERR
, "267|LogÑestarted");

665 
	}
}

667 #i‡
deföed
(
DEBUG
) && 0

669 
	$log_åa˚
(
•
, 
msg
, 
∫o
, 
p
)

670 
SCR
 *
•
;

671 *
msg
;

672 
ª˙o_t
 
∫o
;

673 
u_ch¨
 *
p
;

675 
LMARK
 
lm
;

676 
MARK
 
m
;

677 
ª˙o_t
 
 o
;

679 *
p
) {

680 
LOG_CURSOR_INIT
:

681 
	`memmove
(&
m
, 
p
 + (
u_ch¨
), (
MARK
));

682 
	`TRACE
(
•
, "%lu: %s: C_INIT: %u/%u\n", 
∫o
, 
msg
, 
m
.
 o
, m.
˙o
);

684 
LOG_CURSOR_END
:

685 
	`memmove
(&
m
, 
p
 + (
u_ch¨
), (
MARK
));

686 
	`TRACE
(
•
, "%lu: %s: C_END: %u/%u\n", 
∫o
, 
msg
, 
m
.
 o
, m.
˙o
);

688 
LOG_LINE_APPEND
:

689 
	`memmove
(&
 o
, 
p
 + (
u_ch¨
), (
ª˙o_t
));

690 
	`TRACE
(
•
, "%lu: %s: APPEND: %lu\n", 
∫o
, 
msg
, 
 o
);

692 
LOG_LINE_INSERT
:

693 
	`memmove
(&
 o
, 
p
 + (
u_ch¨
), (
ª˙o_t
));

694 
	`TRACE
(
•
, "%lu: %s: INSERT: %lu\n", 
∫o
, 
msg
, 
 o
);

696 
LOG_LINE_DELETE
:

697 
	`memmove
(&
 o
, 
p
 + (
u_ch¨
), (
ª˙o_t
));

698 
	`TRACE
(
•
, "%lu: %s: DELETE: %lu\n", 
∫o
, 
msg
, 
 o
);

700 
LOG_LINE_RESET_F
:

701 
	`memmove
(&
 o
, 
p
 + (
u_ch¨
), (
ª˙o_t
));

702 
	`TRACE
(
•
, "%lu: %s: RESET_F: %lu\n", 
∫o
, 
msg
, 
 o
);

704 
LOG_LINE_RESET_B
:

705 
	`memmove
(&
 o
, 
p
 + (
u_ch¨
), (
ª˙o_t
));

706 
	`TRACE
(
•
, "%lu: %s: RESET_B: %lu\n", 
∫o
, 
msg
, 
 o
);

708 
LOG_MARK
:

709 
	`memmove
(&
lm
, 
p
 + (
u_ch¨
), (
LMARK
));

710 
	`TRACE
(
•
,

711 "%lu: %s: MARK: %u/%u\n", 
∫o
, 
msg
, 
lm
.
 o
,Üm.
˙o
);

714 
	`ab‹t
();

716 
	}
}

	@common/log.h

12 
	#LOG_NOTYPE
 0

	)

13 
	#LOG_CURSOR_INIT
 1

	)

14 
	#LOG_CURSOR_END
 2

	)

15 
	#LOG_LINE_APPEND
 3

	)

16 
	#LOG_LINE_DELETE
 4

	)

17 
	#LOG_LINE_INSERT
 5

	)

18 
	#LOG_LINE_RESET_F
 6

	)

19 
	#LOG_LINE_RESET_B
 7

	)

20 
	#LOG_MARK
 8

	)

	@common/main.c

10 
	~"c⁄fig.h
"

12 #i‚de‡
löt


13 c⁄° 
	gc›yright
[] =

20 #i‚de‡
löt


21 c⁄° 
	gsccsid
[] = "@(#)main.c 10.48 (Berkeley) 10/11/96";

24 
	~<sys/ty≥s.h
>

25 
	~<sys/queue.h
>

26 
	~<sys/°©.h
>

27 
	~<sys/time.h
>

29 
	~<bô°rög.h
>

30 
	~<î∫o.h
>

31 
	~<f˙é.h
>

32 
	~<limôs.h
>

33 
	~<°dio.h
>

34 
	~<°dlib.h
>

35 
	~<°rög.h
>

36 
	~<uni°d.h
>

38 
	~"comm⁄.h
"

39 
	~"../vi/vi.h
"

40 
	~"∑th«mes.h
"

42 
©èch
 
__P
((
GS
 *));

43 
v_e°r
 
__P
((*, , *));

44 
v_obsﬁëe
 
__P
((*, *[]));

53 
	$edô‹
(
gp
, 
¨gc
, 
¨gv
)

54 
GS
 *
gp
;

55 
¨gc
;

56 *
¨gv
[];

58 
›töd
;

59 *
›èrg
;

60 c⁄° *
p
;

61 
EVENT
 
ev
;

62 
FREF
 *
‰p
;

63 
SCR
 *
•
;

64 
size_t
 
Àn
;

65 
u_öt
 
Êags
;

66 
ch
, 
Êagchk
, 
lÊag
, 
£cuª
, 
°¨tup
, 
ªad⁄ly
, 
rvÆ
, 
sûít
;

67 *
èg_f
, *
wsizórg
, 
∑th
[256];

70 i‡(
gp
->
s¸_busy
 =
NULL
)

71 
gp
->
s¸_busy
 = 
vs_busy
;

73 i‡(
gp
->
s¸_msg
 =
NULL
)

74 
gp
->
s¸_msg
 = 
vs_msg
;

77 
	`CIRCLEQ_INIT
(&
gp
->
dq
);

78 
	`CIRCLEQ_INIT
(&
gp
->
hq
);

79 
	`LIST_INIT
(&
gp
->
ecq
);

80 
	`LIST_INSERT_HEAD
(&
gp
->
ecq
, &gp->
excmd
, 
q
);

81 
gp
->
n›röt
 = 
DEFAULT_NOPRINT
;

84 
	`CIRCLEQ_INIT
(&
gp
->
‰efq
);

85 
	`CIRCLEQ_INIT
(&
gp
->
dcb_°‹e
.
ãxtq
);

86 
	`LIST_INIT
(&
gp
->
cutq
);

87 
	`LIST_INIT
(&
gp
->
£qq
);

90 
ªad⁄ly
 = 0;

91 i‡(!
	`°rcmp
(
gp
->
¥og«me
, "ex") || !strcmp(gp->progname, "nex"))

92 
	`LF_INIT
(
SC_EX
);

95 i‡(!
	`°rcmp
(
gp
->
¥og«me
, "nview") ||

96 !
	`°rcmp
(
gp
->
¥og«me
, "view"))

97 
ªad⁄ly
 = 1;

100 
	`LF_INIT
(
SC_VI
);

104 i‡(
	`v_obsﬁëe
(
gp
->
¥og«me
, 
¨gv
))

108 
Êagchk
 = '\0';

109 
èg_f
 = 
wsizórg
 = 
NULL
;

110 
lÊag
 = 
£cuª
 = 
sûít
 = 0;

111 
°¨tup
 = 1;

114 
	`F_SET
(
gp
, 
G_SNAPSHOT
);

116 #ifde‡
DEBUG


117 (
ch
 = 
	`gë›t
(
¨gc
, 
¨gv
, "c:D:eFlRrSsT:t:vw:")Ë!
EOF
)

119 (
ch
 = 
	`gë›t
(
¨gc
, 
¨gv
, "c:eFlRrS°:vw:")Ë!
EOF
)

121 
ch
) {

127 i‡(
gp
->
c_›ti⁄
 !
NULL
) {

128 
	`v_e°r
(
gp
->
¥og«me
, 0,

132 
gp
->
c_›ti⁄
 = 
›èrg
;

134 #ifde‡
DEBUG


136 
›èrg
[0]) {

138 
°¨tup
 = 0;

141 
	`©èch
(
gp
);

144 
	`v_e°r
(
gp
->
¥og«me
, 0,

151 
	`LF_CLR
(
SC_VI
);

152 
	`LF_SET
(
SC_EX
);

155 
	`F_CLR
(
gp
, 
G_SNAPSHOT
);

158 
lÊag
 = 1;

161 
ªad⁄ly
 = 1;

164 i‡(
Êagchk
 == 't') {

165 
	`v_e°r
(
gp
->
¥og«me
, 0,

169 
Êagchk
 = 'r';

172 
£cuª
 = 1;

175 
sûít
 = 1;

177 #ifde‡
DEBUG


179 i‡((
gp
->
åa˚Â
 = 
	`f›í
(
›èrg
, "w")Ë=
NULL
) {

180 
	`v_e°r
(
gp
->
¥og«me
, 
î∫o
, 
›èrg
);

181 
îr
;

183 ()
	`Ârötf
(
gp
->
åa˚Â
,

184 "\n===\¡ø˚: o≥¿%s\n", 
›èrg
);

188 i‡(
Êagchk
 == 'r') {

189 
	`v_e°r
(
gp
->
¥og«me
, 0,

193 i‡(
Êagchk
 == 't') {

194 
	`v_e°r
(
gp
->
¥og«me
, 0,

198 
Êagchk
 = 't';

199 
èg_f
 = 
›èrg
;

202 
	`LF_CLR
(
SC_EX
);

203 
	`LF_SET
(
SC_VI
);

206 
wsizórg
 = 
›èrg
;

210 ()
gp
->
	`s¸_ußge
();

213 
¨gc
 -
›töd
;

214 
¨gv
 +
›töd
;

221 i‡(
sûít
 && !
	`LF_ISSET
(
SC_EX
)) {

222 
	`v_e°r
(
gp
->
¥og«me
, 0, "-s option is onlyápplicableÅoÉx.");

223 
îr
;

225 i‡(
	`LF_ISSET
(
SC_EX
Ë&& 
	`F_ISSET
(
gp
, 
G_SCRIPTED
))

226 
sûít
 = 1;

237 i‡(
	`s¸ìn_öô
(
gp
, 
NULL
, &
•
)) {

238 i‡(
•
 !
NULL
)

239 
	`CIRCLEQ_INSERT_HEAD
(&
gp
->
dq
, 
•
, 
q
);

240 
îr
;

242 
	`F_SET
(
•
, 
SC_EX
);

243 
	`CIRCLEQ_INSERT_HEAD
(&
gp
->
dq
, 
•
, 
q
);

245 i‡(
	`v_key_öô
(
•
))

246 
îr
;

248 { 
ﬂrgs
[5], *
ﬂrgp
 = oargs;

249 i‡(
lÊag
) {

250 *
ﬂrgp
++ = 
O_LISP
;

251 *
ﬂrgp
++ = 
O_SHOWMATCH
;

253 i‡(
ªad⁄ly
)

254 *
ﬂrgp
++ = 
O_READONLY
;

255 i‡(
£cuª
)

256 *
ﬂrgp
++ = 
O_SECURE
;

257 *
ﬂrgp
 = -1;

258 i‡(
	`›ts_öô
(
•
, 
ﬂrgs
))

259 
îr
;

261 i‡(
wsizórg
 !
NULL
) {

262 
ARGS
 *
av
[2], 
a
, 
b
;

263 ()
	`¢¥ötf
(
∑th
, ’©h), "wödow=%s", 
wsizórg
);

264 
a
.
bp
 = (
CHAR_T
 *)
∑th
;

265 
a
.
Àn
 = 
	`°æí
(
∑th
);

266 
b
.
bp
 = 
NULL
;

267 
b
.
Àn
 = 0;

268 
av
[0] = &
a
;

269 
av
[1] = &
b
;

270 ()
	`›ts_£t
(
•
, 
av
, 
NULL
);

272 i‡(
sûít
) {

273 
	`O_CLR
(
•
, 
O_AUTOPRINT
);

274 
	`O_CLR
(
•
, 
O_PROMPT
);

275 
	`O_CLR
(
•
, 
O_VERBOSE
);

276 
	`O_CLR
(
•
, 
O_WARN
);

277 
	`F_SET
(
•
, 
SC_EX_SILENT
);

280 
•
->
rows
 = 
	`O_VAL
(•, 
O_LINES
);

281 
•
->
cﬁs
 = 
	`O_VAL
(•, 
O_COLUMNS
);

283 i‡(!
sûít
 && 
°¨tup
) {

284 i‡(
	`ex_exrc
(
•
))

285 
îr
;

286 i‡(
	`F_ISSET
(
•
, 
SC_EXIT
 | 
SC_EXIT_FORCE
)) {

287 i‡(
	`s¸ìn_íd
(
•
))

288 
îr
;

289 
d⁄e
;

298 i‡(
Êagchk
 ='r' && 
¨gv
[0] =
NULL
) {

299 i‡(
	`rcv_li°
(
•
))

300 
îr
;

301 i‡(
	`s¸ìn_íd
(
•
))

302 
îr
;

303 
d⁄e
;

315 
•
->
defs¸ﬁl
 = (
	`O_VAL
(•, 
O_WINDOW
) + 1) / 2;

328 i‡(
gp
->
c_›ti⁄
 =
NULL
) {

329 
	`F_CLR
(
•
, 
SC_EX
 | 
SC_VI
);

330 
	`F_SET
(
•
, 
	`LF_ISSET
(
SC_EX
 | 
SC_VI
));

334 i‡(
èg_f
 !
NULL
 && 
	`ex_èg_fú°
(
•
,Åag_f))

335 
îr
;

342 i‡(*
¨gv
 !
NULL
) {

343 i‡(
•
->
‰p
 !
NULL
) {

345 
	`MALLOC_NOMSG
(
•
,

346 *--
¨gv
, *, 
	`°æí
(
•
->
‰p
->
«me
) + 1);

347 i‡(*
¨gv
 =
NULL
) {

348 
	`v_e°r
(
gp
->
¥og«me
, 
î∫o
, 
NULL
);

349 
îr
;

351 ()
	`°r˝y
(*
¨gv
, 
•
->
‰p
->
«me
);

353 
•
->
¨gv
 = sp->
ˇrgv
 =árgv;

354 
	`F_SET
(
•
, 
SC_ARGNOFREE
);

355 i‡(
Êagchk
 == 'r')

356 
	`F_SET
(
•
, 
SC_ARGRECOVER
);

364 i‡(
•
->
‰p
 =
NULL
) {

365 i‡(
•
->
¨gv
 =
NULL
) {

366 i‡((
‰p
 = 
	`fûe_add
(
•
, 
NULL
)) == NULL)

367 
îr
;

369 i‡((
‰p
 = 
	`fûe_add
(
•
, (
CHAR_T
 *)•->
¨gv
[0])Ë=
NULL
)

370 
îr
;

371 i‡(
	`F_ISSET
(
•
, 
SC_ARGRECOVER
))

372 
	`F_SET
(
‰p
, 
FR_RECOVER
);

375 i‡(
	`fûe_öô
(
•
, 
‰p
, 
NULL
, 0))

376 
îr
;

377 i‡(
	`EXCMD_RUNNING
(
gp
)) {

378 ()
	`ex_cmd
(
•
);

379 i‡(
	`F_ISSET
(
•
, 
SC_EXIT
 | 
SC_EXIT_FORCE
)) {

380 i‡(
	`s¸ìn_íd
(
•
))

381 
îr
;

382 
d⁄e
;

396 i‡(
	`F_ISSET
(
•
, 
SC_SCR_EX
)) {

397 
p
 = 
	`msg_cmsg
(
•
, 
CMSG_CONT_R
, &
Àn
);

398 ()
	`wrôe
(
STDOUT_FILENO
, 
p
, 
Àn
);

400 i‡(
	`v_evít_gë
(
•
, &
ev
, 0, 0))

401 
îr
;

402 i‡(
ev
.
e_evít
 =
E_INTERRUPT
 ||

403 
ev
.
e_evít
 =
E_CHARACTER
 &&

404 (
ev
.
e_vÆue
 =
K_CR
 ||Év.e_vÆuê=
K_NL
))

406 ()
gp
->
	`s¸_bñl
(
•
);

411 
	`F_CLR
(
•
, 
SC_EX
 | 
SC_VI
);

412 
	`F_SET
(
•
, 
	`LF_ISSET
(
SC_EX
 | 
SC_VI
Ë| 
SC_STATUS_CNT
);

418 
•
 !
NULL
)

419 i‡(
	`F_ISSET
(
•
, 
SC_EX
Ë? 
	`ex
(&•Ë: 
	`vi
(&sp))

420 
îr
;

422 
d⁄e
: 
rvÆ
 = 0;

424 
îr
: 
rvÆ
 = 1;

427 
	`v_íd
(
gp
);

429  (
rvÆ
);

430 
	}
}

439 
	$v_íd
(
gp
)

440 
GS
 *
gp
;

442 
MSGS
 *
mp
;

443 
SCR
 *
•
;

446 i‡(
gp
->
c˛_•
 !
NULL
) {

447 ()
	`fûe_íd
(
gp
->
c˛_•
, 
NULL
, 1);

448 ()
	`s¸ìn_íd
(
gp
->
c˛_•
);

450 (
•
 = 
gp
->
dq
.
cqh_fú°
) != (*)&gp->dq)

451 ()
	`s¸ìn_íd
(
•
);

452 (
•
 = 
gp
->
hq
.
cqh_fú°
) != (*)&gp->hq)

453 ()
	`s¸ìn_íd
(
•
);

455 #ifde‡
HAVE_PERL_INTERP


456 
	`≥æ_íd
(
gp
);

459 #i‡
	`deföed
(
DEBUG
Ë|| deföed(
PURIFY
Ë|| deföed(
LIBRARY
)

460 { 
FREF
 *
‰p
;

462 (
‰p
 = 
gp
->
‰efq
.
cqh_fú°
Ë!(
FREF
 *)&gp->frefq) {

463 
	`CIRCLEQ_REMOVE
(&
gp
->
‰efq
, 
‰p
, 
q
);

464 i‡(
‰p
->
«me
 !
NULL
)

465 
	`‰ì
(
‰p
->
«me
);

466 i‡(
‰p
->
äame
 !
NULL
)

467 
	`‰ì
(
‰p
->
äame
);

468 
	`‰ì
(
‰p
);

473 i‡(
gp
->
i_evít
 !
NULL
)

474 
	`‰ì
(
gp
->
i_evít
);

477 
	`cut_˛o£
(
gp
);

480 
	`£q_˛o£
(
gp
);

483 ()
	`ãxt_l‰ì
(&
gp
->
dcb_°‹e
.
ãxtq
);

486 
	`msg_˛o£
(
gp
);

490 i‡(
	`F_ISSET
(
gp
, 
G_BELLSCHED
))

491 ()
	`Ârötf
(
°dîr
, "\07");

499 (
mp
 = 
gp
->
msgq
.
lh_fú°
Ë!
NULL
) {

500 ()
	`Ârötf
(
°dîr
, "%s%.*s",

501 
mp
->
mty≥
 =
M_ERR
 ? "ex/vi: " : "", ()mp->
Àn
, mp->
buf
);

502 
	`LIST_REMOVE
(
mp
, 
q
);

503 #i‡
	`deföed
(
DEBUG
Ë|| deföed(
PURIFY
Ë|| deföed(
LIBRARY
)

504 
	`‰ì
(
mp
->
buf
);

505 
	`‰ì
(
mp
);

509 #i‡
	`deföed
(
DEBUG
Ë|| deföed(
PURIFY
Ë|| deföed(
LIBRARY
)

511 i‡(
gp
->
tmp_bp
 !
NULL
)

512 
	`‰ì
(
gp
->
tmp_bp
);

514 #i‡
	`deföed
(
DEBUG
)

516 i‡(
gp
->
åa˚Â
 !
NULL
)

517 ()
	`f˛o£
(
gp
->
åa˚Â
);

520 
	}
}

527 
	$v_obsﬁëe
(
«me
, 
¨gv
)

528 *
«me
, *
¨gv
[];

530 
size_t
 
Àn
;

531 *
p
;

546 *++
¨gv
 && 
	`°rcmp
(argv[0], "--"))

547 i‡(
¨gv
[0][0] == '+') {

548 i‡(
¨gv
[0][1] == '\0') {

549 
	`MALLOC_NOMSG
(
NULL
, 
¨gv
[0], *, 4);

550 i‡(
¨gv
[0] =
NULL
)

551 
nomem
;

552 ()
	`°r˝y
(
¨gv
[0], "-c$");

554 
p
 = 
¨gv
[0];

555 
Àn
 = 
	`°æí
(
¨gv
[0]);

556 
	`MALLOC_NOMSG
(
NULL
, 
¨gv
[0], *, 
Àn
 + 2);

557 i‡(
¨gv
[0] =
NULL
)

558 
nomem
;

559 
¨gv
[0][0] = '-';

560 
¨gv
[0][1] = 'c';

561 ()
	`°r˝y
(
¨gv
[0] + 2, 
p
 + 1);

563 } i‡(
¨gv
[0][0] == '-')

564 i‡(
¨gv
[0][1] == '\0') {

565 
	`MALLOC_NOMSG
(
NULL
, 
¨gv
[0], *, 3);

566 i‡(
¨gv
[0] =
NULL
) {

567 
nomem
: 
	`v_e°r
(
«me
, 
î∫o
, 
NULL
);

570 ()
	`°r˝y
(
¨gv
[0], "-s");

572 i‡((
¨gv
[0][1] == 'c' ||árgv[0][1] == 'T' ||

573 
¨gv
[0][1] == 't' ||árgv[0][1] == 'w') &&

574 
¨gv
[0][2] == '\0')

575 ++
¨gv
;

577 
	}
}

579 #ifde‡
DEBUG


581 
	$©èch
(
gp
)

582 
GS
 *
gp
;

584 
fd
;

585 
ch
;

587 i‡((
fd
 = 
	`›í
(
_PATH_TTY
, 
O_RDONLY
, 0)) < 0) {

588 
	`v_e°r
(
gp
->
¥og«me
, 
î∫o
, 
_PATH_TTY
);

592 ()
	`¥ötf
("process %lu waiting,Énter <CR>Åo continue: ",

593 (
u_l⁄g
)
	`gëpid
());

594 ()
	`fÊush
(
°dout
);

597 i‡(
	`ªad
(
fd
, &
ch
, 1) != 1) {

598 ()
	`˛o£
(
fd
);

601 } 
ch
 != '\n' && ch != '\r');

602 ()
	`˛o£
(
fd
);

603 
	}
}

607 
	$v_e°r
(
«me
, 
ío
, 
msg
)

608 *
«me
, *
msg
;

609 
ío
;

611 ()
	`Ârötf
(
°dîr
, "%s", 
«me
);

612 i‡(
msg
 !
NULL
)

613 ()
	`Ârötf
(
°dîr
, ": %s", 
msg
);

614 i‡(
ío
)

615 ()
	`Ârötf
(
°dîr
, ": %s", 
	`°ªº‹
(
î∫o
));

616 ()
	`Ârötf
(
°dîr
, "\n");

617 
	}
}

	@common/mark.c

10 
	~"c⁄fig.h
"

12 #i‚de‡
löt


13 c⁄° 
	gsccsid
[] = "@(#)mark.c 10.13 (Berkeley) 7/19/96";

16 
	~<sys/ty≥s.h
>

17 
	~<sys/queue.h
>

19 
	~<bô°rög.h
>

20 
	~<î∫o.h
>

21 
	~<limôs.h
>

22 
	~<°dio.h
>

23 
	~<°dlib.h
>

24 
	~<°rög.h
>

26 
	~"comm⁄.h
"

28 
LMARK
 *
m¨k_föd
 
__P
((
SCR
 *, 
ARG_CHAR_T
));

68 
	$m¨k_öô
(
•
, 
ï
)

69 
SCR
 *
•
;

70 
EXF
 *
ï
;

78 
	`LIST_INIT
(&
ï
->
m¨ks
);

80 
	}
}

89 
	$m¨k_íd
(
•
, 
ï
)

90 
SCR
 *
•
;

91 
EXF
 *
ï
;

93 
LMARK
 *
lmp
;

99 (
lmp
 = 
ï
->
m¨ks
.
lh_fú°
Ë!
NULL
) {

100 
	`LIST_REMOVE
(
lmp
, 
q
);

101 
	`‰ì
(
lmp
);

104 
	}
}

113 
	$m¨k_gë
(
•
, 
key
, 
mp
, 
mty≥
)

114 
SCR
 *
•
;

115 
ARG_CHAR_T
 
key
;

116 
MARK
 *
mp
;

117 
mty≥_t
 
mty≥
;

119 
LMARK
 *
lmp
;

121 i‡(
key
 =
ABSMARK2
)

122 
key
 = 
ABSMARK1
;

124 
lmp
 = 
	`m¨k_föd
(
•
, 
key
);

125 i‡(
lmp
 =
NULL
 ||Ümp->
«me
 !
key
) {

126 
	`msgq
(
•
, 
mty≥
, "017|M¨k %s:ÇŸ së", 
	`KEY_NAME
(•, 
key
));

129 i‡(
	`F_ISSET
(
lmp
, 
MARK_DELETED
)) {

130 
	`msgq
(
•
, 
mty≥
,

131 "018|M¨k %s:Åhêlöêwa†dñëed", 
	`KEY_NAME
(
•
, 
key
));

140 i‡((
lmp
->
 o
 !1 ||Ümp->
˙o
 !0Ë&& !
	`db_exi°
(
•
,Ümp->lno)) {

141 
	`msgq
(
•
, 
mty≥
,

143 
	`KEY_NAME
(
•
, 
key
));

146 
mp
->
 o
 = 
lmp
->lno;

147 
mp
->
˙o
 = 
lmp
->cno;

149 
	}
}

158 
	$m¨k_£t
(
•
, 
key
, 
vÆue
, 
u£r£t
)

159 
SCR
 *
•
;

160 
ARG_CHAR_T
 
key
;

161 
MARK
 *
vÆue
;

162 
u£r£t
;

164 
LMARK
 *
lmp
, *
lmt
;

166 i‡(
key
 =
ABSMARK2
)

167 
key
 = 
ABSMARK1
;

175 
lmp
 = 
	`m¨k_föd
(
•
, 
key
);

176 i‡(
lmp
 =
NULL
 ||Ümp->
«me
 !
key
) {

177 
	`MALLOC_RET
(
•
, 
lmt
, 
LMARK
 *, (LMARK));

178 i‡(
lmp
 =
NULL
) {

179 
	`LIST_INSERT_HEAD
(&
•
->
ï
->
m¨ks
, 
lmt
, 
q
);

181 
	`LIST_INSERT_AFTER
(
lmp
, 
lmt
, 
q
);

182 
lmp
 = 
lmt
;

183 } i‡(!
u£r£t
 &&

184 !
	`F_ISSET
(
lmp
, 
MARK_DELETED
Ë&& F_ISSET÷mp, 
MARK_USERSET
))

187 
lmp
->
 o
 = 
vÆue
->lno;

188 
lmp
->
˙o
 = 
vÆue
->cno;

189 
lmp
->
«me
 = 
key
;

190 
lmp
->
Êags
 = 
u£r£t
 ? 
MARK_USERSET
 : 0;

192 
	}
}

199 
LMARK
 *

200 
	$m¨k_föd
(
•
, 
key
)

201 
SCR
 *
•
;

202 
ARG_CHAR_T
 
key
;

204 
LMARK
 *
lmp
, *
œ°lmp
;

210 
œ°lmp
 = 
NULL
, 
lmp
 = 
•
->
ï
->
m¨ks
.
lh_fú°
;

211 
lmp
 !
NULL
; 
œ°lmp
 =Ümp,Üm∞lmp->
q
.
À_√xt
)

212 i‡(
lmp
->
«me
 >
key
)

213  (
lmp
->
«me
 =
key
 ?Üm∞: 
œ°lmp
);

214  (
œ°lmp
);

215 
	}
}

224 
	$m¨k_ösdñ
(
•
, 
›
, 
 o
)

225 
SCR
 *
•
;

226 
 ›_t
 
›
;

227 
ª˙o_t
 
 o
;

229 
LMARK
 *
lmp
;

230 
ª˙o_t
 
Œöe
;

232 
›
) {

233 
LINE_APPEND
:

235 
	`ab‹t
();

236 
LINE_DELETE
:

237 
lmp
 = 
•
->
ï
->
m¨ks
.
lh_fú°
;

238 
lmp
 !
NULL
;Üm∞lmp->
q
.
À_√xt
)

239 i‡(
lmp
->
 o
 >=Üno)

240 i‡(
lmp
->
 o
 ==Üno) {

241 
	`F_SET
(
lmp
, 
MARK_DELETED
);

242 ()
	`log_m¨k
(
•
, 
lmp
);

244 --
lmp
->
 o
;

246 
LINE_INSERT
:

261 i‡(!
	`db_exi°
(
•
, 2)) {

262 i‡(
	`db_œ°
(
•
, &
Œöe
))

264 i‡(
Œöe
 == 1)

268 
lmp
 = 
•
->
ï
->
m¨ks
.
lh_fú°
;

269 
lmp
 !
NULL
;Üm∞lmp->
q
.
À_√xt
)

270 i‡(
lmp
->
 o
 >=Üno)

271 ++
lmp
->
 o
;

273 
LINE_RESET
:

277 
	}
}

	@common/mark.h

24 
	s_m¨k
 {

25 
	#OOBLNO
 0

	)

26 
ª˙o_t
 
	m o
;

27 
size_t
 
	m˙o
;

30 
	s_lm¨k
 {

31 
LIST_ENTRY
(
_lm¨k
Ë
	mq
;

32 
ª˙o_t
 
	m o
;

33 
size_t
 
	m˙o
;

34 
CHAR_T
 
	m«me
;

36 
	#MARK_DELETED
 0x01

	)

37 
	#MARK_USERSET
 0x02

	)

38 
u_öt8_t
 
	mÊags
;

41 
	#ABSMARK1
 '\''

	)

42 
	#ABSMARK2
 '`'

	)

	@common/mem.h

15 
	#BINC_GOTO
(
•
, 
Õ
, 
Œí
, 
∆í
) { \

16 *
L__bö˝
; \

17 i‡((
∆í
Ë> 
Œí
) { \

18 i‡((
L__bö˝
 = 
	`böc
(
•
, 
Õ
, &(
Œí
), 
∆í
)Ë=
NULL
) \

19 
Æloc_îr
; \

24 
Õ
 = 
L__bö˝
; \

26 }

	)

27 
	#BINC_RET
(
•
, 
Õ
, 
Œí
, 
∆í
) { \

28 *
L__bö˝
; \

29 i‡((
∆í
Ë> 
Œí
) { \

30 i‡((
L__bö˝
 = 
	`böc
(
•
, 
Õ
, &(
Œí
), 
∆í
)Ë=
NULL
) \

36 
Õ
 = 
L__bö˝
; \

38 }

	)

45 
	#GET_SPACE_GOTO
(
•
, 
bp
, 
bÀn
, 
∆í
) { \

46 
GS
 *
L__gp
 = (
•
Ë=
NULL
 ? NULL : (•)->
gp
; \

47 i‡(
L__gp
 =
NULL
 || 
	`F_ISSET
(L__gp, 
G_TMP_INUSE
)) { \

48 
bp
 = 
NULL
; \

49 
bÀn
 = 0; \

50 
	`BINC_GOTO
(
•
, 
bp
, 
bÀn
, 
∆í
); \

52 
	`BINC_GOTO
(
•
, 
L__gp
->
tmp_bp
, L__gp->
tmp_bÀn
, 
∆í
); \

53 
bp
 = 
L__gp
->
tmp_bp
; \

54 
bÀn
 = 
L__gp
->
tmp_bÀn
; \

55 
	`F_SET
(
L__gp
, 
G_TMP_INUSE
); \

57 }

	)

58 
	#GET_SPACE_RET
(
•
, 
bp
, 
bÀn
, 
∆í
) { \

59 
GS
 *
L__gp
 = (
•
Ë=
NULL
 ? NULL : (•)->
gp
; \

60 i‡(
L__gp
 =
NULL
 || 
	`F_ISSET
(L__gp, 
G_TMP_INUSE
)) { \

61 
bp
 = 
NULL
; \

62 
bÀn
 = 0; \

63 
	`BINC_RET
(
•
, 
bp
, 
bÀn
, 
∆í
); \

65 
	`BINC_RET
(
•
, 
L__gp
->
tmp_bp
, L__gp->
tmp_bÀn
, 
∆í
); \

66 
bp
 = 
L__gp
->
tmp_bp
; \

67 
bÀn
 = 
L__gp
->
tmp_bÀn
; \

68 
	`F_SET
(
L__gp
, 
G_TMP_INUSE
); \

70 }

	)

76 
	#ADD_SPACE_GOTO
(
•
, 
bp
, 
bÀn
, 
∆í
) { \

77 
GS
 *
L__gp
 = (
•
Ë=
NULL
 ? NULL : (•)->
gp
; \

78 i‡(
L__gp
 =
NULL
 || 
bp
 =L__gp->
tmp_bp
) { \

79 
	`F_CLR
(
L__gp
, 
G_TMP_INUSE
); \

80 
	`BINC_GOTO
(
•
, 
L__gp
->
tmp_bp
, L__gp->
tmp_bÀn
, 
∆í
); \

81 
bp
 = 
L__gp
->
tmp_bp
; \

82 
bÀn
 = 
L__gp
->
tmp_bÀn
; \

83 
	`F_SET
(
L__gp
, 
G_TMP_INUSE
); \

85 
	`BINC_GOTO
(
•
, 
bp
, 
bÀn
, 
∆í
); \

86 }

	)

87 
	#ADD_SPACE_RET
(
•
, 
bp
, 
bÀn
, 
∆í
) { \

88 
GS
 *
L__gp
 = (
•
Ë=
NULL
 ? NULL : (•)->
gp
; \

89 i‡(
L__gp
 =
NULL
 || 
bp
 =L__gp->
tmp_bp
) { \

90 
	`F_CLR
(
L__gp
, 
G_TMP_INUSE
); \

91 
	`BINC_RET
(
•
, 
L__gp
->
tmp_bp
, L__gp->
tmp_bÀn
, 
∆í
); \

92 
bp
 = 
L__gp
->
tmp_bp
; \

93 
bÀn
 = 
L__gp
->
tmp_bÀn
; \

94 
	`F_SET
(
L__gp
, 
G_TMP_INUSE
); \

96 
	`BINC_RET
(
•
, 
bp
, 
bÀn
, 
∆í
); \

97 }

	)

100 
	#FREE_SPACE
(
•
, 
bp
, 
bÀn
) { \

101 
GS
 *
L__gp
 = (
•
Ë=
NULL
 ? NULL : (•)->
gp
; \

102 i‡(
L__gp
 !
NULL
 && 
bp
 =L__gp->
tmp_bp
) \

103 
	`F_CLR
(
L__gp
, 
G_TMP_INUSE
); \

105 
	`‰ì
(
bp
); \

106 }

	)

118 
	#CALLOC
(
•
, 
p
, 
ˇ°
, 
nmemb
, 
size
) { \

119 i‡((
p
 = (
ˇ°
)
	`ˇŒoc
(
nmemb
, 
size
)Ë=
NULL
) \

120 
	`msgq
(
•
, 
M_SYSERR
, 
NULL
); \

121 }

	)

122 
	#CALLOC_GOTO
(
•
, 
p
, 
ˇ°
, 
nmemb
, 
size
) { \

123 i‡((
p
 = (
ˇ°
)
	`ˇŒoc
(
nmemb
, 
size
)Ë=
NULL
) \

124 
Æloc_îr
; \

125 }

	)

126 
	#CALLOC_NOMSG
(
•
, 
p
, 
ˇ°
, 
nmemb
, 
size
) { \

127 
p
 = (
ˇ°
)
	`ˇŒoc
(
nmemb
, 
size
); \

128 }

	)

129 
	#CALLOC_RET
(
•
, 
p
, 
ˇ°
, 
nmemb
, 
size
) { \

130 i‡((
p
 = (
ˇ°
)
	`ˇŒoc
(
nmemb
, 
size
)Ë=
NULL
) { \

131 
	`msgq
(
•
, 
M_SYSERR
, 
NULL
); \

134 }

	)

136 
	#MALLOC
(
•
, 
p
, 
ˇ°
, 
size
) { \

137 i‡((
p
 = (
ˇ°
)
	`mÆloc
(
size
)Ë=
NULL
) \

138 
	`msgq
(
•
, 
M_SYSERR
, 
NULL
); \

139 }

	)

140 
	#MALLOC_GOTO
(
•
, 
p
, 
ˇ°
, 
size
) { \

141 i‡((
p
 = (
ˇ°
)
	`mÆloc
(
size
)Ë=
NULL
) \

142 
Æloc_îr
; \

143 }

	)

144 
	#MALLOC_NOMSG
(
•
, 
p
, 
ˇ°
, 
size
) { \

145 
p
 = (
ˇ°
)
	`mÆloc
(
size
); \

146 }

	)

147 
	#MALLOC_RET
(
•
, 
p
, 
ˇ°
, 
size
) { \

148 i‡((
p
 = (
ˇ°
)
	`mÆloc
(
size
)Ë=
NULL
) { \

149 
	`msgq
(
•
, 
M_SYSERR
, 
NULL
); \

152 }

	)

157 
	#REALLOC
(
•
, 
p
, 
ˇ°
, 
size
) { \

158 i‡((
p
 = (
ˇ°
)’ =
NULL
 ? \

159 
	`mÆloc
(
size
Ë: 
	`ªÆloc
(
p
, size))Ë=
NULL
) \

160 
	`msgq
(
•
, 
M_SYSERR
, 
NULL
); \

161 }

	)

167 
	#MEMMOVE
(
p
, 
t
, 
Àn
Ë
	`memmove
’,Å, (ÀnË* (*’)))

	)

168 
	#MEMSET
(
p
, 
vÆue
, 
Àn
Ë
	`mem£t
’, vÆue, (ÀnË* (*’)))

	)

	@common/msg.c

10 
	~"c⁄fig.h
"

12 #i‚de‡
löt


13 c⁄° 
	gsccsid
[] = "@(#)msg.c 10.48 (Berkeley) 9/15/96";

16 
	~<sys/∑øm.h
>

17 
	~<sys/ty≥s.h
>

18 
	~<sys/queue.h
>

19 
	~<sys/°©.h
>

20 
	~<sys/time.h
>

22 
	~<bô°rög.h
>

23 
	~<˘y≥.h
>

24 
	~<î∫o.h
>

25 
	~<f˙é.h
>

26 
	~<limôs.h
>

27 
	~<°dio.h
>

28 
	~<°dlib.h
>

29 
	~<°rög.h
>

30 
	~<uni°d.h
>

32 #ifde‡
__STDC__


33 
	~<°d¨g.h
>

35 
	~<v¨¨gs.h
>

38 
	~"comm⁄.h
"

39 
	~"../vi/vi.h
"

48 #ifde‡
__STDC__


49 
	$msgq
(
SCR
 *
•
, 
mty≥_t
 
mt
, c⁄° *
fmt
, ...)

51 
	$msgq
(
•
, 
mt
, 
fmt
, 
va_Æi°
)

52 
SCR
 *
•
;

53 
mty≥_t
 
mt
;

54 c⁄° *
fmt
;

55 
va_d˛


58 #i‚de‡
NL_ARGMAX


59 
	#__NL_ARGMAX
 20

	)

61 c⁄° *
°r
;

62 
size_t
 
¨g
;

63 
size_t
 
¥efix
;

64 
size_t
 
skù
;

65 
size_t
 
suffix
;

66 } 
°r
[
__NL_ARGMAX
];

68 
ªíãr
;

69 
CHAR_T
 
ch
;

70 
GS
 *
gp
;

71 
size_t
 
bÀn
, 
˙t1
, 
˙t2
, 
Àn
, 
mÀn
, 
∆í
, 
soff
;

72 c⁄° *
p
, *
t
, *
u
;

73 *
bp
, *
mp
, *
rbp
, *
s_rbp
;

74 
va_li°
 
≠
;

82 i‡(
•
 =
NULL
) {

83 
gp
 = 
NULL
;

84 i‡(
mt
 =
M_BERR
)

85 
mt
 = 
M_ERR
;

86 i‡(
mt
 =
M_VINFO
)

87 
mt
 = 
M_INFO
;

89 
gp
 = 
•
->gp;

90 
mt
) {

91 
M_BERR
:

92 i‡(
	`F_ISSET
(
•
, 
SC_VI
Ë&& !
	`O_ISSET
(•, 
O_VERBOSE
)) {

93 
	`F_SET
(
gp
, 
G_BELLSCHED
);

96 
mt
 = 
M_ERR
;

98 
M_VINFO
:

99 i‡(!
	`O_ISSET
(
•
, 
O_VERBOSE
))

101 
mt
 = 
M_INFO
;

103 
M_INFO
:

104 i‡(
	`F_ISSET
(
•
, 
SC_EX_SILENT
))

107 
M_ERR
:

108 
M_SYSERR
:

111 
	`ab‹t
();

122 i‡(
ªíãr
++)

126 
∆í
 = 1024;

128 
ªåy
: 
	`FREE_SPACE
(
•
, 
bp
, 
bÀn
);

129 
∆í
 *= 2;

131 
bp
 = 
NULL
;

132 
bÀn
 = 0;

133 
	`GET_SPACE_GOTO
(
•
, 
bp
, 
bÀn
, 
∆í
);

142 
	#REM
 (
bÀn
 - 
mÀn
)

	)

143 
mp
 = 
bp
;

144 
mÀn
 = 0;

145 i‡(
mt
 =
M_SYSERR
) {

146 
p
 = 
	`msg_ˇt
(
•
, "020|Eº‹: ", &
Àn
);

147 i‡(
REM
 < 
Àn
)

148 
ªåy
;

149 
	`mem˝y
(
mp
, 
p
, 
Àn
);

150 
mp
 +
Àn
;

151 
mÀn
 +
Àn
;

158 i‡((
mt
 =
M_ERR
 || mà=
M_SYSERR
) &&

159 
•
 !
NULL
 && 
gp
 !NULL && gp->
if_«me
 != NULL) {

160 
p
 = 
gp
->
if_«me
; *p != '\0'; ++p) {

161 
Àn
 = 
	`¢¥ötf
(
mp
, 
REM
, "%s", 
	`KEY_NAME
(
•
, *
p
));

162 
mp
 +
Àn
;

163 i‡((
mÀn
 +
Àn
Ë> 
bÀn
)

164 
ªåy
;

166 
Àn
 = 
	`¢¥ötf
(
mp
, 
REM
, ", %d: ", 
gp
->
if_ o
);

167 
mp
 +
Àn
;

168 i‡((
mÀn
 +
Àn
Ë> 
bÀn
)

169 
ªåy
;

173 i‡(
fmt
 =
NULL
)

174 
nofmt
;

175 
fmt
 = 
	`msg_ˇt
(
•
, fmt, 
NULL
);

177 #i‚de‡
NL_ARGMAX


201 
p
 = 
fmt
, 
soff
 = 0; sof‡< 
__NL_ARGMAX
;) {

202 
t
 = 
p
; *p != '\0' && *p != '%'; ++p);

203 i‡(*
p
 == '\0')

205 ++
p
;

206 i‡(!
	`isdigô
(*
p
)) {

207 i‡(*
p
 == '%')

208 ++
p
;

211 
u
 = 
p
; *++∞!'\0' && 
	`isdigô
(*p););

212 i‡(*
p
 != '$')

216 
°r
[
soff
].°∏
t
;

217 
°r
[
soff
].
¥efix
 = 
u
 - 
t
;

220 
°r
[
soff
].
¨g
 = 
	`©oi
(
u
);

221 
°r
[
soff
].
skù
 = (
p
 - 
u
) + 1;

222 i‡(
°r
[
soff
].
¨g
 >
__NL_ARGMAX
)

223 
ªt
;

226 
u
 = 
p
; (
ch
 = *++p) != '\0';)

227 i‡(
	`ißÕha
(
ch
) &&

228 
	`°rchr
("diouxX„EgGc•n", 
ch
Ë!
NULL
)

230 
°r
[
soff
].
suffix
 = 
p
 - 
u
;

231 i‡(
ch
 != '\0')

232 ++
p
;

233 ++
soff
;

237 i‡(
soff
 == 0)

238 
f‹m©
;

241 i‡((
rbp
 = 
	`mÆloc
(
∆í
)Ë=
NULL
)

242 
ªt
;

243 
s_rbp
 = 
rbp
;

259 
˙t1
 = 1; c¡1 <
soff
; ++cnt1)

260 
˙t2
 = 0; c¡2 < 
soff
; ++cnt2)

261 i‡(
˙t1
 =
°r
[
˙t2
].
¨g
) {

262 
	`memmove
(
s_rbp
, 
°r
[
˙t2
].°r, så[˙t2].
¥efix
);

263 
	`memmove
(
s_rbp
 + 
°r
[
˙t2
].
¥efix
,

264 
°r
[
˙t2
].°∏+ så[˙t2].
¥efix
 +

265 
°r
[
˙t2
].
skù
, så[˙t2].
suffix
);

266 
s_rbp
 +
°r
[
˙t2
].
¥efix
 + så[˙t2].
suffix
;

267 *
s_rbp
++ =

268 
gp
 =
NULL
 ? 
DEFAULT_NOPRINT
 : gp->
n›röt
;

271 *
s_rbp
 = '\0';

272 
fmt
 = 
rbp
;

275 
f‹m©
:

276 #ifde‡
__STDC__


277 
	`va_°¨t
(
≠
, 
fmt
);

279 
	`va_°¨t
(
≠
);

281 
Àn
 = 
	`v¢¥ötf
(
mp
, 
REM
, 
fmt
, 
≠
);

282 
	`va_íd
(
≠
);

283 i‡(
Àn
 >
∆í
)

284 
ªåy
;

286 #i‚de‡
NL_ARGMAX


287 i‡(
soff
 == 0)

288 
nofmt
;

295 
p
 = 
t
 = 
mp
, 
˙t1
 = 1,

296 
ch
 = 
gp
 =
NULL
 ? 
DEFAULT_NOPRINT
 : gp->
n›röt
; *
p
 != '\0'; ++p)

297 i‡(*
p
 =
ch
) {

298 
˙t2
 = 0; c¡2 < 
soff
; ++cnt2)

299 i‡(
°r
[
˙t2
].
¨g
 =
˙t1
)

301 
°r
[
˙t2
].°∏
t
;

302 
°r
[
˙t2
].
¥efix
 = 
p
 - 
t
;

303 
t
 = 
p
 + 1;

304 ++
˙t1
;

315 
s_rbp
 = 
rbp
, 
˙t1
 = 0; c¡1 < 
soff
; ++cnt1) {

316 
	`memmove
(
rbp
, 
°r
[
˙t1
].°r, så[˙t1].
¥efix
);

317 
rbp
 +
°r
[
˙t1
].
¥efix
;

318 --
Àn
;

320 
	`memmove
(
mp
, 
s_rbp
, 
rbp
 - s_rbp);

323 
	`‰ì
(
s_rbp
);

326 
nofmt
: 
mp
 +
Àn
;

327 i‡((
mÀn
 +
Àn
Ë> 
bÀn
)

328 
ªåy
;

329 i‡(
mt
 =
M_SYSERR
) {

330 
Àn
 = 
	`¢¥ötf
(
mp
, 
REM
, ": %s", 
	`°ªº‹
(
î∫o
));

331 
mp
 +
Àn
;

332 i‡((
mÀn
 +
Àn
Ë> 
bÀn
)

333 
ªåy
;

334 
mt
 = 
M_ERR
;

338 i‡((
mÀn
 +1Ë> 
bÀn
)

339 
ªåy
;

340 *
mp
 = '\n';

342 i‡(
•
 !
NULL
)

343 ()
	`ex_fÊush
(
•
);

344 i‡(
gp
 !
NULL
)

345 
gp
->
	`s¸_msg
(
•
, 
mt
, 
bp
, 
mÀn
);

347 ()
	`Ârötf
(
°dîr
, "%.*s", ()
mÀn
, 
bp
);

350 
ªt
: 
	`FREE_SPACE
(
•
, 
bp
, 
bÀn
);

351 
Æloc_îr
:

352 
ªíãr
 = 0;

353 
	}
}

362 
	$msgq_°r
(
•
, 
mty≥
, 
°r
, 
fmt
)

363 
SCR
 *
•
;

364 
mty≥_t
 
mty≥
;

365 *
°r
, *
fmt
;

367 
nf
, 
sv_î∫o
;

368 *
p
;

370 i‡(
°r
 =
NULL
) {

371 
	`msgq
(
•
, 
mty≥
, 
fmt
);

375 
sv_î∫o
 = 
î∫o
;

376 
p
 = 
	`msg_¥öt
(
•
, 
°r
, &
nf
);

377 
î∫o
 = 
sv_î∫o
;

378 
	`msgq
(
•
, 
mty≥
, 
fmt
, 
p
);

379 i‡(
nf
)

380 
	`FREE_SPACE
(
•
, 
p
, 0);

381 
	}
}

404 
	$mod_Ωt
(
•
)

405 
SCR
 *
•
;

407 * c⁄° 
a˘i⁄
[] = {

416 * c⁄° 
löes
[] = {

420 
ª˙o_t
 
tŸÆ
;

421 
u_l⁄g
 
ΩtvÆ
;

422 
fú°
, 
˙t
;

423 
size_t
 
bÀn
, 
Àn
, 
éí
;

424 c⁄° *
t
;

425 * c⁄° *
≠
;

426 *
bp
, *
p
;

429 i‡(
	`F_ISSET
(
•
, 
SC_EX_SILENT
))

433 
•
->
Ωéch™ge
 = 
OOBLNO
;

450 
	#ARSIZE
(
a
Ë◊Ë/  (*a)

	)

451 
	#MAXNUM
 25

	)

452 
ΩtvÆ
 = 
	`O_VAL
(
•
, 
O_REPORT
);

453 
˙t
 = 0, 
tŸÆ
 = 0; c¡ < 
	`ARSIZE
(
a˘i⁄
); ++cnt)

454 
tŸÆ
 +
•
->
Ωéöes
[
˙t
];

455 i‡(
tŸÆ
 == 0)

457 i‡(
tŸÆ
 <
ΩtvÆ
 && 
•
->
Ωéöes
[
L_YANKED
] <Ñptval) {

458 
˙t
 = 0; c¡ < 
	`ARSIZE
(
a˘i⁄
); ++cnt)

459 
•
->
Ωéöes
[
˙t
] = 0;

464 
	`GET_SPACE_GOTO
(
•
, 
bp
, 
bÀn
, (
a˘i⁄
Ë* 
MAXNUM
 + 1);

465 
p
 = 
bp
, 
fú°
 = 1, 
éí
 = 0,

466 
≠
 = 
a˘i⁄
, 
˙t
 = 0; c¡ < 
	`ARSIZE
(action); ++ap, ++cnt)

467 i‡(
•
->
Ωéöes
[
˙t
] != 0) {

468 i‡(
fú°
)

469 
fú°
 = 0;

471 *
p
++ = ';';

472 *
p
++ = ' ';

473 
éí
 += 2;

475 
Àn
 = 
	`¢¥ötf
(
p
, 
MAXNUM
, "%lu ", 
•
->
Ωéöes
[
˙t
]);

476 
p
 +
Àn
;

477 
éí
 +
Àn
;

478 
t
 = 
	`msg_ˇt
(
•
,

479 
löes
[
•
->
Ωéöes
[
˙t
] =1 ? 0 : 1], &
Àn
);

480 
	`mem˝y
(
p
, 
t
, 
Àn
);

481 
p
 +
Àn
;

482 
éí
 +
Àn
;

483 *
p
++ = ' ';

484 ++
éí
;

485 
t
 = 
	`msg_ˇt
(
•
, *
≠
, &
Àn
);

486 
	`mem˝y
(
p
, 
t
, 
Àn
);

487 
p
 +
Àn
;

488 
éí
 +
Àn
;

489 
•
->
Ωéöes
[
˙t
] = 0;

493 *
p
 = '\n';

494 ++
éí
;

496 ()
	`ex_fÊush
(
•
);

497 
•
->
gp
->
	`s¸_msg
(•, 
M_INFO
, 
bp
, 
éí
);

499 
	`FREE_SPACE
(
•
, 
bp
, 
bÀn
);

500 
Æloc_îr
:

503 #unde‡
ARSIZE


504 #unde‡
MAXNUM


505 
	}
}

514 
	$msgq_°©us
(
•
, 
 o
, 
Êags
)

515 
SCR
 *
•
;

516 
ª˙o_t
 
 o
;

517 
u_öt
 
Êags
;

519 
pois⁄ed
;

520 
ª˙o_t
 
œ°
;

521 
size_t
 
bÀn
, 
Àn
;

522 
˙t
, 
√ed£p
;

523 c⁄° *
t
;

524 **
≠
, *
bp
, *
≈
, *
p
, *
s
;

527 
Àn
 = 
	`°æí
(
•
->
‰p
->
«me
);

528 
	`GET_SPACE_GOTO
(
•
, 
bp
, 
bÀn
, 
Àn
 * 
MAX_CHARACTER_COLUMNS
 + 128);

529 
p
 = 
bp
;

532 
p
 = 
bp
, 
t
 = 
•
->
‰p
->
«me
; *t != '\0'; ++t) {

533 
Àn
 = 
	`KEY_LEN
(
•
, *
t
);

534 
	`mem˝y
(
p
, 
	`KEY_NAME
(
•
, *
t
), 
Àn
);

535 
p
 +
Àn
;

537 
≈
 = 
p
;

538 *
p
++ = ':';

539 *
p
++ = ' ';

542 i‡(
	`F_ISSET
(
•
, 
SC_STATUS_CNT
Ë&& sp->
¨gv
 !
NULL
) {

543 
˙t
 = 0, 
≠
 = 
•
->
¨gv
; *≠ !
NULL
; ++ap, ++cnt);

544 i‡(
˙t
 > 1) {

545 ()
	`•rötf
(
p
,

546 
	`msg_ˇt
(
•
, "317|%d fûe†tÿedô", 
NULL
), 
˙t
);

547 
p
 +
	`°æí
(p);

548 *
p
++ = ':';

549 *
p
++ = ' ';

551 
	`F_CLR
(
•
, 
SC_STATUS_CNT
);

561 
√ed£p
 = 0;

562 i‡(
	`F_ISSET
(
•
->
‰p
, 
FR_NEWFILE
)) {

563 
	`F_CLR
(
•
->
‰p
, 
FR_NEWFILE
);

564 
t
 = 
	`msg_ˇt
(
•
, "021|√w fûe", &
Àn
);

565 
	`mem˝y
(
p
, 
t
, 
Àn
);

566 
p
 +
Àn
;

567 
√ed£p
 = 1;

569 i‡(
	`F_ISSET
(
•
->
‰p
, 
FR_NAMECHANGE
)) {

570 
t
 = 
	`msg_ˇt
(
•
, "022|«mêch™ged", &
Àn
);

571 
	`mem˝y
(
p
, 
t
, 
Àn
);

572 
p
 +
Àn
;

573 
√ed£p
 = 1;

575 i‡(
√ed£p
) {

576 *
p
++ = ',';

577 *
p
++ = ' ';

579 i‡(
	`F_ISSET
(
•
->
ï
, 
F_MODIFIED
))

580 
t
 = 
	`msg_ˇt
(
•
, "023|modifõd", &
Àn
);

582 
t
 = 
	`msg_ˇt
(
•
, "024|unmodifõd", &
Àn
);

583 
	`mem˝y
(
p
, 
t
, 
Àn
);

584 
p
 +
Àn
;

585 
√ed£p
 = 1;

587 i‡(
	`F_ISSET
(
•
->
‰p
, 
FR_UNLOCKED
)) {

588 i‡(
√ed£p
) {

589 *
p
++ = ',';

590 *
p
++ = ' ';

592 
t
 = 
	`msg_ˇt
(
•
, "025|UNLOCKED", &
Àn
);

593 
	`mem˝y
(
p
, 
t
, 
Àn
);

594 
p
 +
Àn
;

595 
√ed£p
 = 1;

597 i‡(
	`O_ISSET
(
•
, 
O_READONLY
)) {

598 i‡(
√ed£p
) {

599 *
p
++ = ',';

600 *
p
++ = ' ';

602 
t
 = 
	`msg_ˇt
(
•
, "026|ªad⁄ly", &
Àn
);

603 
	`mem˝y
(
p
, 
t
, 
Àn
);

604 
p
 +
Àn
;

605 
√ed£p
 = 1;

607 i‡(
√ed£p
) {

608 *
p
++ = ':';

609 *
p
++ = ' ';

611 i‡(
	`LF_ISSET
(
MSTAT_SHOWLAST
)) {

612 i‡(
	`db_œ°
(
•
, &
œ°
))

614 i‡(
œ°
 == 0) {

615 
t
 = 
	`msg_ˇt
(
•
, "028|em±y fûe", &
Àn
);

616 
	`mem˝y
(
p
, 
t
, 
Àn
);

617 
p
 +
Àn
;

619 
t
 = 
	`msg_ˇt
(
•
, "027|löê%lu o‡%lu [%ld%%]", &
Àn
);

620 ()
	`•rötf
(
p
, 
t
, 
 o
, 
œ°
, (lno * 100) /Üast);

621 
p
 +
	`°æí
(p);

624 
t
 = 
	`msg_ˇt
(
•
, "029|löê%lu", &
Àn
);

625 ()
	`•rötf
(
p
, 
t
, 
 o
);

626 
p
 +
	`°æí
(p);

628 #ifde‡
DEBUG


629 ()
	`•rötf
(
p
, " (pid %lu)", (
u_l⁄g
)
	`gëpid
());

630 
p
 +
	`°æí
(p);

632 *
p
++ = '\n';

633 
Àn
 = 
p
 - 
bp
;

650 
s
 = 
bp
;

651 i‡(
	`LF_ISSET
(
MSTAT_TRUNCATE
Ë&& 
Àn
 > 
•
->
cﬁs
) {

652 ; 
s
 < 
≈
 && (*†!'/' || (
p
 - sË> 
•
->
cﬁs
 - 3); ++s);

653 i‡(
s
 =
≈
) {

654 
s
 = 
p
 - (
•
->
cﬁs
 - 5);

655 *--
s
 = ' ';

657 *--
s
 = '.';

658 *--
s
 = '.';

659 *--
s
 = '.';

660 
Àn
 = 
p
 - 
s
;

664 ()
	`ex_fÊush
(
•
);

666 
•
->
gp
->
	`s¸_msg
(•, 
M_INFO
, 
s
, 
Àn
);

668 
	`FREE_SPACE
(
•
, 
bp
, 
bÀn
);

669 
Æloc_îr
:

671 
	}
}

680 
	$msg_›í
(
•
, 
fûe
)

681 
SCR
 *
•
;

682 *
fûe
;

693 
fú°
 = 1;

694 
DB
 *
db
;

695 
DBT
 
d©a
, 
key
;

696 
ª˙o_t
 
msgno
;

697 *
p
, *
t
, 
buf
[
MAXPATHLEN
];

699 i‡((
p
 = 
	`°ºchr
(
fûe
, '/')Ë!
NULL
 &&Ö[1] == '\0' &&

700 ((
t
 = 
	`gëív
("LC_MESSAGES")Ë!
NULL
 &&Å[0] != '\0' ||

701 (
t
 = 
	`gëív
("LANG")Ë!
NULL
 &&Å[0] != '\0')) {

702 ()
	`¢¥ötf
(
buf
, (buf), "%s%s", 
fûe
, 
t
);

703 
p
 = 
buf
;

705 
p
 = 
fûe
;

706 i‡((
db
 = 
	`db›í
(
p
,

707 
O_NONBLOCK
 | 
O_RDONLY
, 0, 
DB_RECNO
, 
NULL
)) == NULL) {

708 i‡(
fú°
) {

709 
fú°
 = 0;

712 
	`msgq_°r
(
•
, 
M_SYSERR
, 
p
, "%s");

720 
	#VMC
 "VI_MESSAGE_CATALOG"

	)

721 
key
.
d©a
 = &
msgno
;

722 
key
.
size
 = (
ª˙o_t
);

723 
msgno
 = 1;

724 i‡(
db
->
	`gë
(db, &
key
, &
d©a
, 0) != 0 ||

725 
d©a
.
size
 !(
VMC
) - 1 ||

726 
	`memcmp
(
d©a
.d©a, 
VMC
, (VMC) - 1)) {

727 ()
db
->
	`˛o£
(db);

728 i‡(
fú°
) {

729 
fú°
 = 0;

732 
	`msgq_°r
(
•
, 
M_ERR
, 
p
,

736 
fú°
 = 0;

738 i‡(
•
->
gp
->
msg
 !
NULL
)

739 ()
•
->
gp
->
msg
->
	`˛o£
(sp->gp->msg);

740 
•
->
gp
->
msg
 = 
db
;

742 
	}
}

751 
	$msg_˛o£
(
gp
)

752 
GS
 *
gp
;

754 i‡(
gp
->
msg
 !
NULL
)

755 ()
gp
->
msg
->
	`˛o£
(gp->msg);

756 
	}
}

765 
	$msg_cmsg
(
•
, 
which
, 
À≈
)

766 
SCR
 *
•
;

767 
cmsg_t
 
which
;

768 
size_t
 *
À≈
;

770 
which
) {

771 
CMSG_CONF
:

772  (
	`msg_ˇt
(
•
, "268|c⁄fúm? [ynq]", 
À≈
));

773 
CMSG_CONT
:

774  (
	`msg_ˇt
(
•
, "269|Pªs†™y keyÅÿc⁄töue: ", 
À≈
));

775 
CMSG_CONT_EX
:

776  (
	`msg_ˇt
(
•
,

778 
À≈
));

779 
CMSG_CONT_R
:

780  (
	`msg_ˇt
(
•
, "161|Pªs†E¡îÅÿc⁄töue: ", 
À≈
));

781 
CMSG_CONT_S
:

782  (
	`msg_ˇt
(
•
, "275| c⁄t?", 
À≈
));

783 
CMSG_CONT_Q
:

784  (
	`msg_ˇt
(
•
,

785 "271|Pªs†™y keyÅÿc⁄töuê[qÅÿquô]: ", 
À≈
));

787 
	`ab‹t
();

790 
	}
}

803 
	$msg_ˇt
(
•
, 
°r
, 
À≈
)

804 
SCR
 *
•
;

805 c⁄° *
°r
;

806 
size_t
 *
À≈
;

808 
GS
 *
gp
;

809 
DBT
 
d©a
, 
key
;

810 
ª˙o_t
 
msgno
;

816 i‡(
	`isdigô
(
°r
[0]) &&

817 
	`isdigô
(
°r
[1]) && isdigit(str[2]) && str[3] == '|') {

818 
key
.
d©a
 = &
msgno
;

819 
key
.
size
 = (
ª˙o_t
);

820 
msgno
 = 
	`©oi
(
°r
);

830 
gp
 = 
•
 =
NULL
 ? NULL : sp->gp;

831 i‡(
gp
 !
NULL
 && gp->
msg
 != NULL &&

832 
gp
->
msg
->
	`gë
(gp->msg, &
key
, &
d©a
, 0) == 0 &&

833 
d©a
.
size
 != 0) {

834 i‡(
À≈
 !
NULL
)

835 *
À≈
 = 
d©a
.
size
 - 1;

836 ((*)
d©a
.d©a)[d©a.
size
 - 1] = '\0';

837  (
d©a
.data);

839 
°r
 = &str[4];

841 i‡(
À≈
 !
NULL
)

842 *
À≈
 = 
	`°æí
(
°r
);

843  (
°r
);

844 
	}
}

853 
	$msg_¥öt
(
•
, 
s
, 
√ed‰ì
)

854 
SCR
 *
•
;

855 c⁄° *
s
;

856 *
√ed‰ì
;

858 
size_t
 
bÀn
, 
∆í
;

859 c⁄° *
˝
;

860 *
bp
, *
ï
, *
p
, *
t
;

862 *
√ed‰ì
 = 0;

864 
˝
 = 
s
; *cp != '\0'; ++cp)

865 i‡(!
	`i•röt
(*
˝
))

867 i‡(*
˝
 == '\0')

868  ((*)
s
);

870 
∆í
 = 0;

872 
ªåy
: i‡(
•
 =
NULL
)

873 
	`‰ì
(
bp
);

875 
	`FREE_SPACE
(
•
, 
bp
, 
bÀn
);

876 
√ed‰ì
 = 0;

878 
∆í
 += 256;

879 i‡(
•
 =
NULL
) {

880 i‡((
bp
 = 
	`mÆloc
(
∆í
)Ë=
NULL
)

881 
Æloc_îr
;

883 
	`GET_SPACE_GOTO
(
•
, 
bp
, 
bÀn
, 
∆í
);

885 
Æloc_îr
:  ("");

887 *
√ed‰ì
 = 1;

889 
p
 = 
bp
, 
ï
 = (b∞+ 
bÀn
Ë- 1, 
˝
 = 
s
; *cp != '\0' &&Ö <Ép; ++cp)

890 
t
 = 
	`KEY_NAME
(
•
, *
˝
); *à!'\0' && 
p
 < 
ï
; *p++ = *t++);

891 i‡(
p
 =
ï
)

892 
ªåy
;

893 *
p
 = '\0';

894  (
bp
);

895 
	}
}

	@common/msg.h

16 
	mCMSG_CONF
, 
	mCMSG_CONT
, 
	mCMSG_CONT_EX
,

17 
	mCMSG_CONT_R
, 
	mCMSG_CONT_S
, 
	mCMSG_CONT_Q
 } 
	tcmsg_t
;

41 
	mM_NONE
 = 1, 
	mM_BERR
, 
	mM_ERR
, 
	mM_INFO
, 
	mM_SYSERR
, 
	mM_VINFO
 } 
	tmty≥_t
;

54 
_msgh
 
	tMSGH
;

55 
LIST_HEAD
(
_msgh
, 
_msg
);

56 
	s_msg
 {

57 
LIST_ENTRY
(
_msg
Ë
	mq
;

58 
mty≥_t
 
	mmty≥
;

59 *
	mbuf
;

60 
size_t
 
	mÀn
;

64 
	#MSTAT_SHOWLAST
 0x01

	)

65 
	#MSTAT_TRUNCATE
 0x02

	)

	@common/options.c

10 
	~"c⁄fig.h
"

12 #i‚de‡
löt


13 c⁄° 
	gsccsid
[] = "@(#)options.c 10.51 (Berkeley) 10/14/96";

16 
	~<sys/ty≥s.h
>

17 
	~<sys/queue.h
>

18 
	~<sys/°©.h
>

19 
	~<sys/time.h
>

21 
	~<bô°rög.h
>

22 
	~<˘y≥.h
>

23 
	~<î∫o.h
>

24 
	~<limôs.h
>

25 
	~<°dio.h
>

26 
	~<°dlib.h
>

27 
	~<°rög.h
>

28 
	~<uni°d.h
>

30 
	~"comm⁄.h
"

31 
	~"../vi/vi.h
"

32 
	~"∑th«mes.h
"

34 
›ts_abbcmp
 
__P
((const *, const *));

35 
›ts_cmp
 
__P
((const *, const *));

36 
›ts_¥öt
 
__P
((
SCR
 *, 
OPTLIST
 const *));

46 
OPTLIST
 c⁄° 
	g›éi°
[] = {

48 {"Ætwîa£", 
f_Ætwîa£
, 
OPT_0BOOL
, 0},

50 {"autoödít", 
NULL
, 
OPT_0BOOL
, 0},

52 {"aut›röt", 
NULL
, 
OPT_1BOOL
, 0},

54 {"autowrôe", 
NULL
, 
OPT_0BOOL
, 0},

56 {"backup", 
NULL
, 
OPT_STR
, 0},

58 {"bóutify", 
NULL
, 
OPT_0BOOL
, 0},

60 {"cd∑th", 
NULL
, 
OPT_STR
, 0},

62 {"˚dô", 
NULL
, 
OPT_STR
, 0},

64 {"cﬁumns", 
f_cﬁumns
, 
OPT_NUM
, 
OPT_NOSAVE
},

66 {"commít", 
NULL
, 
OPT_0BOOL
, 0},

68 {"dúe˘‹y", 
NULL
, 
OPT_STR
, 0},

70 {"edcom∑tibÀ",
NULL
, 
OPT_0BOOL
, 0},

72 {"esˇ≥time", 
NULL
, 
OPT_NUM
, 0},

74 {"îr‹bñls", 
NULL
, 
OPT_0BOOL
, 0},

76 {"exrc", 
NULL
, 
OPT_0BOOL
, 0},

78 {"exãnded", 
f_ªcompûe
, 
OPT_0BOOL
, 0},

80 {"fûec", 
NULL
, 
OPT_STR
, 0},

82 {"Êash", 
NULL
, 
OPT_1BOOL
, 0},

84 {"h¨dèbs", 
NULL
, 
OPT_NUM
, 0},

86 {"i˛owî", 
f_ªcompûe
, 
OPT_0BOOL
, 0},

88 {"ign‹eˇ£", 
f_ªcompûe
, 
OPT_0BOOL
, 0},

90 {"keytime", 
NULL
, 
OPT_NUM
, 0},

92 {"À·right", 
f_ªf‹m©
, 
OPT_0BOOL
, 0},

94 {"löes", 
f_löes
, 
OPT_NUM
, 
OPT_NOSAVE
},

100 {"li•", 
f_li•
, 
OPT_0BOOL
, 
OPT_NOSAVE
},

102 {"li°", 
f_ªf‹m©
, 
OPT_0BOOL
, 0},

108 {"lock", 
NULL
, 
OPT_1BOOL
, 0},

110 {"magic", 
NULL
, 
OPT_1BOOL
, 0},

112 {"m©chtime", 
NULL
, 
OPT_NUM
, 0},

114 {"mesg", 
NULL
, 
OPT_1BOOL
, 0},

123 {"modñöe", 
NULL
, 
OPT_0BOOL
, 
OPT_NOSET
},

125 {"msgˇt", 
f_msgˇt
, 
OPT_STR
, 0},

127 {"n›röt", 
f_¥öt
, 
OPT_STR
, 0},

129 {"numbî", 
f_ªf‹m©
, 
OPT_0BOOL
, 0},

131 {"o˘Æ", 
f_¥öt
, 
OPT_0BOOL
, 0},

133 {"›í", 
NULL
, 
OPT_1BOOL
, 0},

135 {"›timize", 
NULL
, 
OPT_1BOOL
, 0},

137 {"∑øgøphs", 
f_∑øgøph
, 
OPT_STR
, 0},

139 {"∑th", 
NULL
, 
OPT_STR
, 0},

141 {"¥öt", 
f_¥öt
, 
OPT_STR
, 0},

143 {"¥om±", 
NULL
, 
OPT_1BOOL
, 0},

145 {"ªad⁄ly", 
f_ªad⁄ly
, 
OPT_0BOOL
, 
OPT_ALWAYS
},

147 {"ªcdú", 
NULL
, 
OPT_STR
, 0},

149 {"ªdøw", 
NULL
, 
OPT_0BOOL
, 0},

151 {"ªm≠", 
NULL
, 
OPT_1BOOL
, 0},

153 {"ªp‹t", 
NULL
, 
OPT_NUM
, 0},

155 {"ruÀr", 
NULL
, 
OPT_0BOOL
, 0},

157 {"s¸ﬁl", 
NULL
, 
OPT_NUM
, 0},

159 {"£¨chö¸", 
NULL
, 
OPT_0BOOL
, 0},

161 {"£˘i⁄s", 
f_£˘i⁄
, 
OPT_STR
, 0},

163 {"£cuª", 
NULL
, 
OPT_0BOOL
, 
OPT_NOUNSET
},

165 {"shñl", 
NULL
, 
OPT_STR
, 0},

167 {"shñlmëa", 
NULL
, 
OPT_STR
, 0},

169 {"shi·width", 
NULL
, 
OPT_NUM
, 
OPT_NOZERO
},

171 {"showm©ch", 
NULL
, 
OPT_0BOOL
, 0},

173 {"showmode", 
NULL
, 
OPT_0BOOL
, 0},

175 {"sides¸ﬁl", 
NULL
, 
OPT_NUM
, 
OPT_NOZERO
},

177 {"¶ow›í", 
NULL
, 
OPT_0BOOL
, 0},

186 {"sour˚™y", 
NULL
, 
OPT_0BOOL
, 
OPT_NOSET
},

188 {"èb°›", 
f_ªf‹m©
, 
OPT_NUM
, 
OPT_NOZERO
},

190 {"ègÀngth", 
NULL
, 
OPT_NUM
, 0},

192 {"ègs", 
NULL
, 
OPT_STR
, 0},

198 {"ãrm", 
NULL
, 
OPT_STR
, 
OPT_ADISP
|
OPT_NOSAVE
},

200 {"ãr£", 
NULL
, 
OPT_0BOOL
, 0},

202 {"tûde›", 
NULL
, 
OPT_0BOOL
, 0},

204 {"timeout", 
NULL
, 
OPT_1BOOL
, 0},

206 {"âywîa£", 
f_âywîa£
, 
OPT_0BOOL
, 0},

208 {"vîbo£", 
NULL
, 
OPT_0BOOL
, 0},

210 {"w1200", 
f_w1200
, 
OPT_NUM
, 
OPT_NDISP
|
OPT_NOSAVE
},

212 {"w300", 
f_w300
, 
OPT_NUM
, 
OPT_NDISP
|
OPT_NOSAVE
},

214 {"w9600", 
f_w9600
, 
OPT_NUM
, 
OPT_NDISP
|
OPT_NOSAVE
},

216 {"w¨n", 
NULL
, 
OPT_1BOOL
, 0},

218 {"wödow", 
f_wödow
, 
OPT_NUM
, 0},

220 {"wödow«me", 
NULL
, 
OPT_0BOOL
, 0},

222 {"wø∂í", 
NULL
, 
OPT_NUM
, 0},

224 {"wøpm¨gö", 
NULL
, 
OPT_NUM
, 0},

226 {"wøpsˇn", 
NULL
, 
OPT_1BOOL
, 0},

228 {"wrôóny", 
NULL
, 
OPT_0BOOL
, 0},

229 {
NULL
},

232 
	sabbªv
 {

233 *
	m«me
;

234 
	moff£t
;

235 } 
	tOABBREV
;

237 
OABBREV
 c⁄° 
	gabbªv
[] = {

238 {"ai", 
O_AUTOINDENT
},

239 {"≠", 
O_AUTOPRINT
},

240 {"aw", 
O_AUTOWRITE
},

241 {"bf", 
O_BEAUTIFY
},

242 {"co", 
O_COLUMNS
},

243 {"dú", 
O_DIRECTORY
},

244 {"eb", 
O_ERRORBELLS
},

245 {"ed", 
O_EDCOMPATIBLE
},

246 {"ex", 
O_EXRC
},

247 {"ht", 
O_HARDTABS
},

248 {"ic", 
O_IGNORECASE
},

249 {"li", 
O_LINES
},

250 {"modñöes", 
O_MODELINE
},

251 {"nu", 
O_NUMBER
},

252 {"›t", 
O_OPTIMIZE
},

253 {"∑ø", 
O_PARAGRAPHS
},

254 {"ª", 
O_REDRAW
},

255 {"ro", 
O_READONLY
},

256 {"s¸", 
O_SCROLL
},

257 {"£˘", 
O_SECTIONS
},

258 {"sh", 
O_SHELL
},

259 {"¶ow", 
O_SLOWOPEN
},

260 {"sm", 
O_SHOWMATCH
},

261 {"smd", 
O_SHOWMODE
},

262 {"sw", 
O_SHIFTWIDTH
},

263 {"èg", 
O_TAGS
},

264 {"é", 
O_TAGLENGTH
},

265 {"to", 
O_TIMEOUT
},

266 {"ts", 
O_TABSTOP
},

267 {"ây", 
O_TERM
},

268 {"âyty≥", 
O_TERM
},

269 {"w", 
O_WINDOW
},

270 {"wa", 
O_WRITEANY
},

271 {"wi", 
O_WINDOW
},

272 {"wl", 
O_WRAPLEN
},

273 {"wm", 
O_WRAPMARGIN
},

274 {"ws", 
O_WRAPSCAN
},

275 {
NULL
},

285 
	$›ts_öô
(
•
, 
ﬂrgs
)

286 
SCR
 *
•
;

287 *
ﬂrgs
;

289 
ARGS
 *
¨gv
[2], 
a
, 
b
;

290 
OPTLIST
 c⁄° *
›
;

291 
u_l⁄g
 
v
;

292 
˙t
, 
›tödx
;

293 *
s
, 
b1
[1024];

295 
a
.
bp
 = 
b1
;

296 
b
.
bp
 = 
NULL
;

297 
a
.
Àn
 = 
b
.len = 0;

298 
¨gv
[0] = &
a
;

299 
¨gv
[1] = &
b
;

302 
	#OI
(
ödx
, 
°r
) { \

303 i‡(
°r
 !
b1
) \

304 ()
	`°r˝y
(
b1
, 
°r
); \

305 
a
.
Àn
 = 
	`°æí
(
b1
); \

306 i‡(
	`›ts_£t
(
•
, 
¨gv
, 
NULL
)) { \

307 
›tödx
 = 
ödx
; \

308 
îr
; \

310 }

	)

316 i‡(
	`o_£t
(
•
, 
O_TERM
, 0, 
NULL
, 
GO_TERM
))

317 
îr
;

318 
	`F_SET
(&
•
->
›ts
[
O_TERM
], 
OPT_GLOBAL
);

319 i‡(
	`o_£t
(
•
, 
O_LINES
, 0, 
NULL
, 
GO_LINES
))

320 
îr
;

321 
	`F_SET
(&
•
->
›ts
[
O_LINES
], 
OPT_GLOBAL
);

322 i‡(
	`o_£t
(
•
, 
O_COLUMNS
, 0, 
NULL
, 
GO_COLUMNS
))

323 
îr
;

324 
	`F_SET
(&
•
->
›ts
[
O_COLUMNS
], 
OPT_GLOBAL
);

325 i‡(
	`o_£t
(
•
, 
O_SECURE
, 0, 
NULL
, 
GO_SECURE
))

326 
îr
;

327 
	`F_SET
(&
•
->
›ts
[
O_SECURE
], 
OPT_GLOBAL
);

330 ()
	`¢¥ötf
(
b1
, (b1),

331 "cd∑th=%s", (
s
 = 
	`gëív
("CDPATH")Ë=
NULL
 ? ":" : s);

332 
	`OI
(
O_CDPATH
, 
b1
);

341 ()
	`¢¥ötf
(
b1
, (b1),

342 "dúe˘‹y=%s", (
s
 = 
	`gëív
("TMPDIR")Ë=
NULL
 ? 
_PATH_TMP
 : s);

343 
	`OI
(
O_DIRECTORY
, 
b1
);

344 
	`OI
(
O_ESCAPETIME
, "escapetime=1");

345 
	`OI
(
O_KEYTIME
, "keytime=6");

346 
	`OI
(
O_MATCHTIME
, "matchtime=7");

347 ()
	`¢¥ötf
(
b1
, (b1), "msgˇt=%s", 
_PATH_MSGCAT
);

348 
	`OI
(
O_MSGCAT
, 
b1
);

349 
	`OI
(
O_REPORT
, "report=5");

350 
	`OI
(
O_PARAGRAPHS
, "paragraphs=IPLPPPQPP LIpplpipbp");

351 ()
	`¢¥ötf
(
b1
, (b1), "path=%s", "");

352 
	`OI
(
O_PATH
, 
b1
);

353 ()
	`¢¥ötf
(
b1
, (b1), "ªcdú=%s", 
_PATH_PRESERVE
);

354 
	`OI
(
O_RECDIR
, 
b1
);

355 
	`OI
(
O_SECTIONS
, "sections=NHSHH HUnhsh");

356 ()
	`¢¥ötf
(
b1
, (b1),

357 "shñl=%s", (
s
 = 
	`gëív
("SHELL")Ë=
NULL
 ? 
_PATH_BSHELL
 : s);

358 
	`OI
(
O_SHELL
, 
b1
);

359 
	`OI
(
O_SHELLMETA
, "shellmeta=~{[*?$`'\"\\");

360 
	`OI
(
O_SHIFTWIDTH
, "shiftwidth=8");

361 
	`OI
(
O_SIDESCROLL
, "sidescroll=16");

362 
	`OI
(
O_TABSTOP
, "tabstop=8");

363 ()
	`¢¥ötf
(
b1
, (b1), "ègs=%s", 
_PATH_TAGS
);

364 
	`OI
(
O_TAGS
, 
b1
);

371 i‡((
v
 = (
	`O_VAL
(
•
, 
O_LINES
) - 1) / 2) == 0)

372 
v
 = 1;

373 ()
	`¢¥ötf
(
b1
, (b1), "s¸ﬁl=%ld", 
v
);

374 
	`OI
(
O_SCROLL
, 
b1
);

385 i‡(
•
->
gp
->
	`s¸_baud
(•, &
v
))

387 i‡(
v
 <= 600)

388 
v
 = 8;

389 i‡(
v
 <= 1200)

390 
v
 = 16;

392 
v
 = 
	`O_VAL
(
•
, 
O_LINES
) - 1;

393 ()
	`¢¥ötf
(
b1
, (b1), "wödow=%lu", 
v
);

394 
	`OI
(
O_WINDOW
, 
b1
);

400 
›
 = 
›éi°
, 
˙t
 = 0; op->
«me
 !
NULL
; ++op, ++cnt)

401 
›
->
ty≥
) {

402 
OPT_0BOOL
:

404 
OPT_1BOOL
:

405 
	`O_SET
(
•
, 
˙t
);

406 
	`O_D_SET
(
•
, 
˙t
);

408 
OPT_NUM
:

409 
	`o_£t
(
•
, 
˙t
, 
OS_DEF
, 
NULL
, 
	`O_VAL
(sp, cnt));

411 
OPT_STR
:

412 i‡(
	`O_STR
(
•
, 
˙t
Ë!
NULL
 && 
	`o_£t
(sp, cnt,

413 
OS_DEF
 | 
OS_NOFREE
 | 
OS_STRDUP
, 
	`O_STR
(
•
, 
˙t
), 0))

414 
îr
;

417 
	`ab‹t
();

426 ; *
ﬂrgs
 != -1; ++oargs)

427 
	`OI
(*
ﬂrgs
, 
›éi°
[*ﬂrgs].
«me
);

429 #unde‡
OI


431 
îr
: 
	`msgq
(
•
, 
M_ERR
,

432 "031|U«bÀÅÿ£àdeÁu… %†›ti⁄", 
›éi°
[
›tödx
].
«me
);

434 
	}
}

443 
	$›ts_£t
(
•
, 
¨gv
, 
ußge
)

444 
SCR
 *
•
;

445 
ARGS
 *
¨gv
[];

446 *
ußge
;

448 
›tdi•
 
di•
;

449 
ƒesu…
 
ƒë
;

450 
OPTLIST
 c⁄° *
›
;

451 
OPTION
 *
•o
;

452 
u_l⁄g
 
vÆue
, 
tu∫off
;

453 
ch
, 
equÆs
, 
nf
, 
nf2
, 
off£t
, 
qm¨k
, 
rvÆ
;

454 *
ídp
, *
«me
, *
p
, *
£p
, *
t
;

456 
di•
 = 
NO_DISPLAY
;

457 
rvÆ
 = 0; 
¨gv
[0]->
Àn
 != 0; ++argv) {

462 i‡(!
	`°rcmp
(
¨gv
[0]->
bp
, "all")) {

463 
di•
 = 
ALL_DISPLAY
;

468 
£p
 = 
NULL
, 
equÆs
 = 
qm¨k
 = 0,

469 
p
 = 
«me
 = 
¨gv
[0]->
bp
; (
ch
 = *p) != '\0'; ++p)

470 i‡(
ch
 == '=' || ch == '?') {

471 i‡(
p
 =
«me
) {

472 i‡(
ußge
 !
NULL
)

473 
	`msgq
(
•
, 
M_ERR
,

474 "032|Ußge: %s", 
ußge
);

477 
£p
 = 
p
;

478 i‡(
ch
 == '=')

479 
equÆs
 = 1;

481 
qm¨k
 = 1;

485 
tu∫off
 = 0;

486 
›
 = 
NULL
;

487 i‡(
£p
 !
NULL
)

488 *
£p
++ = '\0';

491 i‡((
›
 = 
	`›ts_£¨ch
(
«me
)Ë=
NULL
 &&

492 
«me
[0] == 'n' &&Çame[1] == 'o') {

493 
tu∫off
 = 1;

494 
«me
 += 2;

495 
›
 = 
	`›ts_£¨ch
(
«me
);

497 i‡(
›
 =
NULL
) {

498 
	`›ts_nom©ch
(
•
, 
«me
);

499 
rvÆ
 = 1;

504 
off£t
 = 
›
 - 
›éi°
;

505 
•o
 = 
•
->
›ts
 + 
off£t
;

512 i‡(!
equÆs
 && !
qm¨k
 &&

513 
¨gv
[1]->
Àn
 =1 &&árgv[1]->
bp
[0] == '?') {

514 ++
¨gv
;

515 
qm¨k
 = 1;

519 
›
->
ty≥
) {

520 
OPT_0BOOL
:

521 
OPT_1BOOL
:

523 i‡(
	`F_ISSET
(
›
, 
OPT_NOUNSET
Ë&& 
tu∫off
) {

524 
	`msgq_°r
(
•
, 
M_ERR
, 
«me
,

526 
rvÆ
 = 1;

531 i‡(
	`F_ISSET
(
›
, 
OPT_NOSET
Ë&& !
tu∫off
) {

532 
	`msgq_°r
(
•
, 
M_ERR
, 
«me
,

534 
rvÆ
 = 1;

538 i‡(
equÆs
) {

539 
	`msgq_°r
(
•
, 
M_ERR
, 
«me
,

541 
rvÆ
 = 1;

544 i‡(
qm¨k
) {

545 i‡(!
di•
)

546 
di•
 = 
SELECT_DISPLAY
;

547 
	`F_SET
(
•o
, 
OPT_SELECTED
);

555 i‡(!
	`F_ISSET
(
›
, 
OPT_ALWAYS
))

556 i‡(
tu∫off
) {

557 i‡(!
	`O_ISSET
(
•
, 
off£t
))

560 i‡(
	`O_ISSET
(
•
, 
off£t
))

565 i‡(
›
->
func
 !
NULL
 &&

566 
›
->
	`func
(
•
, 
•o
, 
NULL
, &
tu∫off
) ||

567 
	`ex_›tch™ge
(
•
, 
off£t
, 
NULL
, &
tu∫off
) ||

568 
	`v_›tch™ge
(
•
, 
off£t
, 
NULL
, &
tu∫off
) ||

569 
•
->
gp
->
	`s¸_›tch™ge
(•, 
off£t
, 
NULL
, &
tu∫off
)) {

570 
rvÆ
 = 1;

575 i‡(
tu∫off
)

576 
	`O_CLR
(
•
, 
off£t
);

578 
	`O_SET
(
•
, 
off£t
);

580 
OPT_NUM
:

581 i‡(
tu∫off
) {

582 
	`msgq_°r
(
•
, 
M_ERR
, 
«me
,

584 
rvÆ
 = 1;

587 i‡(
qm¨k
 || !
equÆs
) {

588 i‡(!
di•
)

589 
di•
 = 
SELECT_DISPLAY
;

590 
	`F_SET
(
•o
, 
OPT_SELECTED
);

594 i‡(!
	`isdigô
(
£p
[0]))

595 
badnum
;

596 i‡((
ƒë
 =

597 
	`ngë_u¶⁄g
(&
vÆue
, 
£p
, &
ídp
, 10)Ë!
NUM_OK
) {

598 
p
 = 
	`msg_¥öt
(
•
, 
«me
, &
nf
);

599 
t
 = 
	`msg_¥öt
(
•
, 
£p
, &
nf2
);

600 
ƒë
) {

601 
NUM_ERR
:

602 
	`msgq
(
•
, 
M_SYSERR
,

603 "036|£t: %†›ti⁄: %s", 
p
, 
t
);

605 
NUM_OVER
:

606 
	`msgq
(
•
, 
M_ERR
,

607 "037|£t: %†›ti⁄: %s: vÆuêovîÊow", 
p
, 
t
);

609 
NUM_OK
:

610 
NUM_UNDER
:

611 
	`ab‹t
();

613 i‡(
nf
)

614 
	`FREE_SPACE
(
•
, 
p
, 0);

615 i‡(
nf2
)

616 
	`FREE_SPACE
(
•
, 
t
, 0);

617 
rvÆ
 = 1;

620 i‡(*
ídp
 && !
	`isbœnk
(*endp)) {

621 
badnum
: 
p
 = 
	`msg_¥öt
(
•
, 
«me
, &
nf
);

622 
t
 = 
	`msg_¥öt
(
•
, 
£p
, &
nf2
);

623 
	`msgq
(
•
, 
M_ERR
,

624 "038|£t: %†›ti⁄: %†i†™ iŒegÆÇumbî", 
p
, 
t
);

625 i‡(
nf
)

626 
	`FREE_SPACE
(
•
, 
p
, 0);

627 i‡(
nf2
)

628 
	`FREE_SPACE
(
•
, 
t
, 0);

629 
rvÆ
 = 1;

634 i‡(
	`F_ISSET
(
›
, 
OPT_NOZERO
Ë&& 
vÆue
 == 0) {

635 
	`msgq_°r
(
•
, 
M_ERR
, 
«me
,

637 
rvÆ
 = 1;

645 i‡(!
	`F_ISSET
(
›
, 
OPT_ALWAYS
) &&

646 
	`O_VAL
(
•
, 
off£t
Ë=
vÆue
)

650 i‡(
›
->
func
 !
NULL
 &&

651 
›
->
	`func
(
•
, 
•o
, 
£p
, &
vÆue
) ||

652 
	`ex_›tch™ge
(
•
, 
off£t
, 
£p
, &
vÆue
) ||

653 
	`v_›tch™ge
(
•
, 
off£t
, 
£p
, &
vÆue
) ||

654 
•
->
gp
->
	`s¸_›tch™ge
(•, 
off£t
, 
£p
, &
vÆue
)) {

655 
rvÆ
 = 1;

660 i‡(
	`o_£t
(
•
, 
off£t
, 0, 
NULL
, 
vÆue
))

661 
rvÆ
 = 1;

663 
OPT_STR
:

664 i‡(
tu∫off
) {

665 
	`msgq_°r
(
•
, 
M_ERR
, 
«me
,

667 
rvÆ
 = 1;

670 i‡(
qm¨k
 || !
equÆs
) {

671 i‡(!
di•
)

672 
di•
 = 
SELECT_DISPLAY
;

673 
	`F_SET
(
•o
, 
OPT_SELECTED
);

681 i‡(!
	`F_ISSET
(
›
, 
OPT_ALWAYS
) &&

682 
	`O_STR
(
•
, 
off£t
Ë!
NULL
 &&

683 !
	`°rcmp
(
	`O_STR
(
•
, 
off£t
), 
£p
))

687 i‡(
›
->
func
 !
NULL
 &&

688 
›
->
	`func
(
•
, 
•o
, 
£p
, 
NULL
) ||

689 
	`ex_›tch™ge
(
•
, 
off£t
, 
£p
, 
NULL
) ||

690 
	`v_›tch™ge
(
•
, 
off£t
, 
£p
, 
NULL
) ||

691 
•
->
gp
->
	`s¸_›tch™ge
(•, 
off£t
, 
£p
, 
NULL
)) {

692 
rvÆ
 = 1;

697 i‡(
	`o_£t
(
•
, 
off£t
, 
OS_STRDUP
, 
£p
, 0))

698 
rvÆ
 = 1;

701 
	`ab‹t
();

704 i‡(
di•
 !
NO_DISPLAY
)

705 
	`›ts_dump
(
•
, 
di•
);

706  (
rvÆ
);

707 
	}
}

716 
	$o_£t
(
•
, 
›t
, 
Êags
, 
°r
, 
vÆ
)

717 
SCR
 *
•
;

718 
›t
;

719 
u_öt
 
Êags
;

720 *
°r
;

721 
u_l⁄g
 
vÆ
;

723 
OPTION
 *
›
;

726 
›
 = 
	`F_ISSET
(&
•
->
›ts
[
›t
], 
OPT_GLOBAL
) ?

727 &
•
->
gp
->
›ts
[•->›ts[
›t
].
o_cur
.
vÆ
] : &sp->opts[opt];

730 i‡(
	`LF_ISSET
(
OS_STRDUP
Ë&& (
°r
 = 
	`°rdup
(°r)Ë=
NULL
) {

731 
	`msgq
(
•
, 
M_SYSERR
, 
NULL
);

736 
	`LF_ISSET
(
OS_DEF
)

737 i‡(
	`LF_ISSET
(
OS_STR
 | 
OS_STRDUP
)) {

738 i‡(!
	`LF_ISSET
(
OS_NOFREE
Ë&& 
›
->
o_def
.
°r
 !
NULL
)

739 
	`‰ì
(
›
->
o_def
.
°r
);

740 
›
->
o_def
.
°r
 = str;

742 
›
->
o_def
.
vÆ
 = val;

744 i‡(
	`LF_ISSET
(
OS_STR
 | 
OS_STRDUP
)) {

745 i‡(!
	`LF_ISSET
(
OS_NOFREE
Ë&& 
›
->
o_cur
.
°r
 !
NULL
)

746 
	`‰ì
(
›
->
o_cur
.
°r
);

747 
›
->
o_cur
.
°r
 = str;

749 
›
->
o_cur
.
vÆ
 = val;

751 
	}
}

760 
	$›ts_em±y
(
•
, 
off
, 
sûít
)

761 
SCR
 *
•
;

762 
off
, 
sûít
;

764 *
p
;

766 i‡((
p
 = 
	`O_STR
(
•
, 
off
)Ë=
NULL
 ||Ö[0] == '\0') {

767 i‡(!
sûít
)

768 
	`msgq_°r
(
•
, 
M_ERR
, 
›éi°
[
off
].
«me
,

773 
	}
}

782 
	$›ts_dump
(
•
, 
ty≥
)

783 
SCR
 *
•
;

784 
›tdi•
 
ty≥
;

786 
OPTLIST
 c⁄° *
›
;

787 
ba£
, 
b_num
, 
˙t
, 
cﬁ
, 
cﬁwidth
, 
cuæí
, 
s_num
;

788 
numcﬁs
, 
numrows
, 
row
;

789 
b_›
[
O_OPTIONCOUNT
], 
s_›
[O_OPTIONCOUNT];

790 
nbuf
[20];

801 
numcﬁs
 = 10;Çumcols > 1; --numcols) {

802 
cﬁwidth
 = 
•
->
cﬁs
 / 
numcﬁs
 & ~(
STANDARD_TAB
 - 1);

803 i‡(
cﬁwidth
 >= 10) {

804 
cﬁwidth
 =

805 (
cﬁwidth
 + 
STANDARD_TAB
) & ~(STANDARD_TAB - 1);

806 
numcﬁs
 = 
•
->
cﬁs
 / 
cﬁwidth
;

809 
cﬁwidth
 = 0;

816 
b_num
 = 
s_num
 = 0, 
›
 = 
›éi°
; op->
«me
 !
NULL
; ++op) {

817 
˙t
 = 
›
 - 
›éi°
;

820 i‡(
	`F_ISSET
(
›
, 
OPT_NDISP
))

823 
ty≥
) {

824 
ALL_DISPLAY
:

826 
CHANGED_DISPLAY
:

828 i‡(
	`F_ISSET
(
›
, 
OPT_ADISP
))

830 
›
->
ty≥
) {

831 
OPT_0BOOL
:

832 
OPT_1BOOL
:

833 
OPT_NUM
:

834 i‡(
	`O_VAL
(
•
, 
˙t
Ë=
	`O_D_VAL
(sp, cnt))

837 
OPT_STR
:

838 i‡(
	`O_STR
(
•
, 
˙t
Ë=
	`O_D_STR
(sp, cnt) ||

839 
	`O_D_STR
(
•
, 
˙t
Ë!
NULL
 &&

840 !
	`°rcmp
(
	`O_STR
(
•
, 
˙t
), 
	`O_D_STR
(sp, cnt)))

845 
SELECT_DISPLAY
:

846 i‡(!
	`F_ISSET
(&
•
->
›ts
[
˙t
], 
OPT_SELECTED
))

850 
NO_DISPLAY
:

851 
	`ab‹t
();

853 
	`F_CLR
(&
•
->
›ts
[
˙t
], 
OPT_SELECTED
);

855 
cuæí
 = 
	`°æí
(
›
->
«me
);

856 
›
->
ty≥
) {

857 
OPT_0BOOL
:

858 
OPT_1BOOL
:

859 i‡(!
	`O_ISSET
(
•
, 
˙t
))

860 
cuæí
 += 2;

862 
OPT_NUM
:

863 ()
	`¢¥ötf
(
nbuf
,

864 (
nbuf
), "%ld", 
	`O_VAL
(
•
, 
˙t
));

865 
cuæí
 +
	`°æí
(
nbuf
);

867 
OPT_STR
:

868 i‡(
	`O_STR
(
•
, 
˙t
Ë!
NULL
)

869 
cuæí
 +
	`°æí
(
	`O_STR
(
•
, 
˙t
));

870 
cuæí
 += 3;

874 i‡(
cuæí
 <
cﬁwidth
 - 2)

875 
s_›
[
s_num
++] = 
˙t
;

877 
b_›
[
b_num
++] = 
˙t
;

880 i‡(
s_num
 > 0) {

882 i‡(
s_num
 > 
numcﬁs
) {

883 
numrows
 = 
s_num
 / 
numcﬁs
;

884 i‡(
s_num
 % 
numcﬁs
)

885 ++
numrows
;

887 
numrows
 = 1;

890 
row
 = 0;Ñow < 
numrows
;) {

891 
ba£
 = 
row
, 
cﬁ
 = 0; cﬁ < 
numcﬁs
; ++col) {

892 
˙t
 = 
	`›ts_¥öt
(
•
, &
›éi°
[
s_›
[
ba£
]]);

893 i‡((
ba£
 +
numrows
Ë>
s_num
)

895 ()
	`ex_¥ötf
(
•
, "%*s",

896 ()(
cﬁwidth
 - 
˙t
), "");

898 i‡(++
row
 < 
numrows
 || 
b_num
)

899 ()
	`ex_puts
(
•
, "\n");

903 
row
 = 0;Ñow < 
b_num
;) {

904 ()
	`›ts_¥öt
(
•
, &
›éi°
[
b_›
[
row
]]);

905 i‡(++
row
 < 
b_num
)

906 ()
	`ex_puts
(
•
, "\n");

908 ()
	`ex_puts
(
•
, "\n");

909 
	}
}

916 
	$›ts_¥öt
(
•
, 
›
)

917 
SCR
 *
•
;

918 
OPTLIST
 c⁄° *
›
;

920 
cuæí
, 
off£t
;

922 
cuæí
 = 0;

923 
off£t
 = 
›
 - 
›éi°
;

924 
›
->
ty≥
) {

925 
OPT_0BOOL
:

926 
OPT_1BOOL
:

927 
cuæí
 +
	`ex_¥ötf
(
•
,

928 "%s%s", 
	`O_ISSET
(
•
, 
off£t
Ë? "" : "no", 
›
->
«me
);

930 
OPT_NUM
:

931 
cuæí
 +
	`ex_¥ötf
(
•
, "%s=%ld", 
›
->
«me
, 
	`O_VAL
(•, 
off£t
));

933 
OPT_STR
:

934 
cuæí
 +
	`ex_¥ötf
(
•
, "%s=\"%s\"", 
›
->
«me
,

935 
	`O_STR
(
•
, 
off£t
Ë=
NULL
 ? "" : O_STR(sp, offset));

938  (
cuæí
);

939 
	}
}

948 
	$›ts_ßve
(
•
, 
Â
)

949 
SCR
 *
•
;

950 
FILE
 *
Â
;

952 
OPTLIST
 c⁄° *
›
;

953 
ch
, 
˙t
;

954 *
p
;

956 
›
 = 
›éi°
; op->
«me
 !
NULL
; ++op) {

957 i‡(
	`F_ISSET
(
›
, 
OPT_NOSAVE
))

959 
˙t
 = 
›
 - 
›éi°
;

960 
›
->
ty≥
) {

961 
OPT_0BOOL
:

962 
OPT_1BOOL
:

963 i‡(
	`O_ISSET
(
•
, 
˙t
))

964 ()
	`Ârötf
(
Â
, "£à%s\n", 
›
->
«me
);

966 ()
	`Ârötf
(
Â
, "£àno%s\n", 
›
->
«me
);

968 
OPT_NUM
:

969 ()
	`Ârötf
(
Â
,

970 "£à%s=%-3ld\n", 
›
->
«me
, 
	`O_VAL
(
•
, 
˙t
));

972 
OPT_STR
:

973 i‡(
	`O_STR
(
•
, 
˙t
Ë=
NULL
)

975 ()
	`Ârötf
(
Â
, "set ");

976 
p
 = 
›
->
«me
; (
ch
 = *p) != '\0'; ++p) {

977 i‡(
	`isbœnk
(
ch
) || ch == '\\')

978 ()
	`putc
('\\', 
Â
);

979 ()
	`putc
(
ch
, 
Â
);

981 ()
	`putc
('=', 
Â
);

982 
p
 = 
	`O_STR
(
•
, 
˙t
); (
ch
 = *p) != '\0'; ++p) {

983 i‡(
	`isbœnk
(
ch
) || ch == '\\')

984 ()
	`putc
('\\', 
Â
);

985 ()
	`putc
(
ch
, 
Â
);

987 ()
	`putc
('\n', 
Â
);

990 i‡(
	`„º‹
(
Â
)) {

991 
	`msgq
(
•
, 
M_SYSERR
, 
NULL
);

996 
	}
}

1004 
OPTLIST
 const *

1005 
	$›ts_£¨ch
(
«me
)

1006 *
«me
;

1008 
OPTLIST
 c⁄° *
›
, *
found
;

1009 
OABBREV
 
©mp
, *
≠
;

1010 
OPTLIST
 
Ÿmp
;

1011 
size_t
 
Àn
;

1014 
©mp
.
«me
 =Çame;

1015 i‡((
≠
 = 
	`b£¨ch
(&
©mp
, 
abbªv
, ◊bbªvË/ (
OABBREV
) - 1,

1016 (
OABBREV
), 
›ts_abbcmp
)Ë!
NULL
)

1017  (
›éi°
 + 
≠
->
off£t
);

1020 
Ÿmp
.
«me
 =Çame;

1021 i‡((
›
 = 
	`b£¨ch
(&
Ÿmp
, 
›éi°
, (›éi°Ë/ (
OPTLIST
) - 1,

1022 (
OPTLIST
), 
›ts_cmp
)Ë!
NULL
)

1023  (
›
);

1029 
Àn
 = 
	`°æí
(
«me
);

1030 
found
 = 
NULL
, 
›
 = 
›éi°
; op->
«me
 != NULL; ++op) {

1031 i‡(
›
->
«me
[0] <Çame[0])

1033 i‡(
›
->
«me
[0] >Çame[0])

1035 i‡(!
	`memcmp
(
›
->
«me
,Çame, 
Àn
)) {

1036 i‡(
found
 !
NULL
)

1037  (
NULL
);

1038 
found
 = 
›
;

1041  (
found
);

1042 
	}
}

1051 
	$›ts_nom©ch
(
•
, 
«me
)

1052 
SCR
 *
•
;

1053 *
«me
;

1055 
	`msgq_°r
(
•
, 
M_ERR
, 
«me
,

1057 
	}
}

1060 
	$›ts_abbcmp
(
a
, 
b
)

1061 c⁄° *
a
, *
b
;

1063 (
	`°rcmp
(((
OABBREV
 *)
a
)->
«me
, ((OABBREV *)
b
)->name));

1064 
	}
}

1067 
	$›ts_cmp
(
a
, 
b
)

1068 c⁄° *
a
, *
b
;

1070 (
	`°rcmp
(((
OPTLIST
 *)
a
)->
«me
, ((OPTLIST *)
b
)->name));

1071 
	}
}

1080 
	$›ts_c›y
(
‹ig
, 
•
)

1081 
SCR
 *
‹ig
, *
•
;

1083 
˙t
, 
rvÆ
;

1086 
	`mem˝y
(
•
->
›ts
, 
‹ig
->opts, (orig->opts));

1089 
˙t
 = 
rvÆ
 = 0; c¡ < 
O_OPTIONCOUNT
; ++cnt) {

1090 i‡(
›éi°
[
˙t
].
ty≥
 !
OPT_STR
 ||

1091 
	`F_ISSET
(&
›éi°
[
˙t
], 
OPT_GLOBAL
))

1098 i‡(
rvÆ
 || 
	`O_STR
(
•
, 
˙t
Ë=
NULL
) {

1099 
	`o_£t
(
•
, 
˙t
, 
OS_NOFREE
 | 
OS_STR
, 
NULL
, 0);

1100 
	`o_£t
(
•
, 
˙t
, 
OS_DEF
 | 
OS_NOFREE
 | 
OS_STR
, 
NULL
, 0);

1105 i‡(
	`o_£t
(
•
, 
˙t
, 
OS_NOFREE
 | 
OS_STRDUP
, 
	`O_STR
(sp, cnt), 0)) {

1106 
	`o_£t
(
•
, 
˙t
, 
OS_DEF
 | 
OS_NOFREE
 | 
OS_STR
, 
NULL
, 0);

1107 
nomem
;

1111 i‡(
	`O_D_STR
(
•
, 
˙t
Ë!
NULL
 && 
	`o_£t
(sp, cnt,

1112 
OS_DEF
 | 
OS_NOFREE
 | 
OS_STRDUP
, 
	`O_D_STR
(
•
, 
˙t
), 0)) {

1113 
nomem
: 
	`msgq
(
‹ig
, 
M_SYSERR
, 
NULL
);

1114 
rvÆ
 = 1;

1117  (
rvÆ
);

1118 
	}
}

1127 
	$›ts_‰ì
(
•
)

1128 
SCR
 *
•
;

1130 
˙t
;

1132 
˙t
 = 0; c¡ < 
O_OPTIONCOUNT
; ++cnt) {

1133 i‡(
›éi°
[
˙t
].
ty≥
 !
OPT_STR
 ||

1134 
	`F_ISSET
(&
›éi°
[
˙t
], 
OPT_GLOBAL
))

1136 i‡(
	`O_STR
(
•
, 
˙t
Ë!
NULL
)

1137 
	`‰ì
(
	`O_STR
(
•
, 
˙t
));

1138 i‡(
	`O_D_STR
(
•
, 
˙t
Ë!
NULL
)

1139 
	`‰ì
(
	`O_D_STR
(
•
, 
˙t
));

1141 
	}
}

	@common/options.h

27 
	#O_V
(
•
, 
o
, 
Êd
) \

28 (
	`F_ISSET
(&(
•
)->
›ts
[(
o
)], 
OPT_GLOBAL
) ? \

29 (
•
)->
gp
->
›ts
[(•)->›ts[(
o
)].
o_cur
.
vÆ
].
Êd
 : \

30 (
•
)->
›ts
[(
o
)].
Êd
)

	)

33 
	#OG_CLR
(
gp
, 
o
Ë((gp)->
›ts
[(o)].
o_cur
.
vÆ
Ë0

	)

34 
	#OG_SET
(
gp
, 
o
Ë((gp)->
›ts
[(o)].
o_cur
.
vÆ
Ë1

	)

35 
	#OG_STR
(
gp
, 
o
Ë((gp)->
›ts
[(o)].
o_cur
.
°r
)

	)

36 
	#OG_VAL
(
gp
, 
o
Ë((gp)->
›ts
[(o)].
o_cur
.
vÆ
)

	)

37 
	#OG_ISSET
(
gp
, 
o
Ë
	`OG_VAL
(gp, o)

	)

39 
	#OG_D_STR
(
gp
, 
o
Ë((gp)->
›ts
[(o)].
o_def
.
°r
)

	)

40 
	#OG_D_VAL
(
gp
, 
o
Ë((gp)->
›ts
[(o)].
o_def
.
vÆ
)

	)

46 
	#OS_DEF
 0x01

	)

47 
	#OS_NOFREE
 0x02

	)

48 
	#OS_STR
 0x04

	)

49 
	#OS_STRDUP
 0x08

	)

51 
	s_›ti⁄
 {

53 
u_l⁄g
 
	mvÆ
;

54 *
	m°r
;

55 } 
	mo_cur
;

56 
	#O_CLR
(
•
, 
o
Ë
	`o_£t
(•, o, 0, 
NULL
, 0)

	)

57 
	#O_SET
(
•
, 
o
Ë
	`o_£t
(•, o, 0, 
NULL
, 1)

	)

58 
	#O_STR
(
•
, 
o
Ë
	`O_V
(•, o, 
o_cur
.
°r
)

	)

59 
	#O_VAL
(
•
, 
o
Ë
	`O_V
(•, o, 
o_cur
.
vÆ
)

	)

60 
	#O_ISSET
(
•
, 
o
Ë
	`O_VAL
(•, o)

	)

63 
u_l⁄g
 
	mvÆ
;

64 *
	m°r
;

65 } 
	mo_def
;

66 
	#O_D_CLR
(
•
, 
o
Ë
	`o_£t
(•, o, 
OS_DEF
, 
NULL
, 0)

	)

67 
	#O_D_SET
(
•
, 
o
Ë
	`o_£t
(•, o, 
OS_DEF
, 
NULL
, 1)

	)

68 
	#O_D_STR
(
•
, 
o
Ë
	`O_V
(•, o, 
o_def
.
°r
)

	)

69 
	#O_D_VAL
(
•
, 
o
Ë
	`O_V
(•, o, 
o_def
.
vÆ
)

	)

70 
	#O_D_ISSET
(
•
, 
o
Ë
	`O_D_VAL
(•, o)

	)

72 
	#OPT_GLOBAL
 0x01

	)

73 
	#OPT_SELECTED
 0x02

	)

74 
u_öt8_t
 
	mÊags
;

78 
	s_›éi°
 {

79 *
	m«me
;

81 (*
	mfunc
Ë
__P
((
SCR
 *, 
OPTION
 *, *, 
u_l⁄g
 *));

83 íum { 
	mOPT_0BOOL
, 
	mOPT_1BOOL
, 
	mOPT_NUM
, 
	mOPT_STR
 } 
	mty≥
;

85 
	#OPT_ADISP
 0x001

	)

86 
	#OPT_ALWAYS
 0x002

	)

87 
	#OPT_NDISP
 0x004

	)

88 
	#OPT_NOSAVE
 0x008

	)

89 
	#OPT_NOSET
 0x010

	)

90 
	#OPT_NOUNSET
 0x020

	)

91 
	#OPT_NOZERO
 0x040

	)

92 
u_öt8_t
 
	mÊags
;

96 
	e›tdi•
 { 
	mNO_DISPLAY
, 
	mALL_DISPLAY
, 
	mCHANGED_DISPLAY
, 
	mSELECT_DISPLAY
 };

99 
OPTLIST
 c⁄° 
›éi°
[];

101 
	~"›ti⁄s_def.h
"

	@common/options_f.c

10 
	~"c⁄fig.h
"

12 #i‚de‡
löt


13 c⁄° 
	gsccsid
[] = "@(#)options_f.c 10.25 (Berkeley) 7/12/96";

16 
	~<sys/ty≥s.h
>

17 
	~<sys/queue.h
>

18 
	~<sys/°©.h
>

20 
	~<bô°rög.h
>

21 
	~<˘y≥.h
>

22 
	~<î∫o.h
>

23 
	~<limôs.h
>

24 
	~<°dio.h
>

25 
	~<°dlib.h
>

26 
	~<°rög.h
>

27 
	~<uni°d.h
>

29 
	~"comm⁄.h
"

35 
	$f_Ætwîa£
(
•
, 
›
, 
°r
, 
vÆp
)

36 
SCR
 *
•
;

37 
OPTION
 *
›
;

38 *
°r
;

39 
u_l⁄g
 *
vÆp
;

41 i‡(!*
vÆp
)

42 
	`O_CLR
(
•
, 
O_TTYWERASE
);

44 
	}
}

50 
	$f_cﬁumns
(
•
, 
›
, 
°r
, 
vÆp
)

51 
SCR
 *
•
;

52 
OPTION
 *
›
;

53 *
°r
;

54 
u_l⁄g
 *
vÆp
;

57 i‡(*
vÆp
 < 
MINIMUM_SCREEN_COLS
) {

58 
	`msgq
(
•
, 
M_ERR
, "040|Screen columnsÅoo small,ÜessÅhan %d",

59 
MINIMUM_SCREEN_COLS
);

71 
	#MAXIMUM_SCREEN_COLS
 500

	)

72 i‡(*
vÆp
 > 
MAXIMUM_SCREEN_COLS
) {

73 
	`msgq
(
•
, 
M_ERR
, "041|Screen columnsÅooÜarge, greaterÅhan %d",

74 
MAXIMUM_SCREEN_COLS
);

78 
	}
}

84 
	$f_löes
(
•
, 
›
, 
°r
, 
vÆp
)

85 
SCR
 *
•
;

86 
OPTION
 *
›
;

87 *
°r
;

88 
u_l⁄g
 *
vÆp
;

91 i‡(*
vÆp
 < 
MINIMUM_SCREEN_ROWS
) {

92 
	`msgq
(
•
, 
M_ERR
, "042|ScreenÜinesÅoo small,ÜessÅhan %d",

93 
MINIMUM_SCREEN_ROWS
);

105 
	#MAXIMUM_SCREEN_ROWS
 500

	)

106 i‡(*
vÆp
 > 
MAXIMUM_SCREEN_ROWS
) {

107 
	`msgq
(
•
, 
M_ERR
, "043|ScreenÜinesÅooÜarge, greaterÅhan %d",

108 
MAXIMUM_SCREEN_ROWS
);

116 
	`o_£t
(
•
, 
O_LINES
, 0, 
NULL
, *
vÆp
);

117 i‡(*
vÆp
 == 1) {

118 
•
->
defs¸ﬁl
 = 1;

120 i‡(
	`O_VAL
(
•
, 
O_WINDOW
Ë=
	`O_D_VAL
(sp, O_WINDOW) ||

121 
	`O_VAL
(
•
, 
O_WINDOW
Ë> *
vÆp
) {

122 
	`o_£t
(
•
, 
O_WINDOW
, 0, 
NULL
, 1);

123 
	`o_£t
(
•
, 
O_WINDOW
, 
OS_DEF
, 
NULL
, 1);

126 
•
->
defs¸ﬁl
 = (*
vÆp
 - 1) / 2;

128 i‡(
	`O_VAL
(
•
, 
O_WINDOW
Ë=
	`O_D_VAL
(sp, O_WINDOW) ||

129 
	`O_VAL
(
•
, 
O_WINDOW
Ë> *
vÆp
) {

130 
	`o_£t
(
•
, 
O_WINDOW
, 0, 
NULL
, *
vÆp
 - 1);

131 
	`o_£t
(
•
, 
O_WINDOW
, 
OS_DEF
, 
NULL
, *
vÆp
 - 1);

135 
	}
}

141 
	$f_li•
(
•
, 
›
, 
°r
, 
vÆp
)

142 
SCR
 *
•
;

143 
OPTION
 *
›
;

144 *
°r
;

145 
u_l⁄g
 *
vÆp
;

147 
	`msgq
(
•
, 
M_ERR
, "044|TheÜisp option isÇot implemented");

149 
	}
}

155 
	$f_msgˇt
(
•
, 
›
, 
°r
, 
vÆp
)

156 
SCR
 *
•
;

157 
OPTION
 *
›
;

158 *
°r
;

159 
u_l⁄g
 *
vÆp
;

161 ()
	`msg_›í
(
•
, 
°r
);

163 
	}
}

169 
	$f_∑øgøph
(
•
, 
›
, 
°r
, 
vÆp
)

170 
SCR
 *
•
;

171 
OPTION
 *
›
;

172 *
°r
;

173 
u_l⁄g
 *
vÆp
;

175 i‡(
	`°æí
(
°r
) & 1) {

176 
	`msgq
(
•
, 
M_ERR
,

181 
	}
}

187 
	$f_¥öt
(
•
, 
›
, 
°r
, 
vÆp
)

188 
SCR
 *
•
;

189 
OPTION
 *
›
;

190 *
°r
;

191 
u_l⁄g
 *
vÆp
;

194 
	`v_key_ûookup
(
•
);

197 
	`F_SET
(
•
, 
SC_SCR_REFORMAT
);

199 
	}
}

205 
	$f_ªad⁄ly
(
•
, 
›
, 
°r
, 
vÆp
)

206 
SCR
 *
•
;

207 
OPTION
 *
›
;

208 *
°r
;

209 
u_l⁄g
 *
vÆp
;

215 i‡(*
vÆp
)

216 
	`F_CLR
(
•
, 
SC_READONLY
);

218 
	`F_SET
(
•
, 
SC_READONLY
);

220 
	}
}

226 
	$f_ªcompûe
(
•
, 
›
, 
°r
, 
vÆp
)

227 
SCR
 *
•
;

228 
OPTION
 *
›
;

229 *
°r
;

230 
u_l⁄g
 *
vÆp
;

232 i‡(
	`F_ISSET
(
•
, 
SC_RE_SEARCH
)) {

233 
	`ªg‰ì
(&
•
->
ª_c
);

234 
	`F_CLR
(
•
, 
SC_RE_SEARCH
);

236 i‡(
	`F_ISSET
(
•
, 
SC_RE_SUBST
)) {

237 
	`ªg‰ì
(&
•
->
subª_c
);

238 
	`F_CLR
(
•
, 
SC_RE_SUBST
);

241 
	}
}

247 
	$f_ªf‹m©
(
•
, 
›
, 
°r
, 
vÆp
)

248 
SCR
 *
•
;

249 
OPTION
 *
›
;

250 *
°r
;

251 
u_l⁄g
 *
vÆp
;

253 
	`F_SET
(
•
, 
SC_SCR_REFORMAT
);

255 
	}
}

261 
	$f_£˘i⁄
(
•
, 
›
, 
°r
, 
vÆp
)

262 
SCR
 *
•
;

263 
OPTION
 *
›
;

264 *
°r
;

265 
u_l⁄g
 *
vÆp
;

267 i‡(
	`°æí
(
°r
) & 1) {

268 
	`msgq
(
•
, 
M_ERR
,

273 
	}
}

279 
	$f_âywîa£
(
•
, 
›
, 
°r
, 
vÆp
)

280 
SCR
 *
•
;

281 
OPTION
 *
›
;

282 *
°r
;

283 
u_l⁄g
 *
vÆp
;

285 i‡(!*
vÆp
)

286 
	`O_CLR
(
•
, 
O_ALTWERASE
);

288 
	}
}

294 
	$f_w300
(
•
, 
›
, 
°r
, 
vÆp
)

295 
SCR
 *
•
;

296 
OPTION
 *
›
;

297 *
°r
;

298 
u_l⁄g
 *
vÆp
;

300 
u_l⁄g
 
v
;

303 i‡(
•
->
gp
->
	`s¸_baud
(•, &
v
))

305 i‡(
v
 >= 1200)

308  (
	`f_wödow
(
•
, 
›
, 
°r
, 
vÆp
));

309 
	}
}

315 
	$f_w1200
(
•
, 
›
, 
°r
, 
vÆp
)

316 
SCR
 *
•
;

317 
OPTION
 *
›
;

318 *
°r
;

319 
u_l⁄g
 *
vÆp
;

321 
u_l⁄g
 
v
;

324 i‡(
•
->
gp
->
	`s¸_baud
(•, &
v
))

326 i‡(
v
 < 1200 || v > 4800)

329  (
	`f_wödow
(
•
, 
›
, 
°r
, 
vÆp
));

330 
	}
}

336 
	$f_w9600
(
•
, 
›
, 
°r
, 
vÆp
)

337 
SCR
 *
•
;

338 
OPTION
 *
›
;

339 *
°r
;

340 
u_l⁄g
 *
vÆp
;

342 
u_l⁄g
 
v
;

345 i‡(
•
->
gp
->
	`s¸_baud
(•, &
v
))

347 i‡(
v
 <= 4800)

350  (
	`f_wödow
(
•
, 
›
, 
°r
, 
vÆp
));

351 
	}
}

357 
	$f_wödow
(
•
, 
›
, 
°r
, 
vÆp
)

358 
SCR
 *
•
;

359 
OPTION
 *
›
;

360 *
°r
;

361 
u_l⁄g
 *
vÆp
;

363 i‡(*
vÆp
 >
	`O_VAL
(
•
, 
O_LINES
) - 1 &&

364 (*
vÆp
 = 
	`O_VAL
(
•
, 
O_LINES
) - 1) == 0)

365 *
vÆp
 = 1;

367 
	}
}

	@common/put.c

10 
	~"c⁄fig.h
"

12 #i‚de‡
löt


13 c⁄° 
	gsccsid
[] = "@(#)put.c 10.11 (Berkeley) 9/23/96";

16 
	~<sys/ty≥s.h
>

17 
	~<sys/queue.h
>

19 
	~<bô°rög.h
>

20 
	~<˘y≥.h
>

21 
	~<limôs.h
>

22 
	~<°dio.h
>

23 
	~<°dlib.h
>

24 
	~<°rög.h
>

26 
	~"comm⁄.h
"

35 
	$put
(
•
, 
cbp
, 
«mï
, 
˝
, 
Ω
, 
≠≥nd
)

36 
SCR
 *
•
;

37 
CB
 *
cbp
;

38 
CHAR_T
 *
«mï
;

39 
MARK
 *
˝
, *
Ω
;

40 
≠≥nd
;

42 
CHAR_T
 
«me
;

43 
TEXT
 *
…p
, *
ç
;

44 
ª˙o_t
 
 o
;

45 
size_t
 
bÀn
, 
˛í
, 
Àn
;

46 
rvÆ
;

47 *
bp
, *
p
, *
t
;

49 i‡(
cbp
 =
NULL
)

50 i‡(
«mï
 =
NULL
) {

51 
cbp
 = 
•
->
gp
->
dcbp
;

52 i‡(
cbp
 =
NULL
) {

53 
	`msgq
(
•
, 
M_ERR
,

58 
«me
 = *
«mï
;

59 
	`CBNAME
(
•
, 
cbp
, 
«me
);

60 i‡(
cbp
 =
NULL
) {

61 
	`msgq
(
•
, 
M_ERR
, "054|Buffer %s isÉmpty",

62 
	`KEY_NAME
(
•
, 
«me
));

66 
ç
 = 
cbp
->
ãxtq
.
cqh_fú°
;

83 i‡(
˝
->
 o
 == 1) {

84 i‡(
	`db_œ°
(
•
, &
 o
))

86 i‡(
 o
 == 0) {

87 ; 
ç
 !(*)&
cbp
->
ãxtq
;

88 ++
 o
, ++
•
->
Ωéöes
[
L_ADDED
], 
ç
 =Åp->
q
.
cqe_√xt
)

89 i‡(
	`db_≠≥nd
(
•
, 1, 
 o
, 
ç
->
lb
,Åp->
Àn
))

91 
Ω
->
 o
 = 1;

92 
Ω
->
˙o
 = 0;

98 i‡(
	`F_ISSET
(
cbp
, 
CB_LMODE
)) {

99 
 o
 = 
≠≥nd
 ? 
˝
->lno : cp->lno - 1;

100 
Ω
->
 o
 =Üno + 1;

101 ; 
ç
 !(*)&
cbp
->
ãxtq
;

102 ++
 o
, ++
•
->
Ωéöes
[
L_ADDED
], 
ç
 =Åp->
q
.
cqe_√xt
)

103 i‡(
	`db_≠≥nd
(
•
, 1, 
 o
, 
ç
->
lb
,Åp->
Àn
))

105 
Ω
->
˙o
 = 0;

106 ()
	`n⁄bœnk
(
•
, 
Ω
->
 o
, &Ω->
˙o
);

119 
 o
 = 
˝
->lno;

120 i‡(
	`db_gë
(
•
, 
 o
, 
DBG_FATAL
, &
p
, &
Àn
))

123 
	`GET_SPACE_RET
(
•
, 
bp
, 
bÀn
, 
ç
->
Àn
 +Üen + 1);

124 
t
 = 
bp
;

127 i‡(
Àn
 > 0 && (
˛í
 = 
˝
->
˙o
 + (
≠≥nd
 ? 1 : 0)) > 0) {

128 
	`mem˝y
(
bp
, 
p
, 
˛í
);

129 
p
 +
˛í
;

130 
t
 +
˛í
;

134 i‡(
ç
->
Àn
 != 0) {

135 
	`mem˝y
(
t
, 
ç
->
lb
,Åp->
Àn
);

136 
t
 +
ç
->
Àn
;

140 
˛í
 = 
Àn
 =0 ? 0 :Üí - (
˝
->
˙o
 + (
≠≥nd
 ? 1 : 0));

155 
Ω
->
 o
 =Üno;

156 
Ω
->
˙o
 = 
Àn
 =0 ? 0 : 
•
->˙ÿ+ (
≠≥nd
 && 
ç
->len ? 1 : 0);

164 i‡(
ç
->
q
.
cqe_√xt
 =(*)&
cbp
->
ãxtq
) {

165 i‡(
˛í
 > 0) {

166 
	`mem˝y
(
t
, 
p
, 
˛í
);

167 
t
 +
˛í
;

169 i‡(
	`db_£t
(
•
, 
 o
, 
bp
, 
t
 - bp))

170 
îr
;

171 i‡(
•
->
Ωéch™ge
 !
 o
) {

172 
•
->
Ωéch™ge
 = 
 o
;

173 ++
•
->
Ωéöes
[
L_CHANGED
];

186 
…p
 = 
cbp
->
ãxtq
.
cqh_œ°
;

187 
Àn
 = 
t
 - 
bp
;

188 
	`ADD_SPACE_RET
(
•
, 
bp
, 
bÀn
, 
…p
->
Àn
 + 
˛í
);

189 
t
 = 
bp
 + 
Àn
;

192 
	`mem˝y
(
t
, 
…p
->
lb
,Üç->
Àn
);

193 i‡(
˛í
)

194 
	`mem˝y
(
t
 + 
…p
->
Àn
, 
p
, 
˛í
);

195 
˛í
 +
…p
->
Àn
;

206 i‡(
	`db_£t
(
•
, 
 o
, 
bp
, 
t
 - bp))

207 
îr
;

208 i‡(
•
->
Ωéch™ge
 !
 o
) {

209 
•
->
Ωéch™ge
 = 
 o
;

210 ++
•
->
Ωéöes
[
L_CHANGED
];

214 
ç
 =Åp->
q
.
cqe_√xt
;

215 
ç
->
q
.
cqe_√xt
 !(*)&
cbp
->
ãxtq
;

216 ++
 o
, ++
•
->
Ωéöes
[
L_ADDED
], 
ç
 =Åp->
q
.
cqe_√xt
)

217 i‡(
	`db_≠≥nd
(
•
, 1, 
 o
, 
ç
->
lb
,Åp->
Àn
))

218 
îr
;

220 i‡(
	`db_≠≥nd
(
•
, 1, 
 o
, 
t
, 
˛í
))

221 
îr
;

222 ++
•
->
Ωéöes
[
L_ADDED
];

224 
rvÆ
 = 0;

227 
îr
: 
rvÆ
 = 1;

229 
	`FREE_SPACE
(
•
, 
bp
, 
bÀn
);

230  (
rvÆ
);

231 
	}
}

	@common/recover.c

10 
	~"c⁄fig.h
"

12 #i‚de‡
löt


13 c⁄° 
	gsccsid
[] = "@(#)recover.c 10.21 (Berkeley) 9/15/96";

16 
	~<sys/∑øm.h
>

17 
	~<sys/ty≥s.h
>

18 
	~<sys/queue.h
>

19 
	~<sys/°©.h
>

26 
	~<sys/fûe.h
>

28 
	~<bô°rög.h
>

29 
	~<dúít.h
>

30 
	~<î∫o.h
>

31 
	~<f˙é.h
>

32 
	~<limôs.h
>

33 
	~<pwd.h
>

34 
	~<°dio.h
>

35 
	~<°dlib.h
>

36 
	~<°rög.h
>

37 
	~<time.h
>

38 
	~<uni°d.h
>

40 
	~"comm⁄.h
"

41 
	~"∑th«mes.h
"

109 
	#VI_FHEADER
 "X-vi-ªcovî-fûe: "

	)

110 
	#VI_PHEADER
 "X-vi-ªcovî-∑th: "

	)

112 
rcv_c›y
 
__P
((
SCR
 *, , *));

113 
rcv_emaû
 
__P
((
SCR
 *, *));

114 *
rcv_gës
 
__P
((*, 
size_t
, ));

115 
rcv_maûfûe
 
__P
((
SCR
 *, , *));

116 
rcv_mkãmp
 
__P
((
SCR
 *, *, *, ));

125 
	$rcv_tmp
(
•
, 
ï
, 
«me
)

126 
SCR
 *
•
;

127 
EXF
 *
ï
;

128 *
«me
;

130 
°©
 
sb
;

131 
fd
;

132 *
dp
, *
p
, 
∑th
[
MAXPATHLEN
];

145 i‡(
	`›ts_em±y
(
•
, 
O_RECDIR
, 0))

146 
îr
;

147 
dp
 = 
	`O_STR
(
•
, 
O_RECDIR
);

148 i‡(
	`°©
(
dp
, &
sb
)) {

149 i‡(
î∫o
 !
ENOENT
 || 
	`mkdú
(
dp
, 0)) {

150 
	`msgq
(
•
, 
M_SYSERR
, "%s", 
dp
);

151 
îr
;

153 ()
	`chmod
(
dp
, 
S_IRWXU
 | 
S_IRWXG
 | 
S_IRWXO
 | 
S_ISVTX
);

157 
p
 = 
«me
; *p; ++p)

158 i‡(*
p
 == '\n') {

159 
	`msgq
(
•
, 
M_ERR
,

161 
îr
;

164 ()
	`¢¥ötf
(
∑th
, ’©h), "%s/vi.XXXXXX", 
dp
);

165 i‡((
fd
 = 
	`rcv_mkãmp
(
•
, 
∑th
, 
dp
, 
S_IRWXU
)) == -1)

166 
îr
;

167 ()
	`˛o£
(
fd
);

169 i‡((
ï
->
rcv_∑th
 = 
	`°rdup
(
∑th
)Ë=
NULL
) {

170 
	`msgq
(
•
, 
M_SYSERR
, 
NULL
);

171 ()
	`u∆ök
(
∑th
);

172 
îr
: 
	`msgq
(
•
, 
M_ERR
,

178 
	`F_SET
(
ï
, 
F_RCV_ON
);

180 
	}
}

189 
	$rcv_öô
(
•
)

190 
SCR
 *
•
;

192 
EXF
 *
ï
;

193 
ª˙o_t
 
 o
;

195 
ï
 = 
•
->ep;

198 
	`F_CLR
(
ï
, 
F_FIRSTMODIFY
);

201 i‡(!
	`F_ISSET
(
ï
, 
F_RCV_ON
))

205 
	`F_CLR
(
ï
, 
F_RCV_ON
);

208 i‡(
ï
->
rcv_m∑th
 =
NULL
) {

210 i‡(
	`rcv_maûfûe
(
•
, 0, 
NULL
))

211 
îr
;

214 i‡(
	`db_œ°
(
•
, &
 o
))

215 
îr
;

218 
•
->
gp
->
	`s¸_busy
(sp,

219 "057|C›yög fûêf‹Ñecovîy...", 
BUSY_ON
);

220 i‡(
ï
->
db
->
	`sync
”p->db, 
R_RECNOSYNC
)) {

221 
	`msgq_°r
(
•
, 
M_SYSERR
, 
ï
->
rcv_∑th
,

223 
•
->
gp
->
	`s¸_busy
(•, 
NULL
, 
BUSY_OFF
);

224 
îr
;

226 
•
->
gp
->
	`s¸_busy
(•, 
NULL
, 
BUSY_OFF
);

230 ()
	`chmod
(
ï
->
rcv_∑th
, 
S_IRUSR
 | 
S_IWUSR
);

233 
	`F_SET
(
ï
, 
F_RCV_ON
);

236 
îr
: 
	`msgq
(
•
, 
M_ERR
,

239 
	}
}

252 
	$rcv_sync
(
•
, 
Êags
)

253 
SCR
 *
•
;

254 
u_öt
 
Êags
;

256 
EXF
 *
ï
;

257 
fd
, 
rvÆ
;

258 *
dp
, 
buf
[1024];

261 
ï
 = 
•
->ep;

262 i‡(
ï
 =
NULL
 || !
	`F_ISSET
”p, 
F_RCV_ON
))

266 i‡(
	`F_ISSET
(
ï
, 
F_MODIFIED
)) {

267 
SIGBLOCK
;

268 i‡(
ï
->
db
->
	`sync
”p->db, 
R_RECNOSYNC
)) {

269 
	`F_CLR
(
ï
, 
F_RCV_ON
 | 
F_RCV_NORM
);

270 
	`msgq_°r
(
•
, 
M_SYSERR
,

271 
ï
->
rcv_∑th
, "060|File backup failed: %s");

272 
SIGUNBLOCK
;

275 
SIGUNBLOCK
;

278 i‡(
	`LF_ISSET
(
RCV_PRESERVE
))

279 
	`F_SET
(
ï
, 
F_RCV_NORM
);

282 i‡(
	`LF_ISSET
(
RCV_EMAIL
))

283 
	`rcv_emaû
(
•
, 
ï
->
rcv_m∑th
);

296 
rvÆ
 = 0;

297 i‡(
	`LF_ISSET
(
RCV_SNAPSHOT
)) {

298 i‡(
	`›ts_em±y
(
•
, 
O_RECDIR
, 0))

299 
îr
;

300 
dp
 = 
	`O_STR
(
•
, 
O_RECDIR
);

301 ()
	`¢¥ötf
(
buf
, (buf), "%s/vi.XXXXXX", 
dp
);

302 i‡((
fd
 = 
	`rcv_mkãmp
(
•
, 
buf
, 
dp
, 
S_IRUSR
 | 
S_IWUSR
)) == -1)

303 
îr
;

304 
•
->
gp
->
	`s¸_busy
(sp,

305 "061|C›yög fûêf‹Ñecovîy...", 
BUSY_ON
);

306 i‡(
	`rcv_c›y
(
•
, 
fd
, 
ï
->
rcv_∑th
) ||

307 
	`˛o£
(
fd
Ë|| 
	`rcv_maûfûe
(
•
, 1, 
buf
)) {

308 ()
	`u∆ök
(
buf
);

309 ()
	`˛o£
(
fd
);

310 
rvÆ
 = 1;

312 
•
->
gp
->
	`s¸_busy
(•, 
NULL
, 
BUSY_OFF
);

315 
îr
: 
rvÆ
 = 1;

319 i‡(
	`LF_ISSET
(
RCV_ENDSESSION
Ë&& 
	`fûe_íd
(
•
, 
NULL
, 1))

320 
rvÆ
 = 1;

322  (
rvÆ
);

323 
	}
}

330 
	$rcv_maûfûe
(
•
, 
issync
, 
˝_∑th
)

331 
SCR
 *
•
;

332 
issync
;

333 *
˝_∑th
;

335 
EXF
 *
ï
;

336 
GS
 *
gp
;

337 
∑sswd
 *
pw
;

338 
size_t
 
Àn
;

339 
time_t
 
now
;

340 
uid_t
 
uid
;

341 
fd
;

342 *
dp
, *
p
, *
t
, 
buf
[4096], 
m∑th
[
MAXPATHLEN
];

343 *
t1
, *
t2
, *
t3
;

350 #i‚de‡
MAXHOSTNAMELEN


351 
	#MAXHOSTNAMELEN
 1024

	)

353 
ho°
[
MAXHOSTNAMELEN
];

355 
gp
 = 
•
->gp;

356 i‡((
pw
 = 
	`gëpwuid
(
uid
 = 
	`gëuid
())Ë=
NULL
) {

357 
	`msgq
(
•
, 
M_ERR
,

358 "062|Inf‹m©i⁄ o¿u£∏id %uÇŸ found", 
uid
);

362 i‡(
	`›ts_em±y
(
•
, 
O_RECDIR
, 0))

364 
dp
 = 
	`O_STR
(
•
, 
O_RECDIR
);

365 ()
	`¢¥ötf
(
m∑th
, (m∑th), "%s/ªcovî.XXXXXX", 
dp
);

366 i‡((
fd
 = 
	`rcv_mkãmp
(
•
, 
m∑th
, 
dp
, 
S_IRUSR
 | 
S_IWUSR
)) == -1)

376 
ï
 = 
•
->ep;

377 i‡(
	`fûe_lock
(
•
, 
NULL
, NULL, 
fd
, 1Ë!
LOCK_SUCCESS
)

378 
	`msgq
(
•
, 
M_SYSERR
, "063|UnableÅoÜockÑecovery file");

379 i‡(!
issync
) {

381 
ï
->
rcv_fd
 = 
fd
;

382 i‡((
ï
->
rcv_m∑th
 = 
	`°rdup
(
m∑th
)Ë=
NULL
) {

383 
	`msgq
(
•
, 
M_SYSERR
, 
NULL
);

384 
îr
;

386 
˝_∑th
 = 
ï
->
rcv_∑th
;

396 
t
 = 
•
->
‰p
->
«me
;

397 i‡((
p
 = 
	`°ºchr
(
t
, '/')Ë=
NULL
)

398 
p
 = 
t
;

400 ++
p
;

401 ()
	`time
(&
now
);

402 ()
	`gëho°«me
(
ho°
, (host));

403 
Àn
 = 
	`¢¥ötf
(
buf
, (buf),

405 
VI_FHEADER
, 
t
,

406 
VI_PHEADER
, 
˝_∑th
,

409 "To: ", 
pw
->
pw_«me
,

410 "Subje˘: NvòßvedÅhêfûê", 
p
,

412 i‡(
Àn
 > (
buf
) - 1)

413 
Àº
;

414 i‡(
	`wrôe
(
fd
, 
buf
, 
Àn
) !=Üen)

415 
wîr
;

417 
Àn
 = 
	`¢¥ötf
(
buf
, (buf),

419 "O¿", 
	`˘ime
(&
now
), ",Åhêu£∏", 
pw
->
pw_«me
,

420 " wa†edôögá fûê«med ", 
t
, " onÅhe machine ",

421 
ho°
, ", when it was saved forÑecovery. ",

423 "tÿthi†fûêusögÅhê-∏›ti⁄Åÿ", 
gp
->
¥og«me
, ":\n\n\t",

424 
gp
->
¥og«me
, " -∏", 
t
);

425 i‡(
Àn
 > (
buf
) - 1) {

426 
Àº
: 
	`msgq
(
•
, 
M_ERR
, "064|Recovery file buffer overrun");

427 
îr
;

434 
	#FMTCOLS
 60

	)

435 
t1
 = 
buf
; 
Àn
 > 0;Üí -
t2
 -Å1,Å1 =Å2) {

437 i‡(
Àn
 <
FMTCOLS
) {

438 
t2
 = 
t1
 + (
Àn
 - 1);

439 
wout
;

443 
t2
 = 
	`°rchr
(
t1
, '\n');

444 i‡(
t2
 - 
t1
 <
FMTCOLS
)

445 
wout
;

448 
t3
 = 
t2
;Å2 > 
t1
; --t2)

449 i‡(*
t2
 == ' ') {

450 i‡(
t2
 - 
t1
 <
FMTCOLS
)

451 
wout
;

452 
t3
 = 
t2
;

454 
t2
 = 
t3
;

457 
wout
: *
t2
++ = '\n';

460 i‡(
	`wrôe
(
fd
, 
t1
, 
t2
 -Å1) !=Å2 -Å1)

461 
wîr
;

464 i‡(
issync
) {

465 
	`rcv_emaû
(
•
, 
m∑th
);

466 i‡(
	`˛o£
(
fd
)) {

467 
wîr
: 
	`msgq
(
•
, 
M_SYSERR
, "065|Recovery file");

468 
îr
;

473 
îr
: i‡(!
issync
)

474 
ï
->
rcv_fd
 = -1;

475 i‡(
fd
 != -1)

476 ()
	`˛o£
(
fd
);

478 
	}
}

491 
	$rcv_li°
(
•
)

492 
SCR
 *
•
;

494 
dúít
 *
dp
;

495 
°©
 
sb
;

496 
DIR
 *
dúp
;

497 
FILE
 *
Â
;

498 
found
;

499 *
p
, *
t
, 
fûe
[
MAXPATHLEN
], 
∑th
[MAXPATHLEN];

502 i‡(
	`›ts_em±y
(
•
, 
O_RECDIR
, 0))

504 
p
 = 
	`O_STR
(
•
, 
O_RECDIR
);

505 i‡(
	`chdú
(
p
Ë|| (
dúp
 = 
	`›ídú
(".")Ë=
NULL
) {

506 
	`msgq_°r
(
•
, 
M_SYSERR
, 
p
, "recdir: %s");

511 
found
 = 0; (
dp
 = 
	`ªaddú
(
dúp
)Ë!
NULL
;) {

512 i‡(
	`°∫cmp
(
dp
->
d_«me
, "recover.", 8))

523 i‡((
Â
 = 
	`f›í
(
dp
->
d_«me
, "r+")Ë=
NULL
)

526 
	`fûe_lock
(
•
, 
NULL
, NULL, 
	`fûío
(
Â
), 1)) {

527 
LOCK_FAILED
:

536 
LOCK_SUCCESS
:

538 
LOCK_UNAVAIL
:

540 ()
	`f˛o£
(
Â
);

545 i‡(
	`fgës
(
fûe
, (fûe), 
Â
Ë=
NULL
 ||

546 
	`°∫cmp
(
fûe
, 
VI_FHEADER
, (VI_FHEADER) - 1) ||

547 (
p
 = 
	`°rchr
(
fûe
, '\n')Ë=
NULL
 ||

548 
	`fgës
(
∑th
, ’©h), 
Â
Ë=
NULL
 ||

549 
	`°∫cmp
(
∑th
, 
VI_PHEADER
, (VI_PHEADER) - 1) ||

550 (
t
 = 
	`°rchr
(
∑th
, '\n')Ë=
NULL
) {

551 
	`msgq_°r
(
•
, 
M_ERR
, 
dp
->
d_«me
,

553 
√xt
;

555 *
p
 = *
t
 = '\0';

565 
î∫o
 = 0;

566 i‡(
	`°©
(
∑th
 + (
VI_PHEADER
Ë- 1, &
sb
) &&

567 
î∫o
 =
ENOENT
) {

568 ()
	`u∆ök
(
dp
->
d_«me
);

569 
√xt
;

573 ()
	`f°©
(
	`fûío
(
Â
), &
sb
);

574 ()
	`¥ötf
("%.24s: %s\n",

575 
	`˘ime
(&
sb
.
°_mtime
), 
fûe
 + (
VI_FHEADER
) - 1);

576 
found
 = 1;

579 
√xt
: ()
	`f˛o£
(
Â
);

581 i‡(
found
 == 0)

582 ()
	`¥ötf
("vi:Ço filesÅoÑecover.\n");

583 ()
	`˛o£dú
(
dúp
);

585 
	}
}

594 
	$rcv_ªad
(
•
, 
‰p
)

595 
SCR
 *
•
;

596 
FREF
 *
‰p
;

598 
dúít
 *
dp
;

599 
°©
 
sb
;

600 
DIR
 *
dúp
;

601 
EXF
 *
ï
;

602 
time_t
 
ªc_mtime
;

603 
fd
, 
found
, 
locked
, 
ªque°ed
, 
sv_fd
;

604 *
«me
, *
p
, *
t
, *
Ω
, *
ª˝
, *
∑thp
;

605 
fûe
[
MAXPATHLEN
], 
∑th
[MAXPATHLEN], 
ª˝©h
[MAXPATHLEN];

607 i‡(
	`›ts_em±y
(
•
, 
O_RECDIR
, 0))

609 
Ω
 = 
	`O_STR
(
•
, 
O_RECDIR
);

610 i‡((
dúp
 = 
	`›ídú
(
Ω
)Ë=
NULL
) {

611 
	`msgq_°r
(
•
, 
M_ERR
, 
Ω
, "%s");

615 
«me
 = 
‰p
->name;

616 
sv_fd
 = -1;

617 
ªc_mtime
 = 0;

618 
ª˝
 = 
∑thp
 = 
NULL
;

619 
found
 = 
ªque°ed
 = 0; (
dp
 = 
	`ªaddú
(
dúp
)Ë!
NULL
;) {

620 i‡(
	`°∫cmp
(
dp
->
d_«me
, "recover.", 8))

622 ()
	`¢¥ötf
(
ª˝©h
,

623 (
ª˝©h
), "%s/%s", 
Ω
, 
dp
->
d_«me
);

637 i‡((
fd
 = 
	`›í
(
ª˝©h
, 
O_RDWR
, 0)) == -1)

640 
	`fûe_lock
(
•
, 
NULL
, NULL, 
fd
, 1)) {

641 
LOCK_FAILED
:

649 
locked
 = 0;

651 
LOCK_SUCCESS
:

652 
locked
 = 1;

654 
LOCK_UNAVAIL
:

656 ()
	`˛o£
(
fd
);

661 i‡(
	`rcv_gës
(
fûe
, (fûe), 
fd
Ë=
NULL
 ||

662 
	`°∫cmp
(
fûe
, 
VI_FHEADER
, (VI_FHEADER) - 1) ||

663 (
p
 = 
	`°rchr
(
fûe
, '\n')Ë=
NULL
 ||

664 
	`rcv_gës
(
∑th
, ’©h), 
fd
Ë=
NULL
 ||

665 
	`°∫cmp
(
∑th
, 
VI_PHEADER
, (VI_PHEADER) - 1) ||

666 (
t
 = 
	`°rchr
(
∑th
, '\n')Ë=
NULL
) {

667 
	`msgq_°r
(
•
, 
M_ERR
, 
ª˝©h
,

669 
√xt
;

671 *
p
 = *
t
 = '\0';

672 ++
found
;

682 
î∫o
 = 0;

683 i‡(
	`°©
(
∑th
 + (
VI_PHEADER
Ë- 1, &
sb
) &&

684 
î∫o
 =
ENOENT
) {

685 ()
	`u∆ök
(
dp
->
d_«me
);

686 
√xt
;

690 i‡(
	`°rcmp
(
fûe
 + (
VI_FHEADER
Ë- 1, 
«me
))

691 
√xt
;

693 ++
ªque°ed
;

703 ()
	`f°©
(
fd
, &
sb
);

704 i‡(
ª˝
 =
NULL
 || 
ªc_mtime
 < 
sb
.
°_mtime
) {

705 
p
 = 
ª˝
;

706 
t
 = 
∑thp
;

707 i‡((
ª˝
 = 
	`°rdup
(
ª˝©h
)Ë=
NULL
) {

708 
	`msgq
(
•
, 
M_SYSERR
, 
NULL
);

709 
ª˝
 = 
p
;

710 
√xt
;

712 i‡((
∑thp
 = 
	`°rdup
(
∑th
)Ë=
NULL
) {

713 
	`msgq
(
•
, 
M_SYSERR
, 
NULL
);

714 
	`‰ì
(
ª˝
);

715 
ª˝
 = 
p
;

716 
∑thp
 = 
t
;

717 
√xt
;

719 i‡(
p
 !
NULL
) {

720 
	`‰ì
(
p
);

721 
	`‰ì
(
t
);

723 
ªc_mtime
 = 
sb
.
°_mtime
;

724 i‡(
sv_fd
 != -1)

725 ()
	`˛o£
(
sv_fd
);

726 
sv_fd
 = 
fd
;

728 
√xt
: ()
	`˛o£
(
fd
);

730 ()
	`˛o£dú
(
dúp
);

732 i‡(
ª˝
 =
NULL
) {

733 
	`msgq_°r
(
•
, 
M_INFO
, 
«me
,

737 i‡(
found
) {

738 i‡(
ªque°ed
 > 1)

739 
	`msgq
(
•
, 
M_INFO
,

741 i‡(
found
 > 
ªque°ed
)

742 
	`msgq
(
•
, 
M_INFO
,

752 i‡(
	`fûe_öô
(
•
, 
‰p
, 
∑thp
 + (
VI_PHEADER
) - 1, 0)) {

753 
	`‰ì
(
ª˝
);

754 
	`‰ì
(
∑thp
);

755 ()
	`˛o£
(
sv_fd
);

764 
ï
 = 
•
->ep;

765 
ï
->
rcv_m∑th
 = 
ª˝
;

766 
ï
->
rcv_fd
 = 
sv_fd
;

767 i‡(!
locked
)

768 
	`F_SET
(
‰p
, 
FR_UNLOCKED
);

771 
	`F_SET
(
ï
, 
F_RCV_ON
);

773 
	}
}

780 
	$rcv_c›y
(
•
, 
wfd
, 
‚ame
)

781 
SCR
 *
•
;

782 
wfd
;

783 *
‚ame
;

785 
ƒ
, 
nw
, 
off
, 
rfd
;

786 
buf
[8 * 1024];

788 i‡((
rfd
 = 
	`›í
(
‚ame
, 
O_RDONLY
, 0)) == -1)

789 
îr
;

790 (
ƒ
 = 
	`ªad
(
rfd
, 
buf
, (buf))) > 0)

791 
off
 = 0; 
ƒ
;Ç∏-
nw
, off +=Çw)

792 i‡((
nw
 = 
	`wrôe
(
wfd
, 
buf
 + 
off
, 
ƒ
)) < 0)

793 
îr
;

794 i‡(
ƒ
 == 0)

797 
îr
: 
	`msgq_°r
(
•
, 
M_SYSERR
, 
‚ame
, "%s");

799 
	}
}

806 
	$rcv_gës
(
buf
, 
Àn
, 
fd
)

807 *
buf
;

808 
size_t
 
Àn
;

809 
fd
;

811 
ƒ
;

812 *
p
;

814 i‡((
ƒ
 = 
	`ªad
(
fd
, 
buf
, 
Àn
 - 1)) == -1)

815  (
NULL
);

816 i‡((
p
 = 
	`°rchr
(
buf
, '\n')Ë=
NULL
)

817  (
NULL
);

818 ()
	`l£ek
(
fd
, (
off_t
)((
p
 - 
buf
Ë+ 1), 
SEEK_SET
);

819  (
buf
);

820 
	}
}

827 
	$rcv_mkãmp
(
•
, 
∑th
, 
d«me
, 
≥rms
)

828 
SCR
 *
•
;

829 *
∑th
, *
d«me
;

830 
≥rms
;

832 
fd
;

844 i‡((
fd
 = 
	`mk°emp
(
∑th
)) == -1)

845 
	`msgq_°r
(
•
, 
M_SYSERR
, 
d«me
, "%s");

847 ()
	`chmod
(
∑th
, 
≥rms
);

848  (
fd
);

849 
	}
}

856 
	$rcv_emaû
(
•
, 
‚ame
)

857 
SCR
 *
•
;

858 *
‚ame
;

860 
°©
 
sb
;

861 
buf
[
MAXPATHLEN
 * 2 + 20];

863 i‡(
_PATH_SENDMAIL
[0] !'/' || 
	`°©
(_PATH_SENDMAIL, &
sb
))

864 
	`msgq_°r
(
•
, 
M_SYSERR
,

865 
_PATH_SENDMAIL
, "071|not sendingÉmail: %s");

874 ()
	`¢¥ötf
(
buf
, (buf),

875 "%†-à< %s", 
_PATH_SENDMAIL
, 
‚ame
);

876 ()
	`sy°em
(
buf
);

878 
	}
}

	@common/screen.c

10 
	~"c⁄fig.h
"

12 #i‚de‡
löt


13 c⁄° 
	gsccsid
[] = "@(#)screen.c 10.15 (Berkeley) 9/15/96";

16 
	~<sys/ty≥s.h
>

17 
	~<sys/queue.h
>

18 
	~<sys/time.h
>

20 
	~<bô°rög.h
>

21 
	~<î∫o.h
>

22 
	~<limôs.h
>

23 
	~<°dio.h
>

24 
	~<°dlib.h
>

25 
	~<°rög.h
>

26 
	~<uni°d.h
>

28 
	~"comm⁄.h
"

29 
	~"../vi/vi.h
"

38 
	$s¸ìn_öô
(
gp
, 
‹ig
, 
•p
)

39 
GS
 *
gp
;

40 
SCR
 *
‹ig
, **
•p
;

42 
SCR
 *
•
;

43 
size_t
 
Àn
;

45 *
•p
 = 
NULL
;

46 
	`CALLOC_RET
(
‹ig
, 
•
, 
SCR
 *, 1, (SCR));

47 *
•p
 = 
•
;

50 
•
->
id
 = ++
gp
->id;

51 
•
->
ªf˙t
 = 1;

53 
•
->
gp
 = gp;

55 
•
->
c˙t
 = 2;

63 
	`CIRCLEQ_INIT
(&
•
->
tiq
);

66 i‡(
‹ig
 =
NULL
) {

67 
•
->
£¨chdú
 = 
NOTSET
;

70 i‡(
‹ig
->
Æt_«me
 !
NULL
 &&

71 (
•
->
Æt_«me
 = 
	`°rdup
(
‹ig
->Æt_«me)Ë=
NULL
)

72 
mem
;

75 i‡(
	`F_ISSET
(
‹ig
, 
SC_AT_SET
)) {

76 
	`F_SET
(
•
, 
SC_AT_SET
);

77 
•
->
©_lbuf
 = 
‹ig
->at_lbuf;

81 
•
->
£¨chdú
 = 
‹ig
->£¨chdú =
NOTSET
 ? NOTSET : 
FORWARD
;

82 i‡(
‹ig
->
ª
 !
NULL
 && (
•
->re =

83 
	`v_°rdup
(
•
, 
‹ig
->
ª
, orig->
ª_Àn
)Ë=
NULL
)

84 
mem
;

85 
•
->
ª_Àn
 = 
‹ig
->re_len;

86 i‡(
‹ig
->
subª
 !
NULL
 && (
•
->subre =

87 
	`v_°rdup
(
•
, 
‹ig
->
subª
, orig->
subª_Àn
)Ë=
NULL
)

88 
mem
;

89 
•
->
subª_Àn
 = 
‹ig
->subre_len;

90 i‡(
‹ig
->
ª∂
 !
NULL
 && (
•
->repl =

91 
	`v_°rdup
(
•
, 
‹ig
->
ª∂
, orig->
ª∂_Àn
)Ë=
NULL
)

92 
mem
;

93 
•
->
ª∂_Àn
 = 
‹ig
->repl_len;

94 i‡(
‹ig
->
√wl_Àn
) {

95 
Àn
 = 
‹ig
->
√wl_Àn
 * (
size_t
);

96 
	`MALLOC
(
•
, sp->
√wl
, 
size_t
 *, 
Àn
);

97 i‡(
•
->
√wl
 =
NULL
) {

98 
mem
: 
	`msgq
(
‹ig
, 
M_SYSERR
, 
NULL
);

99 
îr
;

101 
•
->
√wl_Àn
 = 
‹ig
->newl_len;

102 
•
->
√wl_˙t
 = 
‹ig
->newl_cnt;

103 
	`mem˝y
(
•
->
√wl
, 
‹ig
->√wl, 
Àn
);

106 i‡(
	`›ts_c›y
(
‹ig
, 
•
))

107 
îr
;

109 
	`F_SET
(
•
, 
	`F_ISSET
(
‹ig
, 
SC_EX
 | 
SC_VI
));

112 i‡(
	`ex_s¸ìn_c›y
(
‹ig
, 
•
))

113 
îr
;

114 i‡(
	`v_s¸ìn_c›y
(
‹ig
, 
•
))

115 
îr
;

117 *
•p
 = 
•
;

120 
îr
: 
	`s¸ìn_íd
(
•
);

122 
	}
}

132 
	$s¸ìn_íd
(
•
)

133 
SCR
 *
•
;

135 
rvÆ
;

138 i‡(--
•
->
ªf˙t
 != 0)

147 i‡(
•
->
q
.
cqe_√xt
 !
NULL
)

148 
	`CIRCLEQ_REMOVE
(&
•
->
gp
->
dq
, sp, 
q
);

151 
	`F_CLR
(
•
, 
SC_SCR_EX
 | 
SC_SCR_VI
);

153 
rvÆ
 = 0;

154 #ifde‡
HAVE_PERL_INTERP


155 i‡(
	`≥æ_s¸ìn_íd
(
•
))

156 
rvÆ
 = 1;

158 i‡(
	`v_s¸ìn_íd
(
•
))

159 
rvÆ
 = 1;

160 i‡(
	`ex_s¸ìn_íd
(
•
))

161 
rvÆ
 = 1;

164 { **
≠
;

165 i‡(!
	`F_ISSET
(
•
, 
SC_ARGNOFREE
Ë&& sp->
¨gv
 !
NULL
) {

166 
≠
 = 
•
->
¨gv
; *≠ !
NULL
; ++ap)

167 
	`‰ì
(*
≠
);

168 
	`‰ì
(
•
->
¨gv
);

173 i‡(
•
->
tiq
.
cqh_fú°
 !
NULL
)

174 
	`ãxt_l‰ì
(&
•
->
tiq
);

177 i‡(
•
->
Æt_«me
 !
NULL
)

178 
	`‰ì
(
•
->
Æt_«me
);

181 i‡(
•
->
ª
 !
NULL
)

182 
	`‰ì
(
•
->
ª
);

183 i‡(
	`F_ISSET
(
•
, 
SC_RE_SEARCH
))

184 
	`ªg‰ì
(&
•
->
ª_c
);

185 i‡(
•
->
subª
 !
NULL
)

186 
	`‰ì
(
•
->
subª
);

187 i‡(
	`F_ISSET
(
•
, 
SC_RE_SUBST
))

188 
	`ªg‰ì
(&
•
->
subª_c
);

189 i‡(
•
->
ª∂
 !
NULL
)

190 
	`‰ì
(
•
->
ª∂
);

191 i‡(
•
->
√wl
 !
NULL
)

192 
	`‰ì
(
•
->
√wl
);

195 
	`›ts_‰ì
(
•
);

198 
	`‰ì
(
•
);

200  (
rvÆ
);

201 
	}
}

209 
SCR
 *

210 
	$s¸ìn_√xt
(
•
)

211 
SCR
 *
•
;

213 
GS
 *
gp
;

214 
SCR
 *
√xt
;

217 
gp
 = 
•
->gp;

218 
√xt
 = 
gp
->
dq
.
cqh_fú°
;

219 
√xt
 !(*)&
gp
->
dq
;Çexà√xt->
q
.
cqe_√xt
)

220 i‡(
√xt
 !
•
)

222 i‡(
√xt
 !(*)&
gp
->
dq
)

223  (
√xt
);

226 i‡(
gp
->
hq
.
cqh_fú°
 != (*)&gp->hq) {

227 
√xt
 = 
gp
->
hq
.
cqh_fú°
;

228 
	`CIRCLEQ_REMOVE
(&
gp
->
hq
, 
√xt
, 
q
);

229 
	`CIRCLEQ_INSERT_HEAD
(&
gp
->
dq
, 
√xt
, 
q
);

230  (
√xt
);

232  (
NULL
);

233 
	}
}

	@common/screen.h

24 
	#MINIMUM_SCREEN_ROWS
 1

	)

25 
	#MINIMUM_SCREEN_COLS
 20

	)

33 
	s_s¸
 {

35 
CIRCLEQ_ENTRY
(
_s¸
Ë
	mq
;

37 
	mid
;

38 
	mªf˙t
;

40 
GS
 *
	mgp
;

41 
SCR
 *
	m√xtdi•
;

42 
SCR
 *
	mc˛_∑ª¡
;

43 
EXF
 *
	mï
;

45 
FREF
 *
	m‰p
;

46 **
	m¨gv
;

47 **
	mˇrgv
;

49 
u_l⁄g
 
	mc˙t
;

50 
u_l⁄g
 
	mq_c˙t
;

53 
size_t
 
	mrows
;

54 
size_t
 
	mcﬁs
;

55 
size_t
 
	mt_rows
;

56 
size_t
 
	mt_maxrows
;

57 
size_t
 
	mt_mörows
;

58 
size_t
 
	mwoff
;

61 
ª˙o_t
 
	m o
;

62 
size_t
 
	m˙o
;

64 
size_t
 
	mrcm
;

66 
	#L_ADDED
 0

	)

67 
	#L_CHANGED
 1

	)

68 
	#L_DELETED
 2

	)

69 
	#L_JOINED
 3

	)

70 
	#L_MOVED
 4

	)

71 
	#L_SHIFT
 5

	)

72 
	#L_YANKED
 6

	)

73 
ª˙o_t
 
	mΩéch™ge
;

74 
ª˙o_t
 
	mΩéöes
[
L_YANKED
 + 1];

76 
TEXTH
 
	mtiq
;

78 
SCRIPT
 *
	ms¸ùt
;

80 
ª˙o_t
 
	mdefs¸ﬁl
;

83 
CHAR_T
 
	m˙ame
[
MAX_CHARACTER_COLUMNS
 + 1];

84 
size_t
 
	m˛í
;

87 
	mSM_APPEND
 = 0, 
	mSM_CHANGE
, 
	mSM_COMMAND
, 
	mSM_INSERT
,

88 
	mSM_REPLACE
 } 
	mshowmode
;

90 *
	mex_¥iv©e
;

91 *
	mvi_¥iv©e
;

92 *
	m≥æ_¥iv©e
;

95 *
	mÆt_«me
;

97 
CHAR_T
 
	m©_lbuf
;

100 
	#RE_C_CSCOPE
 0x0001

	)

101 
	#RE_C_SEARCH
 0x0002

	)

102 
	#RE_C_SILENT
 0x0004

	)

103 
	#RE_C_SUBST
 0x0008

	)

104 
	#RE_C_TAG
 0x0010

	)

106 
	#RE_WSTART
 "[[:<:]]"

	)

107 
	#RE_WSTOP
 "[[:>:]]"

	)

109 
	#SEARCH_CSCOPE
 0x0001

	)

110 
	#SEARCH_EOL
 0x0002

	)

111 
	#SEARCH_FILE
 0x0004

	)

112 
	#SEARCH_INCR
 0x0008

	)

113 
	#SEARCH_MSG
 0x0010

	)

114 
	#SEARCH_PARSE
 0x0020

	)

115 
	#SEARCH_SET
 0x0040

	)

116 
	#SEARCH_TAG
 0x0080

	)

117 
	#SEARCH_WMSG
 0x0100

	)

120 
dú_t
 
	m£¨chdú
;

121 
ªgex_t
 
	mª_c
;

122 *
	mª
;

123 
size_t
 
	mª_Àn
;

124 
ªgex_t
 
	msubª_c
;

125 *
	msubª
;

126 
size_t
 
	msubª_Àn
;

127 *
	mª∂
;

128 
size_t
 
	mª∂_Àn
;

129 
size_t
 *
	m√wl
;

130 
size_t
 
	m√wl_Àn
;

131 
size_t
 
	m√wl_˙t
;

132 
u_öt8_t
 
	mc_suffix
;

133 
u_öt8_t
 
	mg_suffix
;

135 
OPTION
 
	m›ts
[
O_OPTIONCOUNT
];

142 
	#SC_EX
 0x00000001

	)

143 
	#SC_VI
 0x00000002

	)

171 
	#SC_SCR_EX
 0x00000004

	)

172 
	#SC_SCR_VI
 0x00000008

	)

173 
	#SC_SCR_EXWROTE
 0x00000010

	)

174 
	#SC_SCR_REFORMAT
 0x00000020

	)

175 
	#SC_SCR_REDRAW
 0x00000040

	)

177 
	#SC_SCR_CENTER
 0x00000080

	)

178 
	#SC_SCR_TOP
 0x00000100

	)

181 
	#SC_EXIT
 0x00000200

	)

182 
	#SC_EXIT_FORCE
 0x00000400

	)

183 
	#SC_FSWITCH
 0x00000800

	)

184 
	#SC_SSWITCH
 0x00001000

	)

186 
	#SC_ARGNOFREE
 0x00002000

	)

187 
	#SC_ARGRECOVER
 0x00004000

	)

188 
	#SC_AT_SET
 0x00008000

	)

189 
	#SC_COMEDIT
 0x00010000

	)

190 
	#SC_EX_GLOBAL
 0x00020000

	)

191 
	#SC_EX_SILENT
 0x00040000

	)

192 
	#SC_EX_WAIT_NO
 0x00080000

	)

193 
	#SC_EX_WAIT_YES
 0x00100000

	)

194 
	#SC_READONLY
 0x00200000

	)

195 
	#SC_RE_SEARCH
 0x00400000

	)

196 
	#SC_RE_SUBST
 0x00800000

	)

197 
	#SC_SCRIPT
 0x01000000

	)

198 
	#SC_STATUS
 0x02000000

	)

199 
	#SC_STATUS_CNT
 0x04000000

	)

200 
	#SC_TINPUT
 0x08000000

	)

201 
	#SC_TINPUT_INFO
 0x10000000

	)

202 
u_öt32_t
 
	mÊags
;

	@common/search.c

10 
	~"c⁄fig.h
"

12 #i‚de‡
löt


13 c⁄° 
	gsccsid
[] = "@(#)search.c 10.25 (Berkeley) 6/30/96";

16 
	~<sys/ty≥s.h
>

17 
	~<sys/queue.h
>

19 
	~<bô°rög.h
>

20 
	~<˘y≥.h
>

21 
	~<î∫o.h
>

22 
	~<limôs.h
>

23 
	~<°dio.h
>

24 
	~<°dlib.h
>

25 
	~<°rög.h
>

26 
	~<uni°d.h
>

28 
	~"comm⁄.h
"

30 íum { 
	mS_EMPTY
, 
	mS_EOF
, 
	mS_NOPREV
, 
	mS_NOTFOUND
, 
	mS_SOF
, 
	mS_WRAP
 } 
	tsmsg_t
;

32 
£¨ch_msg
 
__P
((
SCR
 *, 
smsg_t
));

33 
£¨ch_öô
 
__P
((
SCR
 *, 
dú_t
, *, 
size_t
, **, 
u_öt
));

40 
	$£¨ch_öô
(
•
, 
dú
, 
±∫
, 
∂í
, 
ïp
, 
Êags
)

41 
SCR
 *
•
;

42 
dú_t
 
dú
;

43 *
±∫
, **
ïp
;

44 
size_t
 
∂í
;

45 
u_öt
 
Êags
;

47 
ª˙o_t
 
 o
;

48 
dñim
;

49 *
p
, *
t
;

52 i‡(
•
->
 o
 <= 1) {

53 i‡(
	`db_œ°
(
•
, &
 o
))

55 i‡(
 o
 == 0) {

56 i‡(
	`LF_ISSET
(
SEARCH_MSG
))

57 
	`£¨ch_msg
(
•
, 
S_EMPTY
);

62 i‡(
	`LF_ISSET
(
SEARCH_PARSE
)) {

71 i‡(
±∫
 =
NULL
)

72 
¥ev
;

73 i‡(
∂í
 == 1) {

74 i‡(
ïp
 !
NULL
)

75 *
ïp
 = 
±∫
 + 1;

76 
¥ev
;

78 i‡(
±∫
[0] ==Ötrn[1]) {

79 i‡(
ïp
 !
NULL
)

80 *
ïp
 = 
±∫
 + 2;

83 
¥ev
: i‡(
•
->
ª
 =
NULL
) {

84 
	`£¨ch_msg
(
•
, 
S_NOPREV
);

88 i‡(!
	`F_ISSET
(
•
, 
SC_RE_SEARCH
Ë&& 
	`ª_compûe
(sp,

89 
•
->
ª
, sp->
ª_Àn
, 
NULL
, NULL, &•->
ª_c
,

90 
RE_C_SEARCH
 |

91 (
	`LF_ISSET
(
SEARCH_MSG
Ë? 0 : 
RE_C_SILENT
)))

95 i‡(
	`LF_ISSET
(
SEARCH_SET
))

96 
•
->
£¨chdú
 = 
dú
;

107 
dñim
 = *
±∫
, 
p
 = 
t
 = ++ptrn;; *t++ = *p++) {

108 i‡(--
∂í
 =0 || 
p
[0] =
dñim
) {

109 i‡(
∂í
 != 0)

110 ++
p
;

113 i‡(
∂í
 > 1 && 
p
[0] ='\\' &&Ö[1] =
dñim
) {

114 ++
p
;

115 --
∂í
;

118 i‡(
ïp
 !
NULL
)

119 *
ïp
 = 
p
;

121 
∂í
 = 
t
 - 
±∫
;

125 i‡(
	`ª_compûe
(
•
, 
±∫
, 
∂í
, &•->
ª
, &•->
ª_Àn
, &•->
ª_c
,

126 
RE_C_SEARCH
 |

127 (
	`LF_ISSET
(
SEARCH_MSG
Ë? 0 : 
RE_C_SILENT
) |

128 (
	`LF_ISSET
(
SEARCH_TAG
Ë? 
RE_C_TAG
 : 0) |

129 (
	`LF_ISSET
(
SEARCH_CSCOPE
Ë? 
RE_C_CSCOPE
 : 0)))

133 i‡(
	`LF_ISSET
(
SEARCH_SET
))

134 
•
->
£¨chdú
 = 
dú
;

137 
	}
}

147 
	$f_£¨ch
(
•
, 
fm
, 
rm
, 
±∫
, 
∂í
, 
ïån
, 
Êags
)

148 
SCR
 *
•
;

149 
MARK
 *
fm
, *
rm
;

150 *
±∫
, **
ïån
;

151 
size_t
 
∂í
;

152 
u_öt
 
Êags
;

154 
busy_t
 
bty≥
;

155 
ª˙o_t
 
 o
;

156 
ªgm©ch_t
 
m©ch
[1];

157 
size_t
 
coff
, 
Àn
;

158 
˙t
, 
evÆ
, 
rvÆ
, 
wøµed
;

159 *
l
;

161 i‡(
	`£¨ch_öô
(
•
, 
FORWARD
, 
±∫
, 
∂í
, 
ïån
, 
Êags
))

164 i‡(
	`LF_ISSET
(
SEARCH_FILE
)) {

165 
 o
 = 1;

166 
coff
 = 0;

168 i‡(
	`db_gë
(
•
, 
fm
->
 o
, 
DBG_FATAL
, &
l
, &
Àn
))

170 
 o
 = 
fm
->lno;

184 i‡(
	`LF_ISSET
(
SEARCH_INCR
)) {

185 i‡((
coff
 = 
fm
->
˙o
) != 0)

186 --
coff
;

187 } i‡(
fm
->
˙o
 + 1 >
Àn
) {

188 
coff
 = 0;

189 
 o
 = 
fm
->lno + 1;

190 i‡(
	`db_gë
(
•
, 
 o
, 0, &
l
, &
Àn
)) {

191 i‡(!
	`O_ISSET
(
•
, 
O_WRAPSCAN
)) {

192 i‡(
	`LF_ISSET
(
SEARCH_MSG
))

193 
	`£¨ch_msg
(
•
, 
S_EOF
);

196 
 o
 = 1;

199 
coff
 = 
fm
->
˙o
 + 1;

202 
bty≥
 = 
BUSY_ON
;

203 
˙t
 = 
INTERRUPT_CHECK
, 
rvÆ
 = 1, 
wøµed
 = 0;; ++
 o
, 
coff
 = 0) {

204 i‡(
˙t
-- == 0) {

205 i‡(
	`INTERRUPTED
(
•
))

207 i‡(
	`LF_ISSET
(
SEARCH_MSG
)) {

208 
	`£¨ch_busy
(
•
, 
bty≥
);

209 
bty≥
 = 
BUSY_UPDATE
;

211 
˙t
 = 
INTERRUPT_CHECK
;

213 i‡(
wøµed
 && 
 o
 > 
fm
-> ÿ|| 
	`db_gë
(
•
,Üno, 0, &
l
, &
Àn
)) {

214 i‡(
wøµed
) {

215 i‡(
	`LF_ISSET
(
SEARCH_MSG
))

216 
	`£¨ch_msg
(
•
, 
S_NOTFOUND
);

219 i‡(!
	`O_ISSET
(
•
, 
O_WRAPSCAN
)) {

220 i‡(
	`LF_ISSET
(
SEARCH_MSG
))

221 
	`£¨ch_msg
(
•
, 
S_EOF
);

224 
 o
 = 0;

225 
wøµed
 = 1;

230 i‡(
Àn
 !0 && 
coff
 ==Üen)

234 
m©ch
[0].
rm_so
 = 
coff
;

235 
m©ch
[0].
rm_eo
 = 
Àn
;

237 #i‡
	`deföed
(
DEBUG
) && 0

238 
	`TRACE
(
•
, "F search: %lu from %uÅo %u\n",

239 
 o
, 
coff
, 
Àn
 != 0 ?Üen - 1 :Üen);

242 
evÆ
 = 
	`ªgexec
(&
•
->
ª_c
, 
l
, 1, 
m©ch
,

243 (
m©ch
[0].
rm_so
 =0 ? 0 : 
REG_NOTBOL
Ë| 
REG_STARTEND
);

244 i‡(
evÆ
 =
REG_NOMATCH
)

246 i‡(
evÆ
 != 0) {

247 i‡(
	`LF_ISSET
(
SEARCH_MSG
))

248 
	`ª_îr‹
(
•
, 
evÆ
, &•->
ª_c
);

250 ()
•
->
gp
->
	`s¸_bñl
(sp);

255 i‡(
wøµed
 && 
	`LF_ISSET
(
SEARCH_WMSG
))

256 
	`£¨ch_msg
(
•
, 
S_WRAP
);

258 #i‡
	`deföed
(
DEBUG
) && 0

259 
	`TRACE
(
•
, "F search: %quÅo %qu\n",

260 
m©ch
[0].
rm_so
, m©ch[0].
rm_eo
);

262 
rm
->
 o
 =Üno;

263 
rm
->
˙o
 = 
m©ch
[0].
rm_so
;

271 i‡(!
	`LF_ISSET
(
SEARCH_EOL
Ë&& 
rm
->
˙o
 >
Àn
)

272 
rm
->
˙o
 = 
Àn
 != 0 ?Üen - 1 : 0;

274 
rvÆ
 = 0;

278 i‡(
	`LF_ISSET
(
SEARCH_MSG
))

279 
	`£¨ch_busy
(
•
, 
BUSY_OFF
);

280  (
rvÆ
);

281 
	}
}

291 
	$b_£¨ch
(
•
, 
fm
, 
rm
, 
±∫
, 
∂í
, 
ïån
, 
Êags
)

292 
SCR
 *
•
;

293 
MARK
 *
fm
, *
rm
;

294 *
±∫
, **
ïån
;

295 
size_t
 
∂í
;

296 
u_öt
 
Êags
;

298 
busy_t
 
bty≥
;

299 
ª˙o_t
 
 o
;

300 
ªgm©ch_t
 
m©ch
[1];

301 
size_t
 
coff
, 
œ°
, 
Àn
;

302 
˙t
, 
evÆ
, 
rvÆ
, 
wøµed
;

303 *
l
;

305 i‡(
	`£¨ch_öô
(
•
, 
BACKWARD
, 
±∫
, 
∂í
, 
ïån
, 
Êags
))

318 i‡(
	`LF_ISSET
(
SEARCH_INCR
)) {

319 
 o
 = 
fm
->lno;

320 
coff
 = 
fm
->
˙o
 + 1;

322 i‡(
fm
->
˙o
 == 0) {

323 i‡(
fm
->
 o
 =1 && !
	`O_ISSET
(
•
, 
O_WRAPSCAN
)) {

324 i‡(
	`LF_ISSET
(
SEARCH_MSG
))

325 
	`£¨ch_msg
(
•
, 
S_SOF
);

328 
 o
 = 
fm
->lno - 1;

330 
 o
 = 
fm
->lno;

331 
coff
 = 
fm
->
˙o
;

334 
bty≥
 = 
BUSY_ON
;

335 
˙t
 = 
INTERRUPT_CHECK
, 
rvÆ
 = 1, 
wøµed
 = 0;; --
 o
, 
coff
 = 0) {

336 i‡(
˙t
-- == 0) {

337 i‡(
	`INTERRUPTED
(
•
))

339 i‡(
	`LF_ISSET
(
SEARCH_MSG
)) {

340 
	`£¨ch_busy
(
•
, 
bty≥
);

341 
bty≥
 = 
BUSY_UPDATE
;

343 
˙t
 = 
INTERRUPT_CHECK
;

345 i‡(
wøµed
 && 
 o
 < 
fm
->lno ||Üno == 0) {

346 i‡(
wøµed
) {

347 i‡(
	`LF_ISSET
(
SEARCH_MSG
))

348 
	`£¨ch_msg
(
•
, 
S_NOTFOUND
);

351 i‡(!
	`O_ISSET
(
•
, 
O_WRAPSCAN
)) {

352 i‡(
	`LF_ISSET
(
SEARCH_MSG
))

353 
	`£¨ch_msg
(
•
, 
S_SOF
);

356 i‡(
	`db_œ°
(
•
, &
 o
))

358 i‡(
 o
 == 0) {

359 i‡(
	`LF_ISSET
(
SEARCH_MSG
))

360 
	`£¨ch_msg
(
•
, 
S_EMPTY
);

363 ++
 o
;

364 
wøµed
 = 1;

368 i‡(
	`db_gë
(
•
, 
 o
, 0, &
l
, &
Àn
))

372 
m©ch
[0].
rm_so
 = 0;

373 
m©ch
[0].
rm_eo
 = 
Àn
;

375 #i‡
	`deföed
(
DEBUG
) && 0

376 
	`TRACE
(
•
, "B sórch: %lu from 0Åÿ%qu\n", 
 o
, 
m©ch
[0].
rm_eo
);

379 
evÆ
 = 
	`ªgexec
(&
•
->
ª_c
, 
l
, 1, 
m©ch
,

380 (
m©ch
[0].
rm_eo
 =
Àn
 ? 0 : 
REG_NOTEOL
Ë| 
REG_STARTEND
);

381 i‡(
evÆ
 =
REG_NOMATCH
)

383 i‡(
evÆ
 != 0) {

384 i‡(
	`LF_ISSET
(
SEARCH_MSG
))

385 
	`ª_îr‹
(
•
, 
evÆ
, &•->
ª_c
);

387 ()
•
->
gp
->
	`s¸_bñl
(sp);

392 i‡(
coff
 !0 && 
m©ch
[0].
rm_so
 >= coff)

396 i‡(
wøµed
 && 
	`LF_ISSET
(
SEARCH_WMSG
))

397 
	`£¨ch_msg
(
•
, 
S_WRAP
);

399 #i‡
	`deföed
(
DEBUG
) && 0

400 
	`TRACE
(
•
, "B found: %quÅo %qu\n",

401 
m©ch
[0].
rm_so
, m©ch[0].
rm_eo
);

410 
œ°
 = 
m©ch
[0].
rm_so
++;

411 i‡(
m©ch
[0].
rm_so
 >
Àn
)

413 
m©ch
[0].
rm_eo
 = 
Àn
;

414 
evÆ
 = 
	`ªgexec
(&
•
->
ª_c
, 
l
, 1, 
m©ch
,

415 (
m©ch
[0].
rm_so
 =0 ? 0 : 
REG_NOTBOL
) |

416 
REG_STARTEND
);

417 i‡(
evÆ
 =
REG_NOMATCH
)

419 i‡(
evÆ
 != 0) {

420 i‡(
	`LF_ISSET
(
SEARCH_MSG
))

421 
	`ª_îr‹
(
•
, 
evÆ
, &•->
ª_c
);

423 ()
•
->
gp
->
	`s¸_bñl
(sp);

424 
îr
;

426 i‡(
coff
 && 
m©ch
[0].
rm_so
 >= coff)

429 
rm
->
 o
 =Üno;

432 i‡(!
	`LF_ISSET
(
SEARCH_EOL
Ë&& 
œ°
 >
Àn
)

433 
rm
->
˙o
 = 
Àn
 != 0 ?Üen - 1 : 0;

435 
rm
->
˙o
 = 
œ°
;

436 
rvÆ
 = 0;

440 
îr
: i‡(
	`LF_ISSET
(
SEARCH_MSG
))

441 
	`£¨ch_busy
(
•
, 
BUSY_OFF
);

442  (
rvÆ
);

443 
	}
}

450 
	$£¨ch_msg
(
•
, 
msg
)

451 
SCR
 *
•
;

452 
smsg_t
 
msg
;

454 
msg
) {

455 
S_EMPTY
:

456 
	`msgq
(
•
, 
M_ERR
, "072|FileÉmpty;ÇothingÅo search");

458 
S_EOF
:

459 
	`msgq
(
•
, 
M_ERR
,

462 
S_NOPREV
:

463 
	`msgq
(
•
, 
M_ERR
, "074|NoÖrevious searchÖattern");

465 
S_NOTFOUND
:

466 
	`msgq
(
•
, 
M_ERR
, "075|PatternÇot found");

468 
S_SOF
:

469 
	`msgq
(
•
, 
M_ERR
,

472 
S_WRAP
:

473 
	`msgq
(
•
, 
M_ERR
, "077|Search wrapped");

476 
	`ab‹t
();

478 
	}
}

487 
	$£¨ch_busy
(
•
, 
bty≥
)

488 
SCR
 *
•
;

489 
busy_t
 
bty≥
;

491 
•
->
gp
->
	`s¸_busy
(•, "078|Sórchög...", 
bty≥
);

492 
	}
}

	@common/seq.c

10 
	~"c⁄fig.h
"

12 #i‚de‡
löt


13 c⁄° 
	gsccsid
[] = "@(#)seq.c 10.10 (Berkeley) 3/30/96";

16 
	~<sys/ty≥s.h
>

17 
	~<sys/queue.h
>

19 
	~<bô°rög.h
>

20 
	~<˘y≥.h
>

21 
	~<î∫o.h
>

22 
	~<limôs.h
>

23 
	~<°dio.h
>

24 
	~<°dlib.h
>

25 
	~<°rög.h
>

27 
	~"comm⁄.h
"

37 
	$£q_£t
(
•
, 
«me
, 
∆í
, 
öput
, 
ûí
, 
ouçut
, 
ﬁí
, 
°y≥
, 
Êags
)

38 
SCR
 *
•
;

39 
CHAR_T
 *
«me
, *
öput
, *
ouçut
;

40 
size_t
 
∆í
, 
ûí
, 
ﬁí
;

41 
£q_t
 
°y≥
;

42 
Êags
;

44 
CHAR_T
 *
p
;

45 
SEQ
 *
œ°qp
, *
qp
;

46 
sv_î∫o
;

55 i‡((
qp
 =

56 
	`£q_föd
(
•
, &
œ°qp
, 
NULL
, 
öput
, 
ûí
, 
°y≥
, NULL)) != NULL) {

57 i‡(
	`LF_ISSET
(
SEQ_NOOVERWRITE
))

59 i‡(
ouçut
 =
NULL
 || 
ﬁí
 == 0) {

60 
p
 = 
NULL
;

61 
ﬁí
 = 0;

62 } i‡((
p
 = 
	`v_°rdup
(
•
, 
ouçut
, 
ﬁí
)Ë=
NULL
) {

63 
sv_î∫o
 = 
î∫o
;

64 
mem1
;

66 i‡(
qp
->
ouçut
 !
NULL
)

67 
	`‰ì
(
qp
->
ouçut
);

68 
qp
->
ﬁí
 = olen;

69 
qp
->
ouçut
 = 
p
;

74 
	`CALLOC
(
•
, 
qp
, 
SEQ
 *, 1, (SEQ));

75 i‡(
qp
 =
NULL
) {

76 
sv_î∫o
 = 
î∫o
;

77 
mem1
;

81 i‡(
«me
 =
NULL
 || 
∆í
 == 0)

82 
qp
->
«me
 = 
NULL
;

83 i‡((
qp
->
«me
 = 
	`v_°rdup
(
•
,Çame, 
∆í
)Ë=
NULL
) {

84 
sv_î∫o
 = 
î∫o
;

85 
mem2
;

87 
qp
->
∆í
 =Çlen;

90 i‡((
qp
->
öput
 = 
	`v_°rdup
(
•
, i≈ut, 
ûí
)Ë=
NULL
) {

91 
sv_î∫o
 = 
î∫o
;

92 
mem3
;

94 
qp
->
ûí
 = ilen;

97 i‡(
ouçut
 =
NULL
) {

98 
qp
->
ouçut
 = 
NULL
;

99 
ﬁí
 = 0;

100 } i‡((
qp
->
ouçut
 = 
	`v_°rdup
(
•
, ouçut, 
ﬁí
)Ë=
NULL
) {

101 
sv_î∫o
 = 
î∫o
;

102 
	`‰ì
(
qp
->
öput
);

103 
mem3
: i‡(
qp
->
«me
 !
NULL
)

104 
	`‰ì
(
qp
->
«me
);

105 
mem2
: 
	`‰ì
(
qp
);

106 
mem1
: 
î∫o
 = 
sv_î∫o
;

107 
	`msgq
(
•
, 
M_SYSERR
, 
NULL
);

110 
qp
->
ﬁí
 = olen;

113 
qp
->
°y≥
 = stype;

114 
qp
->
Êags
 = flags;

117 i‡(
œ°qp
 =
NULL
) {

118 
	`LIST_INSERT_HEAD
(&
•
->
gp
->
£qq
, 
qp
, 
q
);

120 
	`LIST_INSERT_AFTER
(
œ°qp
, 
qp
, 
q
);

124 i‡(
qp
->
öput
[0] < 
MAX_BIT_SEQ
)

125 
	`bô_£t
(
•
->
gp
->
£qb
, 
qp
->
öput
[0]);

128 
	}
}

137 
	$£q_dñëe
(
•
, 
öput
, 
ûí
, 
°y≥
)

138 
SCR
 *
•
;

139 
CHAR_T
 *
öput
;

140 
size_t
 
ûí
;

141 
£q_t
 
°y≥
;

143 
SEQ
 *
qp
;

145 i‡((
qp
 = 
	`£q_föd
(
•
, 
NULL
, NULL, 
öput
, 
ûí
, 
°y≥
, NULL)) == NULL)

147  (
	`£q_mdñ
(
qp
));

148 
	}
}

157 
	$£q_mdñ
(
qp
)

158 
SEQ
 *
qp
;

160 
	`LIST_REMOVE
(
qp
, 
q
);

161 i‡(
qp
->
«me
 !
NULL
)

162 
	`‰ì
(
qp
->
«me
);

163 
	`‰ì
(
qp
->
öput
);

164 i‡(
qp
->
ouçut
 !
NULL
)

165 
	`‰ì
(
qp
->
ouçut
);

166 
	`‰ì
(
qp
);

168 
	}
}

178 
SEQ
 *

179 
	$£q_föd
(
•
, 
œ°qp
, 
e_öput
, 
c_öput
, 
ûí
, 
°y≥
, 
i•¨tüÕ
)

180 
SCR
 *
•
;

181 
SEQ
 **
œ°qp
;

182 
EVENT
 *
e_öput
;

183 
CHAR_T
 *
c_öput
;

184 
size_t
 
ûí
;

185 
£q_t
 
°y≥
;

186 *
i•¨tüÕ
;

188 
SEQ
 *
lqp
, *
qp
;

189 
diff
;

201 i‡(
i•¨tüÕ
 !
NULL
)

202 *
i•¨tüÕ
 = 0;

203 
lqp
 = 
NULL
, 
qp
 = 
•
->
gp
->
£qq
.
lh_fú°
;

204 
qp
 !
NULL
; 
lqp
 = qp, q∞qp->
q
.
À_√xt
) {

209 i‡(
e_öput
 =
NULL
) {

210 i‡(
qp
->
öput
[0] > 
c_öput
[0])

212 i‡(
qp
->
öput
[0] < 
c_öput
[0] ||

213 
qp
->
°y≥
 !°y≥ || 
	`F_ISSET
(qp, 
SEQ_FUNCMAP
))

215 
diff
 = 
	`memcmp
(
qp
->
öput
, 
c_öput
, 
	`MIN
(qp->
ûí
, ilen));

217 i‡(
qp
->
öput
[0] > 
e_öput
->
e_c
)

219 i‡(
qp
->
öput
[0] < 
e_öput
->
e_c
 ||

220 
qp
->
°y≥
 !°y≥ || 
	`F_ISSET
(qp, 
SEQ_FUNCMAP
))

222 
diff
 =

223 
	`e_memcmp
(
qp
->
öput
, 
e_öput
, 
	`MIN
(qp->
ûí
, ilen));

225 i‡(
diff
 > 0)

227 i‡(
diff
 < 0)

235 i‡(
qp
->
ûí
 <= ilen) {

236 i‡(
qp
->
ûí
 =ûí || 
i•¨tüÕ
 !
NULL
) {

237 i‡(
œ°qp
 !
NULL
)

238 *
œ°qp
 = 
lqp
;

239  (
qp
);

248 i‡(
i•¨tüÕ
 !
NULL
)

249 *
i•¨tüÕ
 = 1;

252 i‡(
œ°qp
 !
NULL
)

253 *
œ°qp
 = 
lqp
;

254  (
NULL
);

255 
	}
}

264 
	$£q_˛o£
(
gp
)

265 
GS
 *
gp
;

267 
SEQ
 *
qp
;

269 (
qp
 = 
gp
->
£qq
.
lh_fú°
Ë!
NULL
) {

270 i‡(
qp
->
«me
 !
NULL
)

271 
	`‰ì
(
qp
->
«me
);

272 i‡(
qp
->
öput
 !
NULL
)

273 
	`‰ì
(
qp
->
öput
);

274 i‡(
qp
->
ouçut
 !
NULL
)

275 
	`‰ì
(
qp
->
ouçut
);

276 
	`LIST_REMOVE
(
qp
, 
q
);

277 
	`‰ì
(
qp
);

279 
	}
}

288 
	$£q_dump
(
•
, 
°y≥
, 
i¢ame
)

289 
SCR
 *
•
;

290 
£q_t
 
°y≥
;

291 
i¢ame
;

293 
CHAR_T
 *
p
;

294 
GS
 *
gp
;

295 
SEQ
 *
qp
;

296 
˙t
, 
Àn
, 
ﬁí
;

298 
˙t
 = 0;

299 
gp
 = 
•
->gp;

300 
qp
 = 
gp
->
£qq
.
lh_fú°
; q∞!
NULL
; q∞qp->
q
.
À_√xt
) {

301 i‡(
°y≥
 !
qp
->°y≥ || 
	`F_ISSET
(qp, 
SEQ_FUNCMAP
))

303 ++
˙t
;

304 
p
 = 
qp
->
öput
,

305 
ﬁí
 = 
qp
->
ûí
, 
Àn
 = 0; oÀ¿> 0; --ﬁí, ++
p
)

306 
Àn
 +
	`ex_puts
(
•
, 
	`KEY_NAME
(•, *
p
));

307 
Àn
 = 
STANDARD_TAB
 -Üen % STANDARD_TAB;Üen > 0;)

308 
Àn
 -
	`ex_puts
(
•
, " ");

310 i‡(
qp
->
ouçut
 !
NULL
)

311 
p
 = 
qp
->
ouçut
,

312 
ﬁí
 = 
qp
->ﬁí, 
Àn
 = 0; oÀ¿> 0; --ﬁí, ++
p
)

313 
Àn
 +
	`ex_puts
(
•
, 
	`KEY_NAME
(•, *
p
));

315 
Àn
 = 0;

317 i‡(
i¢ame
 && 
qp
->
«me
 !
NULL
) {

318 
Àn
 = 
STANDARD_TAB
 -Üen % STANDARD_TAB;Üen > 0;)

319 
Àn
 -
	`ex_puts
(
•
, " ");

320 
p
 = 
qp
->
«me
,

321 
ﬁí
 = 
qp
->
∆í
; oÀ¿> 0; --ﬁí, ++
p
)

322 ()
	`ex_puts
(
•
, 
	`KEY_NAME
(•, *
p
));

324 ()
	`ex_puts
(
•
, "\n");

326  (
˙t
);

327 
	}
}

336 
	$£q_ßve
(
•
, 
Â
, 
¥efix
, 
°y≥
)

337 
SCR
 *
•
;

338 
FILE
 *
Â
;

339 *
¥efix
;

340 
£q_t
 
°y≥
;

342 
CHAR_T
 *
p
;

343 
SEQ
 *
qp
;

344 
size_t
 
ﬁí
;

345 
ch
;

348 
qp
 = 
•
->
gp
->
£qq
.
lh_fú°
; q∞!
NULL
; q∞qp->
q
.
À_√xt
) {

349 i‡(
°y≥
 !
qp
->°y≥ || !
	`F_ISSET
(qp, 
SEQ_USERDEF
))

351 i‡(
¥efix
)

352 ()
	`Ârötf
(
Â
, "%s", 
¥efix
);

353 
p
 = 
qp
->
öput
, 
ﬁí
 = qp->
ûí
; olen > 0; --olen) {

354 
ch
 = *
p
++;

355 i‡(
ch
 =
CH_LITERAL
 || ch == '|' ||

356 
	`isbœnk
(
ch
Ë|| 
	`KEY_VAL
(
•
, chË=
K_NL
)

357 ()
	`putc
(
CH_LITERAL
, 
Â
);

358 ()
	`putc
(
ch
, 
Â
);

360 ()
	`putc
(' ', 
Â
);

361 i‡(
qp
->
ouçut
 !
NULL
)

362 
p
 = 
qp
->
ouçut
,

363 
ﬁí
 = 
qp
->olen; olen > 0; --olen) {

364 
ch
 = *
p
++;

365 i‡(
ch
 =
CH_LITERAL
 || ch == '|' ||

366 
	`KEY_VAL
(
•
, 
ch
Ë=
K_NL
)

367 ()
	`putc
(
CH_LITERAL
, 
Â
);

368 ()
	`putc
(
ch
, 
Â
);

370 ()
	`putc
('\n', 
Â
);

373 
	}
}

382 
	$e_memcmp
(
p1
, 
ï
, 
n
)

383 
CHAR_T
 *
p1
;

384 
EVENT
 *
ï
;

385 
size_t
 
n
;

387 i‡(
n
 != 0) {

389 i‡(*
p1
++ !
ï
->
e_c
)

390  (*--
p1
 - 
ï
->
e_c
);

391 ++
ï
;

392 } --
n
 != 0);

395 
	}
}

	@common/seq.h

29 
	s_£q
 {

30 
LIST_ENTRY
(
_£q
Ë
	mq
;

31 
£q_t
 
	m°y≥
;

32 
CHAR_T
 *
	m«me
;

33 
size_t
 
	m∆í
;

34 
CHAR_T
 *
	möput
;

35 
size_t
 
	mûí
;

36 
CHAR_T
 *
	mouçut
;

37 
size_t
 
	mﬁí
;

39 
	#SEQ_FUNCMAP
 0x01

	)

40 
	#SEQ_NOOVERWRITE
 0x02

	)

41 
	#SEQ_SCREEN
 0x04

	)

42 
	#SEQ_USERDEF
 0x08

	)

43 
u_öt8_t
 
	mÊags
;

	@common/util.c

10 
	~"c⁄fig.h
"

12 #i‚de‡
löt


13 c⁄° 
	gsccsid
[] = "@(#)util.c 10.11 (Berkeley) 9/15/96";

16 
	~<sys/ty≥s.h
>

17 
	~<sys/queue.h
>

19 
	~<bô°rög.h
>

20 
	~<î∫o.h
>

21 
	~<limôs.h
>

22 
	~<°dio.h
>

23 
	~<°dlib.h
>

24 
	~<°rög.h
>

25 
	~<uni°d.h
>

27 
	~"comm⁄.h
"

36 
	$böc
(
•
, 
bp
, 
bsizï
, 
mö
)

37 
SCR
 *
•
;

38 *
bp
;

39 
size_t
 *
bsizï
, 
mö
;

41 
size_t
 
csize
;

44 i‡(
mö
 && *
bsizï
 >= min)

45  (
bp
);

47 
csize
 = *
bsizï
 + 
	`MAX
(
mö
, 256);

48 
	`REALLOC
(
•
, 
bp
, *, 
csize
);

50 i‡(
bp
 =
NULL
) {

55 *
bsizï
 = 0;

56  (
NULL
);

62 
	`mem£t
((*)
bp
 + *
bsizï
, 0, 
csize
 - *bsizep);

63 *
bsizï
 = 
csize
;

64  (
bp
);

65 
	}
}

76 
	$n⁄bœnk
(
•
, 
 o
, 
˙›
)

77 
SCR
 *
•
;

78 
ª˙o_t
 
 o
;

79 
size_t
 *
˙›
;

81 *
p
;

82 
size_t
 
˙t
, 
Àn
, 
off
;

83 
i£m±y
;

86 
off
 = *
˙›
;

87 *
˙›
 = 0;

90 i‡(
	`db_egë
(
•
, 
 o
, &
p
, &
Àn
, &
i£m±y
))

91  (!
i£m±y
);

94 i‡(
Àn
 =0 || 
off
 >=Üen)

97 
˙t
 = 
off
, 
p
 = &p[off],

98 
Àn
 -
off
;Üí && 
	`isbœnk
(*
p
); ++
˙t
, ++p, --len);

101 *
˙›
 = 
Àn
 ? 
˙t
 : cnt - 1;

103 
	}
}

112 
	$èû
(
∑th
)

113 *
∑th
;

115 *
p
;

117 i‡((
p
 = 
	`°ºchr
(
∑th
, '/')Ë=
NULL
)

118  (
∑th
);

119  (
p
 + 1);

120 
	}
}

128 
CHAR_T
 *

129 
	$v_°rdup
(
•
, 
°r
, 
Àn
)

130 
SCR
 *
•
;

131 c⁄° 
CHAR_T
 *
°r
;

132 
size_t
 
Àn
;

134 
CHAR_T
 *
c›y
;

136 
	`MALLOC
(
•
, 
c›y
, 
CHAR_T
 *, 
Àn
 + 1);

137 i‡(
c›y
 =
NULL
)

138  (
NULL
);

139 
	`mem˝y
(
c›y
, 
°r
, 
Àn
 * (
CHAR_T
));

140 
c›y
[
Àn
] = '\0';

141  (
c›y
);

142 
	}
}

150 
ƒesu…


151 
	$ngë_u¶⁄g
(
vÆp
, 
p
, 
ídp
, 
ba£
)

152 
u_l⁄g
 *
vÆp
;

153 c⁄° *
p
;

154 **
ídp
;

155 
ba£
;

157 
î∫o
 = 0;

158 *
vÆp
 = 
	`°πoul
(
p
, 
ídp
, 
ba£
);

159 i‡(
î∫o
 == 0)

160  (
NUM_OK
);

161 i‡(
î∫o
 =
ERANGE
 && *
vÆp
 =
ULONG_MAX
)

162  (
NUM_OVER
);

163  (
NUM_ERR
);

164 
	}
}

172 
ƒesu…


173 
	$ngë_¶⁄g
(
vÆp
, 
p
, 
ídp
, 
ba£
)

174 *
vÆp
;

175 c⁄° *
p
;

176 **
ídp
;

177 
ba£
;

179 
î∫o
 = 0;

180 *
vÆp
 = 
	`°πﬁ
(
p
, 
ídp
, 
ba£
);

181 i‡(
î∫o
 == 0)

182  (
NUM_OK
);

183 i‡(
î∫o
 =
ERANGE
) {

184 i‡(*
vÆp
 =
LONG_MAX
)

185  (
NUM_OVER
);

186 i‡(*
vÆp
 =
LONG_MIN
)

187  (
NUM_UNDER
);

189  (
NUM_ERR
);

190 
	}
}

192 #ifde‡
DEBUG


193 #ifde‡
__STDC__


194 
	~<°d¨g.h
>

196 
	~<v¨¨gs.h
>

206 #ifde‡
__STDC__


207 
	$TRACE
(
SCR
 *
•
, c⁄° *
fmt
, ...)

209 
	$TRACE
(
•
, 
fmt
, 
va_Æi°
)

210 
SCR
 *
•
;

211 *
fmt
;

212 
va_d˛


215 
FILE
 *
tÂ
;

216 
va_li°
 
≠
;

218 i‡((
tÂ
 = 
•
->
gp
->
åa˚Â
Ë=
NULL
)

220 #ifde‡
__STDC__


221 
	`va_°¨t
(
≠
, 
fmt
);

223 
	`va_°¨t
(
≠
);

225 ()
	`vÂrötf
(
tÂ
, 
fmt
, 
≠
);

226 
	`va_íd
(
≠
);

228 ()
	`fÊush
(
tÂ
);

229 
	}
}

	@common/util.h

13 
	#FL_INIT
(
l
, 
f
Ë÷Ë(fË

	)

14 
	#FL_SET
(
l
, 
f
Ë(÷Ë|(f))

	)

15 
	#FL_CLR
(
l
, 
f
Ë(÷Ë&~(f))

	)

16 
	#FL_ISSET
(
l
, 
f
Ë(÷Ë& (f))

	)

18 
	#LF_INIT
(
f
Ë
	`FL_INIT
(
Êags
, fË

	)

19 
	#LF_SET
(
f
Ë
	`FL_SET
(
Êags
, f)

	)

20 
	#LF_CLR
(
f
Ë
	`FL_CLR
(
Êags
, f)

	)

21 
	#LF_ISSET
(
f
Ë
	`FL_ISSET
(
Êags
, f)

	)

23 
	#F_INIT
(
p
, 
f
Ë
	`FL_INIT
(’)->
Êags
, fË

	)

24 
	#F_SET
(
p
, 
f
Ë
	`FL_SET
(’)->
Êags
, f)

	)

25 
	#F_CLR
(
p
, 
f
Ë
	`FL_CLR
(’)->
Êags
, f)

	)

26 
	#F_ISSET
(
p
, 
f
Ë
	`FL_ISSET
(’)->
Êags
, f)

	)

29 
	#COL_OFF
(
c
, 
°›
Ë((°›Ë- ((cË% (°›)))

	)

32 íum { 
	mB_NONE
, 
	mB_OFF
, 
	mB_READ
, 
	mB_RECOVER
, 
	mB_SEARCH
, 
	mB_WRITE
 } 
	tbmsg_t
;

42 
	eƒesu…
 { 
	mNUM_ERR
, 
	mNUM_OK
, 
	mNUM_OVER
, 
	mNUM_UNDER
 };

43 
	#NNFITS
(
mö
, 
cur
, 
add
) \

44 ((()(
mö
)Ë- (
cur
Ë<(
add
))

	)

45 
	#NPFITS
(
max
, 
cur
, 
add
) \

46 ((()(
max
)Ë- (
cur
Ë>(
add
))

	)

47 
	#NADD_SLONG
(
•
, 
v1
, 
v2
) \

48 ((
v1
) < 0 ? \

49 ((
v2
) < 0 && \

50 
	`NNFITS
(
LONG_MIN
, (
v1
), (
v2
))Ë? 
NUM_UNDER
 : 
NUM_OK
 : \

51 (
v1
) > 0 ? \

52 (
v2
) > 0 && \

53 
	`NPFITS
(
LONG_MAX
, (
v1
), (
v2
)Ë? 
NUM_OK
 : 
NUM_OVER
 : \

54 
NUM_OK
)

	)

55 
	#NADD_USLONG
(
•
, 
v1
, 
v2
) \

56 (
	`NPFITS
(
ULONG_MAX
, (
v1
), (
v2
)Ë? 
NUM_OK
 : 
NUM_OVER
)

	)

	@curses/addbytes.c

34 
	~"c⁄fig.h
"

36 #i‚de‡
löt


37 c⁄° 
	gsccsid
[] = "@(#)addbytes.c 8.4 (Berkeley) 5/4/94";

40 
	~"cur£s.h
"

42 
	#SYNCH_IN
 {
y
 = 
wö
->
cury
; 
x
 = wö->
curx
;}

	)

43 
	#SYNCH_OUT
 {
wö
->
cury
 = 
y
; wö->
curx
 = 
x
;}

	)

50 
	$__waddbyãs
(
wö
, 
byãs
, 
cou¡
, 
so
)

51 
WINDOW
 *
wö
;

52 c⁄° *
byãs
;

53 
cou¡
;

54 
so
;

56 
bœnks
[] = " ";

57 
c
, 
√wx
, 
x
, 
y
;

58 
°™d
;

59 
__LINE
 *
Õ
;

61 
SYNCH_IN
;

63 #ifde‡
CURSES_DEBUG


64 
	`__CTRACE
("ADDBYTES('%c'Ë© (%d, %d)\n", 
c
, 
y
, 
x
);

66 
cou¡
--) {

67 
c
 = *
byãs
++;

68 
c
) {

70 
SYNCH_OUT
;

71 i‡(
	`waddbyãs
(
wö
, 
bœnks
, 8 - (
x
 % 8)Ë=
ERR
)

72  (
ERR
);

73 
SYNCH_IN
;

77 #ifde‡
CURSES_DEBUG


78 
	`__CTRACE
("ADDBYTES(%0.2o, %d, %d)\n", 
wö
, 
y
, 
x
);

81 
Õ
 = 
wö
->
löes
[
y
];

82 i‡(
Õ
->
Êags
 & 
__ISPASTEOL
) {

83 
Õ
->
Êags
 &~
__ISPASTEOL
;

84 
√wlöe
: i‡(
y
 =
wö
->
maxy
 - 1) {

85 i‡(
wö
->
Êags
 & 
__SCROLLOK
) {

86 
SYNCH_OUT
;

87 
	`s¸ﬁl
(
wö
);

88 
SYNCH_IN
;

89 
Õ
 = 
wö
->
löes
[
y
];

90 
x
 = 0;

92  (
ERR
);

94 
y
++;

95 
Õ
 = 
wö
->
löes
[
y
];

96 
x
 = 0;

98 i‡(
c
 == '\n')

102 
°™d
 = '\0';

103 i‡(
wö
->
Êags
 & 
__WSTANDOUT
 || 
so
)

104 
°™d
 |
__STANDOUT
;

105 #ifde‡
CURSES_DEBUG


106 
	`__CTRACE
("ADDBYTES: 1: y = %d, x = %d, firstch = %d,Üastch = %d\n",

107 
y
, 
x
, *
wö
->
löes
[y]->
fú°chp
, *wö->löes[y]->
œ°chp
);

109 i‡(
Õ
->
löe
[
x
].
ch
 !
c
 ||

110 !(
Õ
->
löe
[
x
].
©å
 & 
°™d
)) {

111 
√wx
 = 
x
 + 
wö
->
ch_off
;

112 i‡(!(
Õ
->
Êags
 & 
__ISDIRTY
)) {

113 
Õ
->
Êags
 |
__ISDIRTY
;

114 *
Õ
->
fú°chp
 = *Õ->
œ°chp
 = 
√wx
;

116 i‡(
√wx
 < *
Õ
->
fú°chp
)

117 *
Õ
->
fú°chp
 = 
√wx
;

118 i‡(
√wx
 > *
Õ
->
œ°chp
)

119 *
Õ
->
œ°chp
 = 
√wx
;

120 #ifde‡
CURSES_DEBUG


121 
	`__CTRACE
("ADDBYTES: change gives f/l: %d/%d [%d/%d]\n",

122 *
Õ
->
fú°chp
, *Õ->
œ°chp
,

123 *
Õ
->
fú°chp
 - 
wö
->
ch_off
,

124 *
Õ
->
œ°chp
 - 
wö
->
ch_off
);

127 
Õ
->
löe
[
x
].
ch
 = 
c
;

128 i‡(
°™d
)

129 
Õ
->
löe
[
x
].
©å
 |
__STANDOUT
;

131 
Õ
->
löe
[
x
].
©å
 &~
__STANDOUT
;

132 i‡(
x
 =
wö
->
maxx
 - 1)

133 
Õ
->
Êags
 |
__ISPASTEOL
;

135 
x
++;

136 #ifde‡
CURSES_DEBUG


137 
	`__CTRACE
("ADDBYTES: 2: y = %d, x = %d, firstch = %d,Üastch = %d\n",

138 
y
, 
x
, *
wö
->
löes
[y]->
fú°chp
, *wö->löes[y]->
œ°chp
);

142 
SYNCH_OUT
;

143 
	`w˛π€ﬁ
(
wö
);

144 
SYNCH_IN
;

145 i‡(!
NONL
)

146 
x
 = 0;

147 
√wlöe
;

149 
x
 = 0;

152 i‡(--
x
 < 0)

153 
x
 = 0;

157 
SYNCH_OUT
;

158  (
OK
);

159 
	}
}

	@curses/addch.c

34 #i‚de‡
löt


35 
	gsccsid
[] = "@(#)addch.c 8.2 (Berkeley) 5/4/94";

38 
	~"cur£s.h
"

46 
	$waddch
(
wö
, 
ch
)

47 
WINDOW
 *
wö
;

48 
ch
;

50 
__LDATA
 
buf
;

52 
buf
.
ch
 = ch;

53 
buf
.
©å
 = 0;

54  (
	`__waddch
(
wö
, &
buf
));

55 
	}
}

58 
	$__waddch
(
wö
, 
dp
)

59 
WINDOW
 *
wö
;

60 
__LDATA
 *
dp
;

62 
buf
[2];

64 
buf
[0] = 
dp
->
ch
;

65  (
	`__waddbyãs
(
wö
, 
buf
, 1, 
dp
->
©å
 & 
__STANDOUT
));

66 
	}
}

	@curses/box.c

34 #i‚de‡
löt


35 
	gsccsid
[] = "@(#)box.c 8.2 (Berkeley) 5/4/94";

38 
	~"cur£s.h
"

46 
	$box
(
wö
, 
vît
, 
h‹
)

47 
WINDOW
 *
wö
;

48 
vît
, 
h‹
;

50 
ídy
, 
ídx
, 
i
;

51 
__LDATA
 *
Â
, *
Õ
;

53 
ídx
 = 
wö
->
maxx
;

54 
ídy
 = 
wö
->
maxy
 - 1;

55 
Â
 = 
wö
->
löes
[0]->
löe
;

56 
Õ
 = 
wö
->
löes
[
ídy
]->
löe
;

57 
i
 = 0; i < 
ídx
; i++) {

58 
Â
[
i
].
ch
 = 
Õ
[i].ch = 
h‹
;

59 
Â
[
i
].
©å
 &~
__STANDOUT
;

60 
Õ
[
i
].
©å
 &~
__STANDOUT
;

62 
ídx
--;

63 
i
 = 0; i <
ídy
; i++) {

64 
wö
->
löes
[
i
]->
löe
[0].
ch
 = 
vît
;

65 
wö
->
löes
[
i
]->
löe
[
ídx
].
ch
 = 
vît
;

66 
wö
->
löes
[
i
]->
löe
[0].
©å
 &~
__STANDOUT
;

67 
wö
->
löes
[
i
]->
löe
[
ídx
].
©å
 &~
__STANDOUT
;

69 i‡(!(
wö
->
Êags
 & 
__SCROLLOK
Ë&& (wö->Êag†& 
__SCROLLWIN
)) {

70 
Â
[0].
ch
 = fp[
ídx
].ch = 
Õ
[0].ch =Üp[endx].ch = ' ';

71 
Â
[0].
©å
 &~
__STANDOUT
;

72 
Â
[
ídx
].
©å
 &~
__STANDOUT
;

73 
Õ
[0].
©å
 &~
__STANDOUT
;

74 
Õ
[
ídx
].
©å
 &~
__STANDOUT
;

76 
	`__touchwö
(
wö
);

77  (
OK
);

78 
	}
}

	@curses/clear.c

34 #i‚de‡
löt


35 
	gsccsid
[] = "@(#)clear.c 8.2 (Berkeley) 5/4/94";

38 
	~"cur£s.h
"

45 
	$w˛ór
(
wö
)

46 
WINDOW
 *
wö
;

48 i‡(
	`wîa£
(
wö
Ë=
OK
) {

49 
wö
->
Êags
 |
__CLEAROK
;

50  (
OK
);

52  (
ERR
);

53 
	}
}

	@curses/clrtobot.c

34 #i‚de‡
löt


35 
	gsccsid
[] = "@(#)clrtobot.c 8.2 (Berkeley) 5/4/94";

38 
	~"cur£s.h
"

45 
	$w˛πobŸ
(
wö
)

46 
WINDOW
 *
wö
;

48 
möx
, 
°¨tx
, 
°¨ty
, 
y
;

49 
__LDATA
 *
•
, *
íd
, *
maxx
;

51 i‡(
wö
->
löes
[wö->
cury
]->
Êags
 & 
__ISPASTEOL
) {

52 
°¨ty
 = 
wö
->
cury
 + 1;

53 
°¨tx
 = 0;

55 
°¨ty
 = 
wö
->
cury
;

56 
°¨tx
 = 
wö
->
curx
;

58 
y
 = 
°¨ty
; y < 
wö
->
maxy
; y++) {

59 
möx
 = -1;

60 
íd
 = &
wö
->
löes
[
y
]->
löe
[wö->
maxx
];

61 
•
 = &
wö
->
löes
[
y
]->
löe
[
°¨tx
]; s∞< 
íd
; sp++)

62 i‡(
•
->
ch
 !' ' || sp->
©å
 != 0) {

63 
maxx
 = 
•
;

64 i‡(
möx
 == -1)

65 
möx
 = 
•
 - 
wö
->
löes
[
y
]->
löe
;

66 
•
->
ch
 = ' ';

67 
•
->
©å
 = 0;

69 i‡(
möx
 != -1)

70 
	`__touchlöe
(
wö
, 
y
, 
möx
, 
maxx
 - wö->
löes
[y]->
löe
,

72 
°¨tx
 = 0;

74  (
OK
);

75 
	}
}

	@curses/clrtoeol.c

34 #i‚de‡
löt


35 
	gsccsid
[] = "@(#)clrtoeol.c 8.2 (Berkeley) 5/4/94";

38 
	~"cur£s.h
"

45 
	$w˛π€ﬁ
(
wö
)

46 
WINDOW
 *
wö
;

48 
möx
, 
x
, 
y
;

49 
__LDATA
 *
íd
, *
maxx
, *
•
;

51 
y
 = 
wö
->
cury
;

52 
x
 = 
wö
->
curx
;

53 i‡(
wö
->
löes
[
y
]->
Êags
 & 
__ISPASTEOL
) {

54 i‡(
y
 < 
wö
->
maxy
 - 1) {

55 
y
++;

56 
x
 = 0;

58  (
OK
);

60 
íd
 = &
wö
->
löes
[
y
]->
löe
[wö->
maxx
];

61 
möx
 = -1;

62 
maxx
 = &
wö
->
löes
[
y
]->
löe
[
x
];

63 
•
 = 
maxx
; s∞< 
íd
; sp++)

64 i‡(
•
->
ch
 !' ' || sp->
©å
 != 0) {

65 
maxx
 = 
•
;

66 i‡(
möx
 == -1)

67 
möx
 = 
•
 - 
wö
->
löes
[
y
]->
löe
;

68 
•
->
ch
 = ' ';

69 
•
->
©å
 = 0;

71 #ifde‡
CURSES_DEBUG


72 
	`__CTRACE
("CLRTOEOL: minx = %d, maxx = %d, firstch = %d,Üastch = %d\n",

73 
möx
, 
maxx
 - 
wö
->
löes
[
y
]->
löe
, *wö->löes[y]->
fú°chp
,

74 *
wö
->
löes
[
y
]->
œ°chp
);

77  (
	`__touchlöe
(
wö
, 
y
, 
x
, wö->
maxx
 - 1, 0));

78 
	}
}

	@curses/cr_put.c

34 #i‚de‡
löt


35 
	gsccsid
[] = "@(#)cr_put.c 8.3 (Berkeley) 5/4/94";

38 
	~<°rög.h
>

40 
	~"cur£s.h
"

42 
	#HARDTABS
 8

	)

52 
	$mvcur
(
ly
, 
lx
, 
y
, 
x
)

53 
ly
, 
lx
, 
y
, 
x
;

55  (
	`__mvcur
(
ly
, 
lx
, 
y
, 
x
, 0));

56 
	}
}

58 
fgŸo
();

59 
∂od
();

60 
∂odput
();

61 
èbcﬁ
();

63 
	goutcﬁ
, 
	gouéöe
, 
	gde°cﬁ
, 
	gde°löe
;

71 
	$__mvcur
(
ly
, 
lx
, 
y
, 
x
, 
ö_ª‰esh
)

72 
ly
, 
lx
, 
y
, 
x
, 
ö_ª‰esh
;

74 #ifde‡
CURSES_DEBUG


75 
	`__CTRACE
("mvcur: moving cursor from (%d, %d)Åo (%d, %d)\n",

76 
ly
, 
lx
, 
y
, 
x
);

78 
de°cﬁ
 = 
x
;

79 
de°löe
 = 
y
;

80 
outcﬁ
 = 
lx
;

81 
ouéöe
 = 
ly
;

82 
	`fgŸo
(
ö_ª‰esh
);

83  (
OK
);

84 
	}
}

87 
	$fgŸo
(
ö_ª‰esh
)

88 
ö_ª‰esh
;

90 
c
, 
l
;

91 *
cgp
;

93 i‡(
de°cﬁ
 >
COLS
) {

94 
de°löe
 +
de°cﬁ
 / 
COLS
;

95 
de°cﬁ
 %
COLS
;

97 i‡(
outcﬁ
 >
COLS
) {

98 
l
 = (
outcﬁ
 + 1Ë/ 
COLS
;

99 
ouéöe
 +
l
;

100 
outcﬁ
 %
COLS
;

101 i‡(
AM
 == 0) {

102 
l
 > 0) {

103 i‡(
__pÁ°
)

104 i‡(
CR
)

105 
	`çuts
(
CR
, 0, 
__˝utch¨
);

107 
	`putch¨
('\r');

108 i‡(
NL
)

109 
	`çuts
(
NL
, 0, 
__˝utch¨
);

111 
	`putch¨
('\n');

112 
l
--;

114 
outcﬁ
 = 0;

116 i‡(
ouéöe
 > 
LINES
 - 1) {

117 
de°löe
 -
ouéöe
 - (
LINES
 - 1);

118 
ouéöe
 = 
LINES
 - 1;

121 i‡(
de°löe
 >
LINES
) {

122 
l
 = 
de°löe
;

123 
de°löe
 = 
LINES
 - 1;

124 i‡(
ouéöe
 < 
LINES
 - 1) {

125 
c
 = 
de°cﬁ
;

126 i‡(
__pÁ°
 =0 && !
CA
)

127 
de°cﬁ
 = 0;

128 
	`fgŸo
(
ö_ª‰esh
);

129 
de°cﬁ
 = 
c
;

131 
l
 >
LINES
) {

149 i‡(
NL
 && 
__pÁ°
)

150 
	`çuts
(
NL
, 0, 
__˝utch¨
);

152 
	`putch¨
('\n');

153 
l
--;

154 i‡(
__pÁ°
 == 0)

155 
outcﬁ
 = 0;

158 i‡(
de°löe
 < 
ouéöe
 && !(
CA
 || 
UP
))

159 
de°löe
 = 
ouéöe
;

160 i‡(
CA
) {

161 
cgp
 = 
	`tgŸo
(
CM
, 
de°cﬁ
, 
de°löe
);

167 i‡(
outcﬁ
 !
COLS
 - 1 && 
	`∂od
(
	`°æí
(
cgp
), 
ö_ª‰esh
) > 0)

168 
	`∂od
(0, 
ö_ª‰esh
);

170 
	`çuts
(
cgp
, 0, 
__˝utch¨
);

172 
	`∂od
(0, 
ö_ª‰esh
);

173 
ouéöe
 = 
de°löe
;

174 
outcﬁ
 = 
de°cﬁ
;

175 
	}
}

183 
	g∂od˙t
, 
	g∂odÊg
;

186 
	$∂odput
(
c
)

187 
c
;

189 i‡(
∂odÊg
)

190 --
∂od˙t
;

192 
	`putch¨
(
c
);

193 
	}
}

196 
	$∂od
(
˙t
, 
ö_ª‰esh
)

197 
˙t
, 
ö_ª‰esh
;

199 
i
, 
j
, 
k
, 
soutcﬁ
, 
souéöe
;

201 
∂od˙t
 = 
∂odÊg
 = 
˙t
;

202 
soutcﬁ
 = 
outcﬁ
;

203 
souéöe
 = 
ouéöe
;

208 i‡(
HO
) {

214 i‡(
GT
)

215 
i
 = (
de°cﬁ
 / 
HARDTABS
) + (destcol % HARDTABS);

217 
i
 = 
de°cﬁ
;

220 i‡(
de°cﬁ
 >
outcﬁ
) {

221 
j
 = 
de°cﬁ
 / 
HARDTABS
 - 
outcﬁ
 / HARDTABS;

222 i‡(
GT
 && 
j
)

223 
j
 +
de°cﬁ
 % 
HARDTABS
;

225 
j
 = 
de°cﬁ
 - 
outcﬁ
;

228 i‡(
outcﬁ
 - 
de°cﬁ
 <
i
 && (
BS
 || 
BC
))

230 
i
 = 
j
 = 
outcﬁ
 - 
de°cﬁ
;

233 
j
 = 
i
 + 1;

236 
k
 = 
ouéöe
 - 
de°löe
;

237 i‡(
k
 < 0)

238 
k
 = -k;

239 
j
 +
k
;

242 i‡(
i
 + 
de°löe
 < 
j
 || (!
UP
 && de°löê< 
ouéöe
)) {

247 
	`çuts
(
HO
, 0, 
∂odput
);

248 
outcﬁ
 = 
ouéöe
 = 0;

249 } i‡(
LL
) {

254 
k
 = (
LINES
 - 1Ë- 
de°löe
;

255 i‡(
i
 + 
k
 + 2 < 
j
 && (k <0 || 
UP
)) {

256 
	`çuts
(
LL
, 0, 
∂odput
);

257 
outcﬁ
 = 0;

258 
ouéöe
 = 
LINES
 - 1;

263 i‡(!
UP
 && 
de°löe
 < 
ouéöe
)

265 i‡(
GT
)

266 
i
 = 
de°cﬁ
 % 
HARDTABS
 + destcol / HARDTABS;

268 
i
 = 
de°cﬁ
;

269 #ifde‡
nŸdef


270 i‡(
BT
 && 
outcﬁ
 > 
de°cﬁ
 &&

271 (
j
 = (((
outcﬁ
+7Ë& ~7Ë- 
de°cﬁ
 - 1) >> 3)) {

272 
j
 *(
k
 = 
	`°æí
(
BT
));

273 i‡((
k
 +(
de°cﬁ
&7)) > 4)

274 
j
 +8 - (
de°cﬁ
&7);

276 
j
 +
k
;

280 
j
 = 
outcﬁ
 - 
de°cﬁ
;

286 i‡((
NONL
 || !
__pÁ°
Ë&& 
ouéöe
 < 
de°löe
)

287 
d⁄t¸
;

293 i‡(
NC
 && 
ouéöe
 >
de°löe
)

294 
d⁄t¸
;

300 i‡(
j
 > 
i
 + 1 || 
outcﬁ
 > 
de°cﬁ
 && !
BS
 && !
BC
) {

305 i‡(
CR
)

306 
	`çuts
(
CR
, 0, 
∂odput
);

308 
	`∂odput
('\r');

309 i‡(
NC
) {

310 i‡(
NL
)

311 
	`çuts
(
NL
, 0, 
∂odput
);

313 
	`∂odput
('\n');

314 
ouéöe
++;

316 
outcﬁ
 = 0;

319 
d⁄t¸
: 
ouéöe
 < 
de°löe
) {

320 
ouéöe
++;

321 i‡(
NL
)

322 
	`çuts
(
NL
, 0, 
∂odput
);

324 
	`∂odput
('\n');

325 i‡(
∂od˙t
 < 0)

326 
out
;

327 i‡(
NONL
 || 
__pÁ°
 == 0)

328 
outcﬁ
 = 0;

330 i‡(
BT
)

331 
k
 = 
	`°æí
(
BT
);

332 
outcﬁ
 > 
de°cﬁ
) {

333 i‡(
∂od˙t
 < 0)

334 
out
;

335 #ifde‡
nŸdef


336 i‡(
BT
 && 
outcﬁ
 - 
de°cﬁ
 > 
k
 + 4) {

337 
	`çuts
(
BT
, 0, 
∂odput
);

338 
outcﬁ
--;

339 
outcﬁ
 &= ~7;

343 
outcﬁ
--;

344 i‡(
BC
)

345 
	`çuts
(
BC
, 0, 
∂odput
);

347 
	`∂odput
('\b');

349 
ouéöe
 > 
de°löe
) {

350 
ouéöe
--;

351 
	`çuts
(
UP
, 0, 
∂odput
);

352 i‡(
∂od˙t
 < 0)

353 
out
;

355 i‡(
GT
 && 
de°cﬁ
 - 
outcﬁ
 > 1) {

357 
i
 = 
	`èbcﬁ
(
outcﬁ
, 
HARDTABS
);

358 i‡(
i
 > 
de°cﬁ
)

360 i‡(
TA
)

361 
	`çuts
(
TA
, 0, 
∂odput
);

363 
	`∂odput
('\t');

364 
outcﬁ
 = 
i
;

366 i‡(
de°cﬁ
 - 
outcﬁ
 > 4 && 
i
 < 
COLS
 && (
BC
 || 
BS
)) {

367 i‡(
TA
)

368 
	`çuts
(
TA
, 0, 
∂odput
);

370 
	`∂odput
('\t');

371 
outcﬁ
 = 
i
;

372 
outcﬁ
 > 
de°cﬁ
) {

373 
outcﬁ
--;

374 i‡(
BC
)

375 
	`çuts
(
BC
, 0, 
∂odput
);

377 
	`∂odput
('\b');

381 
outcﬁ
 < 
de°cﬁ
) {

386 i‡(
ö_ª‰esh
)

387 i‡(
∂odÊg
)

388 
∂od˙t
--;

390 
i
 = 
curs¸
->
löes
[
ouéöe
]->
löe
[
outcﬁ
].
ch
;

391 i‡((
curs¸
->
löes
[
ouéöe
]->
löe
[
outcﬁ
].
©å


392 & 
__STANDOUT
) ==

393 (
curs¸
->
Êags
 & 
__WSTANDOUT
))

394 
	`putch¨
(
i
);

396 
n⁄des
;

399 
n⁄des
: i‡(
ND
)

400 
	`çuts
(
ND
, 0, 
∂odput
);

402 
	`∂odput
(' ');

403 
outcﬁ
++;

404 i‡(
∂od˙t
 < 0)

405 
out
;

408 
out
: i‡(
∂odÊg
) {

409 
outcﬁ
 = 
soutcﬁ
;

410 
ouéöe
 = 
souéöe
;

412  (
∂od˙t
);

413 
	}
}

421 
	$èbcﬁ
(
cﬁ
, 
ts
)

422 
cﬁ
, 
ts
;

424 
off£t
;

426 i‡(
cﬁ
 >
COLS
) {

427 
off£t
 = 
COLS
 * (
cﬁ
 / COLS);

428 
cﬁ
 -
off£t
;

430 
off£t
 = 0;

431  (
cﬁ
 + 
ts
 - (cﬁ %ÅsË+ 
off£t
);

432 
	}
}

	@curses/ctrace.c

34 #i‚de‡
löt


35 
	gsccsid
[] = "@(#)ctrace.c 8.2 (Berkeley) 10/5/93";

38 #ifde‡
CURSES_DEBUG


39 
	~<°dio.h
>

41 #ifde‡
__STDC__


42 
	~<°d¨g.h
>

44 
	~<v¨¨gs.h
>

47 #i‚de‡
TFILE


48 
	#TFILE
 "__cur£s.out"

	)

51 
FILE
 *
	gåa˚Â
;

54 #ifde‡
__STDC__


55 
	$__CTRACE
(c⁄° *
fmt
, ...)

57 
	$__CTRACE
(
fmt
, 
va_Æi°
)

58 *
fmt
;

59 
va_d˛


62 
va_li°
 
≠
;

63 #ifde‡
__STDC__


64 
	`va_°¨t
(
≠
, 
fmt
);

66 
	`va_°¨t
(
≠
);

68 i‡(
åa˚Â
 =
NULL
)

69 
åa˚Â
 = 
	`f›í
(
TFILE
, "w");

70 i‡(
åa˚Â
 =
NULL
)

72 ()
	`vÂrötf
(
åa˚Â
, 
fmt
, 
≠
);

73 
	`va_íd
(
≠
);

74 ()
	`fÊush
(
åa˚Â
);

75 
	}
}

	@curses/cur_hash.c

34 #i‚de‡
löt


35 
	gsccsid
[] = "@(#)cur_hash.c 8.1 (Berkeley) 6/4/93";

38 
	~<sys/ty≥s.h
>

45 
	$__hash
(
s
, 
Àn
)

46 *
s
;

47 
Àn
;

49 
h
, 
g
, 
i
;

51 
h
 = 0;

52 
i
 = 0;

53 
i
 < 
Àn
) {

54 
h
 = (h << 4Ë+ 
s
[
i
];

55 i‡(
g
 = 
h
 & 0xf0000000) {

56 
h
 = h ^ (
g
 >> 24);

57 
h
 = h ^ 
g
;

59 
i
++;

61  
h
;

62 
	}
}

	@curses/curses.c

34 #i‚de‡
löt


35 
	gsccsid
[] = "@(#)curses.c 8.3 (Berkeley) 5/4/94";

38 
	~"cur£s.h
"

41 
	g__echoô
 = 1;

42 
	g__pÁ°
;

43 
	g__øwmode
 = 0;

44 
	g__noqch
 = 0;

49 
	gAM
, 
	gBS
, 
	gCA
, 
	gDA
, 
	gEO
, 
	gHC
, 
	gIN
, 
	gMI
, 
	gMS
, 
	gNC
, 
	gNS
, 
	gOS
, 
	gPC
,

50 
	gUL
, 
	gXB
, 
	gXN
, 
	gXT
, 
	gXS
, 
	gXX
;

51 *
	gAL
, *
	gBC
, *
	gBT
, *
	gCD
, *
	gCE
, *
	gCL
, *
	gCM
, *
	gCR
, *
	gCS
, *
	gDC
, *
	gDL
,

52 *
	gDM
, *
	gDO
, *
	gED
, *
	gEI
, *
	gK0
, *
	gK1
, *
	gK2
, *
	gK3
, *
	gK4
, *
	gK5
, *
	gK6
,

53 *
	gK7
, *
	gK8
, *
	gK9
, *
	gHO
, *
	gIC
, *
	gIM
, *
	gIP
, *
	gKD
, *
	gKE
, *
	gKH
, *
	gKL
,

54 *
	gKR
, *
	gKS
, *
	gKU
, *
	gLL
, *
	gMA
, *
	gND
, *
	gNL
, *
	gRC
, *
	gSC
, *
	gSE
, *
	gSF
,

55 *
	gSO
, *
	gSR
, *
	gTA
, *
	gTE
, *
	gTI
, *
	gUC
, *
	gUE
, *
	gUP
, *
	gUS
, *
	gVB
, *
	gVS
,

56 *
	gVE
, *
	gÆ
, *
	gdl
, *
	gsf
, *
	g§
,

57 *
	gAL_PARM
, *
	gDL_PARM
, *
	gUP_PARM
, *
	gDOWN_PARM
, *
	gLEFT_PARM
,

58 *
	gRIGHT_PARM
;

66 
WINDOW
 *
	gcurs¸
;

67 
WINDOW
 *
	g°ds¸
;

68 
	gCOLS
;

69 
	gLINES
;

70 
	gMy_ãrm
 = 0;

71 *
	g__Def_ãrm
 = "unknown";

72 
	gGT
;

73 
	gNONL
;

74 
	gUPPERCASE
;

	@curses/curses.h

36 #i‚de‡
_CURSES_H_


37 
	#_CURSES_H_


	)

39 #ifde‡
_CURSES_PRIVATE


40 
	~"c⁄fig.h
"

43 
	~<sys/ty≥s.h
>

45 
	~<°dio.h
>

47 #ifde‡
_CURSES_PRIVATE


48 
	~"p‹t.h
"

57 #i‚de‡
_CURSES_PRIVATE


58 #i‚de‡
__˝lu•lus


59 
	#boﬁ
 

	)

61 
	#ªg
 

	)

63 #i‚de‡
TRUE


64 
	#TRUE
 (1)

	)

66 #i‚de‡
FALSE


67 
	#FALSE
 (0)

	)

70 
	#_puts
(
s
Ë
	`çuts
(s, 0, 
__˝utch¨
)

	)

71 
	#_putch¨
(
c
Ë
	`__˝utch¨
(c)

	)

74 
	#baudøã
(Ë(
	`cfgëo•ìd
(&
__ba£t
))

	)

75 
	#¸mode
(Ë
	`cbªak
()

	)

76 
	#îa£ch¨
(Ë(
__ba£t
.
c_cc
[
VERASE
])

	)

77 
	#kûlch¨
(Ë(
__ba£t
.
c_cc
[
VKILL
])

	)

78 
	#no¸mode
(Ë
	`nocbªak
()

	)

79 
	#o•ìd
 (
	`cfgëo•ìd
(&
__ba£t
))

	)

82 
GT
;

83 
NONL
;

84 
UPPERCASE
;

86 
My_ãrm
;

87 *
__Def_ãrm
;

90 
AM
, 
BS
, 
CA
, 
DA
, 
EO
, 
HC
, 
IN
, 
MI
, 
MS
, 
NC
, 
NS
, 
OS
,

91 
PC
, 
UL
, 
XB
, 
XN
, 
XT
, 
XS
, 
XX
;

92 *
AL
, *
BC
, *
BT
, *
CD
, *
CE
, *
CL
, *
CM
, *
CR
, *
CS
, *
DC
, *
DL
,

93 *
DM
, *
DO
, *
ED
, *
EI
, *
K0
, *
K1
, *
K2
, *
K3
, *
K4
, *
K5
, *
K6
,

94 *
K7
, *
K8
, *
K9
, *
HO
, *
IC
, *
IM
, *
IP
, *
KD
, *
KE
, *
KH
, *
KL
,

95 *
KR
, *
KS
, *
KU
, *
LL
, *
MA
, *
ND
, *
NL
, *
RC
, *
SC
, *
SE
, *
SF
,

96 *
SO
, *
SR
, *
TA
, *
TE
, *
TI
, *
UC
, *
UE
, *
UP
, *
US
, *
VB
, *
VS
,

97 *
VE
, *
Æ
, *
dl
, *
sf
, *
§
,

98 *
AL_PARM
, *
DL_PARM
, *
UP_PARM
, *
DOWN_PARM
, *
LEFT_PARM
,

99 *
RIGHT_PARM
;

104 
	#un˘æ
(
c
Ë
__un˘æ
[(cË& 0xff]

	)

105 
	#un˘æÀn
(
ch
Ë
__un˘æÀn
[(chË& 0xff]

	)

107 *
__un˘æ
[256];

108 
__un˘æÀn
[256];

121 
	mch
;

123 
	#__STANDOUT
 0x01

	)

124 
	m©å
;

125 } 
	t__LDATA
;

127 
	#__LDATASIZE
 ((
__LDATA
))

	)

130 
	#__ISDIRTY
 0x01

	)

131 
	#__ISPASTEOL
 0x02

	)

132 
	#__FORCEPAINT
 0x04

	)

133 
	mÊags
;

134 
	mhash
;

135 
size_t
 *
	mfú°chp
, *
	mœ°chp
;

136 
size_t
 
	mfú°ch
, 
	mœ°ch
;

137 
__LDATA
 *
	mlöe
;

138 } 
	t__LINE
;

140 
	s__wödow
 {

141 
__wödow
 *
	m√xç
, *
	m‹ig
;

142 
size_t
 
	mbegy
, 
	mbegx
;

143 
size_t
 
	mcury
, 
	mcurx
;

144 
size_t
 
	mmaxy
, 
	mmaxx
;

145 
	mch_off
;

146 
__LINE
 **
	mlöes
;

147 
__LINE
 *
	ml•a˚
;

148 
__LDATA
 *
	mw•a˚
;

150 
	#__ENDLINE
 0x001

	)

151 
	#__FLUSH
 0x002

	)

152 
	#__FULLWIN
 0x004

	)

153 
	#__IDLINE
 0x008

	)

154 
	#__SCROLLWIN
 0x010

	)

155 
	#__SCROLLOK
 0x020

	)

156 
	#__CLEAROK
 0x040

	)

157 
	#__WSTANDOUT
 0x080

	)

158 
	#__LEAVEOK
 0x100

	)

159 
	mÊags
;

160 } 
	tWINDOW
;

163 
WINDOW
 *
curs¸
;

164 
WINDOW
 *
°ds¸
;

166 
ãrmios
 
__‹ig_ãrmios
;

167 
ãrmios
 
__ba£t
;

168 
__tˇ˘i⁄
;

170 
COLS
;

171 
LINES
;

173 
	#ERR
 (0Ë

	)

174 
	#OK
 (1Ë

	)

177 
	#addbyãs
(
s
, 
n
Ë
	`__waddbyãs
(
°ds¸
, s,Ç, 0)

	)

178 
	#addch
(
ch
Ë
	`waddch
(
°ds¸
, ch)

	)

179 
	#addn°r
(
s
, 
n
Ë
	`waddn°r
(
°ds¸
, s,Ç)

	)

180 
	#add°r
(
s
Ë
	`__waddbyãs
(
°ds¸
, s, 
	`°æí
(s), 0)

	)

181 
	#˛ór
(Ë
	`w˛ór
(
°ds¸
)

	)

182 
	#˛πobŸ
(Ë
	`w˛πobŸ
(
°ds¸
)

	)

183 
	#˛π€ﬁ
(Ë
	`w˛π€ﬁ
(
°ds¸
)

	)

184 
	#dñch
(Ë
	`wdñch
(
°ds¸
)

	)

185 
	#dñëñn
(Ë
	`wdñëñn
(
°ds¸
)

	)

186 
	#îa£
(Ë
	`wîa£
(
°ds¸
)

	)

187 
	#gëch
(Ë
	`wgëch
(
°ds¸
)

	)

188 
	#gë°r
(
s
Ë
	`wgë°r
(
°ds¸
, s)

	)

189 
	#öch
(Ë
	`wöch
(
°ds¸
)

	)

190 
	#ösch
(
ch
Ë
	`wösch
(
°ds¸
, ch)

	)

191 
	#ö£π 
(Ë
	`wö£π 
(
°ds¸
)

	)

192 
	#move
(
y
, 
x
Ë
	`wmove
(
°ds¸
, y, x)

	)

193 
	#ª‰esh
(Ë
	`wª‰esh
(
°ds¸
)

	)

194 
	#°™díd
(Ë
	`w°™díd
(
°ds¸
)

	)

195 
	#°™dout
(Ë
	`w°™dout
(
°ds¸
)

	)

196 
	#waddbyãs
(
w
, 
s
, 
n
Ë
	`__waddbyãs
(w, s,Ç, 0)

	)

197 
	#wadd°r
(
w
, 
s
Ë
	`__waddbyãs
(w, s, 
	`°æí
(s), 0)

	)

200 
	#mvaddbyãs
(
y
, 
x
, 
s
, 
n
Ë
	`mvwaddbyãs
(
°ds¸
, y, x, s,Ç)

	)

201 
	#mvaddch
(
y
, 
x
, 
ch
Ë
	`mvwaddch
(
°ds¸
, y, x, ch)

	)

202 
	#mvaddn°r
(
y
, 
x
, 
s
, 
n
Ë
	`mvwaddn°r
(
°ds¸
, y, x, s,Ç)

	)

203 
	#mvadd°r
(
y
, 
x
, 
s
Ë
	`mvwadd°r
(
°ds¸
, y, x, s)

	)

204 
	#mvdñch
(
y
, 
x
Ë
	`mvwdñch
(
°ds¸
, y, x)

	)

205 
	#mvgëch
(
y
, 
x
Ë
	`mvwgëch
(
°ds¸
, y, x)

	)

206 
	#mvgë°r
(
y
, 
x
, 
s
Ë
	`mvwgë°r
(
°ds¸
, y, x, s)

	)

207 
	#mvöch
(
y
, 
x
Ë
	`mvwöch
(
°ds¸
, y, x)

	)

208 
	#mvösch
(
y
, 
x
, 
c
Ë
	`mvwösch
(
°ds¸
, y, x, c)

	)

209 
	#mvwaddbyãs
(
w
, 
y
, 
x
, 
s
, 
n
) \

210 (
	`wmove
(
w
, 
y
, 
x
Ë=
ERR
 ? ERR : 
	`__waddbyãs
(w, 
s
, 
n
, 0))

	)

211 
	#mvwaddch
(
w
, 
y
, 
x
, 
ch
) \

212 (
	`wmove
(
w
, 
y
, 
x
Ë=
ERR
 ? ERR : 
	`waddch
(w, 
ch
))

	)

213 
	#mvwaddn°r
(
w
, 
y
, 
x
, 
s
, 
n
) \

214 (
	`wmove
(
w
, 
y
, 
x
Ë=
ERR
 ? ERR : 
	`waddn°r
(w, 
s
, 
n
))

	)

215 
	#mvwadd°r
(
w
, 
y
, 
x
, 
s
) \

216 (
	`wmove
(
w
, 
y
, 
x
Ë=
ERR
 ? ERR : 
	`__waddbyãs
(w, 
s
, 
	`°æí
(s), 0))

	)

217 
	#mvwdñch
(
w
, 
y
, 
x
) \

218 (
	`wmove
(
w
, 
y
, 
x
Ë=
ERR
 ? ERR : 
	`wdñch
(w))

	)

219 
	#mvwgëch
(
w
, 
y
, 
x
) \

220 (
	`wmove
(
w
, 
y
, 
x
Ë=
ERR
 ? ERR : 
	`wgëch
(w))

	)

221 
	#mvwgë°r
(
w
, 
y
, 
x
, 
s
) \

222 (
	`wmove
(
w
, 
y
, 
x
Ë=
ERR
 ? ERR : 
	`wgë°r
(w, 
s
))

	)

223 
	#mvwöch
(
w
, 
y
, 
x
) \

224 (
	`wmove
(
w
, 
y
, 
x
Ë=
ERR
 ? ERR : 
	`wöch
(w))

	)

225 
	#mvwösch
(
w
, 
y
, 
x
, 
c
) \

226 (
	`wmove
(
w
, 
y
, 
x
Ë=
ERR
 ? ERR : 
	`wösch
(w, 
c
))

	)

229 
	#˛órok
(
w
, 
bf
) \

230 ((
bf
Ë? ((
w
)->
Êags
 |
__CLEAROK
Ë: ((w)->Êag†&~__CLEAROK))

	)

231 
	#Êushok
(
w
, 
bf
) \

232 ((
bf
Ë? ((
w
)->
Êags
 |
__FLUSH
Ë: ((w)->Êag†&~__FLUSH))

	)

233 
	#gëyx
(
w
, 
y
, 
x
) \

234 (
y
Ë(
w
)->
cury
, (
x
Ë(w)->
curx


	)

235 
	#Àaveok
(
w
, 
bf
) \

236 ((
bf
Ë? ((
w
)->
Êags
 |
__LEAVEOK
Ë: ((w)->Êag†&~__LEAVEOK))

	)

237 
	#s¸ﬁlok
(
w
, 
bf
) \

238 ((
bf
Ë? ((
w
)->
Êags
 |
__SCROLLOK
Ë: ((w)->Êag†&~__SCROLLOK))

	)

239 
	#wöch
(
w
) \

240 ((
w
)->
löes
[(w)->
cury
]->
löe
[(w)->
curx
].
ch
 & 0177)

	)

243 
box
();

244 
cbªak
();

245 
dñwö
();

246 
echo
();

247 
ídwö
();

248 *
fuŒ«me
();

249 *
gëˇp
();

250 
gëtmode
();

251 
idlok
();

252 
WINDOW
 *
öôs¸
();

253 *
l⁄g«me
();

254 
mvcur
();

255 
mv¥ötw
();

256 
mvsˇnw
();

257 
mvwö
();

258 
mvw¥ötw
();

259 
mvwsˇnw
();

260 
WINDOW
 *
√wwö
();

261 
∆
();

262 
nocbªak
();

263 
n€cho
();

264 
n⁄l
();

265 
n‹aw
();

266 
ovîœy
();

267 
ovîwrôe
();

268 
¥ötw
();

269 
øw
();

270 
ª£ây
();

271 
ßvëty
();

272 
sˇnw
();

273 
s¸ﬁl
();

274 
£âîm
();

275 
ssˇns
();

276 
WINDOW
 *
subwö
();

277 
su•ídwö
();

278 
touchlöe
();

279 
touchovîœp
();

280 
touchwö
();

281 
vw¥ötw
();

282 
vwsˇnw
();

283 
waddch
();

284 
waddn°r
();

285 
w˛ór
();

286 
w˛πobŸ
();

287 
w˛π€ﬁ
();

288 
wdñch
();

289 
wdñëñn
();

290 
wîa£
();

291 
wgëch
();

292 
wgë°r
();

293 
wösch
();

294 
wö£π 
();

295 
wmove
();

296 
w¥ötw
();

297 
wª‰esh
();

298 
wsˇnw
();

299 
w°™díd
();

300 
w°™dout
();

301 
vw¥ötw
();

304 
__˝utch¨
();

305 
__waddbyãs
();

308 #ifde‡
_CURSES_PRIVATE


309 
__CTRACE
();

310 
__hash
();

311 
__id_subwös
();

312 
__mvcur
();

313 
__ª°‹e_°›h™dÀr
();

314 
__£t_°›h™dÀr
();

315 
__£t_subwö
();

316 
__°¨twö
();

317 
__°›_sig«l_h™dÀr
();

318 
__swÊags
();

319 
__touchlöe
();

320 
__touchwö
();

321 *
__ts¸ﬁl
();

322 
__waddch
();

325 #i‚de‡
mö


326 
	#mö
(
a
,
b
Ë◊ < b ?á : b)

	)

328 #i‚de‡
max


329 
	#max
(
a
,
b
Ë◊ > b ?á : b)

	)

333 
__echoô
;

334 
__ídwö
;

335 
__pÁ°
;

336 
__øwmode
;

337 
__noqch
;

341 
tgëít
();

342 
tgënum
();

343 
tgëÊag
();

344 *
tgë°r
();

345 *
tgŸo
();

346 
çuts
();

	@curses/delch.c

34 #i‚de‡
löt


35 
	gsccsid
[] = "@(#)delch.c 8.2 (Berkeley) 5/4/94";

38 
	~<°rög.h
>

40 
	~"cur£s.h
"

47 
	$wdñch
(
wö
)

48 
WINDOW
 *
wö
;

50 
__LDATA
 *
íd
, *
ãmp1
, *
ãmp2
;

52 
íd
 = &
wö
->
löes
[wö->
cury
]->
löe
[wö->
maxx
 - 1];

53 
ãmp1
 = &
wö
->
löes
[wö->
cury
]->
löe
[wö->
curx
];

54 
ãmp2
 = 
ãmp1
 + 1;

55 
ãmp1
 < 
íd
) {

56 ()
	`mem˝y
(
ãmp1
, 
ãmp2
, (
__LDATA
));

57 
ãmp1
++, 
ãmp2
++;

59 
ãmp1
->
ch
 = ' ';

60 
ãmp1
->
©å
 = 0;

61 
	`__touchlöe
(
wö
, wö->
cury
, wö->
curx
, wö->
maxx
 - 1, 0);

62  (
OK
);

63 
	}
}

	@curses/deleteln.c

34 #i‚de‡
löt


35 
	gsccsid
[] = "@(#)deleteln.c 8.2 (Berkeley) 5/4/94";

38 
	~<°rög.h
>

40 
	~"cur£s.h
"

47 
	$wdñëñn
(
wö
)

48 
WINDOW
 *
wö
;

50 
y
, 
i
;

51 
__LINE
 *
ãmp
;

53 #ifde‡
CURSES_DEBUG


54 
	`__CTRACE
("dñëñn: (%0.2o)\n", 
wö
);

56 
ãmp
 = 
wö
->
löes
[wö->
cury
];

57 
y
 = 
wö
->
cury
; y < wö->
maxy
 - 1; y++) {

58 
wö
->
löes
[
y
]->
Êags
 &~
__ISPASTEOL
;

59 
wö
->
löes
[
y
 + 1]->
Êags
 &~
__ISPASTEOL
;

60 i‡(
wö
->
‹ig
 =
NULL
)

61 
wö
->
löes
[
y
] = win->lines[y + 1];

63 (Ë
	`mem˝y
(
wö
->
löes
[
y
]->
löe
,

64 
wö
->
löes
[
y
 + 1]->
löe
,

65 
wö
->
maxx
 * 
__LDATASIZE
);

66 
	`__touchlöe
(
wö
, 
y
, 0, wö->
maxx
 - 1, 0);

69 i‡(
wö
->
‹ig
 =
NULL
)

70 
wö
->
löes
[
y
] = 
ãmp
;

72 
ãmp
 = 
wö
->
löes
[
y
];

74 
i
 = 0; i < 
wö
->
maxx
; i++) {

75 
ãmp
->
löe
[
i
].
ch
 = ' ';

76 
ãmp
->
löe
[
i
].
©å
 = 0;

78 
	`__touchlöe
(
wö
, 
y
, 0, wö->
maxx
 - 1, 0);

79 i‡(
wö
->
‹ig
 =
NULL
)

80 
	`__id_subwös
(
wö
);

81  (
OK
);

82 
	}
}

	@curses/delwin.c

34 #i‚de‡
löt


35 
	gsccsid
[] = "@(#)delwin.c 8.2 (Berkeley) 5/4/94";

38 
	~<°dlib.h
>

40 
	~"cur£s.h
"

47 
	$dñwö
(
wö
)

48 
WINDOW
 *
wö
;

51 
WINDOW
 *
wp
, *
≈
;

53 i‡(
wö
->
‹ig
 =
NULL
) {

58 
	`‰ì
(
wö
->
l•a˚
);

59 
	`‰ì
(
wö
->
w•a˚
);

60 
	`‰ì
(
wö
->
löes
);

61 
wp
 = 
wö
->
√xç
;

62 
wp
 !
wö
) {

63 
≈
 = 
wp
->
√xç
;

64 
	`dñwö
(
wp
);

65 
wp
 = 
≈
;

74 
wp
 = 
wö
->
√xç
; wp->nextp != win; wp = wp->nextp)

76 
wp
->
√xç
 = 
wö
->nextp;

78 
	`‰ì
(
wö
);

79  (
OK
);

80 
	}
}

	@curses/erase.c

34 #i‚de‡
löt


35 
	gsccsid
[] = "@(#)erase.c 8.2 (Berkeley) 5/4/94";

38 
	~"cur£s.h
"

45 
	$wîa£
(
wö
)

46 
WINDOW
 *
wö
;

49 
möx
, 
y
;

50 
__LDATA
 *
•
, *
íd
, *
°¨t
, *
maxx
;

52 #ifde‡
CURSES_DEBUG


53 
	`__CTRACE
("wîa£: (%0.2o)\n", 
wö
);

55 
y
 = 0; y < 
wö
->
maxy
; y++) {

56 
möx
 = -1;

57 
°¨t
 = 
wö
->
löes
[
y
]->
löe
;

58 
íd
 = &
°¨t
[
wö
->
maxx
];

59 
•
 = 
°¨t
; s∞< 
íd
; sp++)

60 i‡(
•
->
ch
 !' ' || sp->
©å
 != 0) {

61 
maxx
 = 
•
;

62 i‡(
möx
 == -1)

63 
möx
 = 
•
 - 
°¨t
;

64 
•
->
ch
 = ' ';

65 
•
->
©å
 = 0;

67 i‡(
möx
 != -1)

68 
	`__touchlöe
(
wö
, 
y
, 
möx
, 
maxx
 - wö->
löes
[y]->
löe
,

71  (
OK
);

72 
	}
}

	@curses/fullname.c

34 #i‚de‡
löt


35 
	gsccsid
[] = "@(#)fullname.c 8.1 (Berkeley) 6/4/93";

44 
	$fuŒ«me
(
bp
, 
def
)

45 *
bp
, *
def
;

47 *
˝
;

49 *
def
 = '\0';

51 *
bp
 && *bp != ':') {

52 
˝
 = 
def
;

53 *
bp
 && *bp != ':' && *bp != '|')

54 *
˝
++ = *
bp
++;

55 *
˝
 = '\0';

56 i‡(*
bp
 == '|')

57 
bp
++;

59  (
def
);

60 
	}
}

	@curses/getch.c

34 #i‚de‡
löt


35 
	gsccsid
[] = "@(#)getch.c 8.2 (Berkeley) 5/4/94";

38 
	~"cur£s.h
"

45 
	$wgëch
(
wö
)

46 
WINDOW
 *
wö
;

48 
öp
, 
we£t
;

50 i‡(!(
wö
->
Êags
 & 
__SCROLLOK
Ë&& (wö->Êag†& 
__FULLWIN
)

51 && 
wö
->
curx
 =wö->
maxx
 - 1 && wö->
cury
 =wö->
maxy
 - 1)

52  (
ERR
);

53 #ifde‡
CURSES_DEBUG


54 
	`__CTRACE
("wgetch: __echoit = %d, __rawmode = %d\n",

55 
__echoô
, 
__øwmode
);

57 i‡(
__echoô
 && !
__øwmode
) {

58 
	`cbªak
();

59 
we£t
 = 1;

61 
we£t
 = 0;

63 
öp
 = 
	`gëch¨
();

64 #ifde‡
CURSES_DEBUG


65 
	`__CTRACE
("wgëch gŸ '%s'\n", 
	`un˘æ
(
öp
));

67 i‡(
__echoô
) {

68 
	`mvwaddch
(
curs¸
,

69 
wö
->
cury
 + wö->
begy
, wö->
curx
 + wö->
begx
, 
öp
);

70 
	`waddch
(
wö
, 
öp
);

72 i‡(
we£t
)

73 
	`nocbªak
();

74  (
öp
);

75 
	}
}

	@curses/getstr.c

34 #i‚de‡
löt


35 
	gsccsid
[] = "@(#)getstr.c 8.2 (Berkeley) 5/4/94";

38 
	~"cur£s.h
"

45 
	$wgë°r
(
wö
, 
°r
)

46 
WINDOW
 *
wö
;

47 *
°r
;

49 (*
°r
 = 
	`wgëch
(
wö
)Ë!
ERR
 && *str != '\n')

50 
°r
++;

51 i‡(*
°r
 =
ERR
) {

52 *
°r
 = '\0';

53  (
ERR
);

55 *
°r
 = '\0';

56  (
OK
);

57 
	}
}

	@curses/id_subwins.c

34 #i‚de‡
löt


35 
	gsccsid
[] = "@(#)id_subwins.c 8.2 (Berkeley) 5/4/94";

38 
	~"cur£s.h
"

45 
	$__id_subwös
(
‹ig
)

46 
WINDOW
 *
‹ig
;

48 
WINDOW
 *
wö
;

49 
oy
, 
ªÆy
, 
y
;

51 
ªÆy
 = 
‹ig
->
begy
 + orig->
cury
;

52 
wö
 = 
‹ig
->
√xç
; win != orig; win = win->nextp) {

57 i‡(
wö
->
begy
 + wö->
maxy
 <
ªÆy
)

60 
oy
 = 
‹ig
->
cury
;

61 
y
 = 
ªÆy
 - 
wö
->
begy
; y < wö->
maxy
; y++, 
oy
++)

62 
wö
->
löes
[
y
]->
löe
 =

63 &
‹ig
->
löes
[
oy
]->
löe
[
wö
->
ch_off
];

65 
	}
}

	@curses/idlok.c

34 #i‚de‡
löt


35 
	gsccsid
[] = "@(#)idlok.c 8.2 (Berkeley) 5/4/94";

38 
	~"cur£s.h
"

46 
	$idlok
(
wö
, 
bf
)

47 
WINDOW
 *
wö
;

48 
bf
;

50 i‡(
bf
)

51 
wö
->
Êags
 |
__IDLINE
;

53 
wö
->
Êags
 &~
__IDLINE
;

54 
	}
}

	@curses/initscr.c

34 #i‚de‡
löt


35 
	gsccsid
[] = "@(#)initscr.c 8.2 (Berkeley) 5/4/94";

38 
	~<sig«l.h
>

39 
	~<°dlib.h
>

41 
	~"cur£s.h
"

47 
WINDOW
 *

48 
	$öôs¸
()

50 *
•
;

52 #ifde‡
CURSES_DEBUG


53 
	`__CTRACE
("initscr\n");

55 
__echoô
 = 1;

56 
__pÁ°
 = 
__øwmode
 = 
__noqch
 = 0;

58 i‡(
	`gëtmode
(Ë=
ERR
)

59  (
NULL
);

65 i‡(
My_ãrm
 || (
•
 = 
	`gëív
("TERM")Ë=
NULL
)

66 
•
 = 
__Def_ãrm
;

67 i‡(
	`£âîm
(
•
Ë=
ERR
)

68  (
NULL
);

71 i‡(!
HO
 && !
CM
)

72  (
NULL
);

74 i‡(
curs¸
 !
NULL
)

75 
	`dñwö
(
curs¸
);

76 i‡((
curs¸
 = 
	`√wwö
(
LINES
, 
COLS
, 0, 0)Ë=
ERR
)

77  (
NULL
);

78 
	`˛órok
(
curs¸
, 1);

80 i‡(
°ds¸
 !
NULL
)

81 
	`dñwö
(
°ds¸
);

82 i‡((
°ds¸
 = 
	`√wwö
(
LINES
, 
COLS
, 0, 0)Ë=
ERR
) {

83 
	`dñwö
(
curs¸
);

84  (
NULL
);

87 
	`__£t_°›h™dÀr
();

89 #ifde‡
CURSES_DEBUG


90 
	`__CTRACE
("öôs¸: LINES = %d, COLS = %d\n", 
LINES
, 
COLS
);

92 
	`__°¨twö
();

94  (
°ds¸
);

95 
	}
}

	@curses/insch.c

34 #i‚de‡
löt


35 
	gsccsid
[] = "@(#)insch.c 8.2 (Berkeley) 5/4/94";

38 
	~<°rög.h
>

40 
	~"cur£s.h
"

47 
	$wösch
(
wö
, 
ch
)

48 
WINDOW
 *
wö
;

49 
ch
;

52 
__LDATA
 *
íd
, *
ãmp1
, *
ãmp2
;

54 
íd
 = &
wö
->
löes
[wö->
cury
]->
löe
[wö->
curx
];

55 
ãmp1
 = &
wö
->
löes
[wö->
cury
]->
löe
[wö->
maxx
 - 1];

56 
ãmp2
 = 
ãmp1
 - 1;

57 
ãmp1
 > 
íd
) {

58 ()
	`mem˝y
(
ãmp1
, 
ãmp2
, (
__LDATA
));

59 
ãmp1
--, 
ãmp2
--;

61 
ãmp1
->
ch
 = ch;

62 
ãmp1
->
©å
 &~
__STANDOUT
;

63 
	`__touchlöe
(
wö
, wö->
cury
, wö->
curx
, wö->
maxx
 - 1, 0);

64 i‡(
wö
->
cury
 =
LINES
 - 1 &&

65 (
wö
->
löes
[
LINES
 - 1]->
löe
[
COLS
 - 1].
ch
 != ' ' ||

66 
wö
->
löes
[
LINES
 -1]->
löe
[
COLS
 - 1].
©å
 != 0))

67 i‡(
wö
->
Êags
 & 
__SCROLLOK
) {

68 
	`wª‰esh
(
wö
);

69 
	`s¸ﬁl
(
wö
);

70 
wö
->
cury
--;

72  (
ERR
);

73  (
OK
);

74 
	}
}

	@curses/insertln.c

34 #i‚de‡
löt


35 
	gsccsid
[] = "@(#)insertln.c 8.2 (Berkeley) 5/4/94";

38 
	~<°rög.h
>

40 
	~"cur£s.h
"

47 
	$wö£π 
(
wö
)

48 
WINDOW
 *
wö
;

51 
y
, 
i
;

52 
__LINE
 *
ãmp
;

54 #ifde‡
CURSES_DEBUG


55 
	`__CTRACE
("ö£π : (%0.2o)\n", 
wö
);

57 i‡(
wö
->
‹ig
 =
NULL
)

58 
ãmp
 = 
wö
->
löes
[wö->
maxy
 - 1];

59 
y
 = 
wö
->
maxy
 - 1; y > wö->
cury
; --y) {

60 
wö
->
löes
[
y
]->
Êags
 &~
__ISPASTEOL
;

61 
wö
->
löes
[
y
 - 1]->
Êags
 &~
__ISPASTEOL
;

62 i‡(
wö
->
‹ig
 =
NULL
)

63 
wö
->
löes
[
y
] = win->lines[y - 1];

65 ()
	`mem˝y
(
wö
->
löes
[
y
]->
löe
,

66 
wö
->
löes
[
y
 - 1]->
löe
,

67 
wö
->
maxx
 * 
__LDATASIZE
);

68 
	`__touchlöe
(
wö
, 
y
, 0, wö->
maxx
 - 1, 0);

70 i‡(
wö
->
‹ig
 =
NULL
)

71 
wö
->
löes
[
y
] = 
ãmp
;

73 
ãmp
 = 
wö
->
löes
[
y
];

74 
i
 = 0; i < 
wö
->
maxx
; i++) {

75 
ãmp
->
löe
[
i
].
ch
 = ' ';

76 
ãmp
->
löe
[
i
].
©å
 = 0;

78 
	`__touchlöe
(
wö
, 
y
, 0, wö->
maxx
 - 1, 0);

79 i‡(
wö
->
‹ig
 =
NULL
)

80 
	`__id_subwös
(
wö
);

81  (
OK
);

82 
	}
}

	@curses/longname.c

34 #i‚de‡
löt


35 
	gsccsid
[] = "@(#)longname.c 8.1 (Berkeley) 6/4/93";

43 
	$l⁄g«me
(
bp
, 
def
)

44 *
bp
, *
def
;

46 *
˝
;

48 *
bp
 && *bp != ':' && *bp != '|')

49 
bp
++;

50 i‡(*
bp
 == '|') {

51 
˝
 = 
def
, ++
bp
; *bp && *bp != ':' && *bp != '|';)

52 *
˝
++ = *
bp
++;

53 *
˝
 = '\0';

55  (
def
);

56 
	}
}

	@curses/move.c

34 #i‚de‡
löt


35 
	gsccsid
[] = "@(#)move.c 8.2 (Berkeley) 5/4/94";

38 
	~"cur£s.h
"

45 
	$wmove
(
wö
, 
y
, 
x
)

46 
WINDOW
 *
wö
;

47 
y
, 
x
;

50 #ifde‡
CURSES_DEBUG


51 
	`__CTRACE
("wmove: (%d, %d)\n", 
y
, 
x
);

53 i‡(
x
 < 0 || 
y
 < 0)

54  (
ERR
);

55 i‡(
x
 >
wö
->
maxx
 || 
y
 >wö->
maxy
)

56  (
ERR
);

57 
wö
->
curx
 = 
x
;

58 
wö
->
löes
[wö->
cury
]->
Êags
 &~
__ISPASTEOL
;

59 
wö
->
cury
 = 
y
;

60 
wö
->
löes
[
y
]->
Êags
 &~
__ISPASTEOL
;

61  (
OK
);

62 
	}
}

	@curses/mvwin.c

34 #i‚de‡
löt


35 
	gsccsid
[] = "@(#)mvwin.c 8.2 (Berkeley) 5/4/94";

38 
	~"cur£s.h
"

45 
	$mvwö
(
wö
, 
by
, 
bx
)

46 
WINDOW
 *
wö
;

47 
by
, 
bx
;

49 
WINDOW
 *
‹ig
;

50 
dy
, 
dx
;

52 i‡(
by
 + 
wö
->
maxy
 > 
LINES
 || 
bx
 + wö->
maxx
 > 
COLS
)

53  (
ERR
);

54 
dy
 = 
by
 - 
wö
->
begy
;

55 
dx
 = 
bx
 - 
wö
->
begx
;

56 
‹ig
 = 
wö
->orig;

57 i‡(
‹ig
 =
NULL
) {

58 
‹ig
 = 
wö
;

60 
wö
->
begy
 +
dy
;

61 
wö
->
begx
 +
dx
;

62 
	`__swÊags
(
wö
);

63 
wö
 = wö->
√xç
;

64 } 
wö
 !
‹ig
);

66 i‡(
by
 < 
‹ig
->
begy
 || 
wö
->
maxy
 + 
dy
 > orig->maxy)

67  (
ERR
);

68 i‡(
bx
 < 
‹ig
->
begx
 || 
wö
->
maxx
 + 
dx
 > orig->maxx)

69  (
ERR
);

70 
wö
->
begy
 = 
by
;

71 
wö
->
begx
 = 
bx
;

72 
	`__swÊags
(
wö
);

73 
	`__£t_subwö
(
‹ig
, 
wö
);

75 
	`__touchwö
(
wö
);

76  (
OK
);

77 
	}
}

	@curses/newwin.c

34 #i‚de‡
löt


35 
	gsccsid
[] = "@(#)newwin.c 8.3 (Berkeley) 7/27/94";

38 
	~<°dlib.h
>

40 
	~"cur£s.h
"

42 #unde‡
∆


44 
WINDOW
 *
__makíew
();

46 
__£t_subwö
();

52 
WINDOW
 *

53 
	$√wwö
(
∆
, 
nc
, 
by
, 
bx
)

54 
∆
, 
nc
, 
by
, 
bx
;

56 
WINDOW
 *
wö
;

57 
__LINE
 *
Õ
;

58 
i
, 
j
;

59 
__LDATA
 *
•
;

61 i‡(
∆
 == 0)

62 
∆
 = 
LINES
 - 
by
;

63 i‡(
nc
 == 0)

64 
nc
 = 
COLS
 - 
bx
;

66 i‡((
wö
 = 
	`__makíew
(
∆
, 
nc
, 
by
, 
bx
, 0)Ë=
NULL
)

67  (
NULL
);

69 
wö
->
√xç
 = win;

70 
wö
->
ch_off
 = 0;

71 
wö
->
‹ig
 = 
NULL
;

73 #ifde‡
CURSES_DEBUG


74 
	`__CTRACE
("√wwö: wö->ch_of‡%d\n", 
wö
->
ch_off
);

77 
i
 = 0; i < 
∆
; i++) {

78 
Õ
 = 
wö
->
löes
[
i
];

79 
Õ
->
Êags
 = 0;

80 
•
 = 
Õ
->
löe
, 
j
 = 0; j < 
nc
; j++, sp++) {

81 
•
->
ch
 = ' ';

82 
•
->
©å
 = 0;

84 
Õ
->
hash
 = 
	`__hash
((*ËÕ->
löe
, 
nc
 * 
__LDATASIZE
);

86  (
wö
);

87 
	}
}

89 
WINDOW
 *

90 
	$subwö
(
‹ig
, 
∆
, 
nc
, 
by
, 
bx
)

91 
WINDOW
 *
‹ig
;

92 
by
, 
bx
, 
∆
, 
nc
;

94 
i
;

95 
__LINE
 *
Õ
;

96 
WINDOW
 *
wö
;

99 #ifdef 
CURSES_DEBUG


100 
	`__CTRACE
("subwö: (%0.2o, %d, %d, %d, %d)\n", 
‹ig
, 
∆
, 
nc
, 
by
, 
bx
);

102 i‡(
by
 < 
‹ig
->
begy
 || 
bx
 < orig->
begx


103 || 
by
 + 
∆
 > 
‹ig
->
maxy
 + orig->
begy


104 || 
bx
 + 
nc
 > 
‹ig
->
maxx
 + orig->
begx
)

105  (
NULL
);

106 i‡(
∆
 == 0)

107 
∆
 = 
‹ig
->
maxy
 + orig->
begy
 - 
by
;

108 i‡(
nc
 == 0)

109 
nc
 = 
‹ig
->
maxx
 + orig->
begx
 - 
bx
;

110 i‡((
wö
 = 
	`__makíew
(
∆
, 
nc
, 
by
, 
bx
, 1)Ë=
NULL
)

111  (
NULL
);

112 
wö
->
√xç
 = 
‹ig
->nextp;

113 
‹ig
->
√xç
 = 
wö
;

114 
wö
->
‹ig
 = orig;

117 
Õ
 = 
wö
->
l•a˚
, 
i
 = 0; i < wö->
maxy
; i++,Üp++)

118 
Õ
->
Êags
 = 0;

119 
	`__£t_subwö
(
‹ig
, 
wö
);

120  (
wö
);

121 
	}
}

127 
	$__£t_subwö
(
‹ig
, 
wö
)

128 
WINDOW
 *
‹ig
, *
wö
;

130 
i
;

131 
__LINE
 *
Õ
, *
ﬁp
;

133 
wö
->
ch_off
 = wö->
begx
 - 
‹ig
->begx;

135 
Õ
 = 
wö
->
l•a˚
, 
i
 = 0; i < wö->
maxy
; i++,Üp++) {

136 
wö
->
löes
[
i
] = 
Õ
;

137 
ﬁp
 = 
‹ig
->
löes
[
i
 + 
wö
->
begy
];

138 
Õ
->
löe
 = &
ﬁp
->löe[
wö
->
begx
];

139 
Õ
->
fú°chp
 = &
ﬁp
->
fú°ch
;

140 
Õ
->
œ°chp
 = &
ﬁp
->
œ°ch
;

141 
Õ
->
hash
 = 
	`__hash
((*ËÕ->
löe
, 
wö
->
maxx
 * 
__LDATASIZE
);

144 #ifde‡
CURSES_DEBUG


145 
	`__CTRACE
("__£t_subwö: wö->ch_of‡%d\n", 
wö
->
ch_off
);

147 
	}
}

153 
WINDOW
 *

154 
	$__makíew
(
∆
, 
nc
, 
by
, 
bx
, 
sub
)

155 
by
, 
bx
, 
∆
, 
nc
;

156 
sub
;

158 
WINDOW
 *
wö
;

159 
__LINE
 *
Õ
;

160 
i
;

163 #ifdef 
CURSES_DEBUG


164 
	`__CTRACE
("makíew: (%d, %d, %d, %d)\n", 
∆
, 
nc
, 
by
, 
bx
);

166 i‡((
wö
 = 
	`mÆloc
((*wö))Ë=
NULL
)

167  (
NULL
);

168 #ifde‡
CURSES_DEBUG


169 
	`__CTRACE
("makíew:Ç»%d\n", 
∆
);

175 i‡((
wö
->
löes
 = 
	`mÆloc
 (
∆
 * (
__LINE
 *))Ë=
NULL
) {

176 
	`‰ì
(
wö
);

177  
NULL
;

179 i‡((
wö
->
l•a˚
 = 
	`mÆloc
 (
∆
 * (
__LINE
))Ë=
NULL
) {

180 
	`‰ì
 (
wö
);

181 
	`‰ì
 (
wö
->
löes
);

182  
NULL
;

186 i‡(!
sub
) {

190 i‡((
wö
->
w•a˚
 =

191 
	`mÆloc
(
nc
 * 
∆
 * (
__LDATA
))Ë=
NULL
) {

192 
	`‰ì
(
wö
->
löes
);

193 
	`‰ì
(
wö
->
l•a˚
);

194 
	`‰ì
(
wö
);

195  
NULL
;

202 
Õ
 = 
wö
->
l•a˚
, 
i
 = 0; i < 
∆
; i++,Üp++) {

203 
wö
->
löes
[
i
] = 
Õ
;

204 
Õ
->
löe
 = &
wö
->
w•a˚
[
i
 * 
nc
];

205 
Õ
->
fú°chp
 = &Õ->
fú°ch
;

206 
Õ
->
œ°chp
 = &Õ->
œ°ch
;

207 
Õ
->
fú°ch
 = 0;

208 
Õ
->
œ°ch
 = 0;

211 #ifde‡
CURSES_DEBUG


212 
	`__CTRACE
("makíew:Ç¯%d\n", 
nc
);

214 
wö
->
cury
 = wö->
curx
 = 0;

215 
wö
->
maxy
 = 
∆
;

216 
wö
->
maxx
 = 
nc
;

218 
wö
->
begy
 = 
by
;

219 
wö
->
begx
 = 
bx
;

220 
wö
->
Êags
 = 0;

221 
	`__swÊags
(
wö
);

222 #ifde‡
CURSES_DEBUG


223 
	`__CTRACE
("makíew: wö->Êag†%0.2o\n", 
wö
->
Êags
);

224 
	`__CTRACE
("makíew: wö->maxy = %d\n", 
wö
->
maxy
);

225 
	`__CTRACE
("makíew: wö->maxx = %d\n", 
wö
->
maxx
);

226 
	`__CTRACE
("makíew: wö->begy = %d\n", 
wö
->
begy
);

227 
	`__CTRACE
("makíew: wö->begx = %d\n", 
wö
->
begx
);

229  (
wö
);

230 
	}
}

233 
	$__swÊags
(
wö
)

234 
WINDOW
 *
wö
;

236 
wö
->
Êags
 &~(
__ENDLINE
 | 
__FULLWIN
 | 
__SCROLLWIN
 | 
__LEAVEOK
);

237 i‡(
wö
->
begx
 + wö->
maxx
 =
COLS
) {

238 
wö
->
Êags
 |
__ENDLINE
;

239 i‡(
wö
->
begx
 =0 && wö->
maxy
 =
LINES
 && wö->
begy
 == 0)

240 
wö
->
Êags
 |
__FULLWIN
;

241 i‡(
wö
->
begy
 + wö->
maxy
 =
LINES
)

242 
wö
->
Êags
 |
__SCROLLWIN
;

244 
	}
}

	@curses/overlay.c

34 #i‚de‡
löt


35 
	gsccsid
[] = "@(#)overlay.c 8.2 (Berkeley) 5/4/94";

38 
	~<˘y≥.h
>

40 
	~"cur£s.h
"

47 
	$ovîœy
(
wö1
, 
wö2
)

48 
WINDOW
 *
wö1
, *
wö2
;

51 
x
, 
y
, 
y1
, 
y2
, 
ídy
, 
ídx
, 
°¨ty
, 
°¨tx
;

52 
__LDATA
 *
•
, *
íd
;

54 #ifde‡
CURSES_DEBUG


55 
	`__CTRACE
("ovîœy: (%0.2o, %0.2o);\n", 
wö1
, 
wö2
);

57 
°¨ty
 = 
	`max
(
wö1
->
begy
, 
wö2
->begy);

58 
°¨tx
 = 
	`max
(
wö1
->
begx
, 
wö2
->begx);

59 
ídy
 = 
	`mö
(
wö1
->
maxy
 + wö1->
begy
, 
wö2
->maxy + wö2->
begx
);

60 
ídx
 = 
	`mö
(
wö1
->
maxx
 + wö1->
begx
, 
wö2
->maxx + win2->begx);

61 #ifde‡
CURSES_DEBUG


62 
	`__CTRACE
("overlay: from (%d,%d)Åo (%d,%d)\n",

63 
°¨ty
, 
°¨tx
, 
ídy
, 
ídx
);

65 i‡(
°¨ty
 >
ídy
 || 
°¨tx
 >
ídx
)

66  (
OK
);

67 
y1
 = 
°¨ty
 - 
wö1
->
begy
;

68 
y2
 = 
°¨ty
 - 
wö2
->
begy
;

69 
y
 = 
°¨ty
; y < 
ídy
; y++, 
y1
++, 
y2
++) {

70 
íd
 = &
wö1
->
löes
[
y1
]->
löe
[
ídx
 - wö1->
begx
];

71 
x
 = 
°¨tx
 - 
wö2
->
begx
;

72 
•
 = &
wö1
->
löes
[
y1
]->
löe
[
°¨tx
 - wö1->
begx
];

73 
•
 < 
íd
; sp++) {

74 i‡(!
	`is•a˚
(
•
->
ch
)) {

75 
	`wmove
(
wö2
, 
y2
, 
x
);

76 
	`__waddch
(
wö2
, 
•
);

78 
x
++;

81  (
OK
);

82 
	}
}

	@curses/overwrite.c

34 #i‚de‡
löt


35 
	gsccsid
[] = "@(#)overwrite.c 8.2 (Berkeley) 5/4/94";

38 
	~<˘y≥.h
>

39 
	~<°rög.h
>

41 
	~"cur£s.h
"

48 
	$ovîwrôe
(
wö1
, 
wö2
)

49 
WINDOW
 *
wö1
, *
wö2
;

51 
x
, 
y
, 
ídy
, 
ídx
, 
°¨ty
, 
°¨tx
;

53 #ifde‡
CURSES_DEBUG


54 
	`__CTRACE
("ovîwrôe: (%0.2o, %0.2o);\n", 
wö1
, 
wö2
);

56 
°¨ty
 = 
	`max
(
wö1
->
begy
, 
wö2
->begy);

57 
°¨tx
 = 
	`max
(
wö1
->
begx
, 
wö2
->begx);

58 
ídy
 = 
	`mö
(
wö1
->
maxy
 + wö1->
begy
, 
wö2
->maxy + wö2->
begx
);

59 
ídx
 = 
	`mö
(
wö1
->
maxx
 + wö1->
begx
, 
wö2
->maxx + win2->begx);

60 i‡(
°¨ty
 >
ídy
 || 
°¨tx
 >
ídx
)

61  (
OK
);

62 #ifde‡
CURSES_DEBUG


63 
	`__CTRACE
("overwrite: from (%d, %d)Åo (%d, %d)\n",

64 
°¨ty
, 
°¨tx
, 
ídy
, 
ídx
);

66 
x
 = 
ídx
 - 
°¨tx
;

67 
y
 = 
°¨ty
; y < 
ídy
; y++) {

68 ()
	`mem˝y
(

69 &
wö2
->
löes
[
y
 - wö2->
begy
]->
löe
[
°¨tx
 - wö2->
begx
],

70 &
wö1
->
löes
[
y
 - wö1->
begy
]->
löe
[
°¨tx
 - wö1->
begx
],

71 
x
 * 
__LDATASIZE
);

72 
	`__touchlöe
(
wö2
, 
y
, 
°¨tx
 - wö2->
begx
, 
ídx
 - win2->begx,

75  (
OK
);

76 
	}
}

	@curses/putchar.c

34 #i‚de‡
löt


35 
	gsccsid
[] = "@(#)putchar.c 8.2 (Berkeley) 5/4/94";

38 
	~"cur£s.h
"

41 
	$__˝utch¨
(
ch
)

42 
ch
;

45 #ifde‡
CURSES_DEBUG


46 
	`__CTRACE
("__˝utch¨: %s\n", 
	`un˘æ
(
ch
));

48 ()
	`putch¨
(
ch
);

49 
	}
}

	@curses/refresh.c

34 #i‚de‡
löt


35 
	gsccsid
[] = "@(#)refresh.c 8.7 (Berkeley) 8/13/94";

38 
	~<°rög.h
>

40 
	~"cur£s.h
"

42 
	gcurwö
;

43 
	gly
, 
	glx
;

45 
domvcur
();

46 
makech
();

47 
quickch
();

48 
s¸ﬁ 
();

56 
	$wª‰esh
(
wö
)

57 
WINDOW
 *
wö
;

59 
__LINE
 *
wÕ
;

60 
ªtvÆ
;

61 
wy
;

62 
dnum
;

65 
ly
 = 
curs¸
->
cury
;

66 
lx
 = 
curs¸
->
curx
;

67 
wy
 = 0;

68 
curwö
 = (
wö
 =
curs¸
);

70 i‡(!
curwö
)

71 
wy
 = 0; wy < 
wö
->
maxy
; wy++) {

72 
wÕ
 = 
wö
->
löes
[
wy
];

73 i‡(
wÕ
->
Êags
 & 
__ISDIRTY
)

74 
wÕ
->
hash
 = 
	`__hash
((*)wÕ->
löe
,

75 
wö
->
maxx
 * 
__LDATASIZE
);

78 i‡(
wö
->
Êags
 & 
__CLEAROK
 || 
curs¸
->Êag†& __CLEAROK || 
curwö
) {

79 i‡((
wö
->
Êags
 & 
__FULLWIN
Ë|| 
curs¸
->Êag†& 
__CLEAROK
) {

80 
	`çuts
(
CL
, 0, 
__˝utch¨
);

81 
ly
 = 0;

82 
lx
 = 0;

83 i‡(!
curwö
) {

84 
curs¸
->
Êags
 &~
__CLEAROK
;

85 
curs¸
->
cury
 = 0;

86 
curs¸
->
curx
 = 0;

87 
	`wîa£
(
curs¸
);

89 
	`__touchwö
(
wö
);

91 
wö
->
Êags
 &~
__CLEAROK
;

93 i‡(!
CA
) {

94 i‡(
wö
->
curx
 != 0)

95 
	`putch¨
('\n');

96 i‡(!
curwö
)

97 
	`wîa£
(
curs¸
);

99 #ifde‡
CURSES_DEBUG


100 
	`__CTRACE
("wª‰esh: (%0.2o): curwö = %d\n", 
wö
, 
curwö
);

101 
	`__CTRACE
("wrefresh: \tfirstch\tlastch\n");

104 #i‚de‡
NOQCH


105 i‡((
wö
->
Êags
 & 
__FULLWIN
Ë&& !
curwö
) {

110 
wy
 = 0, 
dnum
 = 0; wy < 
wö
->
maxy
; wy++)

111 i‡(
wö
->
löes
[
wy
]->
Êags
 & (
__ISDIRTY
 | 
__FORCEPAINT
))

112 
dnum
++;

113 i‡(!
__noqch
 && 
dnum
 > (Ë
wö
->
maxy
 / 4)

114 
	`quickch
(
wö
);

118 #ifde‡
CURSES_DEBUG


119 { 
i
, 
j
;

120 
	`__CTRACE
("#####################################\n");

121 
i
 = 0; i < 
curs¸
->
maxy
; i++) {

122 
	`__CTRACE
("C: %d:", 
i
);

123 
	`__CTRACE
(" 0x%x \n", 
curs¸
->
löes
[
i
]->
hash
);

124 
j
 = 0; j < 
curs¸
->
maxx
; j++)

125 
	`__CTRACE
("%c",

126 
curs¸
->
löes
[
i
]->
löe
[
j
].
ch
);

127 
	`__CTRACE
("\n");

128 
j
 = 0; j < 
curs¸
->
maxx
; j++)

129 
	`__CTRACE
("%x",

130 
curs¸
->
löes
[
i
]->
löe
[
j
].
©å
);

131 
	`__CTRACE
("\n");

132 
	`__CTRACE
("W: %d:", 
i
);

133 
	`__CTRACE
(" 0x%x \n", 
wö
->
löes
[
i
]->
hash
);

134 
	`__CTRACE
(" 0x%x ", 
wö
->
löes
[
i
]->
Êags
);

135 
j
 = 0; j < 
wö
->
maxx
; j++)

136 
	`__CTRACE
("%c",

137 
wö
->
löes
[
i
]->
löe
[
j
].
ch
);

138 
	`__CTRACE
("\n");

139 
j
 = 0; j < 
wö
->
maxx
; j++)

140 
	`__CTRACE
("%x",

141 
wö
->
löes
[
i
]->
löe
[
j
].
©å
);

142 
	`__CTRACE
("\n");

147 
wy
 = 0; wy < 
wö
->
maxy
; wy++) {

148 #ifde‡
CURSES_DEBUG


149 
	`__CTRACE
("%d\t%d\t%d\n",

150 
wy
, *
wö
->
löes
[wy]->
fú°chp
, *wö->löes[wy]->
œ°chp
);

152 i‡(!
curwö
)

153 
curs¸
->
löes
[
wy
]->
hash
 = 
wö
->lines[wy]->hash;

154 i‡(
wö
->
löes
[
wy
]->
Êags
 & (
__ISDIRTY
 | 
__FORCEPAINT
)) {

155 i‡(
	`makech
(
wö
, 
wy
Ë=
ERR
)

156  (
ERR
);

158 i‡(*
wö
->
löes
[
wy
]->
fú°chp
 >wö->
ch_off
)

159 *
wö
->
löes
[
wy
]->
fú°chp
 = wö->
maxx
 +

160 
wö
->
ch_off
;

161 i‡(*
wö
->
löes
[
wy
]->
œ°chp
 < wö->
maxx
 +

162 
wö
->
ch_off
)

163 *
wö
->
löes
[
wy
]->
œ°chp
 = wö->
ch_off
;

164 i‡(*
wö
->
löes
[
wy
]->
œ°chp
 <

165 *
wö
->
löes
[
wy
]->
fú°chp
) {

166 #ifde‡
CURSES_DEBUG


167 
	`__CTRACE
("wª‰esh:Üöê%dÇŸdúty \n", 
wy
);

169 
wö
->
löes
[
wy
]->
Êags
 &~
__ISDIRTY
;

174 #ifde‡
CURSES_DEBUG


175 
	`__CTRACE
("\t%d\t%d\n", *
wö
->
löes
[
wy
]->
fú°chp
,

176 *
wö
->
löes
[
wy
]->
œ°chp
);

180 #ifde‡
CURSES_DEBUG


181 
	`__CTRACE
("ª‰esh:Üy=%d,Üx=%d\n", 
ly
, 
lx
);

184 i‡(
wö
 =
curs¸
)

185 
	`domvcur
(
ly
, 
lx
, 
wö
->
cury
, wö->
curx
);

187 i‡(
wö
->
Êags
 & 
__LEAVEOK
) {

188 
curs¸
->
cury
 = 
ly
;

189 
curs¸
->
curx
 = 
lx
;

190 
ly
 -
wö
->
begy
;

191 
lx
 -
wö
->
begx
;

192 i‡(
ly
 >0 &&Üy < 
wö
->
maxy
 && 
lx
 >= 0 &&

193 
lx
 < 
wö
->
maxx
) {

194 
wö
->
cury
 = 
ly
;

195 
wö
->
curx
 = 
lx
;

197 
wö
->
cury
 = wö->
curx
 = 0;

199 
	`domvcur
(
ly
, 
lx
, 
wö
->
cury
 + wö->
begy
,

200 
wö
->
curx
 + wö->
begx
);

201 
curs¸
->
cury
 = 
wö
->cury + wö->
begy
;

202 
curs¸
->
curx
 = 
wö
->curx + wö->
begx
;

205 
ªtvÆ
 = 
OK
;

207 ()
	`fÊush
(
°dout
);

208  (
ªtvÆ
);

209 
	}
}

216 
	$makech
(
wö
, 
wy
)

217 
WINDOW
 *
wö
;

218 
wy
;

220 
__LDATA
 
bœnk
 = {' ', 0};

221 
__LDATA
 *
n•
, *
c•
, *
˝
, *
˚p
;

222 
u_öt
 
f‹˚
;

223 
˛•
, 
∆•
;

224 
lch
, 
wx
, 
y
;

225 *
˚
;

228 i‡(
wy
 > 0 && 
wö
->
löes
[wy - 1]->
Êags
 & 
__ISPASTEOL
) {

229 
	`domvcur
(
ly
, 
lx
,Üy + 1, 0);

230 
ly
++;

231 
lx
 = 0;

233 
wx
 = *
wö
->
löes
[
wy
]->
fú°chp
 - wö->
ch_off
;

234 i‡(
wx
 < 0)

235 
wx
 = 0;

236 i‡(
wx
 >
wö
->
maxx
)

237  (
OK
);

238 
lch
 = *
wö
->
löes
[
wy
]->
œ°chp
 - wö->
ch_off
;

239 i‡(
lch
 < 0)

240  (
OK
);

241 i‡(
lch
 >(Ë
wö
->
maxx
)

242 
lch
 = 
wö
->
maxx
 - 1;

243 
y
 = 
wy
 + 
wö
->
begy
;

245 i‡(
curwö
)

246 
c•
 = &
bœnk
;

248 
c•
 = &
curs¸
->
löes
[
wy
 + 
wö
->
begy
]->
löe
[
wx
 + wö->
begx
];

250 
n•
 = &
wö
->
löes
[
wy
]->
löe
[
wx
];

251 
f‹˚
 = 
wö
->
löes
[
wy
]->
Êags
 & 
__FORCEPAINT
;

252 
wö
->
löes
[
wy
]->
Êags
 &~
__FORCEPAINT
;

253 i‡(
CE
 && !
curwö
) {

254 
˝
 = &
wö
->
löes
[
wy
]->
löe
[wö->
maxx
 - 1];

255 
˝
->
ch
 =' ' && cp->
©å
 == 0; cp--)

256 i‡(
˝
 <
wö
->
löes
[
wy
]->
löe
)

258 
∆•
 = 
˝
 - 
wö
->
löes
[
wy
]->
löe
;

260 i‡(!
curwö
)

261 
˚
 = 
CE
;

263 
˚
 = 
NULL
;

265 i‡(
f‹˚
) {

266 i‡(
CM
)

267 
	`çuts
(
	`tgŸo
(
CM
, 
lx
, 
ly
), 0, 
__˝utch¨
);

269 
	`çuts
(
HO
, 0, 
__˝utch¨
);

270 
	`__mvcur
(0, 0, 
ly
, 
lx
, 1);

274 
wx
 <
lch
) {

275 i‡(!
f‹˚
 && 
	`memcmp
(
n•
, 
c•
, (
__LDATA
)) == 0) {

276 i‡(
wx
 <
lch
) {

277 
wx
 <
lch
 &&

278 
	`memcmp
(
n•
, 
c•
, (
__LDATA
)) == 0) {

279 
n•
++;

280 i‡(!
curwö
)

281 ++
c•
;

282 ++
wx
;

288 
	`domvcur
(
ly
, 
lx
, 
y
, 
wx
 + 
wö
->
begx
);

290 #ifde‡
CURSES_DEBUG


291 
	`__CTRACE
("makech: 1: wx = %d,Üy= %d,Üx = %d,Çewy = %d,Çewx = %d, force =%d\n",

292 
wx
, 
ly
, 
lx
, 
y
, wx + 
wö
->
begx
, 
f‹˚
);

294 
ly
 = 
y
;

295 
lx
 = 
wx
 + 
wö
->
begx
;

296 
wx
 <
lch
 &&

297 (
f‹˚
 || 
	`memcmp
(
n•
, 
c•
, (
__LDATA
)) != 0)) {

299 i‡(
˚
 !
NULL
 &&

300 
wö
->
maxx
 + wö->
begx
 =
curs¸
->maxx &&

301 
wx
 >
∆•
 && 
n•
->
ch
 =' ' &&Ç•->
©å
 == 0) {

303 
˚p
 = &
curs¸
->
löes
[
wy
]->
löe
[
wö
->
maxx
 - 1];

304 
˚p
->
ch
 =' ' && cï->
©å
 == 0)

305 i‡(
˚p
-- <
c•
)

307 
˛•
 = 
˚p
 - 
curs¸
->
löes
[
wy
]->
löe
 -

308 
wö
->
begx
 * 
__LDATASIZE
;

309 #ifde‡
CURSES_DEBUG


310 
	`__CTRACE
("makech: cl• = %d,Çl• = %d\n", 
˛•
, 
∆•
);

312 i‡((
˛•
 - 
∆•
 >
	`°æí
(
CE
)

313 && 
˛•
 < 
wö
->
maxx
 * 
__LDATASIZE
) ||

314 
wy
 =
wö
->
maxy
 - 1) {

315 i‡(
curs¸
->
Êags
 & 
__WSTANDOUT
) {

316 
	`çuts
(
SE
, 0, 
__˝utch¨
);

317 
curs¸
->
Êags
 &~
__WSTANDOUT
;

319 
	`çuts
(
CE
, 0, 
__˝utch¨
);

320 
lx
 = 
wx
 + 
wö
->
begx
;

321 
wx
++ <
˛•
) {

322 
c•
->
ch
 = ' ';

323 
c•
->
©å
 = 0;

324 
c•
++;

326  (
OK
);

328 
˚
 = 
NULL
;

336 i‡(
n•
->
©å
 & 
__STANDOUT
) {

337 i‡(!(
curs¸
->
Êags
 & 
__WSTANDOUT
) &&

338 
SO
 !
NULL
 && 
SE
 != NULL) {

339 
	`çuts
(
SO
, 0, 
__˝utch¨
);

340 
curs¸
->
Êags
 |
__WSTANDOUT
;

343 i‡(
curs¸
->
Êags
 & 
__WSTANDOUT
 &&

344 
SE
 !
NULL
) {

345 
	`çuts
(
SE
, 0, 
__˝utch¨
);

346 
curs¸
->
Êags
 &~
__WSTANDOUT
;

349 
wx
++;

350 i‡(
wx
 >
wö
->
maxx
 && 
wy
 =wö->
maxy
 - 1 && !
curwö
)

351 i‡(
wö
->
Êags
 & 
__SCROLLOK
) {

352 i‡(
curs¸
->
Êags
 & 
__WSTANDOUT


353 && 
wö
->
Êags
 & 
__ENDLINE
)

354 i‡(!
MS
) {

355 
	`çuts
(
SE
, 0,

356 
__˝utch¨
);

357 
curs¸
->
Êags
 &=

358 ~
__WSTANDOUT
;

360 i‡(!(
wö
->
Êags
 & 
__SCROLLWIN
)) {

361 i‡(!
curwö
) {

362 
c•
->
©å
 = 
n•
->attr;

363 
	`putch¨
(
c•
->
ch
 = 
n•
->ch);

365 
	`putch¨
(
n•
->
ch
);

367 i‡(
wx
 + 
wö
->
begx
 < 
curs¸
->
maxx
) {

368 
	`domvcur
(
ly
, 
wx
 + 
wö
->
begx
,

369 
wö
->
begy
 + wö->
maxy
 - 1,

370 
wö
->
begx
 + wö->
maxx
 - 1);

372 
ly
 = 
wö
->
begy
 + wö->
maxy
 - 1;

373 
lx
 = 
wö
->
begx
 + wö->
maxx
 - 1;

374  (
OK
);

376 i‡(
wx
 < 
wö
->
maxx
 || 
wy
 < wö->
maxy
 - 1 ||

377 !(
wö
->
Êags
 & 
__SCROLLWIN
)) {

378 i‡(!
curwö
) {

379 
c•
->
©å
 = 
n•
->attr;

380 
	`putch¨
(
c•
->
ch
 = 
n•
->ch);

381 
c•
++;

383 
	`putch¨
(
n•
->
ch
);

385 #ifde‡
CURSES_DEBUG


386 
	`__CTRACE
("makech:Öutch¨(%c)\n", 
n•
->
ch
 & 0177);

388 i‡(
UC
 && (
n•
->
©å
 & 
__STANDOUT
)) {

389 
	`putch¨
('\b');

390 
	`çuts
(
UC
, 0, 
__˝utch¨
);

392 
n•
++;

393 #ifde‡
CURSES_DEBUG


394 
	`__CTRACE
("makech: 2: wx = %d,Üx = %d\n", 
wx
, 
lx
);

397 i‡(
lx
 =
wx
 + 
wö
->
begx
)

399 
lx
 = 
wx
 + 
wö
->
begx
;

400 i‡(
lx
 >
COLS
 && 
AM
)

401 
lx
 = 
COLS
 - 1;

402 i‡(
wx
 >
wö
->
maxx
) {

403 
	`domvcur
(
ly
, 
lx
,Üy, 
wö
->
maxx
 + wö->
begx
 - 1);

404 
lx
 = 
wö
->
maxx
 + wö->
begx
 - 1;

407 #ifde‡
CURSES_DEBUG


408 
	`__CTRACE
("makech: 3: wx = %d,Üx = %d\n", 
wx
, 
lx
);

413 i‡(
curs¸
->
Êags
 & 
__WSTANDOUT
) {

414 
	`çuts
(
SE
, 0, 
__˝utch¨
);

415 
curs¸
->
Êags
 &~
__WSTANDOUT
;

417  (
OK
);

418 
	}
}

425 
	$domvcur
(
oy
, 
ox
, 
ny
, 
nx
)

426 
oy
, 
ox
, 
ny
, 
nx
;

428 i‡(
curs¸
->
Êags
 & 
__WSTANDOUT
 && !
MS
) {

429 
	`çuts
(
SE
, 0, 
__˝utch¨
);

430 
curs¸
->
Êags
 &~
__WSTANDOUT
;

433 
	`__mvcur
(
oy
, 
ox
, 
ny
, 
nx
, 1);

434 
	}
}

443 
	$quickch
(
wö
)

444 
WINDOW
 *
wö
;

446 
	#THRESH
 (Ë
wö
->
maxy
 / 4

	)

448 
__LINE
 *
˛p
, *
tmp1
, *
tmp2
;

449 
bsize
, 
curs
, 
curw
, 
°¨ts
, 
°¨tw
, 
i
, 
j
;

450 
n
, 
èrgë
, 
cur_≥riod
, 
bŸ
, 
t›
, 
sc_ªgi⁄
;

451 
__LDATA
 
buf
[1024];

452 
u_öt
 
bœnk_hash
;

457 
t›
 = 0;Å› < 
wö
->
maxy
;Åop++)

458 i‡(
wö
->
löes
[
t›
]->
Êags
 & 
__FORCEPAINT
 ||

459 
wö
->
löes
[
t›
]->
hash
 !
curs¸
->lines[top]->hash

460 || 
	`memcmp
(
wö
->
löes
[
t›
]->
löe
,

461 
curs¸
->
löes
[
t›
]->
löe
,

462 
wö
->
maxx
 * 
__LDATASIZE
) != 0)

465 
wö
->
löes
[
t›
]->
Êags
 &~
__ISDIRTY
;

469 
bŸ
 = 
wö
->
maxy
 - 1; bot >= 0; bot--)

470 i‡(
wö
->
löes
[
bŸ
]->
Êags
 & 
__FORCEPAINT
 ||

471 
wö
->
löes
[
bŸ
]->
hash
 !
curs¸
->lines[bot]->hash

472 || 
	`memcmp
(
wö
->
löes
[
bŸ
]->
löe
,

473 
curs¸
->
löes
[
bŸ
]->
löe
,

474 
wö
->
maxx
 * 
__LDATASIZE
) != 0)

477 
wö
->
löes
[
bŸ
]->
Êags
 &~
__ISDIRTY
;

479 #ifde‡
NO_JERKINESS


486 i‡(
bŸ
 < 
wö
->
maxy
 - 1)

501 
bsize
 = 
bŸ
 - 
t›
; bsizê>
THRESH
; bsize--) {

502 
°¨tw
 = 
t›
; sèπw <
bŸ
 - 
bsize
; startw++)

503 
°¨ts
 = 
t›
; sèπ†<
bŸ
 - 
bsize
;

504 
°¨ts
++) {

505 
curw
 = 
°¨tw
, 
curs
 = 
°¨ts
;

506 
curs
 < 
°¨ts
 + 
bsize
; 
curw
++, curs++)

507 i‡(
wö
->
löes
[
curw
]->
Êags
 &

508 
__FORCEPAINT
 ||

509 (
wö
->
löes
[
curw
]->
hash
 !=

510 
curs¸
->
löes
[
curs
]->
hash
 ||

511 
	`memcmp
(
wö
->
löes
[
curw
]->
löe
,

512 
curs¸
->
löes
[
curs
]->
löe
,

513 
wö
->
maxx
 * 
__LDATASIZE
) != 0))

515 i‡(
curs
 =
°¨ts
 + 
bsize
)

516 
d⁄e
;

519 
d⁄e
:

521 i‡(
bsize
 < 
THRESH
)

524 #ifde‡
CURSES_DEBUG


525 
	`__CTRACE
("quickch:bsize=%d,starts=%d,startw=%d,curw=%d,curs=%d,top=%d,bot=%d\n",

526 
bsize
, 
°¨ts
, 
°¨tw
, 
curw
, 
curs
, 
t›
, 
bŸ
);

533 i‡(
bŸ
 < 
curs
)

534 
bŸ
 = 
curs
 - 1;

535 i‡(
t›
 > 
°¨ts
)

536 
t›
 = 
°¨ts
;

538 
n
 = 
°¨tw
 - 
°¨ts
;

540 #ifde‡
CURSES_DEBUG


541 
	`__CTRACE
("#####################################\n");

542 
i
 = 0; i < 
curs¸
->
maxy
; i++) {

543 
	`__CTRACE
("C: %d:", 
i
);

544 
	`__CTRACE
(" 0x%x \n", 
curs¸
->
löes
[
i
]->
hash
);

545 
j
 = 0; j < 
curs¸
->
maxx
; j++)

546 
	`__CTRACE
("%c",

547 
curs¸
->
löes
[
i
]->
löe
[
j
].
ch
);

548 
	`__CTRACE
("\n");

549 
j
 = 0; j < 
curs¸
->
maxx
; j++)

550 
	`__CTRACE
("%x",

551 
curs¸
->
löes
[
i
]->
löe
[
j
].
©å
);

552 
	`__CTRACE
("\n");

553 
	`__CTRACE
("W: %d:", 
i
);

554 
	`__CTRACE
(" 0x%x \n", 
wö
->
löes
[
i
]->
hash
);

555 
	`__CTRACE
(" 0x%x ", 
wö
->
löes
[
i
]->
Êags
);

556 
j
 = 0; j < 
wö
->
maxx
; j++)

557 
	`__CTRACE
("%c",

558 
wö
->
löes
[
i
]->
löe
[
j
].
ch
);

559 
	`__CTRACE
("\n");

560 
j
 = 0; j < 
wö
->
maxx
; j++)

561 
	`__CTRACE
("%x",

562 
wö
->
löes
[
i
]->
löe
[
j
].
©å
);

563 
	`__CTRACE
("\n");

568 
i
 = 0; i < 
wö
->
maxx
; i++) {

569 
buf
[
i
].
ch
 = ' ';

570 
buf
[
i
].
©å
 = 0;

572 
bœnk_hash
 = 
	`__hash
((*Ë
buf
, 
wö
->
maxx
 * 
__LDATASIZE
);

606 
sc_ªgi⁄
 = 
bŸ
 - 
t›
 + 1;

607 
i
 = 
t›
;

608 
tmp1
 = 
curs¸
->
löes
[
t›
];

609 
cur_≥riod
 = 
t›
;

610 
j
 = 
t›
; j <
bŸ
; j++) {

611 
èrgë
 = (
i
 - 
t›
 + 
n
 + 
sc_ªgi⁄
) % sc_region +Åop;

612 
tmp2
 = 
curs¸
->
löes
[
èrgë
];

613 
curs¸
->
löes
[
èrgë
] = 
tmp1
;

615 
˛p
 = 
curs¸
->
löes
[
èrgë
];

616 #ifde‡
CURSES_DEBUG


617 
	`__CTRACE
("quickch:Ç=%d startw=%d curw=%d i = %dÅarget=%d ",

618 
n
, 
°¨tw
, 
curw
, 
i
, 
èrgë
);

620 i‡((
èrgë
 >
°¨tw
 &&Å¨gë < 
curw
Ë||Å¨gë < 
t›


621 || 
èrgë
 > 
bŸ
) {

622 #ifde‡
CURSES_DEBUG


623 
	`__CTRACE
("--Çotdirty");

625 
wö
->
löes
[
èrgë
]->
Êags
 &~
__ISDIRTY
;

626 } i‡((
n
 > 0 && 
èrgë
 >
t›
 &&Åarget <Åop +Ç) ||

627 (
n
 < 0 && 
èrgë
 <
bŸ
 &&Åarget > bot +Ç)) {

628 i‡(
˛p
->
hash
 !
bœnk_hash
 || 
	`memcmp
(˛p->
löe
,

629 
buf
, 
wö
->
maxx
 * 
__LDATASIZE
) !=0) {

630 ()
	`mem˝y
(
˛p
->
löe
, 
buf
,

631 
wö
->
maxx
 * 
__LDATASIZE
);

632 #ifde‡
CURSES_DEBUG


633 
	`__CTRACE
("-- blanked out: dirty");

635 
˛p
->
hash
 = 
bœnk_hash
;

636 
	`__touchlöe
(
wö
, 
èrgë
, 0, wö->
maxx
 - 1, 0);

638 
	`__touchlöe
(
wö
, 
èrgë
, 0, wö->
maxx
 - 1, 0);

639 #ifde‡
CURSES_DEBUG


640 
	`__CTRACE
(" -- blankÜineálready: dirty");

644 #ifde‡
CURSES_DEBUG


645 
	`__CTRACE
(" -- dirty");

647 
	`__touchlöe
(
wö
, 
èrgë
, 0, wö->
maxx
 - 1, 0);

649 #ifde‡
CURSES_DEBUG


650 
	`__CTRACE
("\n");

652 i‡(
èrgë
 =
cur_≥riod
) {

653 
i
 = 
èrgë
;

661 i‡(
i
 < 
curs¸
->
maxy
 - 1)

662 ++
i
;

663 
tmp1
 = 
curs¸
->
löes
[
i
];

664 
cur_≥riod
 = 
i
;

666 
tmp1
 = 
tmp2
;

667 
i
 = 
èrgë
;

670 #ifde‡
CURSES_DEBUG


671 
	`__CTRACE
("$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$\n");

672 
i
 = 0; i < 
curs¸
->
maxy
; i++) {

673 
	`__CTRACE
("C: %d:", 
i
);

674 
j
 = 0; j < 
curs¸
->
maxx
; j++)

675 
	`__CTRACE
("%c",

676 
curs¸
->
löes
[
i
]->
löe
[
j
].
ch
);

677 
	`__CTRACE
("\n");

678 
	`__CTRACE
("W: %d:", 
i
);

679 
j
 = 0; j < 
wö
->
maxx
; j++)

680 
	`__CTRACE
("%c", 
wö
->
löes
[
i
]->
löe
[
j
].
ch
);

681 
	`__CTRACE
("\n");

684 i‡(
n
 != 0) {

685 
WINDOW
 *
wp
;

686 
	`s¸ﬁ 
(
wö
, 
°¨ts
, 
°¨tw
, 
curs
, 
bŸ
, 
t›
);

691 
wp
 = 
wö
->
√xç
; wp != win; wp = wp->nextp)

692 
	`__£t_subwö
(
wö
, 
wp
);

694 
	}
}

701 
	$s¸ﬁ 
(
wö
, 
°¨ts
, 
°¨tw
, 
curs
, 
bŸ
, 
t›
)

702 
WINDOW
 *
wö
;

703 
°¨ts
, 
°¨tw
, 
curs
, 
bŸ
, 
t›
;

705 
i
, 
oy
, 
ox
, 
n
;

707 
oy
 = 
curs¸
->
cury
;

708 
ox
 = 
curs¸
->
curx
;

709 
n
 = 
°¨ts
 - 
°¨tw
;

734 i‡(
n
 > 0) {

735 i‡(
CS
 !
NULL
 && 
HO
 !NULL && (
SF
 != NULL ||

736 (
AL
 =
NULL
 || 
DL
 == NULL ||

737 
t›
 > 3 || 
bŸ
 + 3 < 
wö
->
maxy
Ë&& 
sf
 !
NULL
)) {

738 
	`çuts
(
	`__ts¸ﬁl
(
CS
, 
t›
, 
bŸ
 + 1), 0, 
__˝utch¨
);

739 
	`__mvcur
(
oy
, 
ox
, 0, 0, 1);

740 
	`çuts
(
HO
, 0, 
__˝utch¨
);

741 
	`__mvcur
(0, 0, 
bŸ
, 0, 1);

742 i‡(
SF
 !
NULL
)

743 
	`çuts
(
	`__ts¸ﬁl
(
SF
, 
n
, 0), 0, 
__˝utch¨
);

745 
i
 = 0; i < 
n
; i++)

746 
	`çuts
(
sf
, 0, 
__˝utch¨
);

747 
	`çuts
(
	`__ts¸ﬁl
(
CS
, 0, 
wö
->
maxy
), 0, 
__˝utch¨
);

748 
	`__mvcur
(
bŸ
, 0, 0, 0, 1);

749 
	`çuts
(
HO
, 0, 
__˝utch¨
);

750 
	`__mvcur
(0, 0, 
oy
, 
ox
, 1);

755 i‡(
SF
 !
NULL
 && 
t›
 == 0) {

756 
	`__mvcur
(
oy
, 
ox
, 
bŸ
, 0, 1);

757 
	`çuts
(
	`__ts¸ﬁl
(
SF
, 
n
, 0), 0, 
__˝utch¨
);

758 } i‡(
DL
 !
NULL
) {

759 
	`__mvcur
(
oy
, 
ox
, 
t›
, 0, 1);

760 
	`çuts
(
	`__ts¸ﬁl
(
DL
, 
n
, 0), 0, 
__˝utch¨
);

761 } i‡(
dl
 !
NULL
) {

762 
	`__mvcur
(
oy
, 
ox
, 
t›
, 0, 1);

763 
i
 = 0; i < 
n
; i++)

764 
	`çuts
(
dl
, 0, 
__˝utch¨
);

765 } i‡(
sf
 !
NULL
 && 
t›
 == 0) {

766 
	`__mvcur
(
oy
, 
ox
, 
bŸ
, 0, 1);

767 
i
 = 0; i < 
n
; i++)

768 
	`çuts
(
sf
, 0, 
__˝utch¨
);

770 
	`ab‹t
();

773 
	`__mvcur
(
t›
, 0, 
bŸ
 - 
n
 + 1, 0, 1);

774 i‡(
AL
 !
NULL
)

775 
	`çuts
(
	`__ts¸ﬁl
(
AL
, 
n
, 0), 0, 
__˝utch¨
);

776 i‡(
Æ
 !
NULL
)

777 
i
 = 0; i < 
n
; i++)

778 
	`çuts
(
Æ
, 0, 
__˝utch¨
);

780 
	`ab‹t
();

781 
	`__mvcur
(
bŸ
 - 
n
 + 1, 0, 
oy
, 
ox
, 1);

790 i‡(
CS
 !
NULL
 && 
HO
 !NULL && (
SR
 != NULL ||

791 (
AL
 =
NULL
 || 
DL
 == NULL ||

792 
t›
 > 3 || 
bŸ
 + 3 < 
wö
->
maxy
Ë&& 
§
 !
NULL
)) {

793 
	`çuts
(
	`__ts¸ﬁl
(
CS
, 
t›
, 
bŸ
 + 1), 0, 
__˝utch¨
);

794 
	`__mvcur
(
oy
, 
ox
, 0, 0, 1);

795 
	`çuts
(
HO
, 0, 
__˝utch¨
);

796 
	`__mvcur
(0, 0, 
t›
, 0, 1);

798 i‡(
SR
 !
NULL
)

799 
	`çuts
(
	`__ts¸ﬁl
(
SR
, -
n
, 0), 0, 
__˝utch¨
);

801 
i
 = 
n
; i < 0; i++)

802 
	`çuts
(
§
, 0, 
__˝utch¨
);

803 
	`çuts
(
	`__ts¸ﬁl
(
CS
, 0, 
wö
->
maxy
), 0, 
__˝utch¨
);

804 
	`__mvcur
(
t›
, 0, 0, 0, 1);

805 
	`çuts
(
HO
, 0, 
__˝utch¨
);

806 
	`__mvcur
(0, 0, 
oy
, 
ox
, 1);

811 
	`__mvcur
(
oy
, 
ox
, 
bŸ
 + 
n
 + 1, 0, 1);

812 i‡(
SR
 !
NULL
 && 
bŸ
 =
wö
->
maxy
)

813 
	`çuts
(
	`__ts¸ﬁl
(
SR
, -
n
, 0), 0, 
__˝utch¨
);

814 i‡(
DL
 !
NULL
)

815 
	`çuts
(
	`__ts¸ﬁl
(
DL
, -
n
, 0), 0, 
__˝utch¨
);

816 i‡(
dl
 !
NULL
)

817 
i
 = 
n
; i < 0; i++)

818 
	`çuts
(
dl
, 0, 
__˝utch¨
);

819 i‡(
§
 !
NULL
 && 
bŸ
 =
wö
->
maxy
)

820 
i
 = 
n
; i < 0; i++)

821 
	`çuts
(
§
, 0, 
__˝utch¨
);

823 
	`ab‹t
();

826 
	`__mvcur
(
bŸ
 + 
n
 + 1, 0, 
t›
, 0, 1);

827 i‡(
AL
 !
NULL
)

828 
	`çuts
(
	`__ts¸ﬁl
(
AL
, -
n
, 0), 0, 
__˝utch¨
);

829 i‡(
Æ
 !
NULL
)

830 
i
 = 
n
; i < 0; i++)

831 
	`çuts
(
Æ
, 0, 
__˝utch¨
);

833 
	`ab‹t
();

834 
	`__mvcur
(
t›
, 0, 
oy
, 
ox
, 1);

836 
	}
}

	@curses/scroll.c

34 #i‚de‡
löt


35 
	gsccsid
[] = "@(#)scroll.c 8.3 (Berkeley) 5/4/94";

38 
	~"cur£s.h
"

45 
	$s¸ﬁl
(
wö
)

46 
WINDOW
 *
wö
;

48 
oy
, 
ox
;

50 #ifde‡
CURSES_DEBUG


51 
	`__CTRACE
("s¸ﬁl: (%0.2o)\n", 
wö
);

54 i‡(!(
wö
->
Êags
 & 
__SCROLLOK
))

55  (
ERR
);

57 
	`gëyx
(
wö
, 
oy
, 
ox
);

58 
	`wmove
(
wö
, 0, 0);

59 
	`wdñëñn
(
wö
);

60 
	`wmove
(
wö
, 
oy
, 
ox
);

62 i‡(
wö
 =
curs¸
) {

63 
	`putch¨
('\n');

64 i‡(!
NONL
)

65 
wö
->
curx
 = 0;

66 #ifde‡
CURSES_DEBUG


67 
	`__CTRACE
("scroll: win == curscr\n");

70  (
OK
);

71 
	}
}

	@curses/setterm.c

34 #i‚de‡
löt


35 
	gsccsid
[] = "@(#)setterm.c 8.8 (Berkeley) 10/25/94";

38 
	~<sys/io˘l.h
>

40 
	~<°dlib.h
>

41 
	~<°rög.h
>

42 
	~<ãrmios.h
>

43 
	~<uni°d.h
>

45 
	~"cur£s.h
"

47 
z≠
();

49 *
	gsÊags
[] = {

51 &
AM
, &
BS
, &
DA
, &
EO
, &
HC
, &
IN
, &
MI
, &
MS
,

53 &
NC
, &
NS
, &
OS
, &
UL
, &
XB
, &
XN
, &
XT
, &
XS
, &
XX


56 *
	g_PC
,

57 **
	gs°rs
[] = {

59 &
AL
, &
BC
, &
BT
, &
CD
, &
CE
, &
CL
, &
CM
, &
CR
, &
CS
,

61 &
DC
, &
DL
, &
DM
, &
DO
, &
ED
, &
EI
, &
K0
, &
K1
, &
K2
,

63 &
K3
, &
K4
, &
K5
, &
K6
, &
K7
, &
K8
, &
K9
, &
HO
, &
IC
,

65 &
IM
, &
IP
, &
KD
, &
KE
, &
KH
, &
KL
, &
KR
, &
KS
, &
KU
,

67 &
LL
, &
MA
, &
ND
, &
NL
, &
_PC
, &
RC
, &
SC
, &
SE
, &
SF
,

69 &
SO
, &
SR
, &
TA
, &
TE
, &
TI
, &
UC
, &
UE
, &
UP
, &
US
,

71 &
VB
, &
VS
, &
VE
, &
Æ
, &
dl
, &
sf
, &
§
, &
AL_PARM
,

73 &
DL_PARM
, &
UP_PARM
, &
DOWN_PARM
, &
LEFT_PARM
,

75 &
RIGHT_PARM
,

78 *
	gao·•a˚
;

79 
	gt•a˚
[2048];

82 
	$£âîm
(
ty≥
)

83 *
ty≥
;

85 
gíbuf
[1024];

86 
unknown
;

87 #ifde‡
TIOCGWINSZ


88 
wösize
 
wö
;

90 *
p
;

92 #ifde‡
CURSES_DEBUG


93 
	`__CTRACE
("setterm: (\"%s\")\nLINES = %d, COLS = %d\n",

94 
ty≥
, 
LINES
, 
COLS
);

96 i‡(
ty≥
[0] == '\0')

97 
ty≥
 = "xx";

98 
unknown
 = 0;

99 i‡(
	`tgëít
(
gíbuf
, 
ty≥
) != 1) {

100 
unknown
++;

101 
	`°r˝y
(
gíbuf
, "xx|dumb:");

103 #ifde‡
CURSES_DEBUG


104 
	`__CTRACE
("£âîm:Åty = %s\n", 
ty≥
);

107 #ifde‡
TIOCGWINSZ


109 i‡(
	`io˘l
(
STDERR_FILENO
, 
TIOCGWINSZ
, &
wö
) != -1 &&

110 
wö
.
ws_row
 !0 && wö.
ws_cﬁ
 != 0) {

111 
LINES
 = 
wö
.
ws_row
;

112 
COLS
 = 
wö
.
ws_cﬁ
;

115 
LINES
 = 
	`tgënum
("li");

116 
COLS
 = 
	`tgënum
("co");

117 #ifde‡
TIOCGWINSZ


122 i‡((
p
 = 
	`gëív
("LINES")Ë!
NULL
)

123 
LINES
 = 
	`°πﬁ
(
p
, 
NULL
, 10);

124 i‡((
p
 = 
	`gëív
("COLUMNS")Ë!
NULL
)

125 
COLS
 = 
	`°πﬁ
(
p
, 
NULL
, 10);

130 i‡(
COLS
 <= 4)

131  (
ERR
);

133 #ifde‡
CURSES_DEBUG


134 
	`__CTRACE
("£âîm: LINES = %d, COLS = %d\n", 
LINES
, 
COLS
);

136 
ao·•a˚
 = 
t•a˚
;

137 
	`z≠
();

140 i‡(!
GT
)

141 
BT
 = 
NULL
;

151 i‡((
p
 = 
	`tgŸo
(
CM
, 0, 0)Ë=
NULL
 || *p == 'O') {

152 
CA
 = 0;

153 
CM
 = 0;

155 
CA
 = 1;

157 
PC
 = 
_PC
 ? _PC[0] : 0;

158 
ao·•a˚
 = 
t•a˚
;

161 
__noqch
 =

162 (
CS
 =
NULL
 || 
HO
 == NULL ||

163 
SF
 =
NULL
 && 
sf
 =NULL || 
SR
 =NULL && 
§
 == NULL) &&

164 (
AL
 =
NULL
 && 
Æ
 =NULL || 
DL
 =NULL && 
dl
 == NULL);

166  (
unknown
 ? 
ERR
 : 
OK
);

167 
	}
}

174 
	$z≠
()

176 *
«mp
, ***
•
;

177 **
Â
;

178 
tmp
[3];

179 #ifde‡
CURSES_DEBUG


180 *
˝
;

182 
tmp
[2] = '\0';

184 
«mp
 = "ambsdaeohcinmimsncnsosulxbxnxtxsxx";

185 
Â
 = 
sÊags
;

187 *
tmp
 = *
«mp
;

188 *(
tmp
 + 1Ë*(
«mp
 + 1);

189 *(*
Â
++Ë
	`tgëÊag
(
tmp
);

190 #ifde‡
CURSES_DEBUG


191 
	`__CTRACE
("2.2†%s\n", 
«mp
, *
Â
[-1] ? "TRUE" : "FALSE");

193 
«mp
 += 2;

195 } *
«mp
);

196 
«mp
 = "ALbcbtcdceclcmcrcsdcDLdmdoedeik0k1k2k3k4k5k6k7k8k9hoicimipkdkekhklkrkskullmandnlpcrcscseSFsoSRtatetiucueupusvbvsvealdlsfsrALDLUPDOLERI";

197 
•
 = 
s°rs
;

199 *
tmp
 = *
«mp
;

200 *(
tmp
 + 1Ë*(
«mp
 + 1);

201 *(*
•
++Ë
	`tgë°r
(
tmp
, &
ao·•a˚
);

202 #ifde‡
CURSES_DEBUG


203 
	`__CTRACE
("2.2†%s", 
«mp
, *
•
[-1] =
NULL
 ? "NULL\n" : "\"");

204 i‡(*
•
[-1] !
NULL
) {

205 
˝
 = *
•
[-1]; *cp; cp++)

206 
	`__CTRACE
("%s", 
	`un˘æ
(*
˝
));

207 
	`__CTRACE
("\"\n");

210 
«mp
 += 2;

211 } *
«mp
);

212 i‡(
XS
)

213 
SO
 = 
SE
 = 
NULL
;

215 i‡(
	`tgënum
("sg") > 0)

216 
SO
 = 
NULL
;

217 i‡(
	`tgënum
("ug") > 0)

218 
US
 = 
NULL
;

219 i‡(!
SO
 && 
US
) {

220 
SO
 = 
US
;

221 
SE
 = 
UE
;

224 
	}
}

231 
	$gëˇp
(
«me
)

232 *
«me
;

234  (
	`tgë°r
(
«me
, &
ao·•a˚
));

235 
	}
}

	@curses/standout.c

34 #i‚de‡
löt


35 
	gsccsid
[] = "@(#)standout.c 8.3 (Berkeley) 8/10/94";

38 
	~"cur£s.h
"

45 
	$w°™dout
(
wö
)

46 
WINDOW
 *
wö
;

52 i‡(
SO
 !
NULL
 && 
SE
 !NULL || 
UC
 != NULL)

53 
wö
->
Êags
 |
__WSTANDOUT
;

55 
	}
}

62 
	$w°™díd
(
wö
)

63 
WINDOW
 *
wö
;

65 
wö
->
Êags
 &~
__WSTANDOUT
;

67 
	}
}

	@curses/toucholap.c

34 #i‚de‡
löt


35 
	gsccsid
[] = "@(#)toucholap.c 8.2 (Berkeley) 5/4/94";

38 
	~"cur£s.h
"

45 
	$touchovîœp
(
wö1
, 
wö2
)

46 
WINDOW
 *
wö1
, *
wö2
;

48 
y
, 
ídy
, 
ídx
, 
°¨ty
, 
°¨tx
;

50 #ifde‡
CURSES_DEBUG


51 
	`__CTRACE
("touchovîœp: (%0.2o, %0.2o);\n", 
wö1
, 
wö2
);

53 
°¨ty
 = 
	`max
(
wö1
->
begy
, 
wö2
->begy);

54 
°¨tx
 = 
	`max
(
wö1
->
begx
, 
wö2
->begx);

55 
ídy
 = 
	`mö
(
wö1
->
maxy
 + wö1->
begy
, 
wö2
->maxy + wö2->
begx
);

56 
ídx
 = 
	`mö
(
wö1
->
maxx
 + wö1->
begx
, 
wö2
->maxx + win2->begx);

57 #ifde‡
CURSES_DEBUG


58 
	`__CTRACE
("touchoverlap: from (%d,%d)Åo (%d,%d)\n",

59 
°¨ty
, 
°¨tx
, 
ídy
, 
ídx
);

60 
	`__CTRACE
("touchoverlap: win1 (%d,%d)Åo (%d,%d)\n",

61 
wö1
->
begy
, wö1->
begx
, wö1->begy + wö1->
maxy
,

62 
wö1
->
begx
 + wö1->
maxx
);

63 
	`__CTRACE
("touchoverlap: win2 (%d,%d)Åo (%d,%d)\n",

64 
wö2
->
begy
, wö2->
begx
, wö2->begy + wö2->
maxy
,

65 
wö2
->
begx
 + wö2->
maxx
);

67 i‡(
°¨ty
 >
ídy
 || 
°¨tx
 >
ídx
)

68  (
OK
);

69 
°¨ty
 -
wö2
->
begy
;

70 
°¨tx
 -
wö2
->
begx
;

71 
ídy
 -
wö2
->
begy
;

72 
ídx
 -
wö2
->
begx
;

73 --
ídx
, 
y
 = 
°¨ty
; y < 
ídy
; y++)

74 
	`__touchlöe
(
wö2
, 
y
, 
°¨tx
, 
ídx
, 0);

75  (
OK
);

76 
	}
}

	@curses/touchwin.c

34 #i‚de‡
löt


35 
	gsccsid
[] = "@(#)touchwin.c 8.2 (Berkeley) 5/4/94";

38 
	~"cur£s.h
"

45 
	$touchlöe
(
wö
, 
y
, 
sx
, 
ex
)

46 
WINDOW
 *
wö
;

47 
y
, 
sx
, 
ex
;

49  (
	`__touchlöe
(
wö
, 
y
, 
sx
, 
ex
, 1));

50 
	}
}

58 
	$touchwö
(
wö
)

59 
WINDOW
 *
wö
;

61 
y
, 
maxy
;

63 #ifde‡
CURSES_DEBUG


64 
	`__CTRACE
("touchwö: (%0.2o)\n", 
wö
);

66 
maxy
 = 
wö
->maxy;

67 
y
 = 0; y < 
maxy
; y++)

68 
	`__touchlöe
(
wö
, 
y
, 0, wö->
maxx
 - 1, 1);

69  (
OK
);

70 
	}
}

74 
	$__touchwö
(
wö
)

75 
WINDOW
 *
wö
;

77 
y
, 
maxy
;

79 #ifde‡
CURSES_DEBUG


80 
	`__CTRACE
("touchwö: (%0.2o)\n", 
wö
);

82 
maxy
 = 
wö
->maxy;

83 
y
 = 0; y < 
maxy
; y++)

84 
	`__touchlöe
(
wö
, 
y
, 0, wö->
maxx
 - 1, 0);

85  (
OK
);

86 
	}
}

89 
	$__touchlöe
(
wö
, 
y
, 
sx
, 
ex
, 
f‹˚
)

90 
WINDOW
 *
wö
;

91 
y
, 
sx
, 
ex
;

92 
f‹˚
;

94 #ifde‡
CURSES_DEBUG


95 
	`__CTRACE
("touchlöe: (%0.2o, %d, %d, %d, %d)\n", 
wö
, 
y
, 
sx
, 
ex
, 
f‹˚
);

96 
	`__CTRACE
("touchline: first = %d,Üast = %d\n",

97 *
wö
->
löes
[
y
]->
fú°chp
, *wö->löes[y]->
œ°chp
);

99 i‡(
f‹˚
)

100 
wö
->
löes
[
y
]->
Êags
 |
__FORCEPAINT
;

101 
sx
 +
wö
->
ch_off
;

102 
ex
 +
wö
->
ch_off
;

103 i‡(!(
wö
->
löes
[
y
]->
Êags
 & 
__ISDIRTY
)) {

104 
wö
->
löes
[
y
]->
Êags
 |
__ISDIRTY
;

105 *
wö
->
löes
[
y
]->
fú°chp
 = 
sx
;

106 *
wö
->
löes
[
y
]->
œ°chp
 = 
ex
;

108 i‡(*
wö
->
löes
[
y
]->
fú°chp
 > 
sx
)

109 *
wö
->
löes
[
y
]->
fú°chp
 = 
sx
;

110 i‡(*
wö
->
löes
[
y
]->
œ°chp
 < 
ex
)

111 *
wö
->
löes
[
y
]->
œ°chp
 = 
ex
;

113 #ifde‡
CURSES_DEBUG


114 
	`__CTRACE
("touchline: first = %d,Üast = %d\n",

115 *
wö
->
löes
[
y
]->
fú°chp
, *wö->löes[y]->
œ°chp
);

117  (
OK
);

118 
	}
}

	@curses/tscroll.c

34 #i‚de‡
löt


35 
	gsccsid
[] = "@(#)tscroll.c 8.4 (Berkeley) 7/27/94";

38 
	~"cur£s.h
"

40 
	#MAXRETURNSIZE
 64

	)

64 
	$__ts¸ﬁl
(
ˇp
, 
n1
, 
n2
)

65 c⁄° *
ˇp
;

66 
n1
, 
n2
;

68 
ªsu…
[
MAXRETURNSIZE
];

69 
c
, 
n
;

70 *
dp
;

72 i‡(
ˇp
 =
NULL
)

73 
îr
;

74 
n
 = 
n1
, 
dp
 = 
ªsu…
; (
c
 = *
ˇp
++) != '\0';) {

75 i‡(
c
 != '%') {

76 *
dp
++ = 
c
;

79 
c
 = *
ˇp
++) {

81 
n
 ^= 0140;

84 i‡(
n
 < 10)

85 
⁄e
;

86 i‡(
n
 < 100)

87 
two
;

90 *
dp
++ = (
n
 / 100) | '0';

91 
n
 %= 100;

94 
two
: *
dp
++ = 
n
 / 10 | '0';

95 
⁄e
: *
dp
++ = 
n
 % 10 | '0';

96 
n
 = 
n2
;

99 i‡(
n
 > *
ˇp
++)

100 
n
 +*
ˇp
++;

102 
ˇp
++;

105 
n
 +*
ˇp
++;

108 *
dp
++ = 
n
;

111 
n
++;

114 *
dp
++ = 
c
;

117 
n
 = (n / 10 << 4) +Ç % 10;

120 
n
 =Ç - 2 * (n % 16);

129 ++
ˇp
;

132 
îr
;

135 *
dp
 = '\0';

136  (
ªsu…
);

138 
îr
: ("curses: __tscroll failed");

139 
	}
}

	@curses/tstp.c

34 #i‚de‡
löt


35 
	gsccsid
[] = "@(#)tstp.c 8.3 (Berkeley) 5/4/94";

38 
	~<î∫o.h
>

39 
	~<sig«l.h
>

40 
	~<ãrmios.h
>

41 
	~<uni°d.h
>

43 
	~"cur£s.h
"

50 
	$__°›_sig«l_h™dÀr
(
signo
)

51 
signo
;

53 
ãrmios
 
ßve
;

54 
sig£t_t
 
o£t
, 
£t
;

57 i‡(
	`tcgë©å
(
STDIN_FILENO
, &
ßve
))

64 ()
	`sigem±y£t
(&
£t
);

65 ()
	`sigadd£t
(&
£t
, 
SIGALRM
);

66 ()
	`sigadd£t
(&
£t
, 
SIGWINCH
);

67 ()
	`sig¥ocmask
(
SIG_BLOCK
, &
£t
, &
o£t
);

73 
	`ídwö
();

76 ()
	`sigem±y£t
(&
£t
);

77 ()
	`sigadd£t
(&
£t
, 
SIGTSTP
);

78 ()
	`sig¥ocmask
(
SIG_UNBLOCK
, &
£t
, 
NULL
);

81 
	`__ª°‹e_°›h™dÀr
();

82 ()
	`kûl
(0, 
SIGTSTP
);

87 
	`__£t_°›h™dÀr
();

90 ()
	`tcgë©å
(
STDIN_FILENO
, &
__‹ig_ãrmios
);

93 ()
	`tc£èâr
(
STDIN_FILENO
, 
__tˇ˘i⁄
 ?

94 
TCSASOFT
 | 
TCSADRAIN
 : TCSADRAIN, &
ßve
);

97 
	`__°¨twö
();

100 
	`wª‰esh
(
curs¸
);

103 ()
	`sig¥ocmask
(
SIG_SETMASK
, &
o£t
, 
NULL
);

104 
	}
}

106 (*
	gŸ°p‚
)(Ë
SIG_DFL
;

112 
	$__£t_°›h™dÀr
()

114 
Ÿ°p‚
 = 
	`sig«l
(
SIGTSTP
, 
__°›_sig«l_h™dÀr
);

115 
	}
}

121 
	$__ª°‹e_°›h™dÀr
()

123 ()
	`sig«l
(
SIGTSTP
, 
Ÿ°p‚
);

124 
	}
}

	@curses/tty.c

34 #i‚de‡
löt


35 
	gsccsid
[] = "@(#)tty.c 8.6 (Berkeley) 1/10/95";

38 
	~<°dlib.h
>

39 
	~<ãrmios.h
>

40 
	~<uni°d.h
>

42 
	~"cur£s.h
"

51 #ifde‡
TCSASOFT


52 
	g__tˇ˘i⁄
 = 1;

54 
	g__tˇ˘i⁄
 = 0;

57 
ãrmios
 
	g__‹ig_ãrmios
, 
	g__ba£t
;

58 
ãrmios
 
	gcbªakt
, 
	gøwt
, *
	gcuπ
;

59 
	gu£øw
;

61 #i‚def 
OXTABS


62 #ifdef 
XTABS


63 
	#OXTABS
 
XTABS


	)

65 
	#OXTABS
 0

	)

74 
	$gëtmode
()

76 
u£øw
 = 0;

78 i‡(
	`tcgë©å
(
STDIN_FILENO
, &
__‹ig_ãrmios
))

79  (
ERR
);

81 
__ba£t
 = 
__‹ig_ãrmios
;

82 
__ba£t
.
c_oÊag
 &~
OXTABS
;

84 
GT
 = 0;

85 
NONL
 = (
__ba£t
.
c_oÊag
 & 
ONLCR
) == 0;

94 
cbªakt
 = 
__ba£t
;

95 
cbªakt
.
c_lÊag
 &~
ICANON
;

96 
cbªakt
.
c_cc
[
VMIN
] = 1;

97 
cbªakt
.
c_cc
[
VTIME
] = 0;

99 
øwt
 = 
cbªakt
;

100 
øwt
.
c_iÊag
 &~(
IGNBRK
|
BRKINT
|
PARMRK
|
INLCR
|
IGNCR
|
ICRNL
|
IXON
);

101 
øwt
.
c_oÊag
 &~
OPOST
;

102 
øwt
.
c_lÊag
 &~(
ECHO
|
ECHONL
|
ICANON
|
ISIG
|
IEXTEN
);

112 i‡(!
__tˇ˘i⁄
) {

113 
øwt
.
c_iÊag
 &~
ISTRIP
;

114 
øwt
.
c_cÊag
 &~(
CSIZE
|
PARENB
);

115 
øwt
.
c_cÊag
 |
CS8
;

118 
cuπ
 = &
__ba£t
;

119  (
	`tc£èâr
(
STDIN_FILENO
, 
__tˇ˘i⁄
 ?

120 
TCSASOFT
 | 
TCSADRAIN
 : TCSADRAIN, 
cuπ
Ë? 
ERR
 : 
OK
);

121 
	}
}

124 
	$øw
()

126 
u£øw
 = 
__pÁ°
 = 
__øwmode
 = 1;

127 
cuπ
 = &
øwt
;

128  (
	`tc£èâr
(
STDIN_FILENO
, 
__tˇ˘i⁄
 ?

129 
TCSASOFT
 | 
TCSADRAIN
 : TCSADRAIN, 
cuπ
Ë? 
ERR
 : 
OK
);

130 
	}
}

133 
	$n‹aw
()

135 
u£øw
 = 
__pÁ°
 = 
__øwmode
 = 0;

136 
cuπ
 = &
__ba£t
;

137  (
	`tc£èâr
(
STDIN_FILENO
, 
__tˇ˘i⁄
 ?

138 
TCSASOFT
 | 
TCSADRAIN
 : TCSADRAIN, 
cuπ
Ë? 
ERR
 : 
OK
);

139 
	}
}

142 
	$cbªak
()

145 
__øwmode
 = 1;

146 
cuπ
 = 
u£øw
 ? &
øwt
 : &
cbªakt
;

147  (
	`tc£èâr
(
STDIN_FILENO
, 
__tˇ˘i⁄
 ?

148 
TCSASOFT
 | 
TCSADRAIN
 : TCSADRAIN, 
cuπ
Ë? 
ERR
 : 
OK
);

149 
	}
}

152 
	$nocbªak
()

155 
__øwmode
 = 0;

156 
cuπ
 = 
u£øw
 ? &
øwt
 : &
__ba£t
;

157  (
	`tc£èâr
(
STDIN_FILENO
, 
__tˇ˘i⁄
 ?

158 
TCSASOFT
 | 
TCSADRAIN
 : TCSADRAIN, 
cuπ
Ë? 
ERR
 : 
OK
);

159 
	}
}

162 
	$echo
()

164 
øwt
.
c_lÊag
 |
ECHO
;

165 
cbªakt
.
c_lÊag
 |
ECHO
;

166 
__ba£t
.
c_lÊag
 |
ECHO
;

168 
__echoô
 = 1;

169  (
	`tc£èâr
(
STDIN_FILENO
, 
__tˇ˘i⁄
 ?

170 
TCSASOFT
 | 
TCSADRAIN
 : TCSADRAIN, 
cuπ
Ë? 
ERR
 : 
OK
);

171 
	}
}

174 
	$n€cho
()

176 
øwt
.
c_lÊag
 &~
ECHO
;

177 
cbªakt
.
c_lÊag
 &~
ECHO
;

178 
__ba£t
.
c_lÊag
 &~
ECHO
;

180 
__echoô
 = 0;

181  (
	`tc£èâr
(
STDIN_FILENO
, 
__tˇ˘i⁄
 ?

182 
TCSASOFT
 | 
TCSADRAIN
 : TCSADRAIN, 
cuπ
Ë? 
ERR
 : 
OK
);

183 
	}
}

186 
	$∆
()

188 
øwt
.
c_iÊag
 |
ICRNL
;

189 
øwt
.
c_oÊag
 |
ONLCR
;

190 
cbªakt
.
c_iÊag
 |
ICRNL
;

191 
cbªakt
.
c_oÊag
 |
ONLCR
;

192 
__ba£t
.
c_iÊag
 |
ICRNL
;

193 
__ba£t
.
c_oÊag
 |
ONLCR
;

195 
__pÁ°
 = 
__øwmode
;

196  (
	`tc£èâr
(
STDIN_FILENO
, 
__tˇ˘i⁄
 ?

197 
TCSASOFT
 | 
TCSADRAIN
 : TCSADRAIN, 
cuπ
Ë? 
ERR
 : 
OK
);

198 
	}
}

201 
	$n⁄l
()

203 
øwt
.
c_iÊag
 &~
ICRNL
;

204 
øwt
.
c_oÊag
 &~
ONLCR
;

205 
cbªakt
.
c_iÊag
 &~
ICRNL
;

206 
cbªakt
.
c_oÊag
 &~
ONLCR
;

207 
__ba£t
.
c_iÊag
 &~
ICRNL
;

208 
__ba£t
.
c_oÊag
 &~
ONLCR
;

210 
__pÁ°
 = 1;

211  (
	`tc£èâr
(
STDIN_FILENO
, 
__tˇ˘i⁄
 ?

212 
TCSASOFT
 | 
TCSADRAIN
 : TCSADRAIN, 
cuπ
Ë? 
ERR
 : 
OK
);

213 
	}
}

216 
	$__°¨twö
()

218 *
°dbuf
;

219 
size_t
 
Àn
;

221 ()
	`fÊush
(
°dout
);

230 i‡(
°dbuf
 =
NULL
) {

231 i‡((
Àn
 = 
LINES
 * 
COLS
 * 2) > 8192)

232 
Àn
 = 8192;

233 i‡((
°dbuf
 = 
	`mÆloc
(
Àn
)Ë=
NULL
)

234 
Àn
 = 0;

236 ()
	`£tvbuf
(
°dout
, 
°dbuf
, 
_IOFBF
, 
Àn
);

238 
	`çuts
(
TI
, 0, 
__˝utch¨
);

239 
	`çuts
(
VS
, 0, 
__˝utch¨
);

240 
	}
}

243 
	$ídwö
()

245 
	`__ª°‹e_°›h™dÀr
();

247 i‡(
curs¸
 !
NULL
) {

248 i‡(
curs¸
->
Êags
 & 
__WSTANDOUT
) {

249 
	`çuts
(
SE
, 0, 
__˝utch¨
);

250 
curs¸
->
Êags
 &~
__WSTANDOUT
;

252 
	`__mvcur
(
curs¸
->
cury
, curs¸->
curx
, curs¸->
maxy
 - 1, 0, 0);

255 ()
	`çuts
(
VE
, 0, 
__˝utch¨
);

256 ()
	`çuts
(
TE
, 0, 
__˝utch¨
);

257 ()
	`fÊush
(
°dout
);

258 ()
	`£tvbuf
(
°dout
, 
NULL
, 
_IOLBF
, 0);

260  (
	`tc£èâr
(
STDIN_FILENO
, 
__tˇ˘i⁄
 ?

261 
TCSASOFT
 | 
TCSADRAIN
 : TCSADRAIN, &
__‹ig_ãrmios
Ë? 
ERR
 : 
OK
);

262 
	}
}

269 
ãrmios
 
	gßvedây
;

271 
	$ßvëty
()

273  (
	`tcgë©å
(
STDIN_FILENO
, &
ßvedây
Ë? 
ERR
 : 
OK
);

274 
	}
}

277 
	$ª£ây
()

279  (
	`tc£èâr
(
STDIN_FILENO
, 
__tˇ˘i⁄
 ?

280 
TCSASOFT
 | 
TCSADRAIN
 : TCSADRAIN, &
ßvedây
Ë? 
ERR
 : 
OK
);

281 
	}
}

	@curses/unctrl.c

34 #i‚de‡
löt


35 
	gsccsid
[] = "@(#)unctrl.c 8.1 (Berkeley) 6/4/93";

38 * 
	g__un˘æ
[256] = {

74 
	g__un˘æÀn
[256] = {

	@curses/waddnstr.c

34 #i‚de‡
löt


35 
	gsccsid
[] = "@(#)addnstr.c 8.2 (Berkeley) 5/4/94";

38 
	~<°rög.h
>

40 
	~"cur£s.h
"

49 
	$waddn°r
(
wö
, 
s
, 
n
)

50 
WINDOW
 *
wö
;

51 c⁄° *
s
;

52 
n
;

54 
size_t
 
Àn
;

55 c⁄° *
p
;

57 i‡(
n
 > 0)

58 
p
 = 
s
, 
Àn
 = 0; 
n
-- && *p++; ++len);

60 
Àn
 = 
	`°æí
(
s
);

61  (
	`waddbyãs
(
wö
, 
s
, 
Àn
));

62 
	}
}

	@db/btree/bt_close.c

37 #i‡
deföed
(
LIBC_SCCS
Ë&& !deföed(
löt
)

38 
	gsccsid
[] = "@(#)bt_close.c 8.7 (Berkeley) 8/17/94";

41 
	~<sys/∑øm.h
>

43 
	~<î∫o.h
>

44 
	~<°dio.h
>

45 
	~<°dlib.h
>

46 
	~<°rög.h
>

47 
	~<uni°d.h
>

49 
	~<db.h
>

50 
	~"båì.h
"

52 
bt_mëa
 
__P
((
BTREE
 *));

64 
	$__bt_˛o£
(
dbp
)

65 
DB
 *
dbp
;

67 
BTREE
 *
t
;

68 
fd
;

70 
t
 = 
dbp
->
öã∫Æ
;

73 i‡(
t
->
bt_pö√d
 !
NULL
) {

74 
	`mpoﬁ_put
(
t
->
bt_mp
,Å->
bt_pö√d
, 0);

75 
t
->
bt_pö√d
 = 
NULL
;

79 i‡(
	`__bt_sync
(
dbp
, 0Ë=
RET_ERROR
)

80  (
RET_ERROR
);

83 i‡(
	`mpoﬁ_˛o£
(
t
->
bt_mp
Ë=
RET_ERROR
)

84  (
RET_ERROR
);

87 i‡(
t
->
bt_curs‹
.
key
.
d©a
 !
NULL
) {

88 
	`‰ì
(
t
->
bt_curs‹
.
key
.
d©a
);

89 
t
->
bt_curs‹
.
key
.
size
 = 0;

90 
t
->
bt_curs‹
.
key
.
d©a
 = 
NULL
;

92 i‡(
t
->
bt_rkey
.
d©a
) {

93 
	`‰ì
(
t
->
bt_rkey
.
d©a
);

94 
t
->
bt_rkey
.
size
 = 0;

95 
t
->
bt_rkey
.
d©a
 = 
NULL
;

97 i‡(
t
->
bt_rd©a
.
d©a
) {

98 
	`‰ì
(
t
->
bt_rd©a
.
d©a
);

99 
t
->
bt_rd©a
.
size
 = 0;

100 
t
->
bt_rd©a
.
d©a
 = 
NULL
;

103 
fd
 = 
t
->
bt_fd
;

104 
	`‰ì
(
t
);

105 
	`‰ì
(
dbp
);

106  (
	`˛o£
(
fd
Ë? 
RET_ERROR
 : 
RET_SUCCESS
);

107 
	}
}

119 
	$__bt_sync
(
dbp
, 
Êags
)

120 c⁄° 
DB
 *
dbp
;

121 
u_öt
 
Êags
;

123 
BTREE
 *
t
;

124 
°©us
;

126 
t
 = 
dbp
->
öã∫Æ
;

129 i‡(
t
->
bt_pö√d
 !
NULL
) {

130 
	`mpoﬁ_put
(
t
->
bt_mp
,Å->
bt_pö√d
, 0);

131 
t
->
bt_pö√d
 = 
NULL
;

135 i‡(
Êags
 != 0) {

136 
î∫o
 = 
EINVAL
;

137  (
RET_ERROR
);

140 i‡(
	`F_ISSET
(
t
, 
B_INMEM
 | 
B_RDONLY
Ë|| !F_ISSET—, 
B_MODIFIED
))

141  (
RET_SUCCESS
);

143 i‡(
	`F_ISSET
(
t
, 
B_METADIRTY
Ë&& 
	`bt_mëa
—Ë=
RET_ERROR
)

144  (
RET_ERROR
);

146 i‡((
°©us
 = 
	`mpoﬁ_sync
(
t
->
bt_mp
)Ë=
RET_SUCCESS
)

147 
	`F_CLR
(
t
, 
B_MODIFIED
);

149  (
°©us
);

150 
	}
}

162 
	$bt_mëa
(
t
)

163 
BTREE
 *
t
;

165 
BTMETA
 
m
;

166 *
p
;

168 i‡((
p
 = 
	`mpoﬁ_gë
(
t
->
bt_mp
, 
P_META
, 0)Ë=
NULL
)

169  (
RET_ERROR
);

172 
m
.
magic
 = 
BTREEMAGIC
;

173 
m
.
vîsi⁄
 = 
BTREEVERSION
;

174 
m
.
psize
 = 
t
->
bt_psize
;

175 
m
.
‰ì
 = 
t
->
bt_‰ì
;

176 
m
.
ƒecs
 = 
t
->
bt_ƒecs
;

177 
m
.
Êags
 = 
	`F_ISSET
(
t
, 
SAVEMETA
);

179 
	`memmove
(
p
, &
m
, (
BTMETA
));

180 
	`mpoﬁ_put
(
t
->
bt_mp
, 
p
, 
MPOOL_DIRTY
);

181  (
RET_SUCCESS
);

182 
	}
}

	@db/btree/bt_conv.c

37 #i‡
deföed
(
LIBC_SCCS
Ë&& !deföed(
löt
)

38 
	gsccsid
[] = "@(#)bt_conv.c 8.5 (Berkeley) 8/17/94";

41 
	~<sys/∑øm.h
>

43 
	~<°dio.h
>

45 
	~<db.h
>

46 
	~"båì.h
"

48 
msw≠
 
__P
((
PAGE
 *));

61 
	$__bt_pgö
(
t
, 
pg
, 
µ
)

62 *
t
;

63 
pgno_t
 
pg
;

64 *
µ
;

66 
PAGE
 *
h
;

67 
ödx_t
 
i
, 
t›
;

68 
u_ch¨
 
Êags
;

69 *
p
;

71 i‡(!
	`F_ISSET
(((
BTREE
 *)
t
), 
B_NEEDSWAP
))

73 i‡(
pg
 =
P_META
) {

74 
	`msw≠
(
µ
);

78 
h
 = 
µ
;

79 
	`M_32_SWAP
(
h
->
pgno
);

80 
	`M_32_SWAP
(
h
->
¥evpg
);

81 
	`M_32_SWAP
(
h
->
√xçg
);

82 
	`M_32_SWAP
(
h
->
Êags
);

83 
	`M_16_SWAP
(
h
->
lowî
);

84 
	`M_16_SWAP
(
h
->
uµî
);

86 
t›
 = 
	`NEXTINDEX
(
h
);

87 i‡((
h
->
Êags
 & 
P_TYPE
Ë=
P_BINTERNAL
)

88 
i
 = 0; i < 
t›
; i++) {

89 
	`M_16_SWAP
(
h
->
löp
[
i
]);

90 
p
 = (*)
	`GETBINTERNAL
(
h
, 
i
);

91 
	`P_32_SWAP
(
p
);

92 
p
 +(
u_öt32_t
);

93 
	`P_32_SWAP
(
p
);

94 
p
 +(
pgno_t
);

95 i‡(*(
u_ch¨
 *)
p
 & 
P_BIGKEY
) {

96 
p
 +(
u_ch¨
);

97 
	`P_32_SWAP
(
p
);

98 
p
 +(
pgno_t
);

99 
	`P_32_SWAP
(
p
);

102 i‡((
h
->
Êags
 & 
P_TYPE
Ë=
P_BLEAF
)

103 
i
 = 0; i < 
t›
; i++) {

104 
	`M_16_SWAP
(
h
->
löp
[
i
]);

105 
p
 = (*)
	`GETBLEAF
(
h
, 
i
);

106 
	`P_32_SWAP
(
p
);

107 
p
 +(
u_öt32_t
);

108 
	`P_32_SWAP
(
p
);

109 
p
 +(
u_öt32_t
);

110 
Êags
 = *(
u_ch¨
 *)
p
;

111 i‡(
Êags
 & (
P_BIGKEY
 | 
P_BIGDATA
)) {

112 
p
 +(
u_ch¨
);

113 i‡(
Êags
 & 
P_BIGKEY
) {

114 
	`P_32_SWAP
(
p
);

115 
p
 +(
pgno_t
);

116 
	`P_32_SWAP
(
p
);

118 i‡(
Êags
 & 
P_BIGDATA
) {

119 
p
 +(
u_öt32_t
);

120 
	`P_32_SWAP
(
p
);

121 
p
 +(
pgno_t
);

122 
	`P_32_SWAP
(
p
);

126 
	}
}

129 
	$__bt_pgout
(
t
, 
pg
, 
µ
)

130 *
t
;

131 
pgno_t
 
pg
;

132 *
µ
;

134 
PAGE
 *
h
;

135 
ödx_t
 
i
, 
t›
;

136 
u_ch¨
 
Êags
;

137 *
p
;

139 i‡(!
	`F_ISSET
(((
BTREE
 *)
t
), 
B_NEEDSWAP
))

141 i‡(
pg
 =
P_META
) {

142 
	`msw≠
(
µ
);

146 
h
 = 
µ
;

147 
t›
 = 
	`NEXTINDEX
(
h
);

148 i‡((
h
->
Êags
 & 
P_TYPE
Ë=
P_BINTERNAL
)

149 
i
 = 0; i < 
t›
; i++) {

150 
p
 = (*)
	`GETBINTERNAL
(
h
, 
i
);

151 
	`P_32_SWAP
(
p
);

152 
p
 +(
u_öt32_t
);

153 
	`P_32_SWAP
(
p
);

154 
p
 +(
pgno_t
);

155 i‡(*(
u_ch¨
 *)
p
 & 
P_BIGKEY
) {

156 
p
 +(
u_ch¨
);

157 
	`P_32_SWAP
(
p
);

158 
p
 +(
pgno_t
);

159 
	`P_32_SWAP
(
p
);

161 
	`M_16_SWAP
(
h
->
löp
[
i
]);

163 i‡((
h
->
Êags
 & 
P_TYPE
Ë=
P_BLEAF
)

164 
i
 = 0; i < 
t›
; i++) {

165 
p
 = (*)
	`GETBLEAF
(
h
, 
i
);

166 
	`P_32_SWAP
(
p
);

167 
p
 +(
u_öt32_t
);

168 
	`P_32_SWAP
(
p
);

169 
p
 +(
u_öt32_t
);

170 
Êags
 = *(
u_ch¨
 *)
p
;

171 i‡(
Êags
 & (
P_BIGKEY
 | 
P_BIGDATA
)) {

172 
p
 +(
u_ch¨
);

173 i‡(
Êags
 & 
P_BIGKEY
) {

174 
	`P_32_SWAP
(
p
);

175 
p
 +(
pgno_t
);

176 
	`P_32_SWAP
(
p
);

178 i‡(
Êags
 & 
P_BIGDATA
) {

179 
p
 +(
u_öt32_t
);

180 
	`P_32_SWAP
(
p
);

181 
p
 +(
pgno_t
);

182 
	`P_32_SWAP
(
p
);

185 
	`M_16_SWAP
(
h
->
löp
[
i
]);

188 
	`M_32_SWAP
(
h
->
pgno
);

189 
	`M_32_SWAP
(
h
->
¥evpg
);

190 
	`M_32_SWAP
(
h
->
√xçg
);

191 
	`M_32_SWAP
(
h
->
Êags
);

192 
	`M_16_SWAP
(
h
->
lowî
);

193 
	`M_16_SWAP
(
h
->
uµî
);

194 
	}
}

203 
	$msw≠
(
pg
)

204 
PAGE
 *
pg
;

206 *
p
;

208 
p
 = (*)
pg
;

209 
	`P_32_SWAP
(
p
);

210 
p
 +(
u_öt32_t
);

211 
	`P_32_SWAP
(
p
);

212 
p
 +(
u_öt32_t
);

213 
	`P_32_SWAP
(
p
);

214 
p
 +(
u_öt32_t
);

215 
	`P_32_SWAP
(
p
);

216 
p
 +(
u_öt32_t
);

217 
	`P_32_SWAP
(
p
);

218 
p
 +(
u_öt32_t
);

219 
	`P_32_SWAP
(
p
);

220 
p
 +(
u_öt32_t
);

221 
	}
}

	@db/btree/bt_debug.c

37 #i‡
deföed
(
LIBC_SCCS
Ë&& !deföed(
löt
)

38 
	gsccsid
[] = "@(#)bt_debug.c 8.5 (Berkeley) 8/17/94";

41 
	~<sys/∑øm.h
>

43 
	~<°dio.h
>

44 
	~<°dlib.h
>

45 
	~<°rög.h
>

47 
	~<db.h
>

48 
	~"båì.h
"

50 #ifde‡
DEBUG


58 
	$__bt_dump
(
dbp
)

59 
DB
 *
dbp
;

61 
BTREE
 *
t
;

62 
PAGE
 *
h
;

63 
pgno_t
 
i
;

64 *
£p
;

66 
t
 = 
dbp
->
öã∫Æ
;

67 ()
	`Ârötf
(
°dîr
, "%s:Ögsz %d",

68 
	`F_ISSET
(
t
, 
B_INMEM
Ë? "mem‹y" : "disk",Å->
bt_psize
);

69 i‡(
	`F_ISSET
(
t
, 
R_RECNO
))

70 ()
	`Ârötf
(
°dîr
, " key†%lu", 
t
->
bt_ƒecs
);

71 #unde‡
X


72 
	#X
(
Êag
, 
«me
) \

73 i‡(
	`F_ISSET
(
t
, 
Êag
)) { \

74 ()
	`Ârötf
(
°dîr
, "%s%s", 
£p
, 
«me
); \

75 
£p
 = ", "; \

76 }

	)

77 i‡(
t
->
Êags
 != 0) {

78 
£p
 = " flags (";

79 
	`X
(
R_FIXLEN
, "FIXLEN");

80 
	`X
(
B_INMEM
, "INMEM");

81 
	`X
(
B_NODUPS
, "NODUPS");

82 
	`X
(
B_RDONLY
, "RDONLY");

83 
	`X
(
R_RECNO
, "RECNO");

84 
	`X
(
B_METADIRTY
,"METADIRTY");

85 ()
	`Ârötf
(
°dîr
, ")\n");

87 #unde‡
X


89 
i
 = 
P_ROOT
; (
h
 = 
	`mpoﬁ_gë
(
t
->
bt_mp
, i, 0)Ë!
NULL
; ++i) {

90 
	`__bt_d∑ge
(
h
);

91 ()
	`mpoﬁ_put
(
t
->
bt_mp
, 
h
, 0);

93 
	}
}

102 
	$__bt_dm∑ge
(
h
)

103 
PAGE
 *
h
;

105 
BTMETA
 *
m
;

106 *
£p
;

108 
m
 = (
BTMETA
 *)
h
;

109 ()
	`Ârötf
(
°dîr
, "magi¯%lx\n", 
m
->
magic
);

110 ()
	`Ârötf
(
°dîr
, "vîsi⁄ %lu\n", 
m
->
vîsi⁄
);

111 ()
	`Ârötf
(
°dîr
, "psizê%lu\n", 
m
->
psize
);

112 ()
	`Ârötf
(
°dîr
, "‰ì %lu\n", 
m
->
‰ì
);

113 ()
	`Ârötf
(
°dîr
, "ƒec†%lu\n", 
m
->
ƒecs
);

114 ()
	`Ârötf
(
°dîr
, "Êag†%lu", 
m
->
Êags
);

115 #unde‡
X


116 
	#X
(
Êag
, 
«me
) \

117 i‡(
m
->
Êags
 & 
Êag
) { \

118 ()
	`Ârötf
(
°dîr
, "%s%s", 
£p
, 
«me
); \

119 
£p
 = ", "; \

120 }

	)

121 i‡(
m
->
Êags
) {

122 
£p
 = " (";

123 
	`X
(
B_NODUPS
, "NODUPS");

124 
	`X
(
R_RECNO
, "RECNO");

125 ()
	`Ârötf
(
°dîr
, ")");

127 
	}
}

136 
	$__bt_d≈age
(
dbp
, 
pgno
)

137 
DB
 *
dbp
;

138 
pgno_t
 
pgno
;

140 
BTREE
 *
t
;

141 
PAGE
 *
h
;

143 
t
 = 
dbp
->
öã∫Æ
;

144 i‡((
h
 = 
	`mpoﬁ_gë
(
t
->
bt_mp
, 
pgno
, 0)Ë!
NULL
) {

145 
	`__bt_d∑ge
(
h
);

146 ()
	`mpoﬁ_put
(
t
->
bt_mp
, 
h
, 0);

148 
	}
}

157 
	$__bt_d∑ge
(
h
)

158 
PAGE
 *
h
;

160 
BINTERNAL
 *
bi
;

161 
BLEAF
 *
bl
;

162 
RINTERNAL
 *
ri
;

163 
RLEAF
 *
æ
;

164 
ödx_t
 
cur
, 
t›
;

165 *
£p
;

167 ()
	`Ârötf
(
°dîr
, "Öagê%d: (", 
h
->
pgno
);

168 #unde‡
X


169 
	#X
(
Êag
, 
«me
) \

170 i‡(
h
->
Êags
 & 
Êag
) { \

171 ()
	`Ârötf
(
°dîr
, "%s%s", 
£p
, 
«me
); \

172 
£p
 = ", "; \

173 }

	)

174 
£p
 = "";

175 
	`X
(
P_BINTERNAL
, "BINTERNAL")

176 
	`X
(
P_BLEAF
, "BLEAF")

177 
	`X
(
P_RINTERNAL
, "RINTERNAL")

178 
	`X
(
P_RLEAF
, "RLEAF")

179 
	`X
(
P_OVERFLOW
, "OVERFLOW")

180 
	`X
(
P_PRESERVE
, "PRESERVE");

181 ()
	`Ârötf
(
°dîr
, ")\n");

182 #unde‡
X


184 ()
	`Ârötf
(
°dîr
, "\çªv %2dÇexà%2d", 
h
->
¥evpg
, h->
√xçg
);

185 i‡(
h
->
Êags
 & 
P_OVERFLOW
)

188 
t›
 = 
	`NEXTINDEX
(
h
);

189 ()
	`Ârötf
(
°dîr
, "Üower %3d upper %3dÇextind %d\n",

190 
h
->
lowî
, h->
uµî
, 
t›
);

191 
cur
 = 0; cu∏< 
t›
; cur++) {

192 ()
	`Ârötf
(
°dîr
, "\t[%03d] %4d ", 
cur
, 
h
->
löp
[cur]);

193 
h
->
Êags
 & 
P_TYPE
) {

194 
P_BINTERNAL
:

195 
bi
 = 
	`GETBINTERNAL
(
h
, 
cur
);

196 ()
	`Ârötf
(
°dîr
,

197 "sizê%03dÖgnÿ%03d", 
bi
->
ksize
, bi->
pgno
);

198 i‡(
bi
->
Êags
 & 
P_BIGKEY
)

199 ()
	`Ârötf
(
°dîr
, " (indirect)");

200 i‡(
bi
->
ksize
)

201 ()
	`Ârötf
(
°dîr
,

202 " {%.*s}", ()
bi
->
ksize
, bi->
byãs
);

204 
P_RINTERNAL
:

205 
ri
 = 
	`GETRINTERNAL
(
h
, 
cur
);

206 ()
	`Ârötf
(
°dîr
, "entries %03dÖgno %03d",

207 
ri
->
ƒecs
,Ñi->
pgno
);

209 
P_BLEAF
:

210 
bl
 = 
	`GETBLEAF
(
h
, 
cur
);

211 i‡(
bl
->
Êags
 & 
P_BIGKEY
)

212 ()
	`Ârötf
(
°dîr
,

214 *(
pgno_t
 *)
bl
->
byãs
,

215 *(
u_öt32_t
 *)(
bl
->
byãs
 + (
pgno_t
)));

216 i‡(
bl
->
ksize
)

217 ()
	`Ârötf
(
°dîr
, "%s/", 
bl
->
byãs
);

218 i‡(
bl
->
Êags
 & 
P_BIGDATA
)

219 ()
	`Ârötf
(
°dîr
,

221 *(
pgno_t
 *)(
bl
->
byãs
 + bl->
ksize
),

222 *(
u_öt32_t
 *)(
bl
->
byãs
 + bl->
ksize
 +

223 (
pgno_t
)));

224 i‡(
bl
->
dsize
)

225 ()
	`Ârötf
(
°dîr
, "%.*s",

226 ()
bl
->
dsize
, bl->
byãs
 + bl->
ksize
);

228 
P_RLEAF
:

229 
æ
 = 
	`GETRLEAF
(
h
, 
cur
);

230 i‡(
æ
->
Êags
 & 
P_BIGDATA
)

231 ()
	`Ârötf
(
°dîr
,

233 *(
pgno_t
 *)
æ
->
byãs
,

234 *(
u_öt32_t
 *)(
æ
->
byãs
 + (
pgno_t
)));

235 i‡(
æ
->
dsize
)

236 ()
	`Ârötf
(
°dîr
,

237 "%.*s", ()
æ
->
dsize
,Ñl->
byãs
);

240 ()
	`Ârötf
(
°dîr
, "\n");

242 
	}
}

245 #ifde‡
STATISTICS


253 
	$__bt_°©
(
dbp
)

254 
DB
 *
dbp
;

256 
u_l⁄g
 
bt_ˇche_hô
, 
bt_ˇche_miss
, 
bt_pfxßved
, 
bt_roŸ•lô
;

257 
u_l⁄g
 
bt_s‹t•lô
, 
bt_•lô
;

258 
BTREE
 *
t
;

259 
PAGE
 *
h
;

260 
pgno_t
 
i
, 
pc⁄t
, 
pöã∫Æ
, 
∂óf
;

261 
u_l⁄g
 
i‰ì
, 
l‰ì
, 
nkeys
;

262 
Àvñs
;

264 
t
 = 
dbp
->
öã∫Æ
;

265 
pc⁄t
 = 
pöã∫Æ
 = 
∂óf
 = 0;

266 
nkeys
 = 
i‰ì
 = 
l‰ì
 = 0;

267 
i
 = 
P_ROOT
; (
h
 = 
	`mpoﬁ_gë
(
t
->
bt_mp
, i, 0)Ë!
NULL
; ++i) {

268 
h
->
Êags
 & 
P_TYPE
) {

269 
P_BINTERNAL
:

270 
P_RINTERNAL
:

271 ++
pöã∫Æ
;

272 
i‰ì
 +
h
->
uµî
 - h->
lowî
;

274 
P_BLEAF
:

275 
P_RLEAF
:

276 ++
∂óf
;

277 
l‰ì
 +
h
->
uµî
 - h->
lowî
;

278 
nkeys
 +
	`NEXTINDEX
(
h
);

280 
P_OVERFLOW
:

281 ++
pc⁄t
;

284 ()
	`mpoﬁ_put
(
t
->
bt_mp
, 
h
, 0);

288 
i
 = 
P_ROOT
, 
Àvñs
 = 0 ;; ++levels) {

289 
h
 = 
	`mpoﬁ_gë
(
t
->
bt_mp
, 
i
, 0);

290 i‡(
h
->
Êags
 & (
P_BLEAF
|
P_RLEAF
)) {

291 i‡(
Àvñs
 == 0)

292 
Àvñs
 = 1;

293 ()
	`mpoﬁ_put
(
t
->
bt_mp
, 
h
, 0);

296 
i
 = 
	`F_ISSET
(
t
, 
R_RECNO
) ?

297 
	`GETRINTERNAL
(
h
, 0)->
pgno
 :

298 
	`GETBINTERNAL
(
h
, 0)->
pgno
;

299 ()
	`mpoﬁ_put
(
t
->
bt_mp
, 
h
, 0);

302 ()
	`Ârötf
(
°dîr
, "%dÜevel%s with %ld keys",

303 
Àvñs
,Üevñ†=1 ? "" : "s", 
nkeys
);

304 i‡(
	`F_ISSET
(
t
, 
R_RECNO
))

305 ()
	`Ârötf
(
°dîr
, " (%ld hódî cou¡)", 
t
->
bt_ƒecs
);

306 ()
	`Ârötf
(
°dîr
,

308 
pöã∫Æ
 + 
∂óf
 + 
pc⁄t
,Öleaf,Öinternal,Öcont);

309 ()
	`Ârötf
(
°dîr
, "%ld cache hits, %ld cache misses\n",

310 
bt_ˇche_hô
, 
bt_ˇche_miss
);

311 ()
	`Ârötf
(
°dîr
, "%ld splits (%ldÑoot splits, %ld sort splits)\n",

312 
bt_•lô
, 
bt_roŸ•lô
, 
bt_s‹t•lô
);

313 
∂óf
 *
t
->
bt_psize
 - 
BTDATAOFF
;

314 i‡(
∂óf
)

315 ()
	`Ârötf
(
°dîr
,

317 (()(
∂óf
 - 
l‰ì
) /Öleaf) * 100,

318 
∂óf
 - 
l‰ì
,Üfree);

319 
pöã∫Æ
 *
t
->
bt_psize
 - 
BTDATAOFF
;

320 i‡(
pöã∫Æ
)

321 ()
	`Ârötf
(
°dîr
,

323 (()(
pöã∫Æ
 - 
i‰ì
) /Öinternal) * 100,

324 
pöã∫Æ
 - 
i‰ì
, ifree);

325 i‡(
bt_pfxßved
)

326 ()
	`Ârötf
(
°dîr
, "prefix checkingÑemoved %lu bytes.\n",

327 
bt_pfxßved
);

328 
	}
}

	@db/btree/bt_delete.c

37 #i‡
deföed
(
LIBC_SCCS
Ë&& !deföed(
löt
)

38 
	gsccsid
[] = "@(#)bt_delete.c 8.13 (Berkeley) 7/28/94";

41 
	~<sys/ty≥s.h
>

43 
	~<î∫o.h
>

44 
	~<°dio.h
>

45 
	~<°rög.h
>

47 
	~<db.h
>

48 
	~"båì.h
"

50 
__bt_bdñëe
 
__P
((
BTREE
 *, c⁄° 
DBT
 *));

51 
__bt_curdñ
 
__P
((
BTREE
 *, c⁄° 
DBT
 *, 
PAGE
 *, 
u_öt
));

52 
__bt_pdñëe
 
__P
((
BTREE
 *, 
PAGE
 *));

53 
__bt_ªlök
 
__P
((
BTREE
 *, 
PAGE
 *));

54 
__bt_°kacq
 
__P
((
BTREE
 *, 
PAGE
 **, 
CURSOR
 *));

63 
	$__bt_dñëe
(
dbp
, 
key
, 
Êags
)

64 c⁄° 
DB
 *
dbp
;

65 c⁄° 
DBT
 *
key
;

66 
u_öt
 
Êags
;

68 
BTREE
 *
t
;

69 
CURSOR
 *
c
;

70 
PAGE
 *
h
;

71 
°©us
;

73 
t
 = 
dbp
->
öã∫Æ
;

76 i‡(
t
->
bt_pö√d
 !
NULL
) {

77 
	`mpoﬁ_put
(
t
->
bt_mp
,Å->
bt_pö√d
, 0);

78 
t
->
bt_pö√d
 = 
NULL
;

82 i‡(
	`F_ISSET
(
t
, 
B_RDONLY
)) {

83 
î∫o
 = 
EPERM
;

84  (
RET_ERROR
);

87 
Êags
) {

89 
°©us
 = 
	`__bt_bdñëe
(
t
, 
key
);

91 
R_CURSOR
:

96 
c
 = &
t
->
bt_curs‹
;

97 i‡(
	`F_ISSET
(
c
, 
CURS_INIT
)) {

98 i‡(
	`F_ISSET
(
c
, 
CURS_ACQUIRE
 | 
CURS_AFTER
 | 
CURS_BEFORE
))

99  (
RET_SPECIAL
);

100 i‡((
h
 = 
	`mpoﬁ_gë
(
t
->
bt_mp
, 
c
->
pg
.
pgno
, 0)Ë=
NULL
)

101  (
RET_ERROR
);

107 i‡(
	`NEXTINDEX
(
h
) == 1)

108 i‡(
	`__bt_°kacq
(
t
, &
h
, &t->
bt_curs‹
))

109  (
RET_ERROR
);

111 
°©us
 = 
	`__bt_dÀaf
(
t
, 
NULL
, 
h
, 
c
->
pg
.
ödex
);

113 i‡(
	`NEXTINDEX
(
h
Ë=0 && 
°©us
 =
RET_SUCCESS
) {

114 i‡(
	`__bt_pdñëe
(
t
, 
h
))

115  (
RET_ERROR
);

117 
	`mpoﬁ_put
(
t
->
bt_mp
,

118 
h
, 
°©us
 =
RET_SUCCESS
 ? 
MPOOL_DIRTY
 : 0);

123 
î∫o
 = 
EINVAL
;

124  (
RET_ERROR
);

126 i‡(
°©us
 =
RET_SUCCESS
)

127 
	`F_SET
(
t
, 
B_MODIFIED
);

128  (
°©us
);

129 
	}
}

144 
	$__bt_°kacq
(
t
, 
hp
, 
c
)

145 
BTREE
 *
t
;

146 
PAGE
 **
hp
;

147 
CURSOR
 *
c
;

149 
BINTERNAL
 *
bi
;

150 
EPG
 *
e
;

151 
EPGNO
 *
∑ª¡
;

152 
PAGE
 *
h
;

153 
ödx_t
 
ödex
;

154 
pgno_t
 
pgno
;

155 
ª˙o_t
 
√xçg
, 
¥evpg
;

156 
exa˘
, 
Àvñ
;

162 
h
 = *
hp
;

163 
	`mpoﬁ_put
(
t
->
bt_mp
, 
h
, 0);

164 i‡((
e
 = 
	`__bt_£¨ch
(
t
, &
c
->
key
, &
exa˘
)Ë=
NULL
)

166 
h
 = 
e
->
∑ge
;

169 i‡(
h
->
pgno
 =
c
->
pg
.pgno)

170 
ªt
;

178 
h
->
pgno
 !
c
->
pg
.pgno) {

179 i‡((
√xçg
 = 
h
->√xçgË=
P_INVALID
)

181 
	`mpoﬁ_put
(
t
->
bt_mp
, 
h
, 0);

184 
Àvñ
 = 0; (
∑ª¡
 = 
	`BT_POP
(
t
)Ë!
NULL
; ++level) {

186 i‡((
h
 = 
	`mpoﬁ_gë
(
t
->
bt_mp
, 
∑ª¡
->
pgno
, 0)Ë=
NULL
)

190 i‡(
∑ª¡
->
ödex
 !
	`NEXTINDEX
(
h
) - 1) {

191 
ödex
 = 
∑ª¡
->index + 1;

192 
	`BT_PUSH
(
t
, 
h
->
pgno
, 
ödex
);

195 
	`mpoﬁ_put
(
t
->
bt_mp
, 
h
, 0);

199 
Àvñ
--) {

201 
bi
 = 
	`GETBINTERNAL
(
h
, 
ödex
);

202 
pgno
 = 
bi
->pgno;

203 
	`BT_PUSH
(
t
, 
pgno
, 0);

206 
	`mpoﬁ_put
(
t
->
bt_mp
, 
h
, 0);

209 i‡((
h
 = 
	`mpoﬁ_gë
(
t
->
bt_mp
, 
pgno
, 0)Ë=
NULL
)

211 
ödex
 = 0;

213 
	`mpoﬁ_put
(
t
->
bt_mp
, 
h
, 0);

214 i‡((
h
 = 
	`mpoﬁ_gë
(
t
->
bt_mp
, 
√xçg
, 0)Ë=
NULL
)

218 i‡(
h
->
pgno
 =
c
->
pg
.pgno)

219 
ªt
;

222 
	`mpoﬁ_put
(
t
->
bt_mp
, 
h
, 0);

223 i‡((
e
 = 
	`__bt_£¨ch
(
t
, &
c
->
key
, &
exa˘
)Ë=
NULL
)

225 
h
 = 
e
->
∑ge
;

233 
h
->
pgno
 !
c
->
pg
.pgno) {

234 i‡((
¥evpg
 = 
h
->¥evpgË=
P_INVALID
)

236 
	`mpoﬁ_put
(
t
->
bt_mp
, 
h
, 0);

239 
Àvñ
 = 0; (
∑ª¡
 = 
	`BT_POP
(
t
)Ë!
NULL
; ++level) {

241 i‡((
h
 = 
	`mpoﬁ_gë
(
t
->
bt_mp
, 
∑ª¡
->
pgno
, 0)Ë=
NULL
)

245 i‡(
∑ª¡
->
ödex
 != 0) {

246 
ödex
 = 
∑ª¡
->index - 1;

247 
	`BT_PUSH
(
t
, 
h
->
pgno
, 
ödex
);

250 
	`mpoﬁ_put
(
t
->
bt_mp
, 
h
, 0);

254 
Àvñ
--) {

256 
bi
 = 
	`GETBINTERNAL
(
h
, 
ödex
);

257 
pgno
 = 
bi
->pgno;

260 
	`mpoﬁ_put
(
t
->
bt_mp
, 
h
, 0);

263 i‡((
h
 = 
	`mpoﬁ_gë
(
t
->
bt_mp
, 
pgno
, 0)Ë=
NULL
)

266 
ödex
 = 
	`NEXTINDEX
(
h
) - 1;

267 
	`BT_PUSH
(
t
, 
pgno
, 
ödex
);

269 
	`mpoﬁ_put
(
t
->
bt_mp
, 
h
, 0);

270 i‡((
h
 = 
	`mpoﬁ_gë
(
t
->
bt_mp
, 
¥evpg
, 0)Ë=
NULL
)

275 
ªt
: 
	`mpoﬁ_put
(
t
->
bt_mp
, 
h
, 0);

276  ((*
hp
 = 
	`mpoﬁ_gë
(
t
->
bt_mp
, 
c
->
pg
.
pgno
, 0)Ë=
NULL
);

277 
	}
}

291 
	$__bt_bdñëe
(
t
, 
key
)

292 
BTREE
 *
t
;

293 c⁄° 
DBT
 *
key
;

295 
EPG
 *
e
;

296 
PAGE
 *
h
;

297 
dñëed
, 
exa˘
, 
ªdo
;

299 
dñëed
 = 0;

302 
lo›
: i‡((
e
 = 
	`__bt_£¨ch
(
t
, 
key
, &
exa˘
)Ë=
NULL
)

303  (
dñëed
 ? 
RET_SUCCESS
 : 
RET_ERROR
);

304 i‡(!
exa˘
) {

305 
	`mpoﬁ_put
(
t
->
bt_mp
, 
e
->
∑ge
, 0);

306  (
dñëed
 ? 
RET_SUCCESS
 : 
RET_SPECIAL
);

314 
ªdo
 = 0;

315 
h
 = 
e
->
∑ge
;

317 i‡(
	`__bt_dÀaf
(
t
, 
key
, 
h
, 
e
->
ödex
)) {

318 
	`mpoﬁ_put
(
t
->
bt_mp
, 
h
, 0);

319  (
RET_ERROR
);

321 i‡(
	`F_ISSET
(
t
, 
B_NODUPS
)) {

322 i‡(
	`NEXTINDEX
(
h
) == 0) {

323 i‡(
	`__bt_pdñëe
(
t
, 
h
))

324  (
RET_ERROR
);

326 
	`mpoﬁ_put
(
t
->
bt_mp
, 
h
, 
MPOOL_DIRTY
);

327  (
RET_SUCCESS
);

329 
dñëed
 = 1;

330 } 
e
->
ödex
 < 
	`NEXTINDEX
(
h
Ë&& 
	`__bt_cmp
(
t
, 
key
,É) == 0);

333 i‡(
e
->
ödex
 =
	`NEXTINDEX
(
h
))

334 
ªdo
 = 1;

337 
e
->
ödex
-- > 0) {

338 i‡(
	`__bt_cmp
(
t
, 
key
, 
e
) != 0)

340 i‡(
	`__bt_dÀaf
(
t
, 
key
, 
h
, 
e
->
ödex
Ë=
RET_ERROR
) {

341 
	`mpoﬁ_put
(
t
->
bt_mp
, 
h
, 0);

342  (
RET_ERROR
);

344 i‡(
e
->
ödex
 == 0)

345 
ªdo
 = 1;

349 i‡(
	`NEXTINDEX
(
h
) == 0) {

350 i‡(
	`__bt_pdñëe
(
t
, 
h
))

351  (
RET_ERROR
);

352 
lo›
;

356 
	`mpoﬁ_put
(
t
->
bt_mp
, 
h
, 
MPOOL_DIRTY
);

358 i‡(
ªdo
)

359 
lo›
;

360  (
RET_SUCCESS
);

361 
	}
}

378 
	$__bt_pdñëe
(
t
, 
h
)

379 
BTREE
 *
t
;

380 
PAGE
 *
h
;

382 
BINTERNAL
 *
bi
;

383 
PAGE
 *
pg
;

384 
EPGNO
 *
∑ª¡
;

385 
ödx_t
 
˙t
, 
ödex
, *
ù
, 
off£t
;

386 
u_öt32_t
 
nksize
;

387 *
‰om
;

401 (
∑ª¡
 = 
	`BT_POP
(
t
)Ë!
NULL
) {

403 i‡((
pg
 = 
	`mpoﬁ_gë
(
t
->
bt_mp
, 
∑ª¡
->
pgno
, 0)Ë=
NULL
)

404  (
RET_ERROR
);

406 
ödex
 = 
∑ª¡
->index;

407 
bi
 = 
	`GETBINTERNAL
(
pg
, 
ödex
);

410 i‡(
bi
->
Êags
 & 
P_BIGKEY
 &&

411 
	`__ovÊ_dñëe
(
t
, 
bi
->
byãs
Ë=
RET_ERROR
) {

412 
	`mpoﬁ_put
(
t
->
bt_mp
, 
pg
, 0);

413  (
RET_ERROR
);

421 i‡(
	`NEXTINDEX
(
pg
) == 1)

422 i‡(
pg
->
pgno
 =
P_ROOT
) {

423 
pg
->
lowî
 = 
BTDATAOFF
;

424 
pg
->
uµî
 = 
t
->
bt_psize
;

425 
pg
->
Êags
 = 
P_BLEAF
;

427 i‡(
	`__bt_ªlök
(
t
, 
pg
Ë|| 
	`__bt_‰ì
(t,Ög))

428  (
RET_ERROR
);

433 
nksize
 = 
	`NBINTERNAL
(
bi
->
ksize
);

434 
‰om
 = (*)
pg
 +Ög->
uµî
;

435 
	`memmove
(
‰om
 + 
nksize
, from, (*)
bi
 - from);

436 
pg
->
uµî
 +
nksize
;

439 
off£t
 = 
pg
->
löp
[
ödex
];

440 
˙t
 = 
ödex
, 
ù
 = &
pg
->
löp
[0]; cnt--; ++ip)

441 i‡(
ù
[0] < 
off£t
)

442 
ù
[0] +
nksize
;

443 
˙t
 = 
	`NEXTINDEX
(
pg
Ë- 
ödex
; --˙t; ++
ù
)

444 
ù
[0] = ip[1] < 
off£t
 ? ip[1] + 
nksize
 : ip[1];

445 
pg
->
lowî
 -(
ödx_t
);

448 
	`mpoﬁ_put
(
t
->
bt_mp
, 
pg
, 
MPOOL_DIRTY
);

453 i‡(
h
->
pgno
 =
P_ROOT
) {

454 
	`mpoﬁ_put
(
t
->
bt_mp
, 
h
, 
MPOOL_DIRTY
);

455  (
RET_SUCCESS
);

457  (
	`__bt_ªlök
(
t
, 
h
Ë|| 
	`__bt_‰ì
(t, h));

458 
	}
}

474 
	$__bt_dÀaf
(
t
, 
key
, 
h
, 
ödex
)

475 
BTREE
 *
t
;

476 c⁄° 
DBT
 *
key
;

477 
PAGE
 *
h
;

478 
u_öt
 
ödex
;

480 
BLEAF
 *
bl
;

481 
ödx_t
 
˙t
, *
ù
, 
off£t
;

482 
u_öt32_t
 
nbyãs
;

483 *
to
;

484 *
‰om
;

487 i‡(
	`F_ISSET
(&
t
->
bt_curs‹
, 
CURS_INIT
) &&

488 !
	`F_ISSET
(&
t
->
bt_curs‹
, 
CURS_ACQUIRE
) &&

489 
t
->
bt_curs‹
.
pg
.
pgno
 =
h
->pgnÿ&&Å->bt_curs‹.pg.
ödex
 == index &&

490 
	`__bt_curdñ
(
t
, 
key
, 
h
, 
ödex
))

491  (
RET_ERROR
);

494 
to
 = 
bl
 = 
	`GETBLEAF
(
h
, 
ödex
);

495 i‡(
bl
->
Êags
 & 
P_BIGKEY
 && 
	`__ovÊ_dñëe
(
t
, bl->
byãs
Ë=
RET_ERROR
)

496  (
RET_ERROR
);

497 i‡(
bl
->
Êags
 & 
P_BIGDATA
 &&

498 
	`__ovÊ_dñëe
(
t
, 
bl
->
byãs
 + bl->
ksize
Ë=
RET_ERROR
)

499  (
RET_ERROR
);

502 
nbyãs
 = 
	`NBLEAF
(
bl
);

503 
‰om
 = (*)
h
 + h->
uµî
;

504 
	`memmove
(
‰om
 + 
nbyãs
, from, (*)
to
 - from);

505 
h
->
uµî
 +
nbyãs
;

508 
off£t
 = 
h
->
löp
[
ödex
];

509 
˙t
 = 
ödex
, 
ù
 = &
h
->
löp
[0]; cnt--; ++ip)

510 i‡(
ù
[0] < 
off£t
)

511 
ù
[0] +
nbyãs
;

512 
˙t
 = 
	`NEXTINDEX
(
h
Ë- 
ödex
; --˙t; ++
ù
)

513 
ù
[0] = ip[1] < 
off£t
 ? ip[1] + 
nbyãs
 : ip[1];

514 
h
->
lowî
 -(
ödx_t
);

517 i‡(
	`F_ISSET
(&
t
->
bt_curs‹
, 
CURS_INIT
) &&

518 !
	`F_ISSET
(&
t
->
bt_curs‹
, 
CURS_ACQUIRE
) &&

519 
t
->
bt_curs‹
.
pg
.
pgno
 =
h
->pgnÿ&&Å->bt_curs‹.pg.
ödex
 > index)

520 --
t
->
bt_curs‹
.
pg
.
ödex
;

522  (
RET_SUCCESS
);

523 
	}
}

539 
	$__bt_curdñ
(
t
, 
key
, 
h
, 
ödex
)

540 
BTREE
 *
t
;

541 c⁄° 
DBT
 *
key
;

542 
PAGE
 *
h
;

543 
u_öt
 
ödex
;

545 
CURSOR
 *
c
;

546 
EPG
 
e
;

547 
PAGE
 *
pg
;

548 
curc›y
, 
°©us
;

554 
c
 = &
t
->
bt_curs‹
;

555 
	`F_CLR
(
c
, 
CURS_AFTER
 | 
CURS_BEFORE
 | 
CURS_ACQUIRE
);

557 
curc›y
 = 0;

558 i‡(!
	`F_ISSET
(
t
, 
B_NODUPS
)) {

564 i‡(
key
 =
NULL
) {

565 
e
.
∑ge
 = 
h
;

566 
e
.
ödex
 = index;

567 i‡((
°©us
 = 
	`__bt_ªt
(
t
, &
e
,

568 &
c
->
key
, &c->key, 
NULL
, NULL, 1)Ë!
RET_SUCCESS
)

569  (
°©us
);

570 
curc›y
 = 1;

571 
key
 = &
c
->key;

574 i‡(
ödex
 > 0) {

575 
e
.
∑ge
 = 
h
;

576 
e
.
ödex
 = index - 1;

577 i‡(
	`__bt_cmp
(
t
, 
key
, &
e
) == 0) {

578 
	`F_SET
(
c
, 
CURS_BEFORE
);

579 
dup2
;

583 i‡(
ödex
 < 
	`NEXTINDEX
(
h
) - 1) {

584 
e
.
∑ge
 = 
h
;

585 
e
.
ödex
 = index + 1;

586 i‡(
	`__bt_cmp
(
t
, 
key
, &
e
) == 0) {

587 
	`F_SET
(
c
, 
CURS_AFTER
);

588 
dup2
;

592 i‡(
ödex
 =0 && 
h
->
¥evpg
 !
P_INVALID
) {

593 i‡((
pg
 = 
	`mpoﬁ_gë
(
t
->
bt_mp
, 
h
->
¥evpg
, 0)Ë=
NULL
)

594  (
RET_ERROR
);

595 
e
.
∑ge
 = 
pg
;

596 
e
.
ödex
 = 
	`NEXTINDEX
(
pg
) - 1;

597 i‡(
	`__bt_cmp
(
t
, 
key
, &
e
) == 0) {

598 
	`F_SET
(
c
, 
CURS_BEFORE
);

599 
dup1
;

601 
	`mpoﬁ_put
(
t
->
bt_mp
, 
pg
, 0);

604 i‡(
ödex
 =
	`NEXTINDEX
(
h
Ë- 1 && h->
√xçg
 !
P_INVALID
) {

605 i‡((
pg
 = 
	`mpoﬁ_gë
(
t
->
bt_mp
, 
h
->
√xçg
, 0)Ë=
NULL
)

606  (
RET_ERROR
);

607 
e
.
∑ge
 = 
pg
;

608 
e
.
ödex
 = 0;

609 i‡(
	`__bt_cmp
(
t
, 
key
, &
e
) == 0) {

610 
	`F_SET
(
c
, 
CURS_AFTER
);

611 
dup1
: 
	`mpoﬁ_put
(
t
->
bt_mp
, 
pg
, 0);

612 
dup2
: 
c
->
pg
.
pgno
 = 
e
.
∑ge
->pgno;

613 
c
->
pg
.
ödex
 = 
e
.index;

614  (
RET_SUCCESS
);

616 
	`mpoﬁ_put
(
t
->
bt_mp
, 
pg
, 0);

619 
e
.
∑ge
 = 
h
;

620 
e
.
ödex
 = index;

621 i‡(
curc›y
 || (
°©us
 =

622 
	`__bt_ªt
(
t
, &
e
, &
c
->
key
, &c->key, 
NULL
, NULL, 1)Ë=
RET_SUCCESS
) {

623 
	`F_SET
(
c
, 
CURS_ACQUIRE
);

624  (
RET_SUCCESS
);

626  (
°©us
);

627 
	}
}

638 
	$__bt_ªlök
(
t
, 
h
)

639 
BTREE
 *
t
;

640 
PAGE
 *
h
;

642 
PAGE
 *
pg
;

644 i‡(
h
->
√xçg
 !
P_INVALID
) {

645 i‡((
pg
 = 
	`mpoﬁ_gë
(
t
->
bt_mp
, 
h
->
√xçg
, 0)Ë=
NULL
)

646  (
RET_ERROR
);

647 
pg
->
¥evpg
 = 
h
->prevpg;

648 
	`mpoﬁ_put
(
t
->
bt_mp
, 
pg
, 
MPOOL_DIRTY
);

650 i‡(
h
->
¥evpg
 !
P_INVALID
) {

651 i‡((
pg
 = 
	`mpoﬁ_gë
(
t
->
bt_mp
, 
h
->
¥evpg
, 0)Ë=
NULL
)

652  (
RET_ERROR
);

653 
pg
->
√xçg
 = 
h
->nextpg;

654 
	`mpoﬁ_put
(
t
->
bt_mp
, 
pg
, 
MPOOL_DIRTY
);

657 
	}
}

	@db/btree/bt_get.c

37 #i‡
deföed
(
LIBC_SCCS
Ë&& !deföed(
löt
)

38 
	gsccsid
[] = "@(#)bt_get.c 8.6 (Berkeley) 7/20/94";

41 
	~<sys/ty≥s.h
>

43 
	~<î∫o.h
>

44 
	~<°ddef.h
>

45 
	~<°dio.h
>

47 
	~<db.h
>

48 
	~"båì.h
"

63 
	$__bt_gë
(
dbp
, 
key
, 
d©a
, 
Êags
)

64 c⁄° 
DB
 *
dbp
;

65 c⁄° 
DBT
 *
key
;

66 
DBT
 *
d©a
;

67 
u_öt
 
Êags
;

69 
BTREE
 *
t
;

70 
EPG
 *
e
;

71 
exa˘
, 
°©us
;

73 
t
 = 
dbp
->
öã∫Æ
;

76 i‡(
t
->
bt_pö√d
 !
NULL
) {

77 
	`mpoﬁ_put
(
t
->
bt_mp
,Å->
bt_pö√d
, 0);

78 
t
->
bt_pö√d
 = 
NULL
;

82 i‡(
Êags
) {

83 
î∫o
 = 
EINVAL
;

84  (
RET_ERROR
);

87 i‡((
e
 = 
	`__bt_£¨ch
(
t
, 
key
, &
exa˘
)Ë=
NULL
)

88  (
RET_ERROR
);

89 i‡(!
exa˘
) {

90 
	`mpoﬁ_put
(
t
->
bt_mp
, 
e
->
∑ge
, 0);

91  (
RET_SPECIAL
);

94 
°©us
 = 
	`__bt_ªt
(
t
, 
e
, 
NULL
, NULL, 
d©a
, &t->
bt_rd©a
, 0);

100 i‡(
	`F_ISSET
(
t
, 
B_DB_LOCK
))

101 
	`mpoﬁ_put
(
t
->
bt_mp
, 
e
->
∑ge
, 0);

103 
t
->
bt_pö√d
 = 
e
->
∑ge
;

104  (
°©us
);

105 
	}
}

	@db/btree/bt_open.c

37 #i‡
deföed
(
LIBC_SCCS
Ë&& !deföed(
löt
)

38 
	gsccsid
[] = "@(#)bt_open.c 8.10 (Berkeley) 8/17/94";

49 
	~<sys/∑øm.h
>

50 
	~<sys/ty≥s.h
>

51 
	~<sys/°©.h
>

53 
	~<î∫o.h
>

54 
	~<f˙é.h
>

55 
	~<limôs.h
>

56 
	~<sig«l.h
>

57 
	~<°dio.h
>

58 
	~<°dlib.h
>

59 
	~<°rög.h
>

60 
	~<uni°d.h
>

62 
	~<db.h
>

63 
	~"båì.h
"

65 #ifde‡
DEBUG


66 #unde‡
MINPSIZE


67 
	#MINPSIZE
 128

	)

70 
byã‹dî
 
__P
(());

71 
ƒoŸ
 
__P
((
BTREE
 *));

72 
tmp
 
__P
(());

90 
DB
 *

91 
	$__bt_›í
(
‚ame
, 
Êags
, 
mode
, 
›íöfo
, 
dÊags
)

92 c⁄° *
‚ame
;

93 
Êags
, 
mode
, 
dÊags
;

94 c⁄° 
BTREEINFO
 *
›íöfo
;

96 
°©
 
sb
;

97 
BTMETA
 
m
;

98 
BTREE
 *
t
;

99 
BTREEINFO
 
b
;

100 
DB
 *
dbp
;

101 
pgno_t
 
nˇche
;

102 
ƒ
, 
machöe_l‹dî
;

104 
t
 = 
NULL
;

113 
machöe_l‹dî
 = 
	`byã‹dî
();

114 i‡(
›íöfo
) {

115 
b
 = *
›íöfo
;

118 i‡(
b
.
Êags
 & ~(
R_DUP
))

119 
eövÆ
;

126 i‡(
b
.
psize
 &&

127 (
b
.
psize
 < 
MINPSIZE
 || b.psizê> 
MAX_PAGE_OFFSET
 + 1 ||

128 
b
.
psize
 & (
ödx_t
) - 1))

129 
eövÆ
;

132 i‡(
b
.
mökey∑ge
) {

133 i‡(
b
.
mökey∑ge
 < 2)

134 
eövÆ
;

136 
b
.
mökey∑ge
 = 
DEFMINKEYPAGE
;

139 i‡(
b
.
com∑ª
 =
NULL
) {

140 
b
.
com∑ª
 = 
__bt_defcmp
;

141 i‡(
b
.
¥efix
 =
NULL
)

142 
b
.
¥efix
 = 
__bt_deÂfx
;

145 i‡(
b
.
l‹dî
 == 0)

146 
b
.
l‹dî
 = 
machöe_l‹dî
;

148 
b
.
com∑ª
 = 
__bt_defcmp
;

149 
b
.
ˇchesize
 = 0;

150 
b
.
Êags
 = 0;

151 
b
.
l‹dî
 = 
machöe_l‹dî
;

152 
b
.
mökey∑ge
 = 
DEFMINKEYPAGE
;

153 
b
.
¥efix
 = 
__bt_deÂfx
;

154 
b
.
psize
 = 0;

158 i‡(
b
.
l‹dî
 !
BIG_ENDIAN
 && b.l‹dî !
LITTLE_ENDIAN
)

159 
eövÆ
;

162 i‡((
t
 = (
BTREE
 *)
	`mÆloc
((BTREE))Ë=
NULL
)

163 
îr
;

164 
	`mem£t
(
t
, 0, (
BTREE
));

165 
t
->
bt_fd
 = -1;

166 
t
->
bt_l‹dî
 = 
b
.
l‹dî
;

167 
t
->
bt_‹dî
 = 
NOT
;

168 
t
->
bt_cmp
 = 
b
.
com∑ª
;

169 
t
->
bt_pfx
 = 
b
.
¥efix
;

170 
t
->
bt_rfd
 = -1;

172 i‡((
t
->
bt_dbp
 = 
dbp
 = (
DB
 *)
	`mÆloc
((DB))Ë=
NULL
)

173 
îr
;

174 
	`mem£t
(
t
->
bt_dbp
, 0, (
DB
));

175 i‡(
t
->
bt_l‹dî
 !
machöe_l‹dî
)

176 
	`F_SET
(
t
, 
B_NEEDSWAP
);

178 
dbp
->
ty≥
 = 
DB_BTREE
;

179 
dbp
->
öã∫Æ
 = 
t
;

180 
dbp
->
˛o£
 = 
__bt_˛o£
;

181 
dbp
->
dñ
 = 
__bt_dñëe
;

182 
dbp
->
fd
 = 
__bt_fd
;

183 
dbp
->
gë
 = 
__bt_gë
;

184 
dbp
->
put
 = 
__bt_put
;

185 
dbp
->
£q
 = 
__bt_£q
;

186 
dbp
->
sync
 = 
__bt_sync
;

192 i‡(
‚ame
) {

193 
Êags
 & 
O_ACCMODE
) {

194 
O_RDONLY
:

195 
	`F_SET
(
t
, 
B_RDONLY
);

197 
O_RDWR
:

199 
O_WRONLY
:

201 
eövÆ
;

204 i‡((
t
->
bt_fd
 = 
	`›í
(
‚ame
, 
Êags
, 
mode
)) < 0)

205 
îr
;

208 i‡((
Êags
 & 
O_ACCMODE
Ë!
O_RDWR
)

209 
eövÆ
;

210 i‡((
t
->
bt_fd
 = 
	`tmp
()) == -1)

211 
îr
;

212 
	`F_SET
(
t
, 
B_INMEM
);

215 i‡(
	`f˙é
(
t
->
bt_fd
, 
F_SETFD
, 1) == -1)

216 
îr
;

218 i‡(
	`f°©
(
t
->
bt_fd
, &
sb
))

219 
îr
;

220 i‡(
sb
.
°_size
) {

221 i‡((
ƒ
 = 
	`ªad
(
t
->
bt_fd
, &
m
, (
BTMETA
))) < 0)

222 
îr
;

223 i‡(
ƒ
 !(
BTMETA
))

224 
e·y≥
;

234 i‡(
m
.
magic
 =
BTREEMAGIC
)

235 
	`F_CLR
(
t
, 
B_NEEDSWAP
);

237 
	`F_SET
(
t
, 
B_NEEDSWAP
);

238 
	`M_32_SWAP
(
m
.
magic
);

239 
	`M_32_SWAP
(
m
.
vîsi⁄
);

240 
	`M_32_SWAP
(
m
.
psize
);

241 
	`M_32_SWAP
(
m
.
‰ì
);

242 
	`M_32_SWAP
(
m
.
ƒecs
);

243 
	`M_32_SWAP
(
m
.
Êags
);

245 i‡(
m
.
magic
 !
BTREEMAGIC
 || m.
vîsi⁄
 !
BTREEVERSION
)

246 
e·y≥
;

247 i‡(
m
.
psize
 < 
MINPSIZE
 || m.psizê> 
MAX_PAGE_OFFSET
 + 1 ||

248 
m
.
psize
 & (
ödx_t
) - 1)

249 
e·y≥
;

250 i‡(
m
.
Êags
 & ~
SAVEMETA
)

251 
e·y≥
;

252 
b
.
psize
 = 
m
.psize;

253 
	`F_SET
(
t
, 
m
.
Êags
);

254 
t
->
bt_‰ì
 = 
m
.
‰ì
;

255 
t
->
bt_ƒecs
 = 
m
.
ƒecs
;

261 i‡(
b
.
psize
 == 0) {

262 #ifde‡
HAVE_ST_BLKSIZE


263 
b
.
psize
 = 
sb
.
°_blksize
;

265 
b
.
psize
 = 4 * 1024;

267 i‡(
b
.
psize
 < 
MINPSIZE
)

268 
b
.
psize
 = 
MINPSIZE
;

269 i‡(
b
.
psize
 > 
MAX_PAGE_OFFSET
 + 1)

270 
b
.
psize
 = 
MAX_PAGE_OFFSET
 + 1;

274 i‡(!(
b
.
Êags
 & 
R_DUP
))

275 
	`F_SET
(
t
, 
B_NODUPS
);

277 
t
->
bt_‰ì
 = 
P_INVALID
;

278 
t
->
bt_ƒecs
 = 0;

279 
	`F_SET
(
t
, 
B_METADIRTY
);

282 
t
->
bt_psize
 = 
b
.
psize
;

285 i‡(
b
.
ˇchesize
 && b.ˇchesizê& b.
psize
 - 1)

286 
b
.
ˇchesize
 +(~b.ˇchesizê& b.
psize
 - 1) + 1;

287 i‡(
b
.
ˇchesize
 < b.
psize
 * 
MINCACHE
)

288 
b
.
ˇchesize
 = b.
psize
 * 
MINCACHE
;

291 
nˇche
 = (
b
.
ˇchesize
 + 
t
->
bt_psize
 - 1) /Å->bt_psize;

304 
t
->
bt_ovÊsize
 = (t->
bt_psize
 - 
BTDATAOFF
Ë/ 
b
.
mökey∑ge
 -

305 ((
ödx_t
Ë+ 
	`NBLEAFDBT
(0, 0));

306 i‡(
t
->
bt_ovÊsize
 < 
	`NBLEAFDBT
(
NOVFLSIZE
, NOVFLSIZEË+ (
ödx_t
))

307 
t
->
bt_ovÊsize
 =

308 
	`NBLEAFDBT
(
NOVFLSIZE
, NOVFLSIZEË+ (
ödx_t
);

311 i‡((
t
->
bt_mp
 =

312 
	`mpoﬁ_›í
(
NULL
, 
t
->
bt_fd
,Å->
bt_psize
, 
nˇche
)) == NULL)

313 
îr
;

314 i‡(!
	`F_ISSET
(
t
, 
B_INMEM
))

315 
	`mpoﬁ_fûãr
(
t
->
bt_mp
, 
__bt_pgö
, 
__bt_pgout
,Å);

318 i‡(
	`ƒoŸ
(
t
Ë=
RET_ERROR
)

319 
îr
;

322 i‡(
dÊags
 & 
DB_LOCK
)

323 
	`F_SET
(
t
, 
B_DB_LOCK
);

324 i‡(
dÊags
 & 
DB_SHMEM
)

325 
	`F_SET
(
t
, 
B_DB_SHMEM
);

326 i‡(
dÊags
 & 
DB_TXN
)

327 
	`F_SET
(
t
, 
B_DB_TXN
);

329  (
dbp
);

331 
eövÆ
: 
î∫o
 = 
EINVAL
;

332 
îr
;

334 
e·y≥
: 
î∫o
 = 
EFTYPE
;

335 
îr
;

337 
îr
: i‡(
t
) {

338 i‡(
t
->
bt_dbp
)

339 
	`‰ì
(
t
->
bt_dbp
);

340 i‡(
t
->
bt_fd
 != -1)

341 ()
	`˛o£
(
t
->
bt_fd
);

342 
	`‰ì
(
t
);

344  (
NULL
);

345 
	}
}

357 
	$ƒoŸ
(
t
)

358 
BTREE
 *
t
;

360 
PAGE
 *
mëa
, *
roŸ
;

361 
pgno_t
 
≈g
;

363 i‡((
mëa
 = 
	`mpoﬁ_gë
(
t
->
bt_mp
, 0, 0)Ë!
NULL
) {

364 
	`mpoﬁ_put
(
t
->
bt_mp
, 
mëa
, 0);

365  (
RET_SUCCESS
);

367 i‡(
î∫o
 !
EINVAL
)

368  (
RET_ERROR
);

369 
î∫o
 = 0;

371 i‡((
mëa
 = 
	`mpoﬁ_√w
(
t
->
bt_mp
, &
≈g
)Ë=
NULL
)

372  (
RET_ERROR
);

374 i‡((
roŸ
 = 
	`mpoﬁ_√w
(
t
->
bt_mp
, &
≈g
)Ë=
NULL
)

375  (
RET_ERROR
);

377 i‡(
≈g
 !
P_ROOT
)

378  (
RET_ERROR
);

379 
roŸ
->
pgno
 = 
≈g
;

380 
roŸ
->
¥evpg
 =ÑoŸ->
√xçg
 = 
P_INVALID
;

381 
roŸ
->
lowî
 = 
BTDATAOFF
;

382 
roŸ
->
uµî
 = 
t
->
bt_psize
;

383 
roŸ
->
Êags
 = 
P_BLEAF
;

384 
	`mem£t
(
mëa
, 0, 
t
->
bt_psize
);

385 
	`mpoﬁ_put
(
t
->
bt_mp
, 
mëa
, 
MPOOL_DIRTY
);

386 
	`mpoﬁ_put
(
t
->
bt_mp
, 
roŸ
, 
MPOOL_DIRTY
);

387  (
RET_SUCCESS
);

388 
	}
}

391 
	$tmp
()

393 
sig£t_t
 
£t
, 
o£t
;

394 
fd
;

395 *
ívtmp
;

396 
∑th
[
MAXPATHLEN
];

398 
ívtmp
 = 
	`gëív
("TMPDIR");

399 ()
	`¢¥ötf
(
∑th
,

400 (
∑th
), "%s/bt.XXXXXX", 
ívtmp
 ?Énvtmp : "/tmp");

402 ()
	`sigfûl£t
(&
£t
);

403 ()
	`sig¥ocmask
(
SIG_BLOCK
, &
£t
, &
o£t
);

404 i‡((
fd
 = 
	`mk°emp
(
∑th
)) != -1)

405 ()
	`u∆ök
(
∑th
);

406 ()
	`sig¥ocmask
(
SIG_SETMASK
, &
o£t
, 
NULL
);

407 (
fd
);

408 
	}
}

411 
	$byã‹dî
()

413 
u_öt32_t
 
x
;

414 
u_ch¨
 *
p
;

416 
x
 = 0x01020304;

417 
p
 = (
u_ch¨
 *)&
x
;

418 *
p
) {

420  (
BIG_ENDIAN
);

422  (
LITTLE_ENDIAN
);

426 
	}
}

429 
	$__bt_fd
(
dbp
)

430 c⁄° 
DB
 *
dbp
;

432 
BTREE
 *
t
;

434 
t
 = 
dbp
->
öã∫Æ
;

437 i‡(
t
->
bt_pö√d
 !
NULL
) {

438 
	`mpoﬁ_put
(
t
->
bt_mp
,Å->
bt_pö√d
, 0);

439 
t
->
bt_pö√d
 = 
NULL
;

443 i‡(
	`F_ISSET
(
t
, 
B_INMEM
)) {

444 
î∫o
 = 
ENOENT
;

447  (
t
->
bt_fd
);

448 
	}
}

	@db/btree/bt_overflow.c

37 #i‡
deföed
(
LIBC_SCCS
Ë&& !deföed(
löt
)

38 
	gsccsid
[] = "@(#)bt_overflow.c 8.5 (Berkeley) 7/16/94";

41 
	~<sys/∑øm.h
>

43 
	~<°dio.h
>

44 
	~<°dlib.h
>

45 
	~<°rög.h
>

47 
	~<db.h
>

48 
	~"båì.h
"

80 
	$__ovÊ_gë
(
t
, 
p
, 
ssz
, 
buf
, 
bufsz
)

81 
BTREE
 *
t
;

82 *
p
;

83 
size_t
 *
ssz
;

84 **
buf
;

85 
size_t
 *
bufsz
;

87 
PAGE
 *
h
;

88 
pgno_t
 
pg
;

89 
size_t
 
nb
, 
∂í
;

90 
u_öt32_t
 
sz
;

92 
	`memmove
(&
pg
, 
p
, (
pgno_t
));

93 
	`memmove
(&
sz
, (*)
p
 + (
pgno_t
), (
u_öt32_t
));

94 *
ssz
 = 
sz
;

96 #ifde‡
DEBUG


97 i‡(
pg
 =
P_INVALID
 || 
sz
 == 0)

98 
	`ab‹t
();

101 i‡(*
bufsz
 < 
sz
) {

102 *
buf
 = (*)(*bu‡=
NULL
 ? 
	`mÆloc
(
sz
Ë: 
	`ªÆloc
(*buf, sz));

103 i‡(*
buf
 =
NULL
)

104  (
RET_ERROR
);

105 *
bufsz
 = 
sz
;

112 
∂í
 = 
t
->
bt_psize
 - 
BTDATAOFF
;

113 
p
 = *
buf
;;Ö = (*Ì + 
nb
, 
pg
 = 
h
->
√xçg
) {

114 i‡((
h
 = 
	`mpoﬁ_gë
(
t
->
bt_mp
, 
pg
, 0)Ë=
NULL
)

115  (
RET_ERROR
);

117 
nb
 = 
	`MIN
(
sz
, 
∂í
);

118 
	`memmove
(
p
, (*)
h
 + 
BTDATAOFF
, 
nb
);

119 
	`mpoﬁ_put
(
t
->
bt_mp
, 
h
, 0);

121 i‡((
sz
 -
nb
) == 0)

124  (
RET_SUCCESS
);

125 
	}
}

139 
	$__ovÊ_put
(
t
, 
dbt
, 
pg
)

140 
BTREE
 *
t
;

141 c⁄° 
DBT
 *
dbt
;

142 
pgno_t
 *
pg
;

144 
PAGE
 *
h
, *
œ°
;

145 *
p
;

146 
pgno_t
 
≈g
;

147 
size_t
 
nb
, 
∂í
;

148 
u_öt32_t
 
sz
;

154 
∂í
 = 
t
->
bt_psize
 - 
BTDATAOFF
;

155 
œ°
 = 
NULL
, 
p
 = 
dbt
->
d©a
, 
sz
 = dbt->
size
;;

156 
p
 = (*Ì + 
∂í
, 
œ°
 = 
h
) {

157 i‡((
h
 = 
	`__bt_√w
(
t
, &
≈g
)Ë=
NULL
)

158  (
RET_ERROR
);

160 
h
->
pgno
 = 
≈g
;

161 
h
->
√xçg
 = h->
¥evpg
 = 
P_INVALID
;

162 
h
->
Êags
 = 
P_OVERFLOW
;

163 
h
->
lowî
 = h->
uµî
 = 0;

165 
nb
 = 
	`MIN
(
sz
, 
∂í
);

166 
	`memmove
((*)
h
 + 
BTDATAOFF
, 
p
, 
nb
);

168 i‡(
œ°
) {

169 
œ°
->
√xçg
 = 
h
->
pgno
;

170 
	`mpoﬁ_put
(
t
->
bt_mp
, 
œ°
, 
MPOOL_DIRTY
);

172 *
pg
 = 
h
->
pgno
;

174 i‡((
sz
 -
nb
) == 0) {

175 
	`mpoﬁ_put
(
t
->
bt_mp
, 
h
, 
MPOOL_DIRTY
);

179  (
RET_SUCCESS
);

180 
	}
}

193 
	$__ovÊ_dñëe
(
t
, 
p
)

194 
BTREE
 *
t
;

195 *
p
;

197 
PAGE
 *
h
;

198 
pgno_t
 
pg
;

199 
size_t
 
∂í
;

200 
u_öt32_t
 
sz
;

202 
	`memmove
(&
pg
, 
p
, (
pgno_t
));

203 
	`memmove
(&
sz
, (*)
p
 + (
pgno_t
), (
u_öt32_t
));

205 #ifde‡
DEBUG


206 i‡(
pg
 =
P_INVALID
 || 
sz
 == 0)

207 
	`ab‹t
();

209 i‡((
h
 = 
	`mpoﬁ_gë
(
t
->
bt_mp
, 
pg
, 0)Ë=
NULL
)

210  (
RET_ERROR
);

213 i‡(
h
->
Êags
 & 
P_PRESERVE
) {

214 
	`mpoﬁ_put
(
t
->
bt_mp
, 
h
, 0);

215  (
RET_SUCCESS
);

219 
∂í
 = 
t
->
bt_psize
 - 
BTDATAOFF
;; 
sz
 -=Ölen) {

220 
pg
 = 
h
->
√xçg
;

221 
	`__bt_‰ì
(
t
, 
h
);

222 i‡(
sz
 <
∂í
)

224 i‡((
h
 = 
	`mpoﬁ_gë
(
t
->
bt_mp
, 
pg
, 0)Ë=
NULL
)

225  (
RET_ERROR
);

227  (
RET_SUCCESS
);

228 
	}
}

	@db/btree/bt_page.c

34 #i‡
deföed
(
LIBC_SCCS
Ë&& !deföed(
löt
)

35 
	gsccsid
[] = "@(#)bt_page.c 8.3 (Berkeley) 7/14/94";

38 
	~<sys/ty≥s.h
>

40 
	~<°dio.h
>

42 
	~<db.h
>

43 
	~"båì.h
"

60 
	$__bt_‰ì
(
t
, 
h
)

61 
BTREE
 *
t
;

62 
PAGE
 *
h
;

65 
h
->
¥evpg
 = 
P_INVALID
;

66 
h
->
√xçg
 = 
t
->
bt_‰ì
;

67 
t
->
bt_‰ì
 = 
h
->
pgno
;

70  (
	`mpoﬁ_put
(
t
->
bt_mp
, 
h
, 
MPOOL_DIRTY
));

71 
	}
}

84 
PAGE
 *

85 
	$__bt_√w
(
t
, 
≈g
)

86 
BTREE
 *
t
;

87 
pgno_t
 *
≈g
;

89 
PAGE
 *
h
;

91 i‡(
t
->
bt_‰ì
 !
P_INVALID
 &&

92 (
h
 = 
	`mpoﬁ_gë
(
t
->
bt_mp
,Å->
bt_‰ì
, 0)Ë!
NULL
) {

93 *
≈g
 = 
t
->
bt_‰ì
;

94 
t
->
bt_‰ì
 = 
h
->
√xçg
;

95  (
h
);

97  (
	`mpoﬁ_√w
(
t
->
bt_mp
, 
≈g
));

98 
	}
}

	@db/btree/bt_put.c

37 #i‡
deföed
(
LIBC_SCCS
Ë&& !deföed(
löt
)

38 
	gsccsid
[] = "@(#)bt_put.c 8.8 (Berkeley) 7/26/94";

41 
	~<sys/ty≥s.h
>

43 
	~<î∫o.h
>

44 
	~<°dio.h
>

45 
	~<°dlib.h
>

46 
	~<°rög.h
>

48 
	~<db.h
>

49 
	~"båì.h
"

51 
EPG
 *
bt_Á°
 
__P
((
BTREE
 *, c⁄° 
DBT
 *, const DBT *, *));

67 
	$__bt_put
(
dbp
, 
key
, 
d©a
, 
Êags
)

68 c⁄° 
DB
 *
dbp
;

69 
DBT
 *
key
;

70 c⁄° 
DBT
 *
d©a
;

71 
u_öt
 
Êags
;

73 
BTREE
 *
t
;

74 
DBT
 
tkey
, 
td©a
;

75 
EPG
 *
e
;

76 
PAGE
 *
h
;

77 
ödx_t
 
ödex
, 
nxtödex
;

78 
pgno_t
 
pg
;

79 
u_öt32_t
 
nbyãs
;

80 
dÊags
, 
exa˘
, 
°©us
;

81 *
de°
, 
db
[
NOVFLSIZE
], 
kb
[NOVFLSIZE];

83 
t
 = 
dbp
->
öã∫Æ
;

86 i‡(
t
->
bt_pö√d
 !
NULL
) {

87 
	`mpoﬁ_put
(
t
->
bt_mp
,Å->
bt_pö√d
, 0);

88 
t
->
bt_pö√d
 = 
NULL
;

92 i‡(
	`F_ISSET
(
t
, 
B_RDONLY
)) {

93 
î∫o
 = 
EPERM
;

94  (
RET_ERROR
);

97 
Êags
) {

99 
R_NOOVERWRITE
:

101 
R_CURSOR
:

106 i‡(
	`F_ISSET
(&
t
->
bt_curs‹
, 
CURS_INIT
) &&

107 !
	`F_ISSET
(&
t
->
bt_curs‹
,

108 
CURS_ACQUIRE
 | 
CURS_AFTER
 | 
CURS_BEFORE
))

112 
î∫o
 = 
EINVAL
;

113  (
RET_ERROR
);

124 
dÊags
 = 0;

125 i‡(
key
->
size
 + 
d©a
->sizê> 
t
->
bt_ovÊsize
) {

126 i‡(
key
->
size
 > 
t
->
bt_ovÊsize
) {

127 
°‹ekey
: i‡(
	`__ovÊ_put
(
t
, 
key
, &
pg
Ë=
RET_ERROR
)

128  (
RET_ERROR
);

129 
tkey
.
d©a
 = 
kb
;

130 
tkey
.
size
 = 
NOVFLSIZE
;

131 
	`memmove
(
kb
, &
pg
, (
pgno_t
));

132 
	`memmove
(
kb
 + (
pgno_t
),

133 &
key
->
size
, (
u_öt32_t
));

134 
dÊags
 |
P_BIGKEY
;

135 
key
 = &
tkey
;

137 i‡(
key
->
size
 + 
d©a
->sizê> 
t
->
bt_ovÊsize
) {

138 i‡(
	`__ovÊ_put
(
t
, 
d©a
, &
pg
Ë=
RET_ERROR
)

139  (
RET_ERROR
);

140 
td©a
.
d©a
 = 
db
;

141 
td©a
.
size
 = 
NOVFLSIZE
;

142 
	`memmove
(
db
, &
pg
, (
pgno_t
));

143 
	`memmove
(
db
 + (
pgno_t
),

144 &
d©a
->
size
, (
u_öt32_t
));

145 
dÊags
 |
P_BIGDATA
;

146 
d©a
 = &
td©a
;

148 i‡(
key
->
size
 + 
d©a
->sizê> 
t
->
bt_ovÊsize
)

149 
°‹ekey
;

153 i‡(
Êags
 =
R_CURSOR
) {

154 i‡((
h
 = 
	`mpoﬁ_gë
(
t
->
bt_mp
,Å->
bt_curs‹
.
pg
.
pgno
, 0)Ë=
NULL
)

155  (
RET_ERROR
);

156 
ödex
 = 
t
->
bt_curs‹
.
pg
.index;

157 
dñëe
;

164 i‡(
t
->
bt_‹dî
 =
NOT
 || (
e
 = 
	`bt_Á°
—, 
key
, 
d©a
, &
exa˘
)Ë=
NULL
)

165 i‡((
e
 = 
	`__bt_£¨ch
(
t
, 
key
, &
exa˘
)Ë=
NULL
)

166  (
RET_ERROR
);

167 
h
 = 
e
->
∑ge
;

168 
ödex
 = 
e
->index;

176 
Êags
) {

177 
R_NOOVERWRITE
:

178 i‡(!
exa˘
)

180 
	`mpoﬁ_put
(
t
->
bt_mp
, 
h
, 0);

181  (
RET_SPECIAL
);

183 i‡(!
exa˘
 || !
	`F_ISSET
(
t
, 
B_NODUPS
))

190 
dñëe
: i‡(
	`__bt_dÀaf
(
t
, 
key
, 
h
, 
ödex
Ë=
RET_ERROR
) {

191 
	`mpoﬁ_put
(
t
->
bt_mp
, 
h
, 0);

192  (
RET_ERROR
);

203 
nbyãs
 = 
	`NBLEAFDBT
(
key
->
size
, 
d©a
->size);

204 i‡(
h
->
uµî
 - h->
lowî
 < 
nbyãs
 + (
ödx_t
)) {

205 i‡((
°©us
 = 
	`__bt_•lô
(
t
, 
h
, 
key
,

206 
d©a
, 
dÊags
, 
nbyãs
, 
ödex
)Ë!
RET_SUCCESS
)

207  (
°©us
);

208 
suc˚ss
;

211 i‡(
ödex
 < (
nxtödex
 = 
	`NEXTINDEX
(
h
)))

212 
	`memmove
(
h
->
löp
 + 
ödex
 + 1, h->linp + index,

213 (
nxtödex
 - 
ödex
Ë* (
ödx_t
));

214 
h
->
lowî
 +(
ödx_t
);

216 
h
->
löp
[
ödex
] = h->
uµî
 -
nbyãs
;

217 
de°
 = (*)
h
 + h->
uµî
;

218 
	`WR_BLEAF
(
de°
, 
key
, 
d©a
, 
dÊags
);

221 i‡(
	`F_ISSET
(&
t
->
bt_curs‹
, 
CURS_INIT
) &&

222 !
	`F_ISSET
(&
t
->
bt_curs‹
, 
CURS_ACQUIRE
) &&

223 
t
->
bt_curs‹
.
pg
.
pgno
 =
h
->pgnÿ&&Å->bt_curs‹.pg.
ödex
 >= index)

224 ++
t
->
bt_curs‹
.
pg
.
ödex
;

226 i‡(
t
->
bt_‹dî
 =
NOT
)

227 i‡(
h
->
√xçg
 =
P_INVALID
) {

228 i‡(
ödex
 =
	`NEXTINDEX
(
h
) - 1) {

229 
t
->
bt_‹dî
 = 
FORWARD
;

230 
t
->
bt_œ°
.
ödex
 = index;

231 
t
->
bt_œ°
.
pgno
 = 
h
->pgno;

233 } i‡(
h
->
¥evpg
 =
P_INVALID
) {

234 i‡(
ödex
 == 0) {

235 
t
->
bt_‹dî
 = 
BACK
;

236 
t
->
bt_œ°
.
ödex
 = 0;

237 
t
->
bt_œ°
.
pgno
 = 
h
->pgno;

241 
	`mpoﬁ_put
(
t
->
bt_mp
, 
h
, 
MPOOL_DIRTY
);

243 
suc˚ss
:

244 i‡(
Êags
 =
R_SETCURSOR
)

245 
	`__bt_£tcur
(
t
, 
e
->
∑ge
->
pgno
,É->
ödex
);

247 
	`F_SET
(
t
, 
B_MODIFIED
);

248  (
RET_SUCCESS
);

249 
	}
}

251 #ifde‡
STATISTICS


252 
u_l⁄g
 
	gbt_ˇche_hô
, 
	gbt_ˇche_miss
;

265 
EPG
 *

266 
	$bt_Á°
(
t
, 
key
, 
d©a
, 
exa˘p
)

267 
BTREE
 *
t
;

268 c⁄° 
DBT
 *
key
, *
d©a
;

269 *
exa˘p
;

271 
PAGE
 *
h
;

272 
u_öt32_t
 
nbyãs
;

273 
cmp
;

275 i‡((
h
 = 
	`mpoﬁ_gë
(
t
->
bt_mp
,Å->
bt_œ°
.
pgno
, 0)Ë=
NULL
) {

276 
t
->
bt_‹dî
 = 
NOT
;

277  (
NULL
);

279 
t
->
bt_cur
.
∑ge
 = 
h
;

280 
t
->
bt_cur
.
ödex
 =Å->
bt_œ°
.index;

286 
nbyãs
 = 
	`NBLEAFDBT
(
key
->
size
, 
d©a
->size);

287 i‡(
h
->
uµî
 - h->
lowî
 < 
nbyãs
 + (
ödx_t
))

288 
miss
;

290 i‡(
t
->
bt_‹dî
 =
FORWARD
) {

291 i‡(
t
->
bt_cur
.
∑ge
->
√xçg
 !
P_INVALID
)

292 
miss
;

293 i‡(
t
->
bt_cur
.
ödex
 !
	`NEXTINDEX
(
h
) - 1)

294 
miss
;

295 i‡((
cmp
 = 
	`__bt_cmp
(
t
, 
key
, &t->
bt_cur
)) < 0)

296 
miss
;

297 
t
->
bt_œ°
.
ödex
 = 
cmp
 ? ++t->
bt_cur
.index :Å->bt_cur.index;

299 i‡(
t
->
bt_cur
.
∑ge
->
¥evpg
 !
P_INVALID
)

300 
miss
;

301 i‡(
t
->
bt_cur
.
ödex
 != 0)

302 
miss
;

303 i‡((
cmp
 = 
	`__bt_cmp
(
t
, 
key
, &t->
bt_cur
)) > 0)

304 
miss
;

305 
t
->
bt_œ°
.
ödex
 = 0;

307 *
exa˘p
 = 
cmp
 == 0;

308 #ifde‡
STATISTICS


309 ++
bt_ˇche_hô
;

311  (&
t
->
bt_cur
);

313 
miss
:

314 #ifde‡
STATISTICS


315 ++
bt_ˇche_miss
;

317 
t
->
bt_‹dî
 = 
NOT
;

318 
	`mpoﬁ_put
(
t
->
bt_mp
, 
h
, 0);

319  (
NULL
);

320 
	}
}

	@db/btree/bt_search.c

37 #i‡
deföed
(
LIBC_SCCS
Ë&& !deföed(
löt
)

38 
	gsccsid
[] = "@(#)bt_search.c 8.8 (Berkeley) 7/31/94";

41 
	~<sys/ty≥s.h
>

43 
	~<°dio.h
>

45 
	~<db.h
>

46 
	~"båì.h
"

48 
__bt_¢ext
 
__P
((
BTREE
 *, 
PAGE
 *, c⁄° 
DBT
 *, *));

49 
__bt_•ªv
 
__P
((
BTREE
 *, 
PAGE
 *, c⁄° 
DBT
 *, *));

65 
EPG
 *

66 
	$__bt_£¨ch
(
t
, 
key
, 
exa˘p
)

67 
BTREE
 *
t
;

68 c⁄° 
DBT
 *
key
;

69 *
exa˘p
;

71 
PAGE
 *
h
;

72 
ödx_t
 
ba£
, 
ödex
, 
lim
;

73 
pgno_t
 
pg
;

74 
cmp
;

76 
	`BT_CLR
(
t
);

77 
pg
 = 
P_ROOT
;;) {

78 i‡((
h
 = 
	`mpoﬁ_gë
(
t
->
bt_mp
, 
pg
, 0)Ë=
NULL
)

79  (
NULL
);

82 
t
->
bt_cur
.
∑ge
 = 
h
;

83 
ba£
 = 0, 
lim
 = 
	`NEXTINDEX
(
h
);Üim;Üim >>= 1) {

84 
t
->
bt_cur
.
ödex
 = index = 
ba£
 + (
lim
 >> 1);

85 i‡((
cmp
 = 
	`__bt_cmp
(
t
, 
key
, &t->
bt_cur
)) == 0) {

86 i‡(
h
->
Êags
 & 
P_BLEAF
) {

87 *
exa˘p
 = 1;

88  (&
t
->
bt_cur
);

90 
√xt
;

92 i‡(
cmp
 > 0) {

93 
ba£
 = 
ödex
 + 1;

94 --
lim
;

106 i‡(
h
->
Êags
 & 
P_BLEAF
) {

107 i‡(!
	`F_ISSET
(
t
, 
B_NODUPS
)) {

108 i‡(
ba£
 == 0 &&

109 
h
->
¥evpg
 !
P_INVALID
 &&

110 
	`__bt_•ªv
(
t
, 
h
, 
key
, 
exa˘p
))

111  (&
t
->
bt_cur
);

112 i‡(
ba£
 =
	`NEXTINDEX
(
h
) &&

113 
h
->
√xçg
 !
P_INVALID
 &&

114 
	`__bt_¢ext
(
t
, 
h
, 
key
, 
exa˘p
))

115  (&
t
->
bt_cur
);

117 *
exa˘p
 = 0;

118 
t
->
bt_cur
.
ödex
 = 
ba£
;

119  (&
t
->
bt_cur
);

129 
ödex
 = 
ba£
 ? base - 1 : base;

131 
√xt
: 
	`BT_PUSH
(
t
, 
h
->
pgno
, 
ödex
);

132 
pg
 = 
	`GETBINTERNAL
(
h
, 
ödex
)->
pgno
;

133 
	`mpoﬁ_put
(
t
->
bt_mp
, 
h
, 0);

135 
	}
}

151 
	$__bt_¢ext
(
t
, 
h
, 
key
, 
exa˘p
)

152 
BTREE
 *
t
;

153 
PAGE
 *
h
;

154 c⁄° 
DBT
 *
key
;

155 *
exa˘p
;

157 
EPG
 
e
;

163 i‡((
e
.
∑ge
 = 
	`mpoﬁ_gë
(
t
->
bt_mp
, 
h
->
√xçg
, 0)Ë=
NULL
)

165 
e
.
ödex
 = 0;

166 i‡(
	`__bt_cmp
(
t
, 
key
, &
e
) == 0) {

167 
	`mpoﬁ_put
(
t
->
bt_mp
, 
h
, 0);

168 
t
->
bt_cur
 = 
e
;

169 *
exa˘p
 = 1;

172 
	`mpoﬁ_put
(
t
->
bt_mp
, 
e
.
∑ge
, 0);

174 
	}
}

190 
	$__bt_•ªv
(
t
, 
h
, 
key
, 
exa˘p
)

191 
BTREE
 *
t
;

192 
PAGE
 *
h
;

193 c⁄° 
DBT
 *
key
;

194 *
exa˘p
;

196 
EPG
 
e
;

202 i‡((
e
.
∑ge
 = 
	`mpoﬁ_gë
(
t
->
bt_mp
, 
h
->
¥evpg
, 0)Ë=
NULL
)

204 
e
.
ödex
 = 
	`NEXTINDEX
”.
∑ge
) - 1;

205 i‡(
	`__bt_cmp
(
t
, 
key
, &
e
) == 0) {

206 
	`mpoﬁ_put
(
t
->
bt_mp
, 
h
, 0);

207 
t
->
bt_cur
 = 
e
;

208 *
exa˘p
 = 1;

211 
	`mpoﬁ_put
(
t
->
bt_mp
, 
e
.
∑ge
, 0);

213 
	}
}

	@db/btree/bt_seq.c

37 #i‡
deföed
(
LIBC_SCCS
Ë&& !deföed(
löt
)

38 
	gsccsid
[] = "@(#)bt_seq.c 8.7 (Berkeley) 7/20/94";

41 
	~<sys/ty≥s.h
>

43 
	~<î∫o.h
>

44 
	~<°ddef.h
>

45 
	~<°dio.h
>

46 
	~<°dlib.h
>

48 
	~<db.h
>

49 
	~"båì.h
"

51 
__bt_fú°
 
__P
((
BTREE
 *, c⁄° 
DBT
 *, 
EPG
 *, *));

52 
__bt_£qadv
 
__P
((
BTREE
 *, 
EPG
 *, ));

53 
__bt_£q£t
 
__P
((
BTREE
 *, 
EPG
 *, 
DBT
 *, ));

77 
	$__bt_£q
(
dbp
, 
key
, 
d©a
, 
Êags
)

78 c⁄° 
DB
 *
dbp
;

79 
DBT
 *
key
, *
d©a
;

80 
u_öt
 
Êags
;

82 
BTREE
 *
t
;

83 
EPG
 
e
;

84 
°©us
;

86 
t
 = 
dbp
->
öã∫Æ
;

89 i‡(
t
->
bt_pö√d
 !
NULL
) {

90 
	`mpoﬁ_put
(
t
->
bt_mp
,Å->
bt_pö√d
, 0);

91 
t
->
bt_pö√d
 = 
NULL
;

99 
Êags
) {

100 
R_NEXT
:

101 
R_PREV
:

102 i‡(
	`F_ISSET
(&
t
->
bt_curs‹
, 
CURS_INIT
)) {

103 
°©us
 = 
	`__bt_£qadv
(
t
, &
e
, 
Êags
);

107 
R_FIRST
:

108 
R_LAST
:

109 
R_CURSOR
:

110 
°©us
 = 
	`__bt_£q£t
(
t
, &
e
, 
key
, 
Êags
);

113 
î∫o
 = 
EINVAL
;

114  (
RET_ERROR
);

117 i‡(
°©us
 =
RET_SUCCESS
) {

118 
	`__bt_£tcur
(
t
, 
e
.
∑ge
->
pgno
,É.
ödex
);

120 
°©us
 =

121 
	`__bt_ªt
(
t
, &
e
, 
key
, &t->
bt_rkey
, 
d©a
, &t->
bt_rd©a
, 0);

127 i‡(
	`F_ISSET
(
t
, 
B_DB_LOCK
))

128 
	`mpoﬁ_put
(
t
->
bt_mp
, 
e
.
∑ge
, 0);

130 
t
->
bt_pö√d
 = 
e
.
∑ge
;

132  (
°©us
);

133 
	}
}

152 
	$__bt_£q£t
(
t
, 
ï
, 
key
, 
Êags
)

153 
BTREE
 *
t
;

154 
EPG
 *
ï
;

155 
DBT
 *
key
;

156 
Êags
;

158 
PAGE
 *
h
;

159 
pgno_t
 
pg
;

160 
exa˘
;

167 
Êags
) {

168 
R_CURSOR
:

173 i‡(
key
->
d©a
 =
NULL
 || key->
size
 == 0) {

174 
î∫o
 = 
EINVAL
;

175  (
RET_ERROR
);

177  (
	`__bt_fú°
(
t
, 
key
, 
ï
, &
exa˘
));

178 
R_FIRST
:

179 
R_NEXT
:

181 
pg
 = 
P_ROOT
;;) {

182 i‡((
h
 = 
	`mpoﬁ_gë
(
t
->
bt_mp
, 
pg
, 0)Ë=
NULL
)

183  (
RET_ERROR
);

186 i‡(
	`NEXTINDEX
(
h
) == 0) {

187 
	`mpoﬁ_put
(
t
->
bt_mp
, 
h
, 0);

188  (
RET_SPECIAL
);

191 i‡(
h
->
Êags
 & (
P_BLEAF
 | 
P_RLEAF
))

193 
pg
 = 
	`GETBINTERNAL
(
h
, 0)->
pgno
;

194 
	`mpoﬁ_put
(
t
->
bt_mp
, 
h
, 0);

196 
ï
->
∑ge
 = 
h
;

197 
ï
->
ödex
 = 0;

199 
R_LAST
:

200 
R_PREV
:

202 
pg
 = 
P_ROOT
;;) {

203 i‡((
h
 = 
	`mpoﬁ_gë
(
t
->
bt_mp
, 
pg
, 0)Ë=
NULL
)

204  (
RET_ERROR
);

207 i‡(
	`NEXTINDEX
(
h
) == 0) {

208 
	`mpoﬁ_put
(
t
->
bt_mp
, 
h
, 0);

209  (
RET_SPECIAL
);

212 i‡(
h
->
Êags
 & (
P_BLEAF
 | 
P_RLEAF
))

214 
pg
 = 
	`GETBINTERNAL
(
h
, 
	`NEXTINDEX
(hË- 1)->
pgno
;

215 
	`mpoﬁ_put
(
t
->
bt_mp
, 
h
, 0);

218 
ï
->
∑ge
 = 
h
;

219 
ï
->
ödex
 = 
	`NEXTINDEX
(
h
) - 1;

222  (
RET_SUCCESS
);

223 
	}
}

240 
	$__bt_£qadv
(
t
, 
ï
, 
Êags
)

241 
BTREE
 *
t
;

242 
EPG
 *
ï
;

243 
Êags
;

245 
CURSOR
 *
c
;

246 
PAGE
 *
h
;

247 
ödx_t
 
ödex
;

248 
pgno_t
 
pg
;

249 
exa˘
;

255 
c
 = &
t
->
bt_curs‹
;

265 i‡(
	`F_ISSET
(
c
, 
CURS_ACQUIRE
))

266  (
	`__bt_fú°
(
t
, &
c
->
key
, 
ï
, &
exa˘
));

269 i‡((
h
 = 
	`mpoﬁ_gë
(
t
->
bt_mp
, 
c
->
pg
.
pgno
, 0)Ë=
NULL
)

270  (
RET_ERROR
);

276 
Êags
) {

277 
R_NEXT
:

283 i‡(
	`F_ISSET
(
c
, 
CURS_AFTER
))

284 
u£cuºít
;

285 
ödex
 = 
c
->
pg
.index;

286 i‡(++
ödex
 =
	`NEXTINDEX
(
h
)) {

287 
pg
 = 
h
->
√xçg
;

288 
	`mpoﬁ_put
(
t
->
bt_mp
, 
h
, 0);

289 i‡(
pg
 =
P_INVALID
)

290  (
RET_SPECIAL
);

291 i‡((
h
 = 
	`mpoﬁ_gë
(
t
->
bt_mp
, 
pg
, 0)Ë=
NULL
)

292  (
RET_ERROR
);

293 
ödex
 = 0;

296 
R_PREV
:

302 i‡(
	`F_ISSET
(
c
, 
CURS_BEFORE
)) {

303 
u£cuºít
: 
	`F_CLR
(
c
, 
CURS_AFTER
 | 
CURS_BEFORE
);

304 
ï
->
∑ge
 = 
h
;

305 
ï
->
ödex
 = 
c
->
pg
.index;

306  (
RET_SUCCESS
);

308 
ödex
 = 
c
->
pg
.index;

309 i‡(
ödex
 == 0) {

310 
pg
 = 
h
->
¥evpg
;

311 
	`mpoﬁ_put
(
t
->
bt_mp
, 
h
, 0);

312 i‡(
pg
 =
P_INVALID
)

313  (
RET_SPECIAL
);

314 i‡((
h
 = 
	`mpoﬁ_gë
(
t
->
bt_mp
, 
pg
, 0)Ë=
NULL
)

315  (
RET_ERROR
);

316 
ödex
 = 
	`NEXTINDEX
(
h
) - 1;

318 --
ödex
;

322 
ï
->
∑ge
 = 
h
;

323 
ï
->
ödex
 = index;

324  (
RET_SUCCESS
);

325 
	}
}

342 
	$__bt_fú°
(
t
, 
key
, 
îvÆ
, 
exa˘p
)

343 
BTREE
 *
t
;

344 c⁄° 
DBT
 *
key
;

345 
EPG
 *
îvÆ
;

346 *
exa˘p
;

348 
PAGE
 *
h
;

349 
EPG
 *
ï
, 
ßve
;

350 
pgno_t
 
pg
;

360 i‡((
ï
 = 
	`__bt_£¨ch
(
t
, 
key
, 
exa˘p
)Ë=
NULL
)

361  (
RET_SPECIAL
);

362 i‡(*
exa˘p
) {

363 i‡(
	`F_ISSET
(
t
, 
B_NODUPS
)) {

364 *
îvÆ
 = *
ï
;

365  (
RET_SUCCESS
);

373 
ßve
 = *
ï
;

374 
h
 = 
ï
->
∑ge
;

376 i‡(
ßve
.
∑ge
->
pgno
 !
ï
->page->pgno) {

377 
	`mpoﬁ_put
(
t
->
bt_mp
, 
ßve
.
∑ge
, 0);

378 
ßve
 = *
ï
;

380 
ßve
.
ödex
 = 
ï
->index;

387 i‡(
ï
->
ödex
 == 0) {

388 i‡(
h
->
¥evpg
 =
P_INVALID
)

390 i‡(
h
->
pgno
 !
ßve
.
∑ge
->pgno)

391 
	`mpoﬁ_put
(
t
->
bt_mp
, 
h
, 0);

392 i‡((
h
 = 
	`mpoﬁ_gë
(
t
->
bt_mp
,

393 
h
->
¥evpg
, 0)Ë=
NULL
) {

394 i‡(
h
->
pgno
 =
ßve
.
∑ge
->pgno)

395 
	`mpoﬁ_put
(
t
->
bt_mp
,

396 
ßve
.
∑ge
, 0);

397  (
RET_ERROR
);

399 
ï
->
∑ge
 = 
h
;

400 
ï
->
ödex
 = 
	`NEXTINDEX
(
h
);

402 --
ï
->
ödex
;

403 } 
	`__bt_cmp
(
t
, 
key
, 
ï
) == 0);

410 i‡(
h
->
pgno
 !
ßve
.
∑ge
->pgno)

411 
	`mpoﬁ_put
(
t
->
bt_mp
, 
h
, 0);

413 *
îvÆ
 = 
ßve
;

414  (
RET_SUCCESS
);

418 i‡(
ï
->
ödex
 =
	`NEXTINDEX
”p->
∑ge
)) {

419 
h
 = 
ï
->
∑ge
;

420 
pg
 = 
h
->
√xçg
;

421 
	`mpoﬁ_put
(
t
->
bt_mp
, 
h
, 0);

422 i‡(
pg
 =
P_INVALID
)

423  (
RET_SPECIAL
);

424 i‡((
h
 = 
	`mpoﬁ_gë
(
t
->
bt_mp
, 
pg
, 0)Ë=
NULL
)

425  (
RET_ERROR
);

426 
ï
->
ödex
 = 0;

427 
ï
->
∑ge
 = 
h
;

429 *
îvÆ
 = *
ï
;

430  (
RET_SUCCESS
);

431 
	}
}

443 
	$__bt_£tcur
(
t
, 
pgno
, 
ödex
)

444 
BTREE
 *
t
;

445 
pgno_t
 
pgno
;

446 
u_öt
 
ödex
;

449 i‡(
t
->
bt_curs‹
.
key
.
d©a
 !
NULL
) {

450 
	`‰ì
(
t
->
bt_curs‹
.
key
.
d©a
);

451 
t
->
bt_curs‹
.
key
.
size
 = 0;

452 
t
->
bt_curs‹
.
key
.
d©a
 = 
NULL
;

454 
	`F_CLR
(&
t
->
bt_curs‹
, 
CURS_ACQUIRE
 | 
CURS_AFTER
 | 
CURS_BEFORE
);

457 
t
->
bt_curs‹
.
pg
.
pgno
 =Ögno;

458 
t
->
bt_curs‹
.
pg
.
ödex
 = index;

459 
	`F_SET
(&
t
->
bt_curs‹
, 
CURS_INIT
);

460 
	}
}

	@db/btree/bt_split.c

37 #i‡
deföed
(
LIBC_SCCS
Ë&& !deföed(
löt
)

38 
	gsccsid
[] = "@(#)bt_split.c 8.9 (Berkeley) 7/26/94";

41 
	~<sys/ty≥s.h
>

43 
	~<limôs.h
>

44 
	~<°dio.h
>

45 
	~<°dlib.h
>

46 
	~<°rög.h
>

48 
	~<db.h
>

49 
	~"båì.h
"

51 
bt_broŸ
 
__P
((
BTREE
 *, 
PAGE
 *, PAGE *, PAGE *));

52 
PAGE
 *
bt_∑ge


53 
__P
((
BTREE
 *, 
PAGE
 *, PAGE **, PAGE **, 
ödx_t
 *, 
size_t
));

54 
bt_¥e£rve
 
__P
((
BTREE
 *, 
pgno_t
));

55 
PAGE
 *
bt_p•lô


56 
__P
((
BTREE
 *, 
PAGE
 *, PAGE *, PAGE *, 
ödx_t
 *, 
size_t
));

57 
PAGE
 *
bt_roŸ


58 
__P
((
BTREE
 *, 
PAGE
 *, PAGE **, PAGE **, 
ödx_t
 *, 
size_t
));

59 
bt_ºoŸ
 
__P
((
BTREE
 *, 
PAGE
 *, PAGE *, PAGE *));

60 
ª˙o_t
 
ªc_tŸÆ
 
__P
((
PAGE
 *));

62 #ifde‡
STATISTICS


63 
u_l⁄g
 
	gbt_roŸ•lô
, 
	gbt_•lô
, 
	gbt_s‹t•lô
, 
	gbt_pfxßved
;

82 
	$__bt_•lô
(
t
, 
•
, 
key
, 
d©a
, 
Êags
, 
ûí
, 
¨gskù
)

83 
BTREE
 *
t
;

84 
PAGE
 *
•
;

85 c⁄° 
DBT
 *
key
, *
d©a
;

86 
Êags
;

87 
size_t
 
ûí
;

88 
u_öt32_t
 
¨gskù
;

90 
BINTERNAL
 *
bi
;

91 
BLEAF
 *
bl
, *
tbl
;

92 
DBT
 
a
, 
b
;

93 
EPGNO
 *
∑ª¡
;

94 
PAGE
 *
h
, *
l
, *
r
, *
lchûd
, *
rchûd
;

95 
ödx_t
 
nxtödex
;

96 
u_öt16_t
 
skù
;

97 
u_öt32_t
 
n
, 
nbyãs
, 
nksize
;

98 
∑ª¡•lô
;

99 *
de°
;

107 
skù
 = 
¨gskù
;

108 
h
 = 
•
->
pgno
 =
P_ROOT
 ?

109 
	`bt_roŸ
(
t
, 
•
, &
l
, &
r
, &
skù
, 
ûí
) :

110 
	`bt_∑ge
(
t
, 
•
, &
l
, &
r
, &
skù
, 
ûí
);

111 i‡(
h
 =
NULL
)

112  (
RET_ERROR
);

118 
h
->
löp
[
skù
] = h->
uµî
 -
ûí
;

119 
de°
 = (*)
h
 + h->
uµî
;

120 i‡(
	`F_ISSET
(
t
, 
R_RECNO
))

121 
	`WR_RLEAF
(
de°
, 
d©a
, 
Êags
)

123 
	`WR_BLEAF
(
de°
, 
key
, 
d©a
, 
Êags
)

126 i‡(
•
->
pgno
 =
P_ROOT
 &&

127 (
	`F_ISSET
(
t
, 
R_RECNO
) ?

128 
	`bt_ºoŸ
(
t
, 
•
, 
l
, 
r
Ë: 
	`bt_broŸ
—, sp,Ü,Ñ)Ë=
RET_ERROR
)

129 
îr2
;

154 (
∑ª¡
 = 
	`BT_POP
(
t
)Ë!
NULL
) {

155 
lchûd
 = 
l
;

156 
rchûd
 = 
r
;

159 i‡((
h
 = 
	`mpoﬁ_gë
(
t
->
bt_mp
, 
∑ª¡
->
pgno
, 0)Ë=
NULL
)

160 
îr2
;

166 
skù
 = 
∑ª¡
->
ödex
 + 1;

182 
rchûd
->
Êags
 & 
P_TYPE
) {

183 
P_BINTERNAL
:

184 
bi
 = 
	`GETBINTERNAL
(
rchûd
, 0);

185 
nbyãs
 = 
	`NBINTERNAL
(
bi
->
ksize
);

187 
P_BLEAF
:

188 
bl
 = 
	`GETBLEAF
(
rchûd
, 0);

189 
nbyãs
 = 
	`NBINTERNAL
(
bl
->
ksize
);

190 i‡(
t
->
bt_pfx
 && !(
bl
->
Êags
 & 
P_BIGKEY
) &&

191 (
h
->
¥evpg
 !
P_INVALID
 || 
skù
 > 1)) {

192 
tbl
 = 
	`GETBLEAF
(
lchûd
, 
	`NEXTINDEX
(lchild) - 1);

193 
a
.
size
 = 
tbl
->
ksize
;

194 
a
.
d©a
 = 
tbl
->
byãs
;

195 
b
.
size
 = 
bl
->
ksize
;

196 
b
.
d©a
 = 
bl
->
byãs
;

197 
nksize
 = 
t
->
	`bt_pfx
(&
a
, &
b
);

198 
n
 = 
	`NBINTERNAL
(
nksize
);

199 i‡(
n
 < 
nbyãs
) {

200 #ifde‡
STATISTICS


201 
bt_pfxßved
 +
nbyãs
 - 
n
;

203 
nbyãs
 = 
n
;

205 
nksize
 = 0;

207 
nksize
 = 0;

209 
P_RINTERNAL
:

210 
P_RLEAF
:

211 
nbyãs
 = 
NRINTERNAL
;

214 
	`ab‹t
();

218 i‡(
h
->
uµî
 - h->
lowî
 < 
nbyãs
 + (
ödx_t
)) {

219 
•
 = 
h
;

220 
h
 = h->
pgno
 =
P_ROOT
 ?

221 
	`bt_roŸ
(
t
, 
h
, &
l
, &
r
, &
skù
, 
nbyãs
) :

222 
	`bt_∑ge
(
t
, 
h
, &
l
, &
r
, &
skù
, 
nbyãs
);

223 i‡(
h
 =
NULL
)

224 
îr1
;

225 
∑ª¡•lô
 = 1;

227 i‡(
skù
 < (
nxtödex
 = 
	`NEXTINDEX
(
h
)))

228 
	`memmove
(
h
->
löp
 + 
skù
 + 1, h->linp + skip,

229 (
nxtödex
 - 
skù
Ë* (
ödx_t
));

230 
h
->
lowî
 +(
ödx_t
);

231 
∑ª¡•lô
 = 0;

235 
rchûd
->
Êags
 & 
P_TYPE
) {

236 
P_BINTERNAL
:

237 
h
->
löp
[
skù
] = h->
uµî
 -
nbyãs
;

238 
de°
 = (*)
h
 + h->
löp
[
skù
];

239 
	`memmove
(
de°
, 
bi
, 
nbyãs
);

240 ((
BINTERNAL
 *)
de°
)->
pgno
 = 
rchûd
->pgno;

242 
P_BLEAF
:

243 
h
->
löp
[
skù
] = h->
uµî
 -
nbyãs
;

244 
de°
 = (*)
h
 + h->
löp
[
skù
];

245 
	`WR_BINTERNAL
(
de°
, 
nksize
 ?Çksizê: 
bl
->
ksize
,

246 
rchûd
->
pgno
, 
bl
->
Êags
 & 
P_BIGKEY
);

247 
	`memmove
(
de°
, 
bl
->
byãs
, 
nksize
 ?Çksizê: bl->
ksize
);

248 i‡(
bl
->
Êags
 & 
P_BIGKEY
 &&

249 
	`bt_¥e£rve
(
t
, *(
pgno_t
 *)
bl
->
byãs
Ë=
RET_ERROR
)

250 
îr1
;

252 
P_RINTERNAL
:

257 i‡(
skù
 > 0)

258 
de°
 = (*)
h
 + h->
löp
[
skù
 - 1];

260 
de°
 = (*)
l
 +Ü->
löp
[
	`NEXTINDEX
(l) - 1];

261 ((
RINTERNAL
 *)
de°
)->
ƒecs
 = 
	`ªc_tŸÆ
(
lchûd
);

262 ((
RINTERNAL
 *)
de°
)->
pgno
 = 
lchûd
->pgno;

265 
h
->
löp
[
skù
] = h->
uµî
 -
nbyãs
;

266 
de°
 = (*)
h
 + h->
löp
[
skù
];

267 ((
RINTERNAL
 *)
de°
)->
ƒecs
 = 
	`ªc_tŸÆ
(
rchûd
);

268 ((
RINTERNAL
 *)
de°
)->
pgno
 = 
rchûd
->pgno;

270 
P_RLEAF
:

275 i‡(
skù
 > 0)

276 
de°
 = (*)
h
 + h->
löp
[
skù
 - 1];

278 
de°
 = (*)
l
 +Ü->
löp
[
	`NEXTINDEX
(l) - 1];

279 ((
RINTERNAL
 *)
de°
)->
ƒecs
 = 
	`NEXTINDEX
(
lchûd
);

280 ((
RINTERNAL
 *)
de°
)->
pgno
 = 
lchûd
->pgno;

283 
h
->
löp
[
skù
] = h->
uµî
 -
nbyãs
;

284 
de°
 = (*)
h
 + h->
löp
[
skù
];

285 ((
RINTERNAL
 *)
de°
)->
ƒecs
 = 
	`NEXTINDEX
(
rchûd
);

286 ((
RINTERNAL
 *)
de°
)->
pgno
 = 
rchûd
->pgno;

289 
	`ab‹t
();

293 i‡(!
∑ª¡•lô
) {

294 
	`mpoﬁ_put
(
t
->
bt_mp
, 
h
, 
MPOOL_DIRTY
);

299 i‡(
•
->
pgno
 =
P_ROOT
 &&

300 (
	`F_ISSET
(
t
, 
R_RECNO
) ?

301 
	`bt_ºoŸ
(
t
, 
•
, 
l
, 
r
Ë: 
	`bt_broŸ
—, sp,Ü,Ñ)Ë=
RET_ERROR
)

302 
îr1
;

304 
	`mpoﬁ_put
(
t
->
bt_mp
, 
lchûd
, 
MPOOL_DIRTY
);

305 
	`mpoﬁ_put
(
t
->
bt_mp
, 
rchûd
, 
MPOOL_DIRTY
);

309 
	`mpoﬁ_put
(
t
->
bt_mp
, 
l
, 
MPOOL_DIRTY
);

310 
	`mpoﬁ_put
(
t
->
bt_mp
, 
r
, 
MPOOL_DIRTY
);

313  (
RET_SUCCESS
);

320 
îr1
: 
	`mpoﬁ_put
(
t
->
bt_mp
, 
lchûd
, 
MPOOL_DIRTY
);

321 
	`mpoﬁ_put
(
t
->
bt_mp
, 
rchûd
, 
MPOOL_DIRTY
);

323 
îr2
: 
	`mpoﬁ_put
(
t
->
bt_mp
, 
l
, 0);

324 
	`mpoﬁ_put
(
t
->
bt_mp
, 
r
, 0);

325 
	`__db∑nic
(
t
->
bt_dbp
);

326  (
RET_ERROR
);

327 
	}
}

343 
PAGE
 *

344 
	$bt_∑ge
(
t
, 
h
, 
Õ
, 
Ω
, 
skù
, 
ûí
)

345 
BTREE
 *
t
;

346 
PAGE
 *
h
, **
Õ
, **
Ω
;

347 
ödx_t
 *
skù
;

348 
size_t
 
ûí
;

350 
PAGE
 *
l
, *
r
, *
ç
;

351 
pgno_t
 
≈g
;

353 #ifde‡
STATISTICS


354 ++
bt_•lô
;

357 i‡((
r
 = 
	`__bt_√w
(
t
, &
≈g
)Ë=
NULL
)

358  (
NULL
);

359 
r
->
pgno
 = 
≈g
;

360 
r
->
lowî
 = 
BTDATAOFF
;

361 
r
->
uµî
 = 
t
->
bt_psize
;

362 
r
->
√xçg
 = 
h
->nextpg;

363 
r
->
¥evpg
 = 
h
->
pgno
;

364 
r
->
Êags
 = 
h
->Êag†& 
P_TYPE
;

376 i‡(
h
->
√xçg
 =
P_INVALID
 && *
skù
 =
	`NEXTINDEX
(h)) {

377 #ifde‡
STATISTICS


378 ++
bt_s‹t•lô
;

380 
h
->
√xçg
 = 
r
->
pgno
;

381 
r
->
lowî
 = 
BTDATAOFF
 + (
ödx_t
);

382 *
skù
 = 0;

383 *
Õ
 = 
h
;

384 *
Ω
 = 
r
;

385  (
r
);

389 i‡((
l
 = (
PAGE
 *)
	`mÆloc
(
t
->
bt_psize
)Ë=
NULL
) {

390 
	`mpoﬁ_put
(
t
->
bt_mp
, 
r
, 0);

391  (
NULL
);

393 #ifde‡
PURIFY


394 
	`mem£t
(
l
, 0xff, 
t
->
bt_psize
);

396 
l
->
pgno
 = 
h
->pgno;

397 
l
->
√xçg
 = 
r
->
pgno
;

398 
l
->
¥evpg
 = 
h
->prevpg;

399 
l
->
lowî
 = 
BTDATAOFF
;

400 
l
->
uµî
 = 
t
->
bt_psize
;

401 
l
->
Êags
 = 
h
->Êag†& 
P_TYPE
;

404 i‡(
h
->
√xçg
 !
P_INVALID
) {

405 i‡((
ç
 = 
	`mpoﬁ_gë
(
t
->
bt_mp
, 
h
->
√xçg
, 0)Ë=
NULL
) {

406 
	`‰ì
(
l
);

408  (
NULL
);

410 
ç
->
¥evpg
 = 
r
->
pgno
;

411 
	`mpoﬁ_put
(
t
->
bt_mp
, 
ç
, 
MPOOL_DIRTY
);

421 
ç
 = 
	`bt_p•lô
(
t
, 
h
, 
l
, 
r
, 
skù
, 
ûí
);

424 
	`memmove
(
h
, 
l
, 
t
->
bt_psize
);

425 i‡(
ç
 =
l
)

426 
ç
 = 
h
;

427 
	`‰ì
(
l
);

429 *
Õ
 = 
h
;

430 *
Ω
 = 
r
;

431  (
ç
);

432 
	}
}

448 
PAGE
 *

449 
	$bt_roŸ
(
t
, 
h
, 
Õ
, 
Ω
, 
skù
, 
ûí
)

450 
BTREE
 *
t
;

451 
PAGE
 *
h
, **
Õ
, **
Ω
;

452 
ödx_t
 *
skù
;

453 
size_t
 
ûí
;

455 
PAGE
 *
l
, *
r
, *
ç
;

456 
pgno_t
 
 pg
, 
∫pg
;

458 #ifde‡
STATISTICS


459 ++
bt_•lô
;

460 ++
bt_roŸ•lô
;

463 i‡((
l
 = 
	`__bt_√w
(
t
, &
 pg
)Ë=
NULL
 ||

464 (
r
 = 
	`__bt_√w
(
t
, &
∫pg
)Ë=
NULL
)

465  (
NULL
);

466 
l
->
pgno
 = 
 pg
;

467 
r
->
pgno
 = 
∫pg
;

468 
l
->
√xçg
 = 
r
->
pgno
;

469 
r
->
¥evpg
 = 
l
->
pgno
;

470 
l
->
¥evpg
 = 
r
->
√xçg
 = 
P_INVALID
;

471 
l
->
lowî
 = 
r
->lowî = 
BTDATAOFF
;

472 
l
->
uµî
 = 
r
->uµî = 
t
->
bt_psize
;

473 
l
->
Êags
 = 
r
->Êag†
h
->Êag†& 
P_TYPE
;

476 
ç
 = 
	`bt_p•lô
(
t
, 
h
, 
l
, 
r
, 
skù
, 
ûí
);

478 *
Õ
 = 
l
;

479 *
Ω
 = 
r
;

480  (
ç
);

481 
	}
}

496 
	$bt_ºoŸ
(
t
, 
h
, 
l
, 
r
)

497 
BTREE
 *
t
;

498 
PAGE
 *
h
, *
l
, *
r
;

500 *
de°
;

503 
h
->
löp
[0] = h->
uµî
 = 
t
->
bt_psize
 - 
NRINTERNAL
;

504 
de°
 = (*)
h
 + h->
uµî
;

505 
	`WR_RINTERNAL
(
de°
,

506 
l
->
Êags
 & 
P_RLEAF
 ? 
	`NEXTINDEX
÷Ë: 
	`ªc_tŸÆ
÷),Ü->
pgno
);

508 
h
->
löp
[1] = h->
uµî
 -
NRINTERNAL
;

509 
de°
 = (*)
h
 + h->
uµî
;

510 
	`WR_RINTERNAL
(
de°
,

511 
r
->
Êags
 & 
P_RLEAF
 ? 
	`NEXTINDEX
‘Ë: 
	`ªc_tŸÆ
‘),Ñ->
pgno
);

513 
h
->
lowî
 = 
BTDATAOFF
 + 2 * (
ödx_t
);

516 
h
->
Êags
 &~
P_TYPE
;

517 
h
->
Êags
 |
P_RINTERNAL
;

518 
	`mpoﬁ_put
(
t
->
bt_mp
, 
h
, 
MPOOL_DIRTY
);

520  (
RET_SUCCESS
);

521 
	}
}

536 
	$bt_broŸ
(
t
, 
h
, 
l
, 
r
)

537 
BTREE
 *
t
;

538 
PAGE
 *
h
, *
l
, *
r
;

540 
BINTERNAL
 *
bi
;

541 
BLEAF
 *
bl
;

542 
u_öt32_t
 
nbyãs
;

543 *
de°
;

553 
nbyãs
 = 
	`NBINTERNAL
(0);

554 
h
->
löp
[0] = h->
uµî
 = 
t
->
bt_psize
 - 
nbyãs
;

555 
de°
 = (*)
h
 + h->
uµî
;

556 
	`WR_BINTERNAL
(
de°
, 0, 
l
->
pgno
, 0);

558 
h
->
Êags
 & 
P_TYPE
) {

559 
P_BLEAF
:

560 
bl
 = 
	`GETBLEAF
(
r
, 0);

561 
nbyãs
 = 
	`NBINTERNAL
(
bl
->
ksize
);

562 
h
->
löp
[1] = h->
uµî
 -
nbyãs
;

563 
de°
 = (*)
h
 + h->
uµî
;

564 
	`WR_BINTERNAL
(
de°
, 
bl
->
ksize
, 
r
->
pgno
, 0);

565 
	`memmove
(
de°
, 
bl
->
byãs
, bl->
ksize
);

571 i‡(
bl
->
Êags
 & 
P_BIGKEY
 &&

572 
	`bt_¥e£rve
(
t
, *(
pgno_t
 *)
bl
->
byãs
Ë=
RET_ERROR
)

573  (
RET_ERROR
);

575 
P_BINTERNAL
:

576 
bi
 = 
	`GETBINTERNAL
(
r
, 0);

577 
nbyãs
 = 
	`NBINTERNAL
(
bi
->
ksize
);

578 
h
->
löp
[1] = h->
uµî
 -
nbyãs
;

579 
de°
 = (*)
h
 + h->
uµî
;

580 
	`memmove
(
de°
, 
bi
, 
nbyãs
);

581 ((
BINTERNAL
 *)
de°
)->
pgno
 = 
r
->pgno;

584 
	`ab‹t
();

588 
h
->
lowî
 = 
BTDATAOFF
 + 2 * (
ödx_t
);

591 
h
->
Êags
 &~
P_TYPE
;

592 
h
->
Êags
 |
P_BINTERNAL
;

593 
	`mpoﬁ_put
(
t
->
bt_mp
, 
h
, 
MPOOL_DIRTY
);

595  (
RET_SUCCESS
);

596 
	}
}

612 
PAGE
 *

613 
	$bt_p•lô
(
t
, 
h
, 
l
, 
r
, 
pskù
, 
ûí
)

614 
BTREE
 *
t
;

615 
PAGE
 *
h
, *
l
, *
r
;

616 
ödx_t
 *
pskù
;

617 
size_t
 
ûí
;

619 
BINTERNAL
 *
bi
;

620 
BLEAF
 *
bl
;

621 
CURSOR
 *
c
;

622 
RLEAF
 *
æ
;

623 
PAGE
 *
rvÆ
;

624 *
§c
;

625 
ödx_t
 
fuŒ
, 
hÆf
, 
nxt
, 
off
, 
skù
, 
t›
, 
u£d
;

626 
u_öt32_t
 
nbyãs
;

627 
bigkey˙t
, 
isbigkey
;

635 
bigkey˙t
 = 0;

636 
skù
 = *
pskù
;

637 
fuŒ
 = 
t
->
bt_psize
 - 
BTDATAOFF
;

638 
hÆf
 = 
fuŒ
 / 2;

639 
u£d
 = 0;

640 
nxt
 = 
off
 = 0, 
t›
 = 
	`NEXTINDEX
(
h
);Çxt <Åop; ++off) {

641 i‡(
skù
 =
off
) {

642 
nbyãs
 = 
ûí
;

643 
isbigkey
 = 0;

645 
h
->
Êags
 & 
P_TYPE
) {

646 
P_BINTERNAL
:

647 
§c
 = 
bi
 = 
	`GETBINTERNAL
(
h
, 
nxt
);

648 
nbyãs
 = 
	`NBINTERNAL
(
bi
->
ksize
);

649 
isbigkey
 = 
bi
->
Êags
 & 
P_BIGKEY
;

651 
P_BLEAF
:

652 
§c
 = 
bl
 = 
	`GETBLEAF
(
h
, 
nxt
);

653 
nbyãs
 = 
	`NBLEAF
(
bl
);

654 
isbigkey
 = 
bl
->
Êags
 & 
P_BIGKEY
;

656 
P_RINTERNAL
:

657 
§c
 = 
	`GETRINTERNAL
(
h
, 
nxt
);

658 
nbyãs
 = 
NRINTERNAL
;

659 
isbigkey
 = 0;

661 
P_RLEAF
:

662 
§c
 = 
æ
 = 
	`GETRLEAF
(
h
, 
nxt
);

663 
nbyãs
 = 
	`NRLEAF
(
æ
);

664 
isbigkey
 = 0;

667 
	`ab‹t
();

676 i‡(
skù
 <
off
 && 
u£d
 + 
nbyãs
 >
fuŒ
 || 
nxt
 =
t›
 - 1) {

677 --
off
;

682 i‡(
skù
 !
off
) {

683 ++
nxt
;

685 
l
->
löp
[
off
] =Ü->
uµî
 -
nbyãs
;

686 
	`memmove
((*)
l
 +Ü->
uµî
, 
§c
, 
nbyãs
);

689 
u£d
 +
nbyãs
;

690 i‡(
u£d
 >
hÆf
) {

691 i‡(!
isbigkey
 || 
bigkey˙t
 == 3)

694 ++
bigkey˙t
;

702 
l
->
lowî
 +(
off
 + 1Ë* (
ödx_t
);

711 
c
 = &
t
->
bt_curs‹
;

712 i‡(
	`F_ISSET
(
c
, 
CURS_INIT
Ë&& c->
pg
.
pgno
 =
h
->pgno) {

713 i‡(
c
->
pg
.
ödex
 >
skù
)

714 ++
c
->
pg
.
ödex
;

715 i‡(
c
->
pg
.
ödex
 < 
nxt
)

716 
c
->
pg
.
pgno
 = 
l
->pgno;

718 
c
->
pg
.
pgno
 = 
r
->pgno;

719 
c
->
pg
.
ödex
 -
nxt
;

728 i‡(
skù
 <
off
) {

729 
skù
 = 0;

730 
rvÆ
 = 
l
;

732 
rvÆ
 = 
r
;

733 *
pskù
 -
nxt
;

736 
off
 = 0; 
nxt
 < 
t›
; ++off) {

737 i‡(
skù
 =
nxt
) {

738 ++
off
;

739 
skù
 = 0;

741 
h
->
Êags
 & 
P_TYPE
) {

742 
P_BINTERNAL
:

743 
§c
 = 
bi
 = 
	`GETBINTERNAL
(
h
, 
nxt
);

744 
nbyãs
 = 
	`NBINTERNAL
(
bi
->
ksize
);

746 
P_BLEAF
:

747 
§c
 = 
bl
 = 
	`GETBLEAF
(
h
, 
nxt
);

748 
nbyãs
 = 
	`NBLEAF
(
bl
);

750 
P_RINTERNAL
:

751 
§c
 = 
	`GETRINTERNAL
(
h
, 
nxt
);

752 
nbyãs
 = 
NRINTERNAL
;

754 
P_RLEAF
:

755 
§c
 = 
æ
 = 
	`GETRLEAF
(
h
, 
nxt
);

756 
nbyãs
 = 
	`NRLEAF
(
æ
);

759 
	`ab‹t
();

761 ++
nxt
;

762 
r
->
löp
[
off
] =Ñ->
uµî
 -
nbyãs
;

763 
	`memmove
((*)
r
 +Ñ->
uµî
, 
§c
, 
nbyãs
);

765 
r
->
lowî
 +
off
 * (
ödx_t
);

768 i‡(
skù
 =
t›
)

769 
r
->
lowî
 +(
ödx_t
);

771  (
rvÆ
);

772 
	}
}

790 
	$bt_¥e£rve
(
t
, 
pg
)

791 
BTREE
 *
t
;

792 
pgno_t
 
pg
;

794 
PAGE
 *
h
;

796 i‡((
h
 = 
	`mpoﬁ_gë
(
t
->
bt_mp
, 
pg
, 0)Ë=
NULL
)

797  (
RET_ERROR
);

798 
h
->
Êags
 |
P_PRESERVE
;

799 
	`mpoﬁ_put
(
t
->
bt_mp
, 
h
, 
MPOOL_DIRTY
);

800  (
RET_SUCCESS
);

801 
	}
}

817 
ª˙o_t


818 
	$ªc_tŸÆ
(
h
)

819 
PAGE
 *
h
;

821 
ª˙o_t
 
ªcs
;

822 
ödx_t
 
nxt
, 
t›
;

824 
ªcs
 = 0, 
nxt
 = 0, 
t›
 = 
	`NEXTINDEX
(
h
);Çxt <Åop; ++nxt)

825 
ªcs
 +
	`GETRINTERNAL
(
h
, 
nxt
)->
ƒecs
;

826  (
ªcs
);

827 
	}
}

	@db/btree/bt_utils.c

37 #i‡
deföed
(
LIBC_SCCS
Ë&& !deföed(
löt
)

38 
	gsccsid
[] = "@(#)bt_utils.c 8.8 (Berkeley) 7/20/94";

41 
	~<sys/∑øm.h
>

43 
	~<°dio.h
>

44 
	~<°dlib.h
>

45 
	~<°rög.h
>

47 
	~<db.h
>

48 
	~"båì.h
"

67 
	$__bt_ªt
(
t
, 
e
, 
key
, 
rkey
, 
d©a
, 
rd©a
, 
c›y
)

68 
BTREE
 *
t
;

69 
EPG
 *
e
;

70 
DBT
 *
key
, *
rkey
, *
d©a
, *
rd©a
;

71 
c›y
;

73 
BLEAF
 *
bl
;

74 *
p
;

76 
bl
 = 
	`GETBLEAF
(
e
->
∑ge
,É->
ödex
);

83 i‡(
key
 =
NULL
)

84 
d©a⁄ly
;

86 i‡(
bl
->
Êags
 & 
P_BIGKEY
) {

87 i‡(
	`__ovÊ_gë
(
t
, 
bl
->
byãs
,

88 &
key
->
size
, &
rkey
->
d©a
, &rkey->size))

89  (
RET_ERROR
);

90 
key
->
d©a
 = 
rkey
->data;

91 } i‡(
c›y
 || 
	`F_ISSET
(
t
, 
B_DB_LOCK
)) {

92 i‡(
bl
->
ksize
 > 
rkey
->
size
) {

93 
p
 = (*)(
rkey
->
d©a
 =
NULL
 ?

94 
	`mÆloc
(
bl
->
ksize
Ë: 
	`ªÆloc
(
rkey
->
d©a
, bl->ksize));

95 i‡(
p
 =
NULL
)

96  (
RET_ERROR
);

97 
rkey
->
d©a
 = 
p
;

98 
rkey
->
size
 = 
bl
->
ksize
;

100 
	`memmove
(
rkey
->
d©a
, 
bl
->
byãs
, bl->
ksize
);

101 
key
->
size
 = 
bl
->
ksize
;

102 
key
->
d©a
 = 
rkey
->data;

104 
key
->
size
 = 
bl
->
ksize
;

105 
key
->
d©a
 = 
bl
->
byãs
;

108 
d©a⁄ly
:

109 i‡(
d©a
 =
NULL
)

110  (
RET_SUCCESS
);

112 i‡(
bl
->
Êags
 & 
P_BIGDATA
) {

113 i‡(
	`__ovÊ_gë
(
t
, 
bl
->
byãs
 + bl->
ksize
,

114 &
d©a
->
size
, &
rd©a
->data, &rdata->size))

115  (
RET_ERROR
);

116 
d©a
->d©®
rd©a
->data;

117 } i‡(
c›y
 || 
	`F_ISSET
(
t
, 
B_DB_LOCK
)) {

119 i‡(
bl
->
dsize
 + 1 > 
rd©a
->
size
) {

120 
p
 = (*)(
rd©a
->
d©a
 =
NULL
 ?

121 
	`mÆloc
(
bl
->
dsize
 + 1) :

122 
	`ªÆloc
(
rd©a
->
d©a
, 
bl
->
dsize
 + 1));

123 i‡(
p
 =
NULL
)

124  (
RET_ERROR
);

125 
rd©a
->
d©a
 = 
p
;

126 
rd©a
->
size
 = 
bl
->
dsize
 + 1;

128 
	`memmove
(
rd©a
->
d©a
, 
bl
->
byãs
 + bl->
ksize
, bl->
dsize
);

129 
d©a
->
size
 = 
bl
->
dsize
;

130 
d©a
->d©®
rd©a
->data;

132 
d©a
->
size
 = 
bl
->
dsize
;

133 
d©a
->d©®
bl
->
byãs
 + bl->
ksize
;

136  (
RET_SUCCESS
);

137 
	}
}

153 
	$__bt_cmp
(
t
, 
k1
, 
e
)

154 
BTREE
 *
t
;

155 c⁄° 
DBT
 *
k1
;

156 
EPG
 *
e
;

158 
BINTERNAL
 *
bi
;

159 
BLEAF
 *
bl
;

160 
DBT
 
k2
;

161 
PAGE
 *
h
;

162 *
bigkey
;

171 
h
 = 
e
->
∑ge
;

172 i‡(
e
->
ödex
 =0 && 
h
->
¥evpg
 =
P_INVALID
 && !(h->
Êags
 & 
P_BLEAF
))

175 
bigkey
 = 
NULL
;

176 i‡(
h
->
Êags
 & 
P_BLEAF
) {

177 
bl
 = 
	`GETBLEAF
(
h
, 
e
->
ödex
);

178 i‡(
bl
->
Êags
 & 
P_BIGKEY
)

179 
bigkey
 = 
bl
->
byãs
;

181 
k2
.
d©a
 = 
bl
->
byãs
;

182 
k2
.
size
 = 
bl
->
ksize
;

185 
bi
 = 
	`GETBINTERNAL
(
h
, 
e
->
ödex
);

186 i‡(
bi
->
Êags
 & 
P_BIGKEY
)

187 
bigkey
 = 
bi
->
byãs
;

189 
k2
.
d©a
 = 
bi
->
byãs
;

190 
k2
.
size
 = 
bi
->
ksize
;

194 i‡(
bigkey
) {

195 i‡(
	`__ovÊ_gë
(
t
, 
bigkey
,

196 &
k2
.
size
, &
t
->
bt_rd©a
.
d©a
, &t->bt_rdata.size))

197  (
RET_ERROR
);

198 
k2
.
d©a
 = 
t
->
bt_rd©a
.data;

200  ((*
t
->
bt_cmp
)(
k1
, &
k2
));

201 
	}
}

216 
	$__bt_defcmp
(
a
, 
b
)

217 c⁄° 
DBT
 *
a
, *
b
;

219 
size_t
 
Àn
;

220 
u_ch¨
 *
p1
, *
p2
;

228 
Àn
 = 
	`MIN
(
a
->
size
, 
b
->size);

229 
p1
 = 
a
->
d©a
, 
p2
 = 
b
->d©a; 
Àn
--; ++p1, ++p2)

230 i‡(*
p1
 !*
p2
)

231  (()*
p1
 - ()*
p2
);

232  (()
a
->
size
 - ()
b
->size);

233 
	}
}

245 
size_t


246 
	$__bt_deÂfx
(
a
, 
b
)

247 c⁄° 
DBT
 *
a
, *
b
;

249 
u_ch¨
 *
p1
, *
p2
;

250 
size_t
 
˙t
, 
Àn
;

252 
˙t
 = 1;

253 
Àn
 = 
	`MIN
(
a
->
size
, 
b
->size);

254 
p1
 = 
a
->
d©a
, 
p2
 = 
b
->d©a; 
Àn
--; ++p1, ++p2, ++
˙t
)

255 i‡(*
p1
 !*
p2
)

256  (
˙t
);

259  (
a
->
size
 < 
b
->size ?á->size + 1 :á->size);

260 
	}
}

	@db/btree/btree.h

40 
	#F_SET
(
p
, 
f
Ë’)->
Êags
 |(f)

	)

41 
	#F_CLR
(
p
, 
f
Ë’)->
Êags
 &~(f)

	)

42 
	#F_ISSET
(
p
, 
f
Ë(’)->
Êags
 & (f))

	)

44 
	~<mpoﬁ.h
>

46 
	#DEFMINKEYPAGE
 (2Ë

	)

47 
	#MINCACHE
 (5Ë

	)

48 
	#MINPSIZE
 (512Ë

	)

55 
	#P_INVALID
 0

	)

56 
	#P_META
 0

	)

57 
	#P_ROOT
 1

	)

67 
	s_∑ge
 {

68 
pgno_t
 
	mpgno
;

69 
pgno_t
 
	m¥evpg
;

70 
pgno_t
 
	m√xçg
;

72 
	#P_BINTERNAL
 0x01

	)

73 
	#P_BLEAF
 0x02

	)

74 
	#P_OVERFLOW
 0x04

	)

75 
	#P_RINTERNAL
 0x08

	)

76 
	#P_RLEAF
 0x10

	)

77 
	#P_TYPE
 0x1‡

	)

78 
	#P_PRESERVE
 0x20

	)

79 
u_öt32_t
 
	mÊags
;

81 
ödx_t
 
	mlowî
;

82 
ödx_t
 
	muµî
;

83 
ödx_t
 
	mlöp
[1];

84 } 
	tPAGE
;

87 
	#BTDATAOFF
 \

88 ((
pgno_t
) + (pgno_t) + (pgno_t) + \

89 (
u_öt32_t
Ë+ (
ödx_t
Ë+ (ödx_t))

	)

90 
	#NEXTINDEX
(
p
Ë((’)->
lowî
 - 
BTDATAOFF
Ë/ (
ödx_t
))

	)

108 
	#LALIGN
(
n
Ë((“Ë+ (
pgno_t
Ë- 1Ë& ~(’gno_tË- 1))

	)

109 
	#NOVFLSIZE
 ((
pgno_t
Ë+ (
u_öt32_t
))

	)

120 
	s_böã∫Æ
 {

121 
u_öt32_t
 
	mksize
;

122 
pgno_t
 
	mpgno
;

123 
	#P_BIGDATA
 0x01

	)

124 
	#P_BIGKEY
 0x02

	)

125 
u_ch¨
 
	mÊags
;

126 
	mbyãs
[1];

127 } 
	tBINTERNAL
;

130 
	#GETBINTERNAL
(
pg
, 
ödx
) \

131 ((
BINTERNAL
 *)((*)(
pg
Ë+ (pg)->
löp
[
ödx
]))

	)

134 
	#NBINTERNAL
(
Àn
) \

135 
	`LALIGN
((
u_öt32_t
Ë+ (
pgno_t
Ë+ (
u_ch¨
Ë+ (
Àn
))

	)

138 
	#WR_BINTERNAL
(
p
, 
size
, 
pgno
, 
Êags
) { \

139 *(
u_öt32_t
 *)
p
 = 
size
; \

140 
p
 +(
u_öt32_t
); \

141 *(
pgno_t
 *)
p
 = 
pgno
; \

142 
p
 +(
pgno_t
); \

143 *(
u_ch¨
 *)
p
 = 
Êags
; \

144 
p
 +(
u_ch¨
); \

145 }

	)

151 
	s_röã∫Æ
 {

152 
ª˙o_t
 
	mƒecs
;

153 
pgno_t
 
	mpgno
;

154 } 
	tRINTERNAL
;

157 
	#GETRINTERNAL
(
pg
, 
ödx
) \

158 ((
RINTERNAL
 *)((*)(
pg
Ë+ (pg)->
löp
[
ödx
]))

	)

161 
	#NRINTERNAL
 \

162 
	`LALIGN
((
ª˙o_t
Ë+ (
pgno_t
))

	)

165 
	#WR_RINTERNAL
(
p
, 
ƒecs
, 
pgno
) { \

166 *(
ª˙o_t
 *)
p
 = 
ƒecs
; \

167 
p
 +(
ª˙o_t
); \

168 *(
pgno_t
 *)
p
 = 
pgno
; \

169 }

	)

172 
	s_bÀaf
 {

173 
u_öt32_t
 
	mksize
;

174 
u_öt32_t
 
	mdsize
;

175 
u_ch¨
 
	mÊags
;

176 
	mbyãs
[1];

177 } 
	tBLEAF
;

180 
	#GETBLEAF
(
pg
, 
ödx
) \

181 ((
BLEAF
 *)((*)(
pg
Ë+ (pg)->
löp
[
ödx
]))

	)

184 
	#NBLEAF
(
p
Ë
	`NBLEAFDBT
(’)->
ksize
, (p)->
dsize
)

	)

187 
	#NBLEAFDBT
(
ksize
, 
dsize
) \

188 
	`LALIGN
((
u_öt32_t
Ë+ (u_öt32_tË+ (
u_ch¨
) + \

189 (
ksize
Ë+ (
dsize
))

	)

192 
	#WR_BLEAF
(
p
, 
key
, 
d©a
, 
Êags
) { \

193 *(
u_öt32_t
 *)
p
 = 
key
->
size
; \

194 
p
 +(
u_öt32_t
); \

195 *(
u_öt32_t
 *)
p
 = 
d©a
->
size
; \

196 
p
 +(
u_öt32_t
); \

197 *(
u_ch¨
 *)
p
 = 
Êags
; \

198 
p
 +(
u_ch¨
); \

199 
	`memmove
(
p
, 
key
->
d©a
, key->
size
); \

200 
p
 +
key
->
size
; \

201 
	`memmove
(
p
, 
d©a
->d©a, d©a->
size
); \

202 }

	)

205 
	s_æóf
 {

206 
u_öt32_t
 
	mdsize
;

207 
u_ch¨
 
	mÊags
;

208 
	mbyãs
[1];

209 } 
	tRLEAF
;

212 
	#GETRLEAF
(
pg
, 
ödx
) \

213 ((
RLEAF
 *)((*)(
pg
Ë+ (pg)->
löp
[
ödx
]))

	)

216 
	#NRLEAF
(
p
Ë
	`NRLEAFDBT
(’)->
dsize
)

	)

219 
	#NRLEAFDBT
(
dsize
) \

220 
	`LALIGN
((
u_öt32_t
Ë+ (
u_ch¨
Ë+ (
dsize
))

	)

223 
	#WR_RLEAF
(
p
, 
d©a
, 
Êags
) { \

224 *(
u_öt32_t
 *)
p
 = 
d©a
->
size
; \

225 
p
 +(
u_öt32_t
); \

226 *(
u_ch¨
 *)
p
 = 
Êags
; \

227 
p
 +(
u_ch¨
); \

228 
	`memmove
(
p
, 
d©a
->d©a, d©a->
size
); \

229 }

	)

241 
	s_ïgno
 {

242 
pgno_t
 
	mpgno
;

243 
ödx_t
 
	mödex
;

244 } 
	tEPGNO
;

246 
	s_ïg
 {

247 
PAGE
 *
	m∑ge
;

248 
ödx_t
 
	mödex
;

249 } 
	tEPG
;

275 
	s_curs‹
 {

276 
EPGNO
 
	mpg
;

277 
DBT
 
	mkey
;

278 
ª˙o_t
 
	mrcurs‹
;

280 
	#CURS_ACQUIRE
 0x01

	)

281 
	#CURS_AFTER
 0x02

	)

282 
	#CURS_BEFORE
 0x04

	)

283 
	#CURS_INIT
 0x08

	)

284 
u_öt8_t
 
	mÊags
;

285 } 
	tCURSOR
;

292 
	s_btmëa
 {

293 
u_öt32_t
 
	mmagic
;

294 
u_öt32_t
 
	mvîsi⁄
;

295 
u_öt32_t
 
	mpsize
;

296 
u_öt32_t
 
	m‰ì
;

297 
u_öt32_t
 
	mƒecs
;

299 
	#SAVEMETA
 (
B_NODUPS
 | 
R_RECNO
)

	)

300 
u_öt32_t
 
	mÊags
;

301 } 
	tBTMETA
;

304 
	s_båì
 {

305 
MPOOL
 *
	mbt_mp
;

307 
DB
 *
	mbt_dbp
;

309 
EPG
 
	mbt_cur
;

310 
PAGE
 *
	mbt_pö√d
;

312 
CURSOR
 
	mbt_curs‹
;

314 
	#BT_PUSH
(
t
, 
p
, 
i
) { \

315 
t
->
bt_•
->
pgno
 = 
p
; \

316 
t
->
bt_•
->
ödex
 = 
i
; \

317 ++
t
->
bt_•
; \

318 }

	)

319 
	#BT_POP
(
t
Ë—->
bt_•
 =t->
bt_°ack
 ? 
NULL
 : --t->bt_•)

	)

320 
	#BT_CLR
(
t
Ë—->
bt_•
 =Å->
bt_°ack
)

	)

321 
EPGNO
 
	mbt_°ack
[50];

322 
EPGNO
 *
	mbt_•
;

324 
DBT
 
	mbt_rkey
;

325 
DBT
 
	mbt_rd©a
;

327 
	mbt_fd
;

329 
pgno_t
 
	mbt_‰ì
;

330 
u_öt32_t
 
	mbt_psize
;

331 
ödx_t
 
	mbt_ovÊsize
;

332 
	mbt_l‹dî
;

334 íum { 
	mNOT
, 
	mBACK
, 
	mFORWARD
 } 
	mbt_‹dî
;

335 
EPGNO
 
	mbt_œ°
;

338 (*
	mbt_cmp
Ë
__P
((c⁄° 
DBT
 *, const DBT *));

340 
size_t
 (*
bt_pfx
Ë
__P
((c⁄° 
DBT
 *, const DBT *));

342 (*
	mbt_úec
Ë
__P
((
_båì
 *, 
ª˙o_t
));

344 
FILE
 *
	mbt_rÂ
;

345 
	mbt_rfd
;

347 
ˇddr_t
 
	mbt_cm≠
;

348 
ˇddr_t
 
	mbt_sm≠
;

349 
ˇddr_t
 
	mbt_em≠
;

350 
size_t
 
	mbt_msize
;

352 
ª˙o_t
 
	mbt_ƒecs
;

353 
size_t
 
	mbt_ª˛í
;

354 
u_ch¨
 
	mbt_bvÆ
;

360 
	#B_INMEM
 0x00001

	)

361 
	#B_METADIRTY
 0x00002

	)

362 
	#B_MODIFIED
 0x00004

	)

363 
	#B_NEEDSWAP
 0x00008

	)

364 
	#B_RDONLY
 0x00010

	)

366 
	#B_NODUPS
 0x00020

	)

367 
	#R_RECNO
 0x00080

	)

369 
	#R_CLOSEFP
 0x00040

	)

370 
	#R_EOF
 0x00100

	)

371 
	#R_FIXLEN
 0x00200

	)

372 
	#R_MEMMAPPED
 0x00400

	)

373 
	#R_INMEM
 0x00800

	)

374 
	#R_MODIFIED
 0x01000

	)

375 
	#R_RDONLY
 0x02000

	)

377 
	#B_DB_LOCK
 0x04000

	)

378 
	#B_DB_SHMEM
 0x08000

	)

379 
	#B_DB_TXN
 0x10000

	)

380 
u_öt32_t
 
	mÊags
;

381 } 
	tBTREE
;

383 
	~"exã∫.h
"

	@db/btree/extern.h

36 
__bt_˛o£
 
__P
((
DB
 *));

37 
__bt_cmp
 
__P
((
BTREE
 *, c⁄° 
DBT
 *, 
EPG
 *));

38 
__bt_¸§dñ
 
__P
((
BTREE
 *, 
EPGNO
 *));

39 
__bt_defcmp
 
__P
((c⁄° 
DBT
 *, const DBT *));

40 
size_t
 
__bt_deÂfx
 
__P
((c⁄° 
DBT
 *, const DBT *));

41 
__bt_dñëe
 
__P
((c⁄° 
DB
 *, c⁄° 
DBT
 *, 
u_öt
));

42 
__bt_dÀaf
 
__P
((
BTREE
 *, c⁄° 
DBT
 *, 
PAGE
 *, 
u_öt
));

43 
__bt_fd
 
__P
((c⁄° 
DB
 *));

44 
__bt_‰ì
 
__P
((
BTREE
 *, 
PAGE
 *));

45 
__bt_gë
 
__P
((c⁄° 
DB
 *, c⁄° 
DBT
 *, DBT *, 
u_öt
));

46 
PAGE
 *
__bt_√w
 
__P
((
BTREE
 *, 
pgno_t
 *));

47 
__bt_pgö
 
__P
((*, 
pgno_t
, *));

48 
__bt_pgout
 
__P
((*, 
pgno_t
, *));

49 
__bt_push
 
__P
((
BTREE
 *, 
pgno_t
, ));

50 
__bt_put
 
__P
((c⁄° 
DB
 *
dbp
, 
DBT
 *, c⁄° DBT *, 
u_öt
));

51 
__bt_ªt
 
__P
((
BTREE
 *, 
EPG
 *, 
DBT
 *, DBT *, DBT *, DBT *, ));

52 
EPG
 *
__bt_£¨ch
 
__P
((
BTREE
 *, c⁄° 
DBT
 *, *));

53 
__bt_£q
 
__P
((c⁄° 
DB
 *, 
DBT
 *, DBT *, 
u_öt
));

54 
__bt_£tcur
 
__P
((
BTREE
 *, 
pgno_t
, 
u_öt
));

55 
__bt_•lô
 
__P
((
BTREE
 *, 
PAGE
 *,

56 c⁄° 
DBT
 *, c⁄° DBT *, , 
size_t
, 
u_öt32_t
));

57 
__bt_sync
 
__P
((c⁄° 
DB
 *, 
u_öt
));

59 
__ovÊ_dñëe
 
__P
((
BTREE
 *, *));

60 
__ovÊ_gë
 
__P
((
BTREE
 *, *, 
size_t
 *, **, size_t *));

61 
__ovÊ_put
 
__P
((
BTREE
 *, c⁄° 
DBT
 *, 
pgno_t
 *));

63 #ifde‡
DEBUG


64 
__bt_d≈age
 
__P
((
DB
 *, 
pgno_t
));

65 
__bt_d∑ge
 
__P
((
PAGE
 *));

66 
__bt_dump
 
__P
((
DB
 *));

68 #ifde‡
STATISTICS


69 
__bt_°©
 
__P
((
DB
 *));

	@db/db/db.c

34 #i‡
deföed
(
LIBC_SCCS
Ë&& !deföed(
löt
)

35 
	gsccsid
[] = "@(#)db.c 8.4 (Berkeley) 2/21/94";

38 
	~<sys/ty≥s.h
>

40 
	~<î∫o.h
>

41 
	~<f˙é.h
>

42 
	~<°ddef.h
>

43 
	~<°dio.h
>

45 
	~<db.h
>

47 
DB
 *

48 
	$db›í
(
‚ame
, 
Êags
, 
mode
, 
ty≥
, 
›íöfo
)

49 c⁄° *
‚ame
;

50 
Êags
, 
mode
;

51 
DBTYPE
 
ty≥
;

52 c⁄° *
›íöfo
;

55 
	#DB_FLAGS
 (
DB_LOCK
 | 
DB_SHMEM
 | 
DB_TXN
)

	)

56 
	#USE_OPEN_FLAGS
 \

57 (
O_CREAT
 | 
O_EXCL
 | 
O_EXLOCK
 | 
O_NONBLOCK
 | 
O_RDONLY
 | \

58 
O_RDWR
 | 
O_SHLOCK
 | 
O_TRUNC
)

	)

60 i‡((
Êags
 & ~(
USE_OPEN_FLAGS
 | 
DB_FLAGS
)) == 0)

61 
ty≥
) {

62 
DB_BTREE
:

63  (
	`__bt_›í
(
‚ame
, 
Êags
 & 
USE_OPEN_FLAGS
,

64 
mode
, 
›íöfo
, 
Êags
 & 
DB_FLAGS
));

65 
DB_HASH
:

66 
	`ab‹t
();

67 
DB_RECNO
:

68  (
	`__ªc_›í
(
‚ame
, 
Êags
 & 
USE_OPEN_FLAGS
,

69 
mode
, 
›íöfo
, 
Êags
 & 
DB_FLAGS
));

71 
î∫o
 = 
EINVAL
;

72  (
NULL
);

73 
	}
}

76 
	$__dbîr
()

78  (
RET_ERROR
);

79 
	}
}

88 
	$__db∑nic
(
dbp
)

89 
DB
 *
dbp
;

92 
dbp
->
dñ
 = ((*)())
__dbîr
;

93 
dbp
->
fd
 = ((*)())
__dbîr
;

94 
dbp
->
gë
 = ((*)())
__dbîr
;

95 
dbp
->
put
 = ((*)())
__dbîr
;

96 
dbp
->
£q
 = ((*)())
__dbîr
;

97 
dbp
->
sync
 = ((*)())
__dbîr
;

98 
	}
}

	@db/include/db.h

36 #i‚de‡
_DB_H_


37 
	#_DB_H_


	)

39 
	~<sys/ty≥s.h
>

41 #ifde‡
__DBINTERFACE_PRIVATE


42 
	~"c⁄fig.h
"

43 
	~"p‹t.h
"

52 
	#__bt_˛o£
 
nvi__bt_˛o£


	)

53 
	#__bt_cmp
 
nvi__bt_cmp


	)

54 
	#__bt_defcmp
 
nvi__bt_defcmp


	)

55 
	#__bt_deÂfx
 
nvi__bt_deÂfx


	)

56 
	#__bt_dñëe
 
nvi__bt_dñëe


	)

57 
	#__bt_dÀaf
 
nvi__bt_dÀaf


	)

58 
	#__bt_dm∑ge
 
nvi__bt_dm∑ge


	)

59 
	#__bt_d≈age
 
nvi__bt_d≈age


	)

60 
	#__bt_d∑ge
 
nvi__bt_d∑ge


	)

61 
	#__bt_dump
 
nvi__bt_dump


	)

62 
	#__bt_fd
 
nvi__bt_fd


	)

63 
	#__bt_‰ì
 
nvi__bt_‰ì


	)

64 
	#__bt_gë
 
nvi__bt_gë


	)

65 
	#__bt_√w
 
nvi__bt_√w


	)

66 
	#__bt_›í
 
nvi__bt_›í


	)

67 
	#__bt_pgö
 
nvi__bt_pgö


	)

68 
	#__bt_pgout
 
nvi__bt_pgout


	)

69 
	#__bt_put
 
nvi__bt_put


	)

70 
	#__bt_ªt
 
nvi__bt_ªt


	)

71 
	#__bt_£¨ch
 
nvi__bt_£¨ch


	)

72 
	#__bt_£q
 
nvi__bt_£q


	)

73 
	#__bt_£tcur
 
nvi__bt_£tcur


	)

74 
	#__bt_•lô
 
nvi__bt_•lô


	)

75 
	#__bt_°©
 
nvi__bt_°©


	)

76 
	#__bt_sync
 
nvi__bt_sync


	)

77 
	#__db∑nic
 
nvi__db∑nic


	)

78 
	#__ovÊ_dñëe
 
nvi__ovÊ_dñëe


	)

79 
	#__ovÊ_gë
 
nvi__ovÊ_gë


	)

80 
	#__ovÊ_put
 
nvi__ovÊ_put


	)

81 
	#__ªc_˛o£
 
nvi__ªc_˛o£


	)

82 
	#__ªc_dñëe
 
nvi__ªc_dñëe


	)

83 
	#__ªc_dÀaf
 
nvi__ªc_dÀaf


	)

84 
	#__ªc_fd
 
nvi__ªc_fd


	)

85 
	#__ªc_fm≠
 
nvi__ªc_fm≠


	)

86 
	#__ªc_Âùe
 
nvi__ªc_Âùe


	)

87 
	#__ªc_gë
 
nvi__ªc_gë


	)

88 
	#__ªc_ùut
 
nvi__ªc_ùut


	)

89 
	#__ªc_›í
 
nvi__ªc_›í


	)

90 
	#__ªc_put
 
nvi__ªc_put


	)

91 
	#__ªc_ªt
 
nvi__ªc_ªt


	)

92 
	#__ªc_£¨ch
 
nvi__ªc_£¨ch


	)

93 
	#__ªc_£q
 
nvi__ªc_£q


	)

94 
	#__ªc_sync
 
nvi__ªc_sync


	)

95 
	#__ªc_vm≠
 
nvi__ªc_vm≠


	)

96 
	#__ªc_vpùe
 
nvi__ªc_vpùe


	)

97 
	#db›í
 
nvidb›í


	)

98 
	#mpoﬁ_˛o£
 
nvimpoﬁ_˛o£


	)

99 
	#mpoﬁ_fûãr
 
nvimpoﬁ_fûãr


	)

100 
	#mpoﬁ_gë
 
nvimpoﬁ_gë


	)

101 
	#mpoﬁ_√w
 
nvimpoﬁ_√w


	)

102 
	#mpoﬁ_›í
 
nvimpoﬁ_›í


	)

103 
	#mpoﬁ_put
 
nvimpoﬁ_put


	)

104 
	#mpoﬁ_°©
 
nvimpoﬁ_°©


	)

105 
	#mpoﬁ_sync
 
nvimpoﬁ_sync


	)

107 
	#RET_ERROR
 -1

	)

108 
	#RET_SUCCESS
 0

	)

109 
	#RET_SPECIAL
 1

	)

111 
	#MAX_PAGE_NUMBER
 0xfffffff‡

	)

112 
u_öt32_t
 
	tpgno_t
;

113 
	#MAX_PAGE_OFFSET
 65535

	)

114 
u_öt16_t
 
	tödx_t
;

115 
	#MAX_REC_NUMBER
 0xfffffff‡

	)

116 
u_öt32_t
 
	tª˙o_t
;

120 *
	md©a
;

121 
size_t
 
	msize
;

122 } 
	tDBT
;

125 
	#R_CURSOR
 1

	)

126 
	#__R_UNUSED
 2

	)

127 
	#R_FIRST
 3

	)

128 
	#R_IAFTER
 4

	)

129 
	#R_IBEFORE
 5

	)

130 
	#R_LAST
 6

	)

131 
	#R_NEXT
 7

	)

132 
	#R_NOOVERWRITE
 8

	)

133 
	#R_PREV
 9

	)

134 
	#R_SETCURSOR
 10

	)

135 
	#R_RECNOSYNC
 11

	)

137 íum { 
	mDB_BTREE
, 
	mDB_HASH
, 
	mDB_RECNO
 } 
	tDBTYPE
;

145 
	#DB_LOCK
 0x2000

	)

146 
	#DB_SHMEM
 0x4000

	)

147 
	#DB_TXN
 0x8000

	)

150 
	s__db
 {

151 
DBTYPE
 
	mty≥
;

152 (*
	m˛o£
Ë
__P
((
__db
 *));

153 (*
	mdñ
Ë
__P
((c⁄° 
__db
 *, c⁄° 
DBT
 *, 
u_öt
));

154 (*
	mgë
Ë
__P
((c⁄° 
__db
 *, c⁄° 
DBT
 *, DBT *, 
u_öt
));

155 (*
	mput
Ë
__P
((c⁄° 
__db
 *, 
DBT
 *, c⁄° DBT *, 
u_öt
));

156 (*
	m£q
Ë
__P
((c⁄° 
__db
 *, 
DBT
 *, DBT *, 
u_öt
));

157 (*
	msync
Ë
__P
((c⁄° 
__db
 *, 
u_öt
));

158 *
	möã∫Æ
;

159 (*
	mfd
Ë
__P
((c⁄° 
__db
 *));

160 } 
	tDB
;

162 
	#BTREEMAGIC
 0x053162

	)

163 
	#BTREEVERSION
 3

	)

167 
	#R_DUP
 0x01

	)

168 
u_l⁄g
 
	mÊags
;

169 
u_öt
 
	mˇchesize
;

170 
	mmaxkey∑ge
;

171 
	mmökey∑ge
;

172 
u_öt
 
	mpsize
;

173 (*
	mcom∑ª
)

174 
__P
((c⁄° 
DBT
 *, const DBT *));

175 
size_t
 (*
¥efix
)

176 
__P
((c⁄° 
DBT
 *, const DBT *));

177 
	ml‹dî
;

178 } 
	tBTREEINFO
;

180 
	#HASHMAGIC
 0x061561

	)

181 
	#HASHVERSION
 2

	)

185 
u_öt
 
	mbsize
;

186 
u_öt
 
	mfÁ˘‹
;

187 
u_öt
 
	m√Àm
;

188 
u_öt
 
	mˇchesize
;

189 
	mu_öt32_t


190 (*
	mhash
Ë
__P
((c⁄° *, 
size_t
));

191 
	ml‹dî
;

192 } 
	tHASHINFO
;

196 
	#R_FIXEDLEN
 0x01

	)

197 
	#R_NOKEY
 0x02

	)

198 
	#R_SNAPSHOT
 0x04

	)

199 
u_l⁄g
 
	mÊags
;

200 
u_öt
 
	mˇchesize
;

201 
u_öt
 
	mpsize
;

202 
	ml‹dî
;

203 
size_t
 
	mª˛í
;

204 
u_ch¨
 
	mbvÆ
;

205 *
	mb‚ame
;

206 } 
	tRECNOINFO
;

208 #ifde‡
__DBINTERFACE_PRIVATE


215 
	#M_32_SWAP
(
a
) { \

216 
u_öt32_t
 
_tmp
 = 
a
; \

217 ((*)&
a
)[0] = ((*)&
_tmp
)[3]; \

218 ((*)&
a
)[1] = ((*)&
_tmp
)[2]; \

219 ((*)&
a
)[2] = ((*)&
_tmp
)[1]; \

220 ((*)&
a
)[3] = ((*)&
_tmp
)[0]; \

221 }

	)

222 
	#P_32_SWAP
(
a
) { \

223 
u_öt32_t
 
_tmp
 = *(u_öt32_à*)
a
; \

224 ((*)
a
)[0] = ((*)&
_tmp
)[3]; \

225 ((*)
a
)[1] = ((*)&
_tmp
)[2]; \

226 ((*)
a
)[2] = ((*)&
_tmp
)[1]; \

227 ((*)
a
)[3] = ((*)&
_tmp
)[0]; \

228 }

	)

229 
	#P_32_COPY
(
a
, 
b
) { \

230 ((*)&(
b
))[0] = ((*)&(
a
))[3]; \

231 ((*)&(
b
))[1] = ((*)&(
a
))[2]; \

232 ((*)&(
b
))[2] = ((*)&(
a
))[1]; \

233 ((*)&(
b
))[3] = ((*)&(
a
))[0]; \

234 }

	)

242 
	#M_16_SWAP
(
a
) { \

243 
u_öt16_t
 
_tmp
 = 
a
; \

244 ((*)&
a
)[0] = ((*)&
_tmp
)[1]; \

245 ((*)&
a
)[1] = ((*)&
_tmp
)[0]; \

246 }

	)

247 
	#P_16_SWAP
(
a
) { \

248 
u_öt16_t
 
_tmp
 = *(u_öt16_à*)
a
; \

249 ((*)
a
)[0] = ((*)&
_tmp
)[1]; \

250 ((*)
a
)[1] = ((*)&
_tmp
)[0]; \

251 }

	)

252 
	#P_16_COPY
(
a
, 
b
) { \

253 ((*)&(
b
))[0] = ((*)&(
a
))[1]; \

254 ((*)&(
b
))[1] = ((*)&(
a
))[0]; \

255 }

	)

258 
DB
 *
db›í
 
__P
((c⁄° *, , , 
DBTYPE
, const *));

260 #ifde‡
__DBINTERFACE_PRIVATE


261 
DB
 *
__bt_›í
 
__P
((c⁄° *, , , c⁄° 
BTREEINFO
 *, ));

262 
DB
 *
__hash_›í
 
__P
((c⁄° *, , , c⁄° 
HASHINFO
 *, ));

263 
DB
 *
__ªc_›í
 
__P
((c⁄° *, , , c⁄° 
RECNOINFO
 *, ));

264 
__db∑nic
 
__P
((
DB
 *
dbp
));

	@db/include/mpool.h

36 
	~<sys/queue.h
>

45 
	#HASHSIZE
 128

	)

46 
	#HASHKEY
(
pgno
Ë(’gnÿ- 1Ë% 
HASHSIZE
)

	)

49 
	s_bkt
 {

50 
CIRCLEQ_ENTRY
(
_bkt
Ë
	mhq
;

51 
CIRCLEQ_ENTRY
(
_bkt
Ë
	mq
;

52 *
	m∑ge
;

53 
pgno_t
 
	mpgno
;

55 
	#MPOOL_DIRTY
 0x01

	)

56 
	#MPOOL_PINNED
 0x02

	)

57 
u_öt8_t
 
	mÊags
;

58 } 
	tBKT
;

60 
	sMPOOL
 {

61 
CIRCLEQ_HEAD
(
_lqh
, 
_bkt
Ë
	mlqh
;

63 
CIRCLEQ_HEAD
(
_hqh
, 
_bkt
Ë
	mhqh
[
HASHSIZE
];

64 
pgno_t
 
	mcurˇche
;

65 
pgno_t
 
	mmaxˇche
;

66 
pgno_t
 
	m≈ages
;

67 
u_l⁄g
 
	m∑gesize
;

68 
	mfd
;

70 (*
	mpgö
Ë
__P
((*, 
pgno_t
, *));

72 (*
	mpgout
Ë
__P
((*, 
pgno_t
, *));

73 *
	mpgcookõ
;

74 #ifde‡
STATISTICS


75 
u_l⁄g
 
	mˇchehô
;

76 
u_l⁄g
 
	mˇchemiss
;

77 
u_l⁄g
 
	m∑góŒoc
;

78 
u_l⁄g
 
	m∑geÊush
;

79 
u_l⁄g
 
	m∑gegë
;

80 
u_l⁄g
 
	m∑gíew
;

81 
u_l⁄g
 
	m∑gïut
;

82 
u_l⁄g
 
	m∑gîód
;

83 
u_l⁄g
 
	m∑gewrôe
;

85 } 
	tMPOOL
;

87 
MPOOL
 *
mpoﬁ_›í
 
__P
((*, , 
pgno_t
,Ögno_t));

88 
mpoﬁ_fûãr
 
__P
((
MPOOL
 *, (*)(*, 
pgno_t
, *),

89 (*)(*, 
pgno_t
, *), *));

90 *
mpoﬁ_√w
 
	`__P
((
MPOOL
 *, 
pgno_t
 *));

91 *
mpoﬁ_gë
 
	`__P
((
MPOOL
 *, 
pgno_t
, 
u_öt
));

92 
mpoﬁ_put
 
	`__P
((
MPOOL
 *, *, 
u_öt
));

93 
mpoﬁ_sync
 
	`__P
((
MPOOL
 *));

94 
mpoﬁ_˛o£
 
	`__P
((
MPOOL
 *));

95 #ifde‡
STATISTICS


96 
mpoﬁ_°©
 
	`__P
((
MPOOL
 *));

	@db/mpool/mpool.c

34 #i‡
deföed
(
LIBC_SCCS
Ë&& !deföed(
löt
)

35 
	gsccsid
[] = "@(#)mpool.c 8.5 (Berkeley) 7/26/94";

38 
	~<sys/∑øm.h
>

39 
	~<sys/ty≥s.h
>

40 
	~<sys/queue.h
>

41 
	~<sys/°©.h
>

43 
	~<î∫o.h
>

44 
	~<°dio.h
>

45 
	~<°dlib.h
>

46 
	~<°rög.h
>

47 
	~<uni°d.h
>

49 
	~<db.h
>

51 
	#__MPOOLINTERFACE_PRIVATE


	)

52 
	~<mpoﬁ.h
>

54 
BKT
 *
mpoﬁ_bkt
 
__P
((
MPOOL
 *));

55 
BKT
 *
mpoﬁ_look
 
__P
((
MPOOL
 *, 
pgno_t
));

56 
mpoﬁ_wrôe
 
__P
((
MPOOL
 *, 
BKT
 *));

62 
MPOOL
 *

63 
	$mpoﬁ_›í
(
key
, 
fd
, 
∑gesize
, 
maxˇche
)

64 *
key
;

65 
fd
;

66 
pgno_t
 
∑gesize
, 
maxˇche
;

68 
°©
 
sb
;

69 
MPOOL
 *
mp
;

70 
íåy
;

78 i‡(
	`f°©
(
fd
, &
sb
))

79  (
NULL
);

80 i‡(!
	`S_ISREG
(
sb
.
°_mode
)) {

81 
î∫o
 = 
ESPIPE
;

82  (
NULL
);

86 i‡((
mp
 = (
MPOOL
 *)
	`ˇŒoc
(1, (MPOOL))Ë=
NULL
)

87  (
NULL
);

88 
	`CIRCLEQ_INIT
(&
mp
->
lqh
);

89 
íåy
 = 0;É¡ry < 
HASHSIZE
; ++entry)

90 
	`CIRCLEQ_INIT
(&
mp
->
hqh
[
íåy
]);

91 
mp
->
maxˇche
 = maxcache;

92 
mp
->
≈ages
 = 
sb
.
°_size
 / 
∑gesize
;

93 
mp
->
∑gesize
 =Öagesize;

94 
mp
->
fd
 = fd;

95  (
mp
);

96 
	}
}

103 
	$mpoﬁ_fûãr
(
mp
, 
pgö
, 
pgout
, 
pgcookõ
)

104 
MPOOL
 *
mp
;

105 (*
pgö
Ë
	`__P
((*, 
pgno_t
, *));

106 (*
pgout
Ë
	`__P
((*, 
pgno_t
, *));

107 *
pgcookõ
;

109 
mp
->
pgö
 =Ögin;

110 
mp
->
pgout
 =Ögout;

111 
mp
->
pgcookõ
 =Ögcookie;

112 
	}
}

119 
	$mpoﬁ_√w
(
mp
, 
pgnﬂddr
)

120 
MPOOL
 *
mp
;

121 
pgno_t
 *
pgnﬂddr
;

123 
_hqh
 *
hód
;

124 
BKT
 *
bp
;

126 i‡(
mp
->
≈ages
 =
MAX_PAGE_NUMBER
) {

127 ()
	`Ârötf
(
°dîr
, "mpool_new:Öageállocation overflow.\n");

128 
	`ab‹t
();

130 #ifde‡
STATISTICS


131 ++
mp
->
∑gíew
;

138 i‡((
bp
 = 
	`mpoﬁ_bkt
(
mp
)Ë=
NULL
)

139  (
NULL
);

140 *
pgnﬂddr
 = 
bp
->
pgno
 = 
mp
->
≈ages
++;

141 
bp
->
Êags
 = 
MPOOL_PINNED
;

143 
hód
 = &
mp
->
hqh
[
	`HASHKEY
(
bp
->
pgno
)];

144 
	`CIRCLEQ_INSERT_HEAD
(
hód
, 
bp
, 
hq
);

145 
	`CIRCLEQ_INSERT_TAIL
(&
mp
->
lqh
, 
bp
, 
q
);

146  (
bp
->
∑ge
);

147 
	}
}

154 
	$mpoﬁ_gë
(
mp
, 
pgno
, 
Êags
)

155 
MPOOL
 *
mp
;

156 
pgno_t
 
pgno
;

157 
u_öt
 
Êags
;

159 
_hqh
 *
hód
;

160 
BKT
 *
bp
;

161 
off_t
 
off
;

162 
ƒ
;

165 i‡(
pgno
 >
mp
->
≈ages
) {

166 
î∫o
 = 
EINVAL
;

167  (
NULL
);

170 #ifde‡
STATISTICS


171 ++
mp
->
∑gegë
;

175 i‡((
bp
 = 
	`mpoﬁ_look
(
mp
, 
pgno
)Ë!
NULL
) {

176 #ifde‡
DEBUG


177 i‡(
bp
->
Êags
 & 
MPOOL_PINNED
) {

178 ()
	`Ârötf
(
°dîr
,

179 "mpoﬁ_gë:Öagê%dáÃódyÖö√d\n", 
bp
->
pgno
);

180 
	`ab‹t
();

187 
hód
 = &
mp
->
hqh
[
	`HASHKEY
(
bp
->
pgno
)];

188 
	`CIRCLEQ_REMOVE
(
hód
, 
bp
, 
hq
);

189 
	`CIRCLEQ_INSERT_HEAD
(
hód
, 
bp
, 
hq
);

190 
	`CIRCLEQ_REMOVE
(&
mp
->
lqh
, 
bp
, 
q
);

191 
	`CIRCLEQ_INSERT_TAIL
(&
mp
->
lqh
, 
bp
, 
q
);

194 
bp
->
Êags
 |
MPOOL_PINNED
;

195  (
bp
->
∑ge
);

199 i‡((
bp
 = 
	`mpoﬁ_bkt
(
mp
)Ë=
NULL
)

200  (
NULL
);

203 #ifde‡
STATISTICS


204 ++
mp
->
∑gîód
;

206 
off
 = 
mp
->
∑gesize
 * 
pgno
;

207 i‡(
	`l£ek
(
mp
->
fd
, 
off
, 
SEEK_SET
) != off)

208  (
NULL
);

209 i‡((
ƒ
 = 
	`ªad
(
mp
->
fd
, 
bp
->
∑ge
, mp->
∑gesize
)) != mp->pagesize) {

210 i‡(
ƒ
 >= 0)

211 
î∫o
 = 
EFTYPE
;

212  (
NULL
);

216 
bp
->
pgno
 =Ögno;

217 
bp
->
Êags
 = 
MPOOL_PINNED
;

223 
hód
 = &
mp
->
hqh
[
	`HASHKEY
(
bp
->
pgno
)];

224 
	`CIRCLEQ_INSERT_HEAD
(
hód
, 
bp
, 
hq
);

225 
	`CIRCLEQ_INSERT_TAIL
(&
mp
->
lqh
, 
bp
, 
q
);

228 i‡(
mp
->
pgö
 !
NULL
)

229 (
mp
->
pgö
)(mp->
pgcookõ
, 
bp
->
pgno
, bp->
∑ge
);

231  (
bp
->
∑ge
);

232 
	}
}

239 
	$mpoﬁ_put
(
mp
, 
∑ge
, 
Êags
)

240 
MPOOL
 *
mp
;

241 *
∑ge
;

242 
u_öt
 
Êags
;

244 
BKT
 *
bp
;

246 #ifde‡
STATISTICS


247 ++
mp
->
∑gïut
;

249 
bp
 = (
BKT
 *)((*)
∑ge
 - (BKT));

250 #ifde‡
DEBUG


251 i‡(!(
bp
->
Êags
 & 
MPOOL_PINNED
)) {

252 ()
	`Ârötf
(
°dîr
,

253 "mpoﬁ_put:Öagê%dÇŸÖö√d\n", 
bp
->
pgno
);

254 
	`ab‹t
();

257 
bp
->
Êags
 &~
MPOOL_PINNED
;

258 
bp
->
Êags
 |Êag†& 
MPOOL_DIRTY
;

259  (
RET_SUCCESS
);

260 
	}
}

267 
	$mpoﬁ_˛o£
(
mp
)

268 
MPOOL
 *
mp
;

270 
BKT
 *
bp
;

273 (
bp
 = 
mp
->
lqh
.
cqh_fú°
) != (*)&mp->lqh) {

274 
	`CIRCLEQ_REMOVE
(&
mp
->
lqh
, mp->lqh.
cqh_fú°
, 
q
);

275 
	`‰ì
(
bp
);

279 
	`‰ì
(
mp
);

280  (
RET_SUCCESS
);

281 
	}
}

288 
	$mpoﬁ_sync
(
mp
)

289 
MPOOL
 *
mp
;

291 
BKT
 *
bp
;

294 
bp
 = 
mp
->
lqh
.
cqh_fú°
;

295 
bp
 !(*)&
mp
->
lqh
; b∞bp->
q
.
cqe_√xt
)

296 i‡(
bp
->
Êags
 & 
MPOOL_DIRTY
 &&

297 
	`mpoﬁ_wrôe
(
mp
, 
bp
Ë=
RET_ERROR
)

298  (
RET_ERROR
);

301  (
	`fsync
(
mp
->
fd
Ë? 
RET_ERROR
 : 
RET_SUCCESS
);

302 
	}
}

308 
BKT
 *

309 
	$mpoﬁ_bkt
(
mp
)

310 
MPOOL
 *
mp
;

312 
_hqh
 *
hód
;

313 
BKT
 *
bp
;

316 i‡(
mp
->
curˇche
 < mp->
maxˇche
)

317 
√w
;

325 
bp
 = 
mp
->
lqh
.
cqh_fú°
;

326 
bp
 !(*)&
mp
->
lqh
; b∞bp->
q
.
cqe_√xt
)

327 i‡(!(
bp
->
Êags
 & 
MPOOL_PINNED
)) {

329 i‡(
bp
->
Êags
 & 
MPOOL_DIRTY
 &&

330 
	`mpoﬁ_wrôe
(
mp
, 
bp
Ë=
RET_ERROR
)

331  (
NULL
);

332 #ifde‡
STATISTICS


333 ++
mp
->
∑geÊush
;

336 
hód
 = &
mp
->
hqh
[
	`HASHKEY
(
bp
->
pgno
)];

337 
	`CIRCLEQ_REMOVE
(
hód
, 
bp
, 
hq
);

338 
	`CIRCLEQ_REMOVE
(&
mp
->
lqh
, 
bp
, 
q
);

339 #ifde‡
DEBUG


340 { *
•age
;

341 
•age
 = 
bp
->
∑ge
;

342 
	`mem£t
(
bp
, 0xff, (
BKT
Ë+ 
mp
->
∑gesize
);

343 
bp
->
∑ge
 = 
•age
;

346  (
bp
);

349 
√w
: i‡((
bp
 = (
BKT
 *)
	`mÆloc
((BKTË+ 
mp
->
∑gesize
)Ë=
NULL
)

350  (
NULL
);

351 #ifde‡
STATISTICS


352 ++
mp
->
∑góŒoc
;

354 #i‡
	`deföed
(
DEBUG
Ë|| deföed(
PURIFY
)

355 
	`mem£t
(
bp
, 0xff, (
BKT
Ë+ 
mp
->
∑gesize
);

357 
bp
->
∑ge
 = (*)b∞+ (
BKT
);

358 ++
mp
->
curˇche
;

359  (
bp
);

360 
	}
}

367 
	$mpoﬁ_wrôe
(
mp
, 
bp
)

368 
MPOOL
 *
mp
;

369 
BKT
 *
bp
;

371 
off_t
 
off
;

373 #ifde‡
STATISTICS


374 ++
mp
->
∑gewrôe
;

378 i‡(
mp
->
pgout
)

379 (
mp
->
pgout
)(mp->
pgcookõ
, 
bp
->
pgno
, bp->
∑ge
);

381 
off
 = 
mp
->
∑gesize
 * 
bp
->
pgno
;

382 i‡(
	`l£ek
(
mp
->
fd
, 
off
, 
SEEK_SET
) != off)

383  (
RET_ERROR
);

384 i‡(
	`wrôe
(
mp
->
fd
, 
bp
->
∑ge
, mp->
∑gesize
) != mp->pagesize)

385  (
RET_ERROR
);

387 
bp
->
Êags
 &~
MPOOL_DIRTY
;

388  (
RET_SUCCESS
);

389 
	}
}

395 
BKT
 *

396 
	$mpoﬁ_look
(
mp
, 
pgno
)

397 
MPOOL
 *
mp
;

398 
pgno_t
 
pgno
;

400 
_hqh
 *
hód
;

401 
BKT
 *
bp
;

403 
hód
 = &
mp
->
hqh
[
	`HASHKEY
(
pgno
)];

404 
bp
 = 
hód
->
cqh_fú°
; b∞!(*)hód; b∞bp->
hq
.
cqe_√xt
)

405 i‡(
bp
->
pgno
 ==Ögno) {

406 #ifde‡
STATISTICS


407 ++
mp
->
ˇchehô
;

409  (
bp
);

411 #ifde‡
STATISTICS


412 ++
mp
->
ˇchemiss
;

414  (
NULL
);

415 
	}
}

417 #ifde‡
STATISTICS


423 
	$mpoﬁ_°©
(
mp
)

424 
MPOOL
 *
mp
;

426 
BKT
 *
bp
;

427 
˙t
;

428 *
£p
;

430 ()
	`Ârötf
(
°dîr
, "%luÖage†öÅhêfûe\n", 
mp
->
≈ages
);

431 ()
	`Ârötf
(
°dîr
,

433 
mp
->
∑gesize
, mp->
curˇche
, mp->
maxˇche
);

434 ()
	`Ârötf
(
°dîr
, "%luÖageÖuts, %luÖage gets, %luÖageÇew\n",

435 
mp
->
∑gïut
, mp->
∑gegë
, mp->
∑gíew
);

436 ()
	`Ârötf
(
°dîr
, "%luÖageállocs, %luÖage flushes\n",

437 
mp
->
∑góŒoc
, mp->
∑geÊush
);

438 i‡(
mp
->
ˇchehô
 + mp->
ˇchemiss
)

439 ()
	`Ârötf
(
°dîr
,

441 (()
mp
->
ˇchehô
 / (mp->ˇchehô + mp->
ˇchemiss
))

442 * 100, 
mp
->
ˇchehô
, mp->
ˇchemiss
);

443 ()
	`Ârötf
(
°dîr
, "%luÖageÑeads, %luÖage writes\n",

444 
mp
->
∑gîód
, mp->
∑gewrôe
);

446 
£p
 = "";

447 
˙t
 = 0;

448 
bp
 = 
mp
->
lqh
.
cqh_fú°
;

449 
bp
 !(*)&
mp
->
lqh
; b∞bp->
q
.
cqe_√xt
) {

450 ()
	`Ârötf
(
°dîr
, "%s%d", 
£p
, 
bp
->
pgno
);

451 i‡(
bp
->
Êags
 & 
MPOOL_DIRTY
)

452 ()
	`Ârötf
(
°dîr
, "d");

453 i‡(
bp
->
Êags
 & 
MPOOL_PINNED
)

454 ()
	`Ârötf
(
°dîr
, "P");

455 i‡(++
˙t
 == 10) {

456 
£p
 = "\n";

457 
˙t
 = 0;

459 
£p
 = ", ";

462 ()
	`Ârötf
(
°dîr
, "\n");

463 
	}
}

	@db/recno/extern.h

36 
	~"../båì/exã∫.h
"

38 
__ªc_˛o£
 
__P
((
DB
 *));

39 
__ªc_dñëe
 
__P
((c⁄° 
DB
 *, c⁄° 
DBT
 *, 
u_öt
));

40 
__ªc_dÀaf
 
__P
((
BTREE
 *, 
PAGE
 *, 
u_öt32_t
));

41 
__ªc_fd
 
__P
((c⁄° 
DB
 *));

42 
__ªc_fm≠
 
__P
((
BTREE
 *, 
ª˙o_t
));

43 
__ªc_fout
 
__P
((
BTREE
 *));

44 
__ªc_Âùe
 
__P
((
BTREE
 *, 
ª˙o_t
));

45 
__ªc_gë
 
__P
((c⁄° 
DB
 *, c⁄° 
DBT
 *, DBT *, 
u_öt
));

46 
__ªc_ùut
 
__P
((
BTREE
 *, 
ª˙o_t
, c⁄° 
DBT
 *, 
u_öt
));

47 
__ªc_put
 
__P
((c⁄° 
DB
 *
dbp
, 
DBT
 *, c⁄° DBT *, 
u_öt
));

48 
__ªc_ªt
 
__P
((
BTREE
 *, 
EPG
 *, 
ª˙o_t
, 
DBT
 *, DBT *));

49 
EPG
 *
__ªc_£¨ch
 
__P
((
BTREE
 *, 
ª˙o_t
, 
SRCHOP
));

50 
__ªc_£q
 
__P
((c⁄° 
DB
 *, 
DBT
 *, DBT *, 
u_öt
));

51 
__ªc_sync
 
__P
((c⁄° 
DB
 *, 
u_öt
));

52 
__ªc_vm≠
 
__P
((
BTREE
 *, 
ª˙o_t
));

53 
__ªc_vout
 
__P
((
BTREE
 *));

54 
__ªc_vpùe
 
__P
((
BTREE
 *, 
ª˙o_t
));

	@db/recno/rec_close.c

34 #i‡
deföed
(
LIBC_SCCS
Ë&& !deföed(
löt
)

35 
	gsccsid
[] = "@(#)rec_close.c 8.9 (Berkeley) 11/18/94";

38 
	~<sys/ty≥s.h
>

39 
	~<sys/uio.h
>

40 #ifde‡
RECNO_USE_MMAP


41 
	~<sys/mm™.h
>

44 
	~<î∫o.h
>

45 
	~<limôs.h
>

46 
	~<°dio.h
>

47 
	~<uni°d.h
>

49 
	~<db.h
>

50 
	~"ª˙o.h
"

62 
	$__ªc_˛o£
(
dbp
)

63 
DB
 *
dbp
;

65 
BTREE
 *
t
;

66 
°©us
;

68 
t
 = 
dbp
->
öã∫Æ
;

71 i‡(
t
->
bt_pö√d
 !
NULL
) {

72 
	`mpoﬁ_put
(
t
->
bt_mp
,Å->
bt_pö√d
, 0);

73 
t
->
bt_pö√d
 = 
NULL
;

76 i‡(
	`__ªc_sync
(
dbp
, 0Ë=
RET_ERROR
)

77  (
RET_ERROR
);

80 
°©us
 = 
RET_SUCCESS
;

81 #ifdef 
RECNO_USE_MMAP


82 i‡(
	`F_ISSET
(
t
, 
R_MEMMAPPED
Ë&& 
	`munm≠
—->
bt_sm≠
,Å->
bt_msize
))

83 
°©us
 = 
RET_ERROR
;

86 i‡(!
	`F_ISSET
(
t
, 
R_INMEM
))

87 i‡(
	`F_ISSET
(
t
, 
R_CLOSEFP
)) {

88 i‡(
	`f˛o£
(
t
->
bt_rÂ
))

89 
°©us
 = 
RET_ERROR
;

91 i‡(
	`˛o£
(
t
->
bt_rfd
))

92 
°©us
 = 
RET_ERROR
;

94 i‡(
	`__bt_˛o£
(
dbp
Ë=
RET_ERROR
)

95 
°©us
 = 
RET_ERROR
;

97  (
°©us
);

98 
	}
}

110 
	$__ªc_sync
(
dbp
, 
Êags
)

111 c⁄° 
DB
 *
dbp
;

112 
u_öt
 
Êags
;

114 
iovec
 
iov
[2];

115 
BTREE
 *
t
;

116 
DBT
 
d©a
, 
key
;

117 
off_t
 
off
;

118 
ª˙o_t
 
scurs‹
, 
åec
;

119 
°©us
;

121 
t
 = 
dbp
->
öã∫Æ
;

124 i‡(
t
->
bt_pö√d
 !
NULL
) {

125 
	`mpoﬁ_put
(
t
->
bt_mp
,Å->
bt_pö√d
, 0);

126 
t
->
bt_pö√d
 = 
NULL
;

129 i‡(
Êags
 =
R_RECNOSYNC
)

130  (
	`__bt_sync
(
dbp
, 0));

132 i‡(
	`F_ISSET
(
t
, 
R_RDONLY
 | 
R_INMEM
Ë|| !F_ISSET—, 
R_MODIFIED
))

133  (
RET_SUCCESS
);

136 i‡(!
	`F_ISSET
(
t
, 
R_EOF
Ë&&Å->
	`bt_úec
—, 
MAX_REC_NUMBER
Ë=
RET_ERROR
)

137  (
RET_ERROR
);

140 i‡(
	`l£ek
(
t
->
bt_rfd
, (
off_t
)0, 
SEEK_SET
) != 0)

141  (
RET_ERROR
);

144 
scurs‹
 = 
t
->
bt_curs‹
.
rcurs‹
;

146 
key
.
size
 = (
ª˙o_t
);

147 
key
.
d©a
 = &
åec
;

149 i‡(
	`F_ISSET
(
t
, 
R_FIXLEN
)) {

155 
°©us
 = (
dbp
->
£q
)(dbp, &
key
, &
d©a
, 
R_FIRST
);

156 
°©us
 =
RET_SUCCESS
) {

157 i‡(
	`wrôe
(
t
->
bt_rfd
, 
d©a
.d©a, d©a.
size
) != data.size)

158  (
RET_ERROR
);

159 
°©us
 = (
dbp
->
£q
)(dbp, &
key
, &
d©a
, 
R_NEXT
);

162 
iov
[1].
iov_ba£
 = &
t
->
bt_bvÆ
;

163 
iov
[1].
iov_Àn
 = 1;

165 
°©us
 = (
dbp
->
£q
)(dbp, &
key
, &
d©a
, 
R_FIRST
);

166 
°©us
 =
RET_SUCCESS
) {

167 
iov
[0].
iov_ba£
 = 
d©a
.data;

168 
iov
[0].
iov_Àn
 = 
d©a
.
size
;

169 i‡(
	`wrôev
(
t
->
bt_rfd
, 
iov
, 2Ë!
d©a
.
size
 + 1)

170  (
RET_ERROR
);

171 
°©us
 = (
dbp
->
£q
)(dbp, &
key
, &
d©a
, 
R_NEXT
);

176 
t
->
bt_curs‹
.
rcurs‹
 = 
scurs‹
;

178 i‡(
°©us
 =
RET_ERROR
)

179  (
RET_ERROR
);

180 i‡((
off
 = 
	`l£ek
(
t
->
bt_rfd
, (
off_t
)0, 
SEEK_CUR
)) == -1)

181  (
RET_ERROR
);

182 i‡(
	`·runˇã
(
t
->
bt_rfd
, 
off
))

183  (
RET_ERROR
);

184 
	`F_CLR
(
t
, 
R_MODIFIED
);

185  (
RET_SUCCESS
);

186 
	}
}

	@db/recno/rec_delete.c

37 #i‡
deföed
(
LIBC_SCCS
Ë&& !deföed(
löt
)

38 
	gsccsid
[] = "@(#)rec_delete.c 8.7 (Berkeley) 7/14/94";

41 
	~<sys/ty≥s.h
>

43 
	~<î∫o.h
>

44 
	~<°dio.h
>

45 
	~<°rög.h
>

47 
	~<db.h
>

48 
	~"ª˙o.h
"

50 
ªc_rdñëe
 
__P
((
BTREE
 *, 
ª˙o_t
));

64 
	$__ªc_dñëe
(
dbp
, 
key
, 
Êags
)

65 c⁄° 
DB
 *
dbp
;

66 c⁄° 
DBT
 *
key
;

67 
u_öt
 
Êags
;

69 
BTREE
 *
t
;

70 
ª˙o_t
 
ƒec
;

71 
°©us
;

73 
t
 = 
dbp
->
öã∫Æ
;

76 i‡(
t
->
bt_pö√d
 !
NULL
) {

77 
	`mpoﬁ_put
(
t
->
bt_mp
,Å->
bt_pö√d
, 0);

78 
t
->
bt_pö√d
 = 
NULL
;

81 
Êags
) {

83 i‡((
ƒec
 = *(
ª˙o_t
 *)
key
->
d©a
) == 0)

84 
eövÆ
;

85 i‡(
ƒec
 > 
t
->
bt_ƒecs
)

86  (
RET_SPECIAL
);

87 --
ƒec
;

88 
°©us
 = 
	`ªc_rdñëe
(
t
, 
ƒec
);

90 
R_CURSOR
:

91 i‡(!
	`F_ISSET
(&
t
->
bt_curs‹
, 
CURS_INIT
))

92 
eövÆ
;

93 i‡(
t
->
bt_ƒecs
 == 0)

94  (
RET_SPECIAL
);

95 
°©us
 = 
	`ªc_rdñëe
(
t
,Å->
bt_curs‹
.
rcurs‹
 - 1);

96 i‡(
°©us
 =
RET_SUCCESS
)

97 --
t
->
bt_curs‹
.
rcurs‹
;

100 
eövÆ
: 
î∫o
 = 
EINVAL
;

101  (
RET_ERROR
);

104 i‡(
°©us
 =
RET_SUCCESS
)

105 
	`F_SET
(
t
, 
B_MODIFIED
 | 
R_MODIFIED
);

106  (
°©us
);

107 
	}
}

120 
	$ªc_rdñëe
(
t
, 
ƒec
)

121 
BTREE
 *
t
;

122 
ª˙o_t
 
ƒec
;

124 
EPG
 *
e
;

125 
PAGE
 *
h
;

126 
°©us
;

129 i‡((
e
 = 
	`__ªc_£¨ch
(
t
, 
ƒec
, 
SDELETE
)Ë=
NULL
)

130  (
RET_ERROR
);

133 
h
 = 
e
->
∑ge
;

134 
°©us
 = 
	`__ªc_dÀaf
(
t
, 
h
, 
e
->
ödex
);

135 i‡(
°©us
 !
RET_SUCCESS
) {

136 
	`mpoﬁ_put
(
t
->
bt_mp
, 
h
, 0);

137  (
°©us
);

139 
	`mpoﬁ_put
(
t
->
bt_mp
, 
h
, 
MPOOL_DIRTY
);

140  (
RET_SUCCESS
);

141 
	}
}

154 
	$__ªc_dÀaf
(
t
, 
h
, 
ödex
)

155 
BTREE
 *
t
;

156 
PAGE
 *
h
;

157 
u_öt32_t
 
ödex
;

159 
RLEAF
 *
æ
;

160 
ödx_t
 *
ù
, 
˙t
, 
off£t
;

161 
u_öt32_t
 
nbyãs
;

162 *
‰om
;

163 *
to
;

175 
to
 = 
æ
 = 
	`GETRLEAF
(
h
, 
ödex
);

176 i‡(
æ
->
Êags
 & 
P_BIGDATA
 && 
	`__ovÊ_dñëe
(
t
,Ñl->
byãs
Ë=
RET_ERROR
)

177  (
RET_ERROR
);

178 
nbyãs
 = 
	`NRLEAF
(
æ
);

184 
‰om
 = (*)
h
 + h->
uµî
;

185 
	`memmove
(
‰om
 + 
nbyãs
, from, (*)
to
 - from);

186 
h
->
uµî
 +
nbyãs
;

188 
off£t
 = 
h
->
löp
[
ödex
];

189 
˙t
 = &
h
->
löp
[
ödex
] - (
ù
 = &h->linp[0]); cnt--; ++ip)

190 i‡(
ù
[0] < 
off£t
)

191 
ù
[0] +
nbyãs
;

192 
˙t
 = &
h
->
löp
[
	`NEXTINDEX
(h)] - 
ù
; --cnt; ++ip)

193 
ù
[0] = ip[1] < 
off£t
 ? ip[1] + 
nbyãs
 : ip[1];

194 
h
->
lowî
 -(
ödx_t
);

195 --
t
->
bt_ƒecs
;

196  (
RET_SUCCESS
);

197 
	}
}

	@db/recno/rec_get.c

34 #i‡
deföed
(
LIBC_SCCS
Ë&& !deföed(
löt
)

35 
	gsccsid
[] = "@(#)rec_get.c 8.9 (Berkeley) 8/18/94";

38 
	~<sys/ty≥s.h
>

40 
	~<î∫o.h
>

41 
	~<°ddef.h
>

42 
	~<°dio.h
>

43 
	~<°dlib.h
>

44 
	~<°rög.h
>

45 
	~<uni°d.h
>

47 
	~<db.h
>

48 
	~"ª˙o.h
"

63 
	$__ªc_gë
(
dbp
, 
key
, 
d©a
, 
Êags
)

64 c⁄° 
DB
 *
dbp
;

65 c⁄° 
DBT
 *
key
;

66 
DBT
 *
d©a
;

67 
u_öt
 
Êags
;

69 
BTREE
 *
t
;

70 
EPG
 *
e
;

71 
ª˙o_t
 
ƒec
;

72 
°©us
;

74 
t
 = 
dbp
->
öã∫Æ
;

77 i‡(
t
->
bt_pö√d
 !
NULL
) {

78 
	`mpoﬁ_put
(
t
->
bt_mp
,Å->
bt_pö√d
, 0);

79 
t
->
bt_pö√d
 = 
NULL
;

83 i‡(
Êags
 || (
ƒec
 = *(
ª˙o_t
 *)
key
->
d©a
) == 0) {

84 
î∫o
 = 
EINVAL
;

85  (
RET_ERROR
);

92 i‡(
ƒec
 > 
t
->
bt_ƒecs
) {

93 i‡(
	`F_ISSET
(
t
, 
R_EOF
 | 
R_INMEM
))

94  (
RET_SPECIAL
);

95 i‡((
°©us
 = 
t
->
	`bt_úec
—, 
ƒec
)Ë!
RET_SUCCESS
)

96  (
°©us
);

99 --
ƒec
;

100 i‡((
e
 = 
	`__ªc_£¨ch
(
t
, 
ƒec
, 
SEARCH
)Ë=
NULL
)

101  (
RET_ERROR
);

103 
°©us
 = 
	`__ªc_ªt
(
t
, 
e
, 0, 
NULL
, 
d©a
);

104 i‡(
	`F_ISSET
(
t
, 
B_DB_LOCK
))

105 
	`mpoﬁ_put
(
t
->
bt_mp
, 
e
->
∑ge
, 0);

107 
t
->
bt_pö√d
 = 
e
->
∑ge
;

108  (
°©us
);

109 
	}
}

122 
	$__ªc_Âùe
(
t
, 
t›
)

123 
BTREE
 *
t
;

124 
ª˙o_t
 
t›
;

126 
DBT
 
d©a
;

127 
ª˙o_t
 
ƒec
;

128 
size_t
 
Àn
;

129 
ch
;

130 
u_ch¨
 *
p
;

132 i‡(
t
->
bt_rd©a
.
size
 <Å->
bt_ª˛í
) {

133 
t
->
bt_rd©a
.
d©a
 =Å->bt_rd©a.d©®=
NULL
 ?

134 
	`mÆloc
(
t
->
bt_ª˛í
) :

135 
	`ªÆloc
(
t
->
bt_rd©a
.
d©a
,Å->
bt_ª˛í
);

136 i‡(
t
->
bt_rd©a
.
d©a
 =
NULL
)

137  (
RET_ERROR
);

138 
t
->
bt_rd©a
.
size
 =Å->
bt_ª˛í
;

140 
d©a
.d©®
t
->
bt_rd©a
.data;

141 
d©a
.
size
 = 
t
->
bt_ª˛í
;

143 
ƒec
 = 
t
->
bt_ƒecs
;Çª¯< 
t›
;) {

144 
Àn
 = 
t
->
bt_ª˛í
;

145 
p
 = 
t
->
bt_rd©a
.
d©a
;; *p++ = 
ch
)

146 i‡((
ch
 = 
	`gëc
(
t
->
bt_rÂ
)Ë=
EOF
 || !--
Àn
) {

147 i‡(
ch
 !
EOF
)

148 *
p
 = 
ch
;

149 i‡(
Àn
 != 0)

150 
	`mem£t
(
p
, 
t
->
bt_bvÆ
, 
Àn
);

151 i‡(
	`__ªc_ùut
(
t
,

152 
ƒec
, &
d©a
, 0Ë!
RET_SUCCESS
)

153  (
RET_ERROR
);

154 ++
ƒec
;

157 i‡(
ch
 =
EOF
)

160 i‡(
ƒec
 < 
t›
) {

161 
	`F_SET
(
t
, 
R_EOF
);

162  (
RET_SPECIAL
);

164  (
RET_SUCCESS
);

165 
	}
}

178 
	$__ªc_vpùe
(
t
, 
t›
)

179 
BTREE
 *
t
;

180 
ª˙o_t
 
t›
;

182 
DBT
 
d©a
;

183 
ª˙o_t
 
ƒec
;

184 
ödx_t
 
Àn
;

185 
size_t
 
sz
;

186 
bvÆ
, 
ch
;

187 
u_ch¨
 *
p
;

189 
bvÆ
 = 
t
->
bt_bvÆ
;

190 
ƒec
 = 
t
->
bt_ƒecs
;Çª¯< 
t›
; ++nrec) {

191 
p
 = 
t
->
bt_rd©a
.
d©a
,

192 
sz
 = 
t
->
bt_rd©a
.
size
;; *
p
++ = 
ch
, --sz) {

193 i‡((
ch
 = 
	`gëc
(
t
->
bt_rÂ
)Ë=
EOF
 || ch =
bvÆ
) {

194 
d©a
.d©®
t
->
bt_rd©a
.data;

195 
d©a
.
size
 = 
p
 - (
u_ch¨
 *)
t
->
bt_rd©a
.data;

196 i‡(
ch
 =
EOF
 && 
d©a
.
size
 == 0)

198 i‡(
	`__ªc_ùut
(
t
, 
ƒec
, &
d©a
, 0)

199 !
RET_SUCCESS
)

200  (
RET_ERROR
);

203 i‡(
sz
 == 0) {

204 
Àn
 = 
p
 - (
u_ch¨
 *)
t
->
bt_rd©a
.
d©a
;

205 
t
->
bt_rd©a
.
size
 +(
sz
 = 256);

206 
t
->
bt_rd©a
.
d©a
 =Å->bt_rd©a.d©®=
NULL
 ?

207 
	`mÆloc
(
t
->
bt_rd©a
.
size
) :

208 
	`ªÆloc
(
t
->
bt_rd©a
.
d©a
,Å->bt_rd©a.
size
);

209 i‡(
t
->
bt_rd©a
.
d©a
 =
NULL
)

210  (
RET_ERROR
);

211 
p
 = (
u_ch¨
 *)
t
->
bt_rd©a
.
d©a
 + 
Àn
;

214 i‡(
ch
 =
EOF
)

217 i‡(
ƒec
 < 
t›
) {

218 
	`F_SET
(
t
, 
R_EOF
);

219  (
RET_SPECIAL
);

221  (
RET_SUCCESS
);

222 
	}
}

235 
	$__ªc_fm≠
(
t
, 
t›
)

236 
BTREE
 *
t
;

237 
ª˙o_t
 
t›
;

239 
DBT
 
d©a
;

240 
ª˙o_t
 
ƒec
;

241 
u_ch¨
 *
•
, *
ï
, *
p
;

242 
size_t
 
Àn
;

244 i‡(
t
->
bt_rd©a
.
size
 <Å->
bt_ª˛í
) {

245 
t
->
bt_rd©a
.
d©a
 =Å->bt_rd©a.d©®=
NULL
 ?

246 
	`mÆloc
(
t
->
bt_ª˛í
) :

247 
	`ªÆloc
(
t
->
bt_rd©a
.
d©a
,Å->
bt_ª˛í
);

248 i‡(
t
->
bt_rd©a
.
d©a
 =
NULL
)

249  (
RET_ERROR
);

250 
t
->
bt_rd©a
.
size
 =Å->
bt_ª˛í
;

252 
d©a
.d©®
t
->
bt_rd©a
.data;

253 
d©a
.
size
 = 
t
->
bt_ª˛í
;

255 
•
 = (
u_ch¨
 *)
t
->
bt_cm≠
;

256 
ï
 = (
u_ch¨
 *)
t
->
bt_em≠
;

257 
ƒec
 = 
t
->
bt_ƒecs
;Çª¯< 
t›
; ++nrec) {

258 i‡(
•
 >
ï
) {

259 
	`F_SET
(
t
, 
R_EOF
);

260  (
RET_SPECIAL
);

262 
Àn
 = 
t
->
bt_ª˛í
;

263 
p
 = 
t
->
bt_rd©a
.
d©a
;

264 
•
 < 
ï
 && 
Àn
 > 0; *
p
++ = *sp++, --len);

265 i‡(
Àn
 != 0)

266 
	`mem£t
(
p
, 
t
->
bt_bvÆ
, 
Àn
);

267 i‡(
	`__ªc_ùut
(
t
, 
ƒec
, &
d©a
, 0Ë!
RET_SUCCESS
)

268  (
RET_ERROR
);

270 
t
->
bt_cm≠
 = (
ˇddr_t
)
•
;

271  (
RET_SUCCESS
);

272 
	}
}

285 
	$__ªc_vm≠
(
t
, 
t›
)

286 
BTREE
 *
t
;

287 
ª˙o_t
 
t›
;

289 
DBT
 
d©a
;

290 
u_ch¨
 *
•
, *
ï
;

291 
ª˙o_t
 
ƒec
;

292 
bvÆ
;

294 
•
 = (
u_ch¨
 *)
t
->
bt_cm≠
;

295 
ï
 = (
u_ch¨
 *)
t
->
bt_em≠
;

296 
bvÆ
 = 
t
->
bt_bvÆ
;

298 
ƒec
 = 
t
->
bt_ƒecs
;Çª¯< 
t›
; ++nrec) {

299 i‡(
•
 >
ï
) {

300 
	`F_SET
(
t
, 
R_EOF
);

301  (
RET_SPECIAL
);

303 
d©a
.d©®
•
; s∞< 
ï
 && *• !
bvÆ
; ++sp);

304 
d©a
.
size
 = 
•
 - (
u_ch¨
 *)data.data;

305 i‡(
	`__ªc_ùut
(
t
, 
ƒec
, &
d©a
, 0Ë!
RET_SUCCESS
)

306  (
RET_ERROR
);

307 ++
•
;

309 
t
->
bt_cm≠
 = (
ˇddr_t
)
•
;

310  (
RET_SUCCESS
);

311 
	}
}

	@db/recno/rec_open.c

37 #i‡
deföed
(
LIBC_SCCS
Ë&& !deföed(
löt
)

38 
	gsccsid
[] = "@(#)rec_open.c 8.12 (Berkeley) 11/18/94";

41 
	~<sys/ty≥s.h
>

42 #ifde‡
RECNO_USE_MMAP


43 
	~<sys/mm™.h
>

45 
	~<sys/°©.h
>

47 
	~<î∫o.h
>

48 
	~<f˙é.h
>

49 
	~<limôs.h
>

50 
	~<°ddef.h
>

51 
	~<°dio.h
>

52 
	~<uni°d.h
>

54 
	~<db.h
>

55 
	~"ª˙o.h
"

57 
DB
 *

58 
	$__ªc_›í
(
‚ame
, 
Êags
, 
mode
, 
›íöfo
, 
dÊags
)

59 c⁄° *
‚ame
;

60 
Êags
, 
mode
, 
dÊags
;

61 c⁄° 
RECNOINFO
 *
›íöfo
;

63 
BTREE
 *
t
;

64 
BTREEINFO
 
bt›íöfo
;

65 
DB
 *
dbp
;

66 
PAGE
 *
h
;

67 
°©
 
sb
;

68 
rfd
, 
svî∫o
;

71 i‡(
‚ame
 !
NULL
 && (
rfd
 = 
	`›í
(‚ame, 
Êags
, 
mode
)) < 0)

72  (
NULL
);

75 
dbp
 = 
NULL
;

76 i‡(
›íöfo
) {

77 i‡(
›íöfo
->
Êags
 & ~(
R_FIXEDLEN
 | 
R_NOKEY
 | 
R_SNAPSHOT
))

78 
eövÆ
;

79 
bt›íöfo
.
Êags
 = 0;

80 
bt›íöfo
.
ˇchesize
 = 
›íöfo
->cachesize;

81 
bt›íöfo
.
maxkey∑ge
 = 0;

82 
bt›íöfo
.
mökey∑ge
 = 0;

83 
bt›íöfo
.
psize
 = 
›íöfo
->psize;

84 
bt›íöfo
.
com∑ª
 = 
NULL
;

85 
bt›íöfo
.
¥efix
 = 
NULL
;

86 
bt›íöfo
.
l‹dî
 = 
›íöfo
->lorder;

87 
dbp
 = 
	`__bt_›í
(
›íöfo
->
b‚ame
,

88 
O_RDWR
, 
S_IRUSR
 | 
S_IWUSR
, &
bt›íöfo
, 
dÊags
);

90 
dbp
 = 
	`__bt_›í
(
NULL
, 
O_RDWR
, 
S_IRUSR
 | 
S_IWUSR
, NULL, 
dÊags
);

91 i‡(
dbp
 =
NULL
)

92 
îr
;

100 
t
 = 
dbp
->
öã∫Æ
;

101 i‡(
›íöfo
) {

102 i‡(
›íöfo
->
Êags
 & 
R_FIXEDLEN
) {

103 
	`F_SET
(
t
, 
R_FIXLEN
);

104 
t
->
bt_ª˛í
 = 
›íöfo
->
ª˛í
;

105 i‡(
t
->
bt_ª˛í
 == 0)

106 
eövÆ
;

108 
t
->
bt_bvÆ
 = 
›íöfo
->
bvÆ
;

110 
t
->
bt_bvÆ
 = '\n';

112 
	`F_SET
(
t
, 
R_RECNO
);

113 i‡(
‚ame
 =
NULL
)

114 
	`F_SET
(
t
, 
R_EOF
 | 
R_INMEM
);

116 
t
->
bt_rfd
 = 
rfd
;

118 i‡(
‚ame
 !
NULL
) {

124 
î∫o
 = 0;

125 i‡(
	`l£ek
(
rfd
, (
off_t
)0, 
SEEK_CUR
Ë=-1 && 
î∫o
 =
ESPIPE
) {

126 
Êags
 & 
O_ACCMODE
) {

127 
O_RDONLY
:

128 
	`F_SET
(
t
, 
R_RDONLY
);

131 
eövÆ
;

133 
¶ow
: i‡((
t
->
bt_rÂ
 = 
	`fd›í
(
rfd
, "r")Ë=
NULL
)

134 
îr
;

135 
	`F_SET
(
t
, 
R_CLOSEFP
);

136 
t
->
bt_úec
 =

137 
	`F_ISSET
(
t
, 
R_FIXLEN
Ë? 
__ªc_Âùe
 : 
__ªc_vpùe
;

139 
Êags
 & 
O_ACCMODE
) {

140 
O_RDONLY
:

141 
	`F_SET
(
t
, 
R_RDONLY
);

143 
O_RDWR
:

146 
eövÆ
;

149 i‡(
	`f°©
(
rfd
, &
sb
))

150 
îr
;

160 i‡(
sb
.
°_size
 == 0)

161 
	`F_SET
(
t
, 
R_EOF
);

163 #ifde‡
RECNO_USE_MMAP


171 
t
->
bt_msize
 = 
sb
.
°_size
;

172 i‡((
t
->
bt_sm≠
 = 
	`mm≠
(
NULL
,Å->
bt_msize
,

173 
PROT_READ
, 
MAP_PRIVATE
, 
rfd
,

174 (
off_t
)0)Ë=(
ˇddr_t
)-1)

175 
¶ow
;

176 
t
->
bt_cm≠
 =Å->
bt_sm≠
;

177 
t
->
bt_em≠
 =Å->
bt_sm≠
 + 
sb
.
°_size
;

178 
t
->
bt_úec
 = 
	`F_ISSET
—, 
R_FIXLEN
) ?

179 
__ªc_fm≠
 : 
__ªc_vm≠
;

180 
	`F_SET
(
t
, 
R_MEMMAPPED
);

182 
¶ow
;

189 
dbp
->
˛o£
 = 
__ªc_˛o£
;

190 
dbp
->
dñ
 = 
__ªc_dñëe
;

191 
dbp
->
fd
 = 
__ªc_fd
;

192 
dbp
->
gë
 = 
__ªc_gë
;

193 
dbp
->
put
 = 
__ªc_put
;

194 
dbp
->
£q
 = 
__ªc_£q
;

195 
dbp
->
sync
 = 
__ªc_sync
;

198 i‡((
h
 = 
	`mpoﬁ_gë
(
t
->
bt_mp
, 
P_ROOT
, 0)Ë=
NULL
)

199 
îr
;

200 i‡((
h
->
Êags
 & 
P_TYPE
Ë=
P_BLEAF
) {

201 
	`F_CLR
(
h
, 
P_TYPE
);

202 
	`F_SET
(
h
, 
P_RLEAF
);

203 
	`mpoﬁ_put
(
t
->
bt_mp
, 
h
, 
MPOOL_DIRTY
);

205 
	`mpoﬁ_put
(
t
->
bt_mp
, 
h
, 0);

207 i‡(
›íöfo
 && o≥nöfo->
Êags
 & 
R_SNAPSHOT
 &&

208 !
	`F_ISSET
(
t
, 
R_EOF
 | 
R_INMEM
) &&

209 
t
->
	`bt_úec
—, 
MAX_REC_NUMBER
Ë=
RET_ERROR
)

210 
îr
;

211  (
dbp
);

213 
eövÆ
: 
î∫o
 = 
EINVAL
;

214 
îr
: 
svî∫o
 = 
î∫o
;

215 i‡(
dbp
 !
NULL
)

216 ()
	`__bt_˛o£
(
dbp
);

217 i‡(
‚ame
 !
NULL
)

218 ()
	`˛o£
(
rfd
);

219 
î∫o
 = 
svî∫o
;

220  (
NULL
);

221 
	}
}

224 
	$__ªc_fd
(
dbp
)

225 c⁄° 
DB
 *
dbp
;

227 
BTREE
 *
t
;

229 
t
 = 
dbp
->
öã∫Æ
;

232 i‡(
t
->
bt_pö√d
 !
NULL
) {

233 
	`mpoﬁ_put
(
t
->
bt_mp
,Å->
bt_pö√d
, 0);

234 
t
->
bt_pö√d
 = 
NULL
;

238 i‡(
	`F_ISSET
(
t
, 
R_INMEM
)) {

239 
î∫o
 = 
ENOENT
;

242  (
t
->
bt_rfd
);

243 
	}
}

	@db/recno/rec_put.c

34 #i‡
deföed
(
LIBC_SCCS
Ë&& !deföed(
löt
)

35 
	gsccsid
[] = "@(#)rec_put.c 8.7 (Berkeley) 8/18/94";

38 
	~<sys/ty≥s.h
>

40 
	~<î∫o.h
>

41 
	~<°dio.h
>

42 
	~<°dlib.h
>

43 
	~<°rög.h
>

45 
	~<db.h
>

46 
	~"ª˙o.h
"

62 
	$__ªc_put
(
dbp
, 
key
, 
d©a
, 
Êags
)

63 c⁄° 
DB
 *
dbp
;

64 
DBT
 *
key
;

65 c⁄° 
DBT
 *
d©a
;

66 
u_öt
 
Êags
;

68 
BTREE
 *
t
;

69 
DBT
 
fd©a
, 
td©a
;

70 
ª˙o_t
 
ƒec
;

71 
°©us
;

73 
t
 = 
dbp
->
öã∫Æ
;

76 i‡(
t
->
bt_pö√d
 !
NULL
) {

77 
	`mpoﬁ_put
(
t
->
bt_mp
,Å->
bt_pö√d
, 0);

78 
t
->
bt_pö√d
 = 
NULL
;

86 i‡(
	`F_ISSET
(
t
, 
R_FIXLEN
Ë&& 
d©a
->
size
 !t->
bt_ª˛í
) {

87 i‡(
d©a
->
size
 > 
t
->
bt_ª˛í
)

88 
eövÆ
;

90 i‡(
t
->
bt_rd©a
.
size
 <Å->
bt_ª˛í
) {

91 
t
->
bt_rd©a
.
d©a
 =Å->bt_rd©a.d©®=
NULL
 ?

92 
	`mÆloc
(
t
->
bt_ª˛í
) :

93 
	`ªÆloc
(
t
->
bt_rd©a
.
d©a
,Å->
bt_ª˛í
);

94 i‡(
t
->
bt_rd©a
.
d©a
 =
NULL
)

95  (
RET_ERROR
);

96 
t
->
bt_rd©a
.
size
 =Å->
bt_ª˛í
;

98 
	`memmove
(
t
->
bt_rd©a
.
d©a
, d©a->d©a, d©a->
size
);

99 
	`mem£t
((*)
t
->
bt_rd©a
.
d©a
 + d©a->
size
,

100 
t
->
bt_bvÆ
,Å->
bt_ª˛í
 - 
d©a
->
size
);

101 
fd©a
.
d©a
 = 
t
->
bt_rd©a
.data;

102 
fd©a
.
size
 = 
t
->
bt_ª˛í
;

104 
fd©a
.
d©a
 = data->data;

105 
fd©a
.
size
 = 
d©a
->size;

108 
Êags
) {

109 
R_CURSOR
:

110 i‡(!
	`F_ISSET
(&
t
->
bt_curs‹
, 
CURS_INIT
))

111 
eövÆ
;

112 
ƒec
 = 
t
->
bt_curs‹
.
rcurs‹
;

114 
R_SETCURSOR
:

115 i‡((
ƒec
 = *(
ª˙o_t
 *)
key
->
d©a
) == 0)

116 
eövÆ
;

118 
R_IAFTER
:

119 i‡((
ƒec
 = *(
ª˙o_t
 *)
key
->
d©a
) == 0) {

120 
ƒec
 = 1;

121 
Êags
 = 
R_IBEFORE
;

125 
R_IBEFORE
:

126 i‡((
ƒec
 = *(
ª˙o_t
 *)
key
->
d©a
) == 0)

127 
eövÆ
;

129 
R_NOOVERWRITE
:

130 i‡((
ƒec
 = *(
ª˙o_t
 *)
key
->
d©a
) == 0)

131 
eövÆ
;

132 i‡(
ƒec
 <
t
->
bt_ƒecs
)

133  (
RET_SPECIAL
);

136 
eövÆ
: 
î∫o
 = 
EINVAL
;

137  (
RET_ERROR
);

144 i‡(
ƒec
 > 
t
->
bt_ƒecs
) {

145 i‡(!
	`F_ISSET
(
t
, 
R_EOF
 | 
R_INMEM
) &&

146 
t
->
	`bt_úec
—, 
ƒec
Ë=
RET_ERROR
)

147  (
RET_ERROR
);

148 i‡(
ƒec
 > 
t
->
bt_ƒecs
 + 1) {

149 i‡(
	`F_ISSET
(
t
, 
R_FIXLEN
)) {

150 i‡((
td©a
.
d©a
 =

151 (*)
	`mÆloc
(
t
->
bt_ª˛í
)Ë=
NULL
)

152  (
RET_ERROR
);

153 
td©a
.
size
 = 
t
->
bt_ª˛í
;

154 
	`mem£t
(
td©a
.
d©a
, 
t
->
bt_bvÆ
,Åd©a.
size
);

156 
td©a
.
d©a
 = 
NULL
;

157 
td©a
.
size
 = 0;

159 
ƒec
 > 
t
->
bt_ƒecs
 + 1)

160 i‡(
	`__ªc_ùut
(
t
,

161 
t
->
bt_ƒecs
, &
td©a
, 0Ë!
RET_SUCCESS
)

162  (
RET_ERROR
);

163 i‡(
	`F_ISSET
(
t
, 
R_FIXLEN
))

164 
	`‰ì
(
td©a
.
d©a
);

168 i‡((
°©us
 = 
	`__ªc_ùut
(
t
, 
ƒec
 - 1, &
fd©a
, 
Êags
)Ë!
RET_SUCCESS
)

169  (
°©us
);

171 i‡(
Êags
 =
R_SETCURSOR
)

172 
t
->
bt_curs‹
.
rcurs‹
 = 
ƒec
;

174 
	`F_SET
(
t
, 
R_MODIFIED
);

175  (
	`__ªc_ªt
(
t
, 
NULL
, 
ƒec
, 
key
, NULL));

176 
	}
}

190 
	$__ªc_ùut
(
t
, 
ƒec
, 
d©a
, 
Êags
)

191 
BTREE
 *
t
;

192 
ª˙o_t
 
ƒec
;

193 c⁄° 
DBT
 *
d©a
;

194 
u_öt
 
Êags
;

196 
DBT
 
td©a
;

197 
EPG
 *
e
;

198 
PAGE
 *
h
;

199 
ödx_t
 
ödex
, 
nxtödex
;

200 
pgno_t
 
pg
;

201 
u_öt32_t
 
nbyãs
;

202 
dÊags
, 
°©us
;

203 *
de°
, 
db
[
NOVFLSIZE
];

211 i‡(
d©a
->
size
 > 
t
->
bt_ovÊsize
) {

212 i‡(
	`__ovÊ_put
(
t
, 
d©a
, &
pg
Ë=
RET_ERROR
)

213  (
RET_ERROR
);

214 
td©a
.
d©a
 = 
db
;

215 
td©a
.
size
 = 
NOVFLSIZE
;

216 *(
pgno_t
 *)
db
 = 
pg
;

217 *(
u_öt32_t
 *)(
db
 + (
pgno_t
)Ë
d©a
->
size
;

218 
dÊags
 = 
P_BIGDATA
;

219 
d©a
 = &
td©a
;

221 
dÊags
 = 0;

224 i‡((
e
 = 
	`__ªc_£¨ch
(
t
, 
ƒec
,

225 
ƒec
 > 
t
->
bt_ƒecs
 || 
Êags
 =
R_IAFTER
 || fœg†=
R_IBEFORE
 ?

226 
SINSERT
 : 
SEARCH
)Ë=
NULL
)

227  (
RET_ERROR
);

229 
h
 = 
e
->
∑ge
;

230 
ödex
 = 
e
->index;

238 
Êags
) {

239 
R_IAFTER
:

240 ++
ödex
;

242 
R_IBEFORE
:

245 i‡(
ƒec
 < 
t
->
bt_ƒecs
 &&

246 
	`__ªc_dÀaf
(
t
, 
h
, 
ödex
Ë=
RET_ERROR
) {

247 
	`mpoﬁ_put
(
t
->
bt_mp
, 
h
, 0);

248  (
RET_ERROR
);

258 
nbyãs
 = 
	`NRLEAFDBT
(
d©a
->
size
);

259 i‡(
h
->
uµî
 - h->
lowî
 < 
nbyãs
 + (
ödx_t
)) {

260 
°©us
 = 
	`__bt_•lô
(
t
, 
h
, 
NULL
, 
d©a
, 
dÊags
, 
nbyãs
, 
ödex
);

261 i‡(
°©us
 =
RET_SUCCESS
)

262 ++
t
->
bt_ƒecs
;

263  (
°©us
);

266 i‡(
ödex
 < (
nxtödex
 = 
	`NEXTINDEX
(
h
)))

267 
	`memmove
(
h
->
löp
 + 
ödex
 + 1, h->linp + index,

268 (
nxtödex
 - 
ödex
Ë* (
ödx_t
));

269 
h
->
lowî
 +(
ödx_t
);

271 
h
->
löp
[
ödex
] = h->
uµî
 -
nbyãs
;

272 
de°
 = (*)
h
 + h->
uµî
;

273 
	`WR_RLEAF
(
de°
, 
d©a
, 
dÊags
);

275 ++
t
->
bt_ƒecs
;

276 
	`F_SET
(
t
, 
B_MODIFIED
);

277 
	`mpoﬁ_put
(
t
->
bt_mp
, 
h
, 
MPOOL_DIRTY
);

279  (
RET_SUCCESS
);

280 
	}
}

	@db/recno/rec_search.c

34 #i‡
deföed
(
LIBC_SCCS
Ë&& !deföed(
löt
)

35 
	gsccsid
[] = "@(#)rec_search.c 8.4 (Berkeley) 7/14/94";

38 
	~<sys/ty≥s.h
>

40 
	~<î∫o.h
>

41 
	~<°dio.h
>

43 
	~<db.h
>

44 
	~"ª˙o.h
"

63 
EPG
 *

64 
	$__ªc_£¨ch
(
t
, 
ª˙o
, 
›
)

65 
BTREE
 *
t
;

66 
ª˙o_t
 
ª˙o
;

67 
SRCHOP
 
›
;

69 
ödx_t
 
ödex
;

70 
PAGE
 *
h
;

71 
EPGNO
 *
∑ª¡
;

72 
RINTERNAL
 *
r
;

73 
pgno_t
 
pg
;

74 
ödx_t
 
t›
;

75 
ª˙o_t
 
tŸÆ
;

76 
svî∫o
;

78 
	`BT_CLR
(
t
);

79 
pg
 = 
P_ROOT
, 
tŸÆ
 = 0;;) {

80 i‡((
h
 = 
	`mpoﬁ_gë
(
t
->
bt_mp
, 
pg
, 0)Ë=
NULL
)

81 
îr
;

82 i‡(
h
->
Êags
 & 
P_RLEAF
) {

83 
t
->
bt_cur
.
∑ge
 = 
h
;

84 
t
->
bt_cur
.
ödex
 = 
ª˙o
 - 
tŸÆ
;

85  (&
t
->
bt_cur
);

87 
ödex
 = 0, 
t›
 = 
	`NEXTINDEX
(
h
);;) {

88 
r
 = 
	`GETRINTERNAL
(
h
, 
ödex
);

89 i‡(++
ödex
 =
t›
 || 
tŸÆ
 + 
r
->
ƒecs
 > 
ª˙o
)

91 
tŸÆ
 +
r
->
ƒecs
;

94 
	`BT_PUSH
(
t
, 
pg
, 
ödex
 - 1);

96 
pg
 = 
r
->
pgno
;

97 
›
) {

98 
SDELETE
:

99 --
	`GETRINTERNAL
(
h
, (
ödex
 - 1))->
ƒecs
;

100 
	`mpoﬁ_put
(
t
->
bt_mp
, 
h
, 
MPOOL_DIRTY
);

102 
SINSERT
:

103 ++
	`GETRINTERNAL
(
h
, (
ödex
 - 1))->
ƒecs
;

104 
	`mpoﬁ_put
(
t
->
bt_mp
, 
h
, 
MPOOL_DIRTY
);

106 
SEARCH
:

107 
	`mpoﬁ_put
(
t
->
bt_mp
, 
h
, 0);

113 
îr
: 
svî∫o
 = 
î∫o
;

114 i‡(
›
 !
SEARCH
)

115 (
∑ª¡
 = 
	`BT_POP
(
t
)Ë!
NULL
) {

116 i‡((
h
 = 
	`mpoﬁ_gë
(
t
->
bt_mp
, 
∑ª¡
->
pgno
, 0)Ë=
NULL
)

118 i‡(
›
 =
SINSERT
)

119 --
	`GETRINTERNAL
(
h
, 
∑ª¡
->
ödex
)->
ƒecs
;

121 ++
	`GETRINTERNAL
(
h
, 
∑ª¡
->
ödex
)->
ƒecs
;

122 
	`mpoﬁ_put
(
t
->
bt_mp
, 
h
, 
MPOOL_DIRTY
);

124 
î∫o
 = 
svî∫o
;

125  (
NULL
);

126 
	}
}

	@db/recno/rec_seq.c

34 #i‚de‡
löt


35 
	gsccsid
[] = "@(#)rec_seq.c 8.3 (Berkeley) 7/14/94";

38 
	~<sys/ty≥s.h
>

40 
	~<î∫o.h
>

41 
	~<limôs.h
>

42 
	~<°dio.h
>

43 
	~<°rög.h
>

45 
	~<db.h
>

46 
	~"ª˙o.h
"

61 
	$__ªc_£q
(
dbp
, 
key
, 
d©a
, 
Êags
)

62 c⁄° 
DB
 *
dbp
;

63 
DBT
 *
key
, *
d©a
;

64 
u_öt
 
Êags
;

66 
BTREE
 *
t
;

67 
EPG
 *
e
;

68 
ª˙o_t
 
ƒec
;

69 
°©us
;

71 
t
 = 
dbp
->
öã∫Æ
;

74 i‡(
t
->
bt_pö√d
 !
NULL
) {

75 
	`mpoﬁ_put
(
t
->
bt_mp
,Å->
bt_pö√d
, 0);

76 
t
->
bt_pö√d
 = 
NULL
;

79 
Êags
) {

80 
R_CURSOR
:

81 i‡((
ƒec
 = *(
ª˙o_t
 *)
key
->
d©a
) == 0)

82 
eövÆ
;

84 
R_NEXT
:

85 i‡(
	`F_ISSET
(&
t
->
bt_curs‹
, 
CURS_INIT
)) {

86 
ƒec
 = 
t
->
bt_curs‹
.
rcurs‹
 + 1;

90 
R_FIRST
:

91 
ƒec
 = 1;

93 
R_PREV
:

94 i‡(
	`F_ISSET
(&
t
->
bt_curs‹
, 
CURS_INIT
)) {

95 i‡((
ƒec
 = 
t
->
bt_curs‹
.
rcurs‹
 - 1) == 0)

96  (
RET_SPECIAL
);

100 
R_LAST
:

101 i‡(!
	`F_ISSET
(
t
, 
R_EOF
 | 
R_INMEM
) &&

102 
t
->
	`bt_úec
—, 
MAX_REC_NUMBER
Ë=
RET_ERROR
)

103  (
RET_ERROR
);

104 
ƒec
 = 
t
->
bt_ƒecs
;

107 
eövÆ
: 
î∫o
 = 
EINVAL
;

108  (
RET_ERROR
);

111 i‡(
t
->
bt_ƒecs
 =0 || 
ƒec
 >Å->bt_nrecs) {

112 i‡(!
	`F_ISSET
(
t
, 
R_EOF
 | 
R_INMEM
) &&

113 (
°©us
 = 
t
->
	`bt_úec
—, 
ƒec
)Ë!
RET_SUCCESS
)

114  (
°©us
);

115 i‡(
t
->
bt_ƒecs
 =0 || 
ƒec
 >Å->bt_nrecs)

116  (
RET_SPECIAL
);

119 i‡((
e
 = 
	`__ªc_£¨ch
(
t
, 
ƒec
 - 1, 
SEARCH
)Ë=
NULL
)

120  (
RET_ERROR
);

122 
	`F_SET
(&
t
->
bt_curs‹
, 
CURS_INIT
);

123 
t
->
bt_curs‹
.
rcurs‹
 = 
ƒec
;

125 
°©us
 = 
	`__ªc_ªt
(
t
, 
e
, 
ƒec
, 
key
, 
d©a
);

126 i‡(
	`F_ISSET
(
t
, 
B_DB_LOCK
))

127 
	`mpoﬁ_put
(
t
->
bt_mp
, 
e
->
∑ge
, 0);

129 
t
->
bt_pö√d
 = 
e
->
∑ge
;

130  (
°©us
);

131 
	}
}

	@db/recno/rec_utils.c

34 #i‡
deföed
(
LIBC_SCCS
Ë&& !deföed(
löt
)

35 
	gsccsid
[] = "@(#)rec_utils.c 8.6 (Berkeley) 7/16/94";

38 
	~<sys/∑øm.h
>

40 
	~<°dio.h
>

41 
	~<°dlib.h
>

42 
	~<°rög.h
>

44 
	~<db.h
>

45 
	~"ª˙o.h
"

62 
	$__ªc_ªt
(
t
, 
e
, 
ƒec
, 
key
, 
d©a
)

63 
BTREE
 *
t
;

64 
EPG
 *
e
;

65 
ª˙o_t
 
ƒec
;

66 
DBT
 *
key
, *
d©a
;

68 
RLEAF
 *
æ
;

69 *
p
;

71 i‡(
key
 =
NULL
)

72 
d©a⁄ly
;

75 i‡((
ª˙o_t
Ë> 
t
->
bt_rkey
.
size
) {

76 
p
 = (*)(
t
->
bt_rkey
.
d©a
 =
NULL
 ?

77 
	`mÆloc
((
ª˙o_t
)) :

78 
	`ªÆloc
(
t
->
bt_rkey
.
d©a
, (
ª˙o_t
)));

79 i‡(
p
 =
NULL
)

80  (
RET_ERROR
);

81 
t
->
bt_rkey
.
d©a
 = 
p
;

82 
t
->
bt_rkey
.
size
 = (
ª˙o_t
);

84 
	`memmove
(
t
->
bt_rkey
.
d©a
, &
ƒec
, (
ª˙o_t
));

85 
key
->
size
 = (
ª˙o_t
);

86 
key
->
d©a
 = 
t
->
bt_rkey
.data;

88 
d©a⁄ly
:

89 i‡(
d©a
 =
NULL
)

90  (
RET_SUCCESS
);

97 
æ
 = 
	`GETRLEAF
(
e
->
∑ge
,É->
ödex
);

98 i‡(
æ
->
Êags
 & 
P_BIGDATA
) {

99 i‡(
	`__ovÊ_gë
(
t
, 
æ
->
byãs
,

100 &
d©a
->
size
, &
t
->
bt_rd©a
.data, &t->bt_rdata.size))

101  (
RET_ERROR
);

102 
d©a
->d©®
t
->
bt_rd©a
.data;

103 } i‡(
	`F_ISSET
(
t
, 
B_DB_LOCK
)) {

105 i‡(
æ
->
dsize
 + 1 > 
t
->
bt_rd©a
.
size
) {

106 
p
 = (*)(
t
->
bt_rd©a
.
d©a
 =
NULL
 ?

107 
	`mÆloc
(
æ
->
dsize
 + 1) :

108 
	`ªÆloc
(
t
->
bt_rd©a
.
d©a
, 
æ
->
dsize
 + 1));

109 i‡(
p
 =
NULL
)

110  (
RET_ERROR
);

111 
t
->
bt_rd©a
.
d©a
 = 
p
;

112 
t
->
bt_rd©a
.
size
 = 
æ
->
dsize
 + 1;

114 
	`memmove
(
t
->
bt_rd©a
.
d©a
, 
æ
->
byãs
,Ñl->
dsize
);

115 
d©a
->
size
 = 
æ
->
dsize
;

116 
d©a
->d©®
t
->
bt_rd©a
.data;

118 
d©a
->
size
 = 
æ
->
dsize
;

119 
d©a
->d©®
æ
->
byãs
;

121  (
RET_SUCCESS
);

122 
	}
}

	@db/recno/recno.h

36 
	eSRCHOP
 { 
	mSDELETE
, 
	mSINSERT
, 
	mSEARCH
};

38 
	~"../båì/båì.h
"

39 
	~"exã∫.h
"

	@ex/ex.c

10 
	~"c⁄fig.h
"

12 #i‚de‡
löt


13 c⁄° 
	gsccsid
[] = "@(#)ex.c 10.57 (Berkeley) 10/10/96";

16 
	~<sys/ty≥s.h
>

17 
	~<sys/queue.h
>

18 
	~<sys/°©.h
>

19 
	~<sys/time.h
>

21 
	~<bô°rög.h
>

22 
	~<˘y≥.h
>

23 
	~<î∫o.h
>

24 
	~<f˙é.h
>

25 
	~<limôs.h
>

26 
	~<°dio.h
>

27 
	~<°dlib.h
>

28 
	~<°rög.h
>

29 
	~<uni°d.h
>

31 
	~"../comm⁄/comm⁄.h
"

32 
	~"../vi/vi.h
"

34 #i‡
deföed
(
DEBUG
Ë&& deföed(
COMLOG
)

35 
ex_comlog
 
__P
((
SCR
 *, 
EXCMD
 *));

37 
EXCMDLIST
 const *

38 
ex_comm_£¨ch
 
__P
((*, 
size_t
));

39 
ex_disˇrd
 
__P
((
SCR
 *));

40 
ex_löe
 
__P
((
SCR
 *, 
EXCMD
 *, 
MARK
 *, *, *));

41 
ex_lﬂd
 
__P
((
SCR
 *));

42 
ex_unknown
 
__P
((
SCR
 *, *, 
size_t
));

51 
	$ex
(
•p
)

52 
SCR
 **
•p
;

54 
EX_PRIVATE
 *
exp
;

55 
GS
 *
gp
;

56 
MSGS
 *
mp
;

57 
SCR
 *
•
;

58 
TEXT
 *
ç
;

59 
u_öt32_t
 
Êags
;

61 
•
 = *
•p
;

62 
gp
 = 
•
->gp;

63 
exp
 = 
	`EXP
(
•
);

66 i‡(
	`ex_öô
(
•
))

70 (
mp
 = 
gp
->
msgq
.
lh_fú°
Ë!
NULL
) {

71 
gp
->
	`s¸_msg
(
•
, 
mp
->
mty≥
, mp->
buf
, mp->
Àn
);

72 
	`LIST_REMOVE
(
mp
, 
q
);

73 
	`‰ì
(
mp
->
buf
);

74 
	`‰ì
(
mp
);

78 i‡(
	`F_ISSET
(
gp
, 
G_SCRIPTED
)) {

79 
gp
->
excmd
.
if_ o
 = 1;

80 
gp
->
excmd
.
if_«me
 = "script";

90 
	`LF_INIT
(
TXT_BACKSLASH
 | 
TXT_CNTRLD
 | 
TXT_CR
);

91 ;; ++
gp
->
excmd
.
if_ o
) {

93 i‡(
	`F_ISSET
(
•
, 
SC_STATUS
)) {

94 i‡(!
	`F_ISSET
(
•
, 
SC_EX_SILENT
))

95 
	`msgq_°©us
(
•
, sp->
 o
, 0);

96 
	`F_CLR
(
•
, 
SC_STATUS
);

98 ()
	`ex_fÊush
(
•
);

101 i‡(
	`O_ISSET
(
•
, 
O_BEAUTIFY
))

102 
	`LF_SET
(
TXT_BEAUTIFY
);

103 i‡(
	`O_ISSET
(
•
, 
O_PROMPT
))

104 
	`LF_SET
(
TXT_PROMPT
);

107 
	`CLR_INTERRUPT
(
•
);

108 i‡(
	`ex_txt
(
•
, &•->
tiq
, ':', 
Êags
))

110 i‡(
	`INTERRUPTED
(
•
)) {

111 ()
	`ex_puts
(
•
, "\n");

112 ()
	`ex_fÊush
(
•
);

117 
	`CLEAR_EX_PARSER
(&
gp
->
excmd
);

123 
ç
 = 
•
->
tiq
.
cqh_fú°
;

124 i‡(
ç
->
Àn
 == 0) {

125 
gp
->
excmd
.
˝
 = " ";

126 
gp
->
excmd
.
˛í
 = 1;

128 
gp
->
excmd
.
˝
 = 
ç
->
lb
;

129 
gp
->
excmd
.
˛í
 = 
ç
->
Àn
;

131 
	`F_INIT
(&
gp
->
excmd
, 
E_NRSEP
);

133 i‡(
	`ex_cmd
(
•
Ë&& 
	`F_ISSET
(
gp
, 
G_SCRIPTED
))

136 i‡(
	`INTERRUPTED
(
•
)) {

137 
	`CLR_INTERRUPT
(
•
);

138 
	`msgq
(
•
, 
M_ERR
, "170|Interrupted");

145 i‡(
	`F_ISSET
(
gp
, 
G_SRESTART
Ë|| F_ISSET(
•
, 
SC_SSWITCH
 | 
SC_VI
)) {

146 *
•p
 = 
•
;

151 
	`F_CLR
(
•
, 
SC_FSWITCH
);

159 i‡(
	`F_ISSET
(
•
, 
SC_EXIT
 | 
SC_EXIT_FORCE
)) {

160 i‡(
	`fûe_íd
(
•
, 
NULL
, 
	`F_ISSET
(•, 
SC_EXIT_FORCE
)))

162 *
•p
 = 
	`s¸ìn_√xt
(
•
);

163  (
	`s¸ìn_íd
(
•
));

167 
	}
}

195 
	$ex_cmd
(
•
)

196 
SCR
 *
•
;

198 
ƒesu…
 
ƒë
;

199 
EX_PRIVATE
 *
exp
;

200 
EXCMD
 *
e˝
;

201 
GS
 *
gp
;

202 
MARK
 
cur
;

203 
ª˙o_t
 
 o
;

204 
size_t
 
¨g1_Àn
, 
disˇrd
, 
Àn
;

205 
u_öt32_t
 
Êags
;

206 
…mp
;

207 
©_found
, 
gv_found
;

208 
ch
, 
˙t
, 
dñim
, 
ißddr
, 
«mñí
;

209 
√ws¸ìn
, 
nŸem±y
, 
tmp
, 
vi_addªss
;

210 *
¨g1
, *
p
, *
s
, *
t
;

212 
gp
 = 
•
->gp;

213 
exp
 = 
	`EXP
(
•
);

220 
lo›
: 
e˝
 = 
gp
->
ecq
.
lh_fú°
;

223 i‡(
e˝
->
if_«me
 !
NULL
) {

224 
gp
->
if_ o
 = 
e˝
->if_lno;

225 
gp
->
if_«me
 = 
e˝
->if_name;

232 i‡(
	`F_ISSET
(
e˝
, 
E_MOVETOEND
)) {

233 i‡(
	`db_œ°
(
•
, &•->
 o
))

234 
rÁû
;

235 
•
->
˙o
 = 0;

236 
	`F_CLR
(
e˝
, 
E_MOVETOEND
);

240 i‡(
	`F_ISSET
(
e˝
, 
E_NEWLINE
)) {

241 ++
gp
->
if_ o
;

242 ++
e˝
->
if_ o
;

243 
	`F_CLR
(
e˝
, 
E_NEWLINE
);

247 
	`CLEAR_EX_CMD
(
e˝
);

250 i‡(
	`¨gv_öô
(
•
, 
e˝
))

251 
îr
;

254 
¨g1
 = 
NULL
;

255 
e˝
->
ßve_cmdÀn
 = 0;

258 
nŸem±y
 = 0; 
e˝
->
˛í
 > 0; ++e˝->
˝
, --ecp->clen)

259 i‡((
ch
 = *
e˝
->
˝
) == '\n') {

260 ++
gp
->
if_ o
;

261 ++
e˝
->
if_ o
;

262 } i‡(
	`isbœnk
(
ch
))

263 
nŸem±y
 = 1;

274 i‡(
e˝
->
˛í
 !0 && 
ch
 == ':') {

275 
nŸem±y
 = 1;

276 --
e˝
->
˛í
 > 0 && (
ch
 = *++e˝->
˝
) == ':');

288 i‡(
e˝
->
˛í
 !0 && 
ch
 == '"') {

289 --
e˝
->
˛í
 > 0 && *++e˝->
˝
 != '\n');

290 i‡(*
e˝
->
˝
 == '\n') {

291 
	`F_SET
(
e˝
, 
E_NEWLINE
);

292 ++
e˝
->
˝
;

293 --
e˝
->
˛í
;

295 
lo›
;

299 ; 
e˝
->
˛í
 > 0; ++e˝->
˝
, --ecp->clen) {

300 
ch
 = *
e˝
->
˝
;

301 i‡(!
	`isbœnk
(
ch
))

320 i‡(
e˝
->
˛í
 == 0 &&

321 (!
nŸem±y
 || 
	`F_ISSET
(
•
, 
SC_VI
Ë|| F_ISSET(
e˝
, 
E_BLIGNORE
))) {

322 i‡(
	`ex_lﬂd
(
•
))

323 
rÁû
;

324 
e˝
 = 
gp
->
ecq
.
lh_fú°
;

325 i‡(
e˝
->
˛í
 == 0)

326 
rsuc˚ss
;

327 
lo›
;

340 i‡(
	`F_ISSET
(
e˝
, 
E_NRSEP
) &&

341 
e˝
->
˛í
 !0 && (e˝->˛í !1 ||É˝->
˝
[0] != '\004'))

342 
	`F_CLR
(
e˝
, 
E_NRSEP
);

345 i‡(
	`ex_ønge
(
•
, 
e˝
, &
tmp
))

346 
rÁû
;

347 i‡(
tmp
)

348 
îr
;

354 ; 
e˝
->
˛í
 > 0; ++e˝->
˝
, --ecp->clen) {

355 
ch
 = *
e˝
->
˝
;

356 i‡(!
	`isbœnk
(
ch
) && ch != ':')

380 
	#SINGLE_CHAR_COMMANDS
 "\004!#&*<=>@~"

	)

381 
√ws¸ìn
 = 0;

382 i‡(
e˝
->
˛í
 !0 &&É˝->
˝
[0] != '|' &&Écp->cp[0] != '\n') {

383 i‡(
	`°rchr
(
SINGLE_CHAR_COMMANDS
, *
e˝
->
˝
)) {

384 
p
 = 
e˝
->
˝
;

385 ++
e˝
->
˝
;

386 --
e˝
->
˛í
;

387 
«mñí
 = 1;

389 
p
 = 
e˝
->
˝
;

390 
e˝
->
˛í
 > 0; --e˝->˛í, ++e˝->
˝
)

391 i‡(!
	`ißÕha
(*
e˝
->
˝
))

393 i‡((
«mñí
 = 
e˝
->
˝
 - 
p
) == 0) {

394 
	`msgq
(
•
, 
M_ERR
, "080|Unknown commandÇame");

395 
îr
;

415 
p
[0]) {

417 
s
 = 
p
,

418 
t
 = 
cmds
[
C_DELETE
].
«me
; *
s
 == *t; ++s, ++t);

419 i‡(
s
[0] == 'l' || s[0] == 'p' || s[0] == '+' ||

420 
s
[0] == '-' || s[0] == '^' || s[0] == '#') {

421 
Àn
 = (
e˝
->
˝
 - 
p
Ë- (
s
 -Ö);

422 
e˝
->
˝
 -
Àn
;

423 
e˝
->
˛í
 +
Àn
;

424 
e˝
->
rcmd
 = 
cmds
[
C_DELETE
];

425 
e˝
->
rcmd
.
sy¡ax
 = "1bca1";

426 
e˝
->
cmd
 = &e˝->
rcmd
;

427 
skù_§ch
;

431 
√ws¸ìn
 = 1;

432 
p
[0] = 
	`tﬁowî
(p[0]);

454 i‡((
e˝
->
cmd
 = 
	`ex_comm_£¨ch
(
p
, 
«mñí
)Ë=
NULL
)

455 
p
[0]) {

457 i‡(
«mñí
 == 2) {

458 
e˝
->
˝
 -
«mñí
 - 1;

459 
e˝
->
˛í
 +
«mñí
 - 1;

460 
e˝
->
cmd
 = &
cmds
[
C_K
];

463 
unknown
;

465 
s
 = 
p
 + 1, 
˙t
 = 
«mñí
; --cnt; ++s)

466 i‡(
s
[0] != 'c' &&

467 
s
[0] != 'g' && s[0] != 'r')

469 i‡(
˙t
 == 0) {

470 
e˝
->
˝
 -
«mñí
 - 1;

471 
e˝
->
˛í
 +
«mñí
 - 1;

472 
e˝
->
rcmd
 = 
cmds
[
C_SUBSTITUTE
];

473 
e˝
->
rcmd
.
‚
 = 
ex_subagaö
;

474 
e˝
->
cmd
 = &e˝->
rcmd
;

479 
unknown
: i‡(
√ws¸ìn
)

480 
p
[0] = 
	`touµî
(p[0]);

481 
	`ex_unknown
(
•
, 
p
, 
«mñí
);

482 
îr
;

491 
skù_§ch
: i‡(
e˝
->
cmd
 =&
cmds
[
C_VISUAL_EX
] && 
	`F_ISSET
(
•
, 
SC_VI
))

492 
e˝
->
cmd
 = &
cmds
[
C_VISUAL_VI
];

502 i‡(
√ws¸ìn
 && !
	`F_ISSET
(
e˝
->
cmd
, 
E_NEWSCREEN
) &&

503 (
e˝
->
cmd
 =&
cmds
[
C_PRINT
] ||

504 
e˝
->
cmd
 =&
cmds
[
C_PRESERVE
]))

505 
√ws¸ìn
 = 0;

508 i‡(
√ws¸ìn
 && !
	`F_ISSET
(
e˝
->
cmd
, 
E_NEWSCREEN
))

509 
unknown
;

512 i‡(
	`F_ISSET
(
e˝
->
cmd
, 
E_SECURE
Ë&& 
	`O_ISSET
(
•
, 
O_SECURE
)) {

513 
	`ex_emsg
(
•
, 
e˝
->
cmd
->
«me
, 
EXM_SECURE
);

514 
îr
;

522 i‡((
e˝
->
cmd
 =&
cmds
[
C_SHIFTL
] && *
p
 == '<') ||

523 (
e˝
->
cmd
 =&
cmds
[
C_SHIFTR
] && *
p
 == '>')) {

524 
ch
 = *
p
;

525 
e˝
->
˛í
 > 0; --e˝->˛í, ++e˝->
˝
)

526 i‡(*
e˝
->
˝
 !
ch
)

528 i‡(
	`¨gv_exp0
(
•
, 
e˝
, 
p
,É˝->
˝
 -Ö))

529 
îr
;

533 i‡(
e˝
->
cmd
 =&
cmds
[
C_HASH
])

534 
exp
->
fdef
 = 
E_C_HASH
;

535 i‡(
e˝
->
cmd
 =&
cmds
[
C_LIST
])

536 
exp
->
fdef
 = 
E_C_LIST
;

537 i‡(
e˝
->
cmd
 =&
cmds
[
C_PRINT
])

538 
exp
->
fdef
 = 
E_C_PRINT
;

539 
	`F_CLR
(
e˝
, 
E_USELASTCMD
);

542 
e˝
->
cmd
 = &
cmds
[
C_PRINT
];

545 
	`F_SET
(
e˝
, 
exp
->
fdef
);

553 i‡(
e˝
->
addr˙t
 =0 && !
	`F_ISSET
(
•
, 
SC_EX_GLOBAL
)) {

554 
e˝
->
addr˙t
 = 1;

555 
e˝
->
addr1
.
 o
 = 
•
->lno + 1;

556 
e˝
->
addr1
.
˙o
 = 
•
->cno;

559 
	`F_SET
(
e˝
, 
E_USELASTCMD
);

569 i‡(
	`O_ISSET
(
•
, 
O_NUMBER
)) {

570 
	`F_SET
(
e˝
, 
E_OPTNUM
);

571 
	`FL_SET
(
e˝
->
iÊags
, 
E_C_HASH
);

573 
	`F_CLR
(
e˝
, 
E_OPTNUM
);

576 i‡(
	`F_ISSET
(
•
, 
SC_EX
Ë&& (F_ISSET(
e˝
->
cmd
, 
E_VIONLY
Ë|| 
√ws¸ìn
)) {

577 
	`msgq
(
•
, 
M_ERR
,

578 "082|%s: comm™dÇŸávaûabÀ i¿ex mode", 
e˝
->
cmd
->
«me
);

579 
îr
;

583 
	`F_SET
(
e˝
,É˝->
cmd
->
Êags
);

584 i‡(!
√ws¸ìn
)

585 
	`F_CLR
(
e˝
, 
E_NEWSCREEN
);

628 
disˇrd
 = 0;

629 
¨g1_Àn
 = 0;

630 
e˝
->
ßve_cmd
 =É˝->
˝
;

631 i‡(
e˝
->
cmd
 =&
cmds
[
C_EDIT
] ||É˝->cmd =&cmds[
C_EX
] ||

632 
e˝
->
cmd
 =&
cmds
[
C_NEXT
] ||É˝->cmd =&cmds[
C_VISUAL_VI
]) {

638 i‡(
e˝
->
˛í
 > 0 && *e˝->
˝
 == '!') {

639 ++
e˝
->
˝
;

640 --
e˝
->
˛í
;

641 
	`FL_SET
(
e˝
->
iÊags
, 
E_C_FORCE
);

644 
e˝
->
ßve_cmd
 =É˝->
˝
;

646 ; 
e˝
->
˛í
 > 0; --e˝->˛í, ++e˝->
˝
)

647 i‡(!
	`isbœnk
(*
e˝
->
˝
))

658 i‡(
e˝
->
˛í
 > 0 && *e˝->
˝
 == '+') {

659 ++
e˝
->
˝
;

660 --
e˝
->
˛í
;

661 
¨g1
 = 
p
 = 
e˝
->
˝
;

662 
e˝
->
˛í
 > 0; --e˝->˛í, ++e˝->
˝
) {

663 
ch
 = *
e˝
->
˝
;

664 i‡(
	`IS_ESCAPE
(
•
, 
e˝
, 
ch
) &&

665 
e˝
->
˛í
 > 1) {

666 ++
disˇrd
;

667 --
e˝
->
˛í
;

668 
ch
 = *++
e˝
->
˝
;

669 } i‡(
	`isbœnk
(
ch
))

671 *
p
++ = 
ch
;

673 
¨g1_Àn
 = 
e˝
->
˝
 - 
¨g1
;

676 
e˝
->
ßve_cmd
 =É˝->
˝
;

678 } i‡(
e˝
->
cmd
 =&
cmds
[
C_BANG
] ||

679 
e˝
->
cmd
 =&
cmds
[
C_GLOBAL
] ||É˝->cmd =&cmds[
C_V
]) {

689 
p
 = 
e˝
->
˝
;É˝->
˛í
 > 0; --ecp->clen, ++ecp->cp) {

690 
ch
 = *
e˝
->
˝
;

691 i‡(
ch
 ='\\' && 
e˝
->
˛í
 > 1 &&É˝->
˝
[1] == '\n') {

692 ++
disˇrd
;

693 --
e˝
->
˛í
;

694 
ch
 = *++
e˝
->
˝
;

696 ++
gp
->
if_ o
;

697 ++
e˝
->
if_ o
;

698 } i‡(
ch
 == '\n')

700 *
p
++ = 
ch
;

702 } i‡(
e˝
->
cmd
 =&
cmds
[
C_READ
] ||É˝->cmd =&cmds[
C_WRITE
]) {

711 
tmp
 = 0; 
e˝
->
˛í
 > 0; --e˝->˛í, ++e˝->
˝
) {

712 
ch
 = *
e˝
->
˝
;

713 i‡(
	`isbœnk
(
ch
))

714 
tmp
 = 1;

718 i‡(
e˝
->
˛í
 > 0 && 
ch
 == '!' &&

719 (
e˝
->
cmd
 =&
cmds
[
C_READ
] || 
tmp
))

720 ; 
e˝
->
˛í
 > 0; --e˝->˛í, ++e˝->
˝
)

721 i‡(
e˝
->
˝
[0] == '\n')

723 } i‡(
e˝
->
cmd
 =&
cmds
[
C_SUBSTITUTE
]) {

730 ; 
e˝
->
˛í
 > 0; --e˝->˛í, ++e˝->
˝
)

731 i‡(!
	`isbœnk
(
e˝
->
˝
[0]))

734 i‡(
	`iß um
(
e˝
->
˝
[0]) ||Écp->cp[0] == '|') {

735 
e˝
->
rcmd
 = 
cmds
[
C_SUBSTITUTE
];

736 
e˝
->
rcmd
.
‚
 = 
ex_subagaö
;

737 
e˝
->
cmd
 = &e˝->
rcmd
;

738 } i‡(
e˝
->
˛í
 > 0) {

747 
dñim
 = *
e˝
->
˝
;

748 ++
e˝
->
˝
;

749 --
e˝
->
˛í
;

750 
˙t
 = 2; 
e˝
->
˛í
 > 0 &&

751 
˙t
 !0; --
e˝
->
˛í
, ++e˝->
˝
)

752 i‡(
e˝
->
˝
[0] == '\\' &&

753 
e˝
->
˛í
 > 1) {

754 ++
e˝
->
˝
;

755 --
e˝
->
˛í
;

756 } i‡(
e˝
->
˝
[0] =
dñim
)

757 --
˙t
;

774 
vi_addªss
 = 
e˝
->
˛í
 !0 &&É˝->
˝
[0] != '\n';

775 
p
 = 
e˝
->
˝
;É˝->
˛í
 > 0; --ecp->clen, ++ecp->cp) {

776 
ch
 = 
e˝
->
˝
[0];

777 i‡(
	`IS_ESCAPE
(
•
, 
e˝
, 
ch
Ë&&É˝->
˛í
 > 1) {

778 
tmp
 = 
e˝
->
˝
[1];

779 i‡(
tmp
 == '\n' ||Åmp == '|') {

780 i‡(
tmp
 == '\n') {

781 ++
gp
->
if_ o
;

782 ++
e˝
->
if_ o
;

784 ++
disˇrd
;

785 --
e˝
->
˛í
;

786 ++
e˝
->
˝
;

787 
ch
 = 
tmp
;

789 } i‡(
ch
 == '\n' || ch == '|') {

790 i‡(
ch
 == '\n')

791 
	`F_SET
(
e˝
, 
E_NEWLINE
);

792 --
e˝
->
˛í
;

795 *
p
++ = 
ch
;

802 
p
 = 
e˝
->
˝
 + 1;

803 
e˝
->
˝
 =É˝->
ßve_cmd
;

804 
e˝
->
ßve_cmd
 = 
p
;

805 
e˝
->
ßve_cmdÀn
 =É˝->
˛í
;

806 
e˝
->
˛í
 = (”˝->
ßve_cmd
 -É˝->
˝
Ë- 1Ë- 
disˇrd
;

817 i‡(
e˝
->
cmd
 =&
cmds
[
C_SET
])

818 
p
 = 
e˝
->
˝
, 
Àn
 =É˝->
˛í
;Üen > 0; --len, ++p)

819 i‡(*
p
 == '\\')

820 *
p
 = 
CH_LITERAL
;

840 
	`F_ISSET
(
e˝
, 
E_ADDR1
 | 
E_ADDR2
 | 
E_ADDR2_ALL
 | 
E_ADDR2_NONE
)) {

841 
E_ADDR1
:

842 
e˝
->
addr˙t
) {

844 
e˝
->
addr˙t
 = 1;

845 
	`F_SET
(
e˝
, 
E_ADDR_DEF
);

846 i‡(
	`F_ISSET
(
e˝
, 
E_ADDR_ZERODEF
)) {

847 i‡(
	`db_œ°
(
•
, &
 o
))

848 
îr
;

849 i‡(
 o
 == 0) {

850 
e˝
->
addr1
.
 o
 = 0;

851 
	`F_SET
(
e˝
, 
E_ADDR_ZERO
);

853 
e˝
->
addr1
.
 o
 = 
•
->lno;

855 
e˝
->
addr1
.
 o
 = 
•
->lno;

856 
e˝
->
addr1
.
˙o
 = 
•
->cno;

861 
e˝
->
addr˙t
 = 1;

862 
e˝
->
addr1
 =É˝->
addr2
;

865 
E_ADDR2_NONE
:

866 i‡(
e˝
->
addr˙t
 == 0)

868 
two_addr
;

869 
E_ADDR2_ALL
:

870 i‡(
e˝
->
addr˙t
 == 0) {

871 
	`F_SET
(
e˝
, 
E_ADDR_DEF
);

872 
e˝
->
addr˙t
 = 2;

873 i‡(
•
->
ï
 =
NULL
)

874 
e˝
->
addr2
.
 o
 = 0;

875 i‡(
	`db_œ°
(
•
, &
e˝
->
addr2
.
 o
))

876 
îr
;

877 i‡(
	`F_ISSET
(
e˝
, 
E_ADDR_ZERODEF
) &&

878 
e˝
->
addr2
.
 o
 == 0) {

879 
e˝
->
addr1
.
 o
 = 0;

880 
	`F_SET
(
e˝
, 
E_ADDR_ZERO
);

882 
e˝
->
addr1
.
 o
 = 1;

883 
e˝
->
addr1
.
˙o
 =É˝->
addr2
.cno = 0;

884 
	`F_SET
(
e˝
, 
E_ADDR2_ALL
);

888 
E_ADDR2
:

889 
two_addr
: 
e˝
->
addr˙t
) {

891 
e˝
->
addr˙t
 = 2;

892 
	`F_SET
(
e˝
, 
E_ADDR_DEF
);

893 i‡(
•
->
 o
 == 1 &&

894 
	`F_ISSET
(
e˝
, 
E_ADDR_ZERODEF
)) {

895 i‡(
	`db_œ°
(
•
, &
 o
))

896 
îr
;

897 i‡(
 o
 == 0) {

898 
e˝
->
addr1
.
 o
 =É˝->
addr2
.lno = 0;

899 
	`F_SET
(
e˝
, 
E_ADDR_ZERO
);

901 
e˝
->
addr1
.
 o
 =

902 
e˝
->
addr2
.
 o
 = 
•
->lno;

904 
e˝
->
addr1
.
 o
 =É˝->
addr2
. ÿ
•
->lno;

905 
e˝
->
addr1
.
˙o
 =É˝->
addr2
.˙ÿ
•
->cno;

908 
e˝
->
addr˙t
 = 2;

909 
e˝
->
addr2
 =É˝->
addr1
;

916 i‡(
e˝
->
addr˙t
)

917 
ußge
;

926 i‡(
e˝
->
cmd
 =&
cmds
[
C_SCROLL
]) {

927 
e˝
->
addr˙t
 = 2;

928 
e˝
->
addr1
.
 o
 = 
•
->lno + 1;

929 
e˝
->
addr2
.
 o
 = 
•
-> ÿ+ 
	`O_VAL
(•, 
O_SCROLL
);

930 
e˝
->
addr1
.
˙o
 =É˝->
addr2
.˙ÿ
•
->cno;

931 i‡(
	`db_œ°
(
•
, &
 o
))

932 
îr
;

933 i‡(
 o
 !0 &&Ünÿ> 
•
-> ÿ&& 
e˝
->
addr2
.lno >Üno)

934 
e˝
->
addr2
.
 o
 =Üno;

937 
e˝
->
Êagoff
 = 0;

938 
p
 = 
e˝
->
cmd
->
sy¡ax
; *p != '\0'; ++p) {

944 i‡(*
p
 == '!') {

945 i‡(
e˝
->
˛í
 > 0 && *e˝->
˝
 == '!') {

946 ++
e˝
->
˝
;

947 --
e˝
->
˛í
;

948 
	`FL_SET
(
e˝
->
iÊags
, 
E_C_FORCE
);

954 ; 
e˝
->
˛í
 > 0; --e˝->˛í, ++e˝->
˝
)

955 i‡(!
	`isbœnk
(*
e˝
->
˝
))

957 i‡(
e˝
->
˛í
 == 0)

960 *
p
) {

972 ; 
e˝
->
˛í
; --e˝->˛í, ++e˝->
˝
)

973 *
e˝
->
˝
) {

975 ++
e˝
->
Êagoff
;

979 --
e˝
->
Êagoff
;

982 
	`F_CLR
(
e˝
, 
E_OPTNUM
);

983 
	`FL_SET
(
e˝
->
iÊags
, 
E_C_HASH
);

984 
exp
->
fdef
 |
E_C_HASH
;

987 
	`FL_SET
(
e˝
->
iÊags
, 
E_C_LIST
);

988 
exp
->
fdef
 |
E_C_LIST
;

991 
	`FL_SET
(
e˝
->
iÊags
, 
E_C_PRINT
);

992 
exp
->
fdef
 |
E_C_PRINT
;

995 
íd_ˇ£1
;

997 
íd_ˇ£1
: ;

1000 ; 
e˝
->
˛í
; --e˝->˛í, ++e˝->
˝
)

1001 *
e˝
->
˝
) {

1003 
	`FL_SET
(
e˝
->
iÊags
, 
E_C_DASH
);

1006 
	`FL_SET
(
e˝
->
iÊags
, 
E_C_DOT
);

1009 
	`FL_SET
(
e˝
->
iÊags
, 
E_C_PLUS
);

1012 
	`FL_SET
(
e˝
->
iÊags
, 
E_C_CARAT
);

1015 i‡(*
p
 == '3') {

1016 
	`FL_SET
(
e˝
->
iÊags
, 
E_C_EQUAL
);

1021 
íd_ˇ£23
;

1023 
íd_ˇ£23
: ;

1033 i‡((
e˝
->
˝
[0] == '+' ||Écp->cp[0] == '-' ||

1034 
e˝
->
˝
[0] == '^' ||Écp->cp[0] == '#') &&

1035 
	`°rchr
(
p
, '1'Ë!
NULL
)

1043 i‡(!
	`isdigô
(
e˝
->
˝
[0])) {

1044 
e˝
->
buf„r
 = *e˝->
˝
;

1045 ++
e˝
->
˝
;

1046 --
e˝
->
˛í
;

1047 
	`FL_SET
(
e˝
->
iÊags
, 
E_C_BUFFER
);

1051 ++
p
;

1053 i‡(!
	`isdigô
(*
e˝
->
˝
Ë&& (*
p
 != '+' ||

1054 (*
e˝
->
˝
 != '+' && *ecp->cp != '-')))

1057 i‡(*
e˝
->
˝
 == '-')

1058 
	`FL_SET
(
e˝
->
iÊags
, 
E_C_COUNT_NEG
);

1059 i‡(*
e˝
->
˝
 == '+')

1060 
	`FL_SET
(
e˝
->
iÊags
, 
E_C_COUNT_POS
);

1061 i‡((
ƒë
 =

1062 
	`ngë_¶⁄g
(&
…mp
, 
e˝
->
˝
, &
t
, 10)Ë!
NUM_OK
) {

1063 
	`ex_badaddr
(
•
, 
NULL
, 
A_NOTSET
, 
ƒë
);

1064 
îr
;

1066 i‡(
…mp
 =0 && *
p
 != '0') {

1067 
	`msgq
(
•
, 
M_ERR
, "083|Count mayÇot be zero");

1068 
îr
;

1070 
e˝
->
˛í
 -(
t
 -É˝->
˝
);

1071 
e˝
->
˝
 = 
t
;

1082 i‡(*
p
 == 'a') {

1083 
e˝
->
addr1
 =É˝->
addr2
;

1084 
e˝
->
addr2
.
 o
 =É˝->
addr1
. ÿ+ 
…mp
 - 1;

1086 
e˝
->
cou¡
 = 
…mp
;

1087 
	`FL_SET
(
e˝
->
iÊags
, 
E_C_COUNT
);

1090 i‡(
	`¨gv_exp2
(
•
, 
e˝
,É˝->
˝
,É˝->
˛í
))

1091 
îr
;

1092 
¨g_˙t_chk
;

1102 i‡(
	`ex_löe
(
•
, 
e˝
, &
cur
, &
ißddr
, &
tmp
))

1103 
rÁû
;

1104 i‡(
tmp
)

1105 
îr
;

1108 i‡(!
ißddr
) {

1109 
	`msgq_°r
(
•
, 
M_ERR
, 
e˝
->
˝
,

1111 
îr
;

1117 i‡(
cur
.
 o
 !0 && !
	`db_exi°
(
•
, cur.lno)) {

1118 
	`ex_badaddr
(
•
, 
NULL
, 
A_EOF
, 
NUM_OK
);

1119 
îr
;

1121 
e˝
->
löío
 = 
cur
.
 o
;

1124 i‡(
e˝
->
˛í
 != 0) {

1125 i‡(
	`¨gv_exp1
(
•
, 
e˝
,É˝->
˝
,

1126 
e˝
->
˛í
,É˝->
cmd
 =&
cmds
[
C_BANG
]))

1127 
îr
;

1128 
addr_vîify
;

1132 i‡(
	`¨gv_exp0
(
•
, 
e˝
,É˝->
˝
,É˝->
˛í
))

1133 
îr
;

1134 
addr_vîify
;

1145 
p
 = 
t
 = 
e˝
->
˝
;

1146 
e˝
->
˛í
 > 0; --e˝->˛í, ++e˝->
˝
) {

1147 
ch
 = *
e˝
->
˝
;

1148 i‡(
	`IS_ESCAPE
(
•
,

1149 
e˝
, 
ch
Ë&&É˝->
˛í
 > 1) {

1150 --
e˝
->
˛í
;

1151 *
p
++ = *++
e˝
->
˝
;

1152 } i‡(
	`isbœnk
(
ch
)) {

1153 ++
e˝
->
˝
;

1154 --
e˝
->
˛í
;

1157 *
p
++ = 
ch
;

1159 i‡(
	`¨gv_exp0
(
•
, 
e˝
, 
t
, 
p
 -Å))

1160 
îr
;

1163 ; 
e˝
->
˛í
 > 0;

1164 --
e˝
->
˛í
, ++e˝->
˝
) {

1165 
ch
 = *
e˝
->
˝
;

1166 i‡(!
	`isbœnk
(
ch
))

1169 i‡(
e˝
->
˛í
 == 0)

1170 
ußge
;

1173 
p
 = 
t
 = 
e˝
->
˝
;É˝->
˛í
 > 0;

1174 --
e˝
->
˛í
, ++e˝->
˝
, ++
p
) {

1175 
ch
 = *
e˝
->
˝
;

1176 i‡(
	`IS_ESCAPE
(
•
,

1177 
e˝
, 
ch
Ë&&É˝->
˛í
 > 1) {

1178 --
e˝
->
˛í
;

1179 *
p
 = *++
e˝
->
˝
;

1181 *
p
 = 
ch
;

1183 i‡(
	`¨gv_exp0
(
•
, 
e˝
, 
t
, 
p
 -Å))

1184 
îr
;

1185 
addr_vîify
;

1187 i‡(
	`¨gv_exp3
(
•
, 
e˝
,É˝->
˝
,É˝->
˛í
))

1188 
îr
;

1189 
¨g_˙t_chk
: i‡(*++
p
 != 'N') {

1195 
tmp
 = *
p
 - '0';

1196 i‡((*++
p
 !'o' || 
exp
->
¨gsoff
 != 0) &&

1197 
exp
->
¨gsoff
 !
tmp
)

1198 
ußge
;

1200 
addr_vîify
;

1202 
	`msgq
(
•
, 
M_ERR
,

1204 
e˝
->
cmd
->
«me
, 
	`KEY_NAME
(
•
, *
p
));

1209 ; 
e˝
->
˛í
 > 0; --ecp->clen) {

1210 
ch
 = *
e˝
->
˝
++;

1211 i‡(!
	`isbœnk
(
ch
))

1219 i‡(
e˝
->
˛í
 !0 || 
	`°Ωbrk
(
p
, "lr")) {

1220 
ußge
: 
	`msgq
(
•
, 
M_ERR
, "086|Ußge: %s", 
e˝
->
cmd
->usage);

1221 
îr
;

1233 
addr_vîify
:

1234 
e˝
->
addr˙t
) {

1244 i‡(
e˝
->
addr2
.
 o
 == 0) {

1245 i‡(!
	`F_ISSET
(
e˝
, 
E_ADDR_ZERO
) &&

1246 (
	`F_ISSET
(
•
, 
SC_EX
) ||

1247 !
	`F_ISSET
(
e˝
, 
E_USELASTCMD
))) {

1248 
	`ex_badaddr
(
•
, 
e˝
->
cmd
, 
A_ZERO
, 
NUM_OK
);

1249 
îr
;

1251 } i‡(!
	`db_exi°
(
•
, 
e˝
->
addr2
.
 o
))

1252 i‡(
	`FL_ISSET
(
e˝
->
iÊags
, 
E_C_COUNT
)) {

1253 i‡(
	`db_œ°
(
•
, &
 o
))

1254 
îr
;

1255 
e˝
->
addr2
.
 o
 =Üno;

1257 
	`ex_badaddr
(
•
, 
NULL
, 
A_EOF
, 
NUM_OK
);

1258 
îr
;

1262 i‡(
e˝
->
addr1
.
 o
 == 0) {

1263 i‡(!
	`F_ISSET
(
e˝
, 
E_ADDR_ZERO
) &&

1264 (
	`F_ISSET
(
•
, 
SC_EX
) ||

1265 !
	`F_ISSET
(
e˝
, 
E_USELASTCMD
))) {

1266 
	`ex_badaddr
(
•
, 
e˝
->
cmd
, 
A_ZERO
, 
NUM_OK
);

1267 
îr
;

1269 } i‡(!
	`db_exi°
(
•
, 
e˝
->
addr1
.
 o
)) {

1270 
	`ex_badaddr
(
•
, 
NULL
, 
A_EOF
, 
NUM_OK
);

1271 
îr
;

1289 i‡((
	`F_ISSET
(
•
, 
SC_VI
Ë|| F_ISSET(
e˝
, 
E_NOPRDEF
)) &&

1290 
	`F_ISSET
(
e˝
, 
E_USELASTCMD
Ë&& 
vi_addªss
 == 0) {

1291 
e˝
->
addr˙t
) {

1293 i‡(
•
->
 o
 !=

1294 (
e˝
->
addr2
.
 o
 ?Écp->addr2.lno : 1)) {

1295 
•
->
 o
 =

1296 
e˝
->
addr2
.
 o
 ?Écp->addr2.lno : 1;

1297 
•
->
˙o
 = 0;

1298 ()
	`n⁄bœnk
(
•
, sp->
 o
, &•->
˙o
);

1302 i‡(
•
->
 o
 !=

1303 (
e˝
->
addr1
.
 o
 ?Écp->addr1.lno : 1)) {

1304 
•
->
 o
 =

1305 
e˝
->
addr1
.
 o
 ?Écp->addr1.lno : 1;

1306 
•
->
˙o
 = 0;

1307 ()
	`n⁄bœnk
(
•
, sp->
 o
, &•->
˙o
);

1311 
e˝
->
˝
 =É˝->
ßve_cmd
;

1312 
e˝
->
˛í
 =É˝->
ßve_cmdÀn
;

1313 
lo›
;

1321 i‡(
	`F_ISSET
(
e˝
, 
E_ABSMARK
)) {

1322 
cur
.
 o
 = 
•
->lno;

1323 
cur
.
˙o
 = 
•
->cno;

1324 
	`F_CLR
(
e˝
, 
E_ABSMARK
);

1325 i‡(
	`m¨k_£t
(
•
, 
ABSMARK1
, &
cur
, 1))

1326 
îr
;

1329 #i‡
	`deföed
(
DEBUG
Ë&& deföed(
COMLOG
)

1330 
	`ex_comlog
(
•
, 
e˝
);

1333 i‡(
	`F_ISSET
(
•
, 
SC_EX
))

1334 ++
•
->
c˙t
;

1340 i‡(
•
->
ï
 !
NULL
 && !
	`F_ISSET
(•, 
SC_EX_GLOBAL
))

1341 ()
	`log_curs‹
(
•
);

1358 i‡(
	`F_ISSET
(
e˝
, 
E_NRSEP
)) {

1359 i‡(
•
->
ï
 !
NULL
 &&

1360 
	`F_ISSET
(
•
, 
SC_EX
Ë&& !F_ISSET(
gp
, 
G_SCRIPTED
) &&

1361 (
	`F_ISSET
(
e˝
, 
E_USELASTCMD
Ë||É˝->
cmd
 =&
cmds
[
C_SCROLL
]))

1362 
gp
->
	`s¸_ex_adju°
(
•
, 
EX_TERM_SCROLL
);

1363 
	`F_CLR
(
e˝
, 
E_NRSEP
);

1372 i‡(
e˝
->
cmd
->
	`‚
(
•
,É˝Ë|| 
	`INTERRUPTED
(sp)) {

1373 i‡(
	`F_ISSET
(
gp
, 
G_SCRIPTED
))

1374 
	`F_SET
(
•
, 
SC_EXIT_FORCE
);

1375 
îr
;

1378 #ifde‡
DEBUG


1380 i‡(
	`F_ISSET
(
gp
, 
G_TMP_INUSE
)) {

1381 
	`F_CLR
(
gp
, 
G_TMP_INUSE
);

1382 
	`msgq
(
•
, 
M_ERR
, "087|%s:Åemporary bufferÇotÑeleased",

1383 
e˝
->
cmd
->
«me
);

1397 i‡(
	`F_ISSET
(
•
, 
SC_EX
))

1398 
	`mod_Ωt
(
•
);

1411 i‡(
•
->
ï
 !
NULL
 && 
e˝
->
Êagoff
) {

1412 i‡(
e˝
->
Êagoff
 < 0) {

1413 i‡(
•
->
 o
 <-
e˝
->
Êagoff
) {

1414 
	`msgq
(
•
, 
M_ERR
,

1416 
îr
;

1419 i‡(!
	`NPFITS
(
MAX_REC_NUMBER
, 
•
->
 o
, 
e˝
->
Êagoff
)) {

1420 
	`ex_badaddr
(
•
, 
NULL
, 
A_NOTSET
, 
NUM_OVER
);

1421 
îr
;

1423 i‡(!
	`db_exi°
(
•
, sp->
 o
 + 
e˝
->
Êagoff
)) {

1424 
	`msgq
(
•
, 
M_ERR
,

1426 
îr
;

1429 
•
->
 o
 +
e˝
->
Êagoff
;

1438 i‡(
	`F_ISSET
(
•
, 
SC_EX
Ë&& sp->
ï
 !
NULL
 && sp->
 o
 != 0) {

1443 i‡(
	`FL_ISSET
(
e˝
->
iÊags
, 
E_CLRFLAG
))

1444 
	`FL_CLR
(
e˝
->
iÊags
, 
E_C_HASH
 | 
E_C_LIST
 | 
E_C_PRINT
);

1447 i‡(
	`F_ISSET
(
e˝
, 
E_OPTNUM
))

1448 
	`FL_CLR
(
e˝
->
iÊags
, 
E_C_HASH
);

1455 
	`LF_INIT
(
	`FL_ISSET
(
e˝
->
iÊags
, 
E_C_HASH
 | 
E_C_LIST
 | 
E_C_PRINT
));

1456 i‡(!
	`LF_ISSET
(
E_C_HASH
 | 
E_C_LIST
 | 
E_C_PRINT
 | 
E_NOAUTO
) &&

1457 !
	`F_ISSET
(
•
, 
SC_EX_GLOBAL
) &&

1458 
	`O_ISSET
(
•
, 
O_AUTOPRINT
Ë&& 
	`F_ISSET
(
e˝
, 
E_AUTOPRINT
))

1459 
	`LF_INIT
(
E_C_PRINT
);

1461 i‡(
	`LF_ISSET
(
E_C_HASH
 | 
E_C_LIST
 | 
E_C_PRINT
)) {

1462 
cur
.
 o
 = 
•
->lno;

1463 
cur
.
˙o
 = 0;

1464 ()
	`ex_¥öt
(
•
, 
e˝
, &
cur
, &cur, 
Êags
);

1483 i‡(
¨g1_Àn
 != 0) {

1489 i‡(
	`IS_ESCAPE
(
•
, 
e˝
, 
¨g1
[
¨g1_Àn
 - 1])) {

1490 *--
e˝
->
ßve_cmd
 = 
CH_LITERAL
;

1491 ++
e˝
->
ßve_cmdÀn
;

1494 
e˝
->
ßve_cmd
 -
¨g1_Àn
;

1495 
e˝
->
ßve_cmdÀn
 +
¨g1_Àn
;

1496 
	`mem˝y
(
e˝
->
ßve_cmd
, 
¨g1
, 
¨g1_Àn
);

1506 
	`F_SET
(
e˝
, 
E_MOVETOEND
);

1510 
e˝
->
˝
 =É˝->
ßve_cmd
;

1511 
e˝
->
˛í
 =É˝->
ßve_cmdÀn
;

1528 i‡(
	`F_ISSET
(
•
, 
SC_EXIT
 | 
SC_EXIT_FORCE
 | 
SC_FSWITCH
 | 
SC_SSWITCH
)) {

1529 
©_found
 = 
gv_found
 = 0;

1530 
e˝
 = 
•
->
gp
->
ecq
.
lh_fú°
;

1531 
e˝
 !
NULL
;É˝ =É˝->
q
.
À_√xt
)

1532 
e˝
->
agv_Êags
) {

1534 
AGV_AT_NORANGE
:

1536 
AGV_AT
:

1537 i‡(!
©_found
) {

1538 
©_found
 = 1;

1539 
	`msgq
(
•
, 
M_ERR
,

1543 
AGV_GLOBAL
:

1544 
AGV_V
:

1545 i‡(!
gv_found
) {

1546 
gv_found
 = 1;

1547 
	`msgq
(
•
, 
M_ERR
,

1552 
	`ab‹t
();

1554 i‡(
©_found
 || 
gv_found
)

1555 
disˇrd
;

1556 i‡(
	`F_ISSET
(
•
, 
SC_EXIT
 | 
SC_EXIT_FORCE
 | 
SC_SSWITCH
))

1557 
rsuc˚ss
;

1560 
lo›
;

1563 
îr
:

1571 i‡(
e˝
->
ßve_cmdÀn
 == 0)

1572 ; 
e˝
->
˛í
; --ecp->clen) {

1573 
ch
 = *
e˝
->
˝
++;

1574 i‡(
	`IS_ESCAPE
(
•
, 
e˝
, 
ch
Ë&&É˝->
˛í
 > 1) {

1575 --
e˝
->
˛í
;

1576 ++
e˝
->
˝
;

1577 } i‡(
ch
 == '\n' || ch == '|') {

1578 i‡(
e˝
->
˛í
 > 1)

1579 
e˝
->
ßve_cmdÀn
 = 1;

1583 i‡(
e˝
->
ßve_cmdÀn
 !0 || 
gp
->
ecq
.
lh_fú°
 !&gp->
excmd
) {

1584 
disˇrd
: 
	`msgq
(
•
, 
M_BERR
,

1586 
	`ex_disˇrd
(
•
);

1588 i‡(
	`v_evít_Êush
(
•
, 
CH_MAPPED
))

1589 
	`msgq
(
•
, 
M_BERR
,

1592 
rÁû
: 
tmp
 = 1;

1594 
rsuc˚ss
: 
tmp
 = 0;

1597 
gp
->
if_«me
 = 
NULL
;

1600 
	`F_CLR
(
•
, 
SC_EX_GLOBAL
);

1602  (
tmp
);

1603 
	}
}

1612 
	$ex_ønge
(
•
, 
e˝
, 
îΩ
)

1613 
SCR
 *
•
;

1614 
EXCMD
 *
e˝
;

1615 *
îΩ
;

1617 íum { 
ADDR_FOUND
, 
ADDR_NEED
, 
ADDR_NONE
 } 
addr
;

1618 
GS
 *
gp
;

1619 
EX_PRIVATE
 *
exp
;

1620 
MARK
 
m
;

1621 
ißddr
;

1623 *
îΩ
 = 0;

1646 
gp
 = 
•
->gp;

1647 
exp
 = 
	`EXP
(
•
);

1648 
addr
 = 
ADDR_NONE
, 
e˝
->
addr˙t
 = 0;É˝->
˛í
 > 0;)

1649 *
e˝
->
˝
) {

1652 i‡(
	`F_ISSET
(
e˝
, 
E_VISEARCH
))

1653 
ªt
;

1656 i‡(
•
->
ï
 =
NULL
) {

1657 
	`ex_badaddr
(
•
, 
NULL
, 
A_EMPTY
, 
NUM_OK
);

1658 *
îΩ
 = 1;

1671 i‡(
addr
 =
ADDR_FOUND
) {

1672 
	`ex_badaddr
(
•
, 
NULL
, 
A_COMBO
, 
NUM_OK
);

1673 *
îΩ
 = 1;

1676 i‡(
	`db_œ°
(
•
, &
e˝
->
addr2
.
 o
))

1678 
e˝
->
addr1
.
 o
 =É˝->
addr2
.lno == 0 ? 0 : 1;

1679 
e˝
->
addr1
.
˙o
 =É˝->
addr2
.cno = 0;

1680 
e˝
->
addr˙t
 = 2;

1681 
addr
 = 
ADDR_FOUND
;

1682 ++
e˝
->
˝
;

1683 --
e˝
->
˛í
;

1687 i‡(
	`F_ISSET
(
e˝
, 
E_VISEARCH
))

1688 
ªt
;

1691 i‡(
•
->
ï
 =
NULL
) {

1692 
	`ex_badaddr
(
•
, 
NULL
, 
A_EMPTY
, 
NUM_OK
);

1693 *
îΩ
 = 1;

1696 i‡(
addr
 !
ADDR_FOUND
)

1697 
e˝
->
addr˙t
) {

1699 
e˝
->
addr1
.
 o
 = 
•
->lno;

1700 
e˝
->
addr1
.
˙o
 = 
•
->cno;

1701 
e˝
->
addr˙t
 = 1;

1704 
e˝
->
addr1
 =É˝->
addr2
;

1707 
e˝
->
addr2
.
 o
 = 
•
->lno;

1708 
e˝
->
addr2
.
˙o
 = 
•
->cno;

1709 
e˝
->
addr˙t
 = 2;

1712 i‡(*
e˝
->
˝
 == ';')

1713 
e˝
->
addr˙t
) {

1715 
	`ab‹t
();

1718 
•
->
 o
 = 
e˝
->
addr1
.lno;

1719 
•
->
˙o
 = 
e˝
->
addr1
.cno;

1722 
•
->
 o
 = 
e˝
->
addr2
.lno;

1723 
•
->
˙o
 = 
e˝
->
addr2
.cno;

1726 
addr
 = 
ADDR_NEED
;

1730 ++
e˝
->
˝
;

1731 --
e˝
->
˛í
;

1735 i‡(
	`ex_löe
(
•
, 
e˝
, &
m
, &
ißddr
, 
îΩ
))

1737 i‡(*
îΩ
)

1739 i‡(!
ißddr
)

1740 
ªt
;

1741 i‡(
addr
 =
ADDR_FOUND
) {

1742 
	`ex_badaddr
(
•
, 
NULL
, 
A_COMBO
, 
NUM_OK
);

1743 *
îΩ
 = 1;

1746 
e˝
->
addr˙t
) {

1748 
e˝
->
addr1
 = 
m
;

1749 
e˝
->
addr˙t
 = 1;

1752 
e˝
->
addr2
 = 
m
;

1753 
e˝
->
addr˙t
 = 2;

1756 
e˝
->
addr1
 =É˝->
addr2
;

1757 
e˝
->
addr2
 = 
m
;

1760 
addr
 = 
ADDR_FOUND
;

1769 
ªt
: i‡(
	`F_ISSET
(
e˝
, 
E_VISEARCH
))

1772 i‡(
addr
 =
ADDR_NEED
)

1773 
e˝
->
addr˙t
) {

1775 
e˝
->
addr1
.
 o
 = 
•
->lno;

1776 
e˝
->
addr1
.
˙o
 = 
•
->cno;

1777 
e˝
->
addr˙t
 = 1;

1780 
e˝
->
addr1
 =É˝->
addr2
;

1783 
e˝
->
addr2
.
 o
 = 
•
->lno;

1784 
e˝
->
addr2
.
˙o
 = 
•
->cno;

1785 
e˝
->
addr˙t
 = 2;

1789 i‡(
e˝
->
addr˙t
 =2 &&É˝->
addr2
.
 o
 <É˝->
addr1
.lno) {

1790 
	`msgq
(
•
, 
M_ERR
,

1792 *
îΩ
 = 1;

1795 
	}
}

1814 
	$ex_löe
(
•
, 
e˝
, 
mp
, 
ißddΩ
, 
îΩ
)

1815 
SCR
 *
•
;

1816 
EXCMD
 *
e˝
;

1817 
MARK
 *
mp
;

1818 *
ißddΩ
, *
îΩ
;

1820 
ƒesu…
 
ƒë
;

1821 
EX_PRIVATE
 *
exp
;

1822 
GS
 *
gp
;

1823 
tŸÆ
, 
vÆ
;

1824 
i¢eg
;

1825 (*
sf
Ë
	`__P
((
SCR
 *, 
MARK
 *, MARK *, *, 
size_t
, **, 
u_öt
));

1826 *
ídp
;

1828 
gp
 = 
•
->gp;

1829 
exp
 = 
	`EXP
(
•
);

1831 *
ißddΩ
 = *
îΩ
 = 0;

1832 
	`F_CLR
(
e˝
, 
E_DELTA
);

1835 i‡(
•
->
ï
 =
NULL
 && 
	`°rchr
("$0123456789'\\/?.+-^", *
e˝
->
˝
)) {

1836 
	`ex_badaddr
(
•
, 
NULL
, 
A_EMPTY
, 
NUM_OK
);

1837 *
îΩ
 = 1;

1841 *
e˝
->
˝
) {

1843 *
ißddΩ
 = 1;

1844 
	`F_SET
(
e˝
, 
E_ABSMARK
);

1846 
mp
->
˙o
 = 0;

1847 i‡(
	`db_œ°
(
•
, &
mp
->
 o
))

1849 ++
e˝
->
˝
;

1850 --
e˝
->
˛í
;

1854 *
ißddΩ
 = 1;

1855 
	`F_SET
(
e˝
, 
E_ABSMARK
);

1857 i‡((
ƒë
 = 
	`ngë_¶⁄g
(&
vÆ
, 
e˝
->
˝
, &
ídp
, 10)Ë!
NUM_OK
) {

1858 
	`ex_badaddr
(
•
, 
NULL
, 
A_NOTSET
, 
ƒë
);

1859 *
îΩ
 = 1;

1862 i‡(!
	`NPFITS
(
MAX_REC_NUMBER
, 0, 
vÆ
)) {

1863 
	`ex_badaddr
(
•
, 
NULL
, 
A_NOTSET
, 
NUM_OVER
);

1864 *
îΩ
 = 1;

1867 
mp
->
 o
 = 
vÆ
;

1868 
mp
->
˙o
 = 0;

1869 
e˝
->
˛í
 -(
ídp
 -É˝->
˝
);

1870 
e˝
->
˝
 = 
ídp
;

1873 *
ißddΩ
 = 1;

1874 
	`F_SET
(
e˝
, 
E_ABSMARK
);

1876 i‡(
e˝
->
˛í
 == 1) {

1877 
	`msgq
(
•
, 
M_ERR
, "095|No markÇame supplied");

1878 *
îΩ
 = 1;

1881 i‡(
	`m¨k_gë
(
•
, 
e˝
->
˝
[1], 
mp
, 
M_ERR
)) {

1882 *
îΩ
 = 1;

1885 
e˝
->
˝
 += 2;

1886 
e˝
->
˛í
 -= 2;

1895 i‡(
e˝
->
˛í
 < 2 ||

1896 
e˝
->
˝
[1] != '/' &&Écp->cp[1] != '?') {

1897 
	`msgq
(
•
, 
M_ERR
, "096|\\Çot followed by / or ?");

1898 *
îΩ
 = 1;

1901 ++
e˝
->
˝
;

1902 --
e˝
->
˛í
;

1903 
sf
 = 
e˝
->
˝
[0] ='/' ? 
f_£¨ch
 : 
b_£¨ch
;

1904 
£¨ch
;

1906 
sf
 = 
f_£¨ch
;

1907 
£¨ch
;

1909 
sf
 = 
b_£¨ch
;

1911 
£¨ch
: 
mp
->
 o
 = 
•
->lno;

1912 
mp
->
˙o
 = 
•
->cno;

1913 i‡(
	`sf
(
•
, 
mp
, mp, 
e˝
->
˝
,É˝->
˛í
, &
ídp
,

1914 
SEARCH_MSG
 | 
SEARCH_PARSE
 | 
SEARCH_SET
 |

1915 (
	`F_ISSET
(
e˝
, 
E_SEARCH_WMSG
Ë? 
SEARCH_WMSG
 : 0))) {

1916 *
îΩ
 = 1;

1921 
e˝
->
˛í
 -(
ídp
 -É˝->
˝
);

1922 
e˝
->
˝
 = 
ídp
;

1924 *
ißddΩ
 = 1;

1925 
	`F_SET
(
e˝
, 
E_ABSMARK
);

1928 *
ißddΩ
 = 1;

1929 
mp
->
˙o
 = 
•
->cno;

1932 i‡(
•
->
 o
 == 1) {

1933 i‡(
	`db_œ°
(
•
, &
mp
->
 o
))

1935 i‡(
mp
->
 o
 != 0)

1936 
mp
->
 o
 = 1;

1938 
mp
->
 o
 = 
•
->lno;

1946 i‡(
e˝
->
˛í
 > 1 && 
	`isdigô
”˝->
˝
[1]))

1947 *
e˝
->
˝
 = '+';

1949 ++
e˝
->
˝
;

1950 --
e˝
->
˛í
;

1956 ; 
e˝
->
˛í
 > 0 &&

1957 
	`isbœnk
(
e˝
->
˝
[0]); ++e˝->˝, --e˝->
˛í
);

1963 
tŸÆ
 = 0;

1964 i‡(
e˝
->
˛í
 !0 && (
	`isdigô
”˝->
˝
[0]) ||

1965 
e˝
->
˝
[0] == '+' ||Écp->cp[0] == '-' ||

1966 
e˝
->
˝
[0] == '^')) {

1967 i‡(!*
ißddΩ
) {

1968 *
ißddΩ
 = 1;

1969 
mp
->
 o
 = 
•
->lno;

1970 
mp
->
˙o
 = 
•
->cno;

1998 
	`F_SET
(
e˝
, 
E_DELTA
);

2000 ; 
e˝
->
˛í
 > 0 && 
	`isbœnk
”˝->
˝
[0]);

2001 ++
e˝
->
˝
, --e˝->
˛í
);

2002 i‡(
e˝
->
˛í
 =0 || !
	`isdigô
”˝->
˝
[0]) &&

2003 
e˝
->
˝
[0] != '+' &&Écp->cp[0] != '-' &&

2004 
e˝
->
˝
[0] != '^')

2006 i‡(!
	`isdigô
(
e˝
->
˝
[0]) &&

2007 !
	`isdigô
(
e˝
->
˝
[1])) {

2008 
tŸÆ
 +
e˝
->
˝
[0] == '+' ? 1 : -1;

2009 --
e˝
->
˛í
;

2010 ++
e˝
->
˝
;

2012 i‡(
e˝
->
˝
[0] == '-' ||

2013 
e˝
->
˝
[0] == '^') {

2014 ++
e˝
->
˝
;

2015 --
e˝
->
˛í
;

2016 
i¢eg
 = 1;

2018 
i¢eg
 = 0;

2021 i‡((
ƒë
 = 
	`ngë_¶⁄g
(&
vÆ
,

2022 
e˝
->
˝
, &
ídp
, 10)Ë!
NUM_OK
 ||

2023 (
ƒë
 = 
	`NADD_SLONG
(
•
,

2024 
tŸÆ
, 
vÆ
)Ë!
NUM_OK
) {

2025 
	`ex_badaddr
(
•
, 
NULL
, 
A_NOTSET
, 
ƒë
);

2026 *
îΩ
 = 1;

2029 
tŸÆ
 +
i¢eg
 ? -
vÆ
 : val;

2030 
e˝
->
˛í
 -(
ídp
 -É˝->
˝
);

2031 
e˝
->
˝
 = 
ídp
;

2040 i‡(*
ißddΩ
 && 
tŸÆ
 != 0) {

2041 i‡(
tŸÆ
 < 0) {

2042 i‡(-
tŸÆ
 > 
mp
->
 o
) {

2043 
	`msgq
(
•
, 
M_ERR
,

2045 *
îΩ
 = 1;

2049 i‡(!
	`NPFITS
(
MAX_REC_NUMBER
, 
mp
->
 o
, 
tŸÆ
)) {

2050 
	`ex_badaddr
(
•
, 
NULL
, 
A_NOTSET
, 
NUM_OVER
);

2051 *
îΩ
 = 1;

2054 
mp
->
 o
 +
tŸÆ
;

2057 
	}
}

2065 
	$ex_lﬂd
(
•
)

2066 
SCR
 *
•
;

2068 
GS
 *
gp
;

2069 
EXCMD
 *
e˝
;

2070 
RANGE
 *
Ω
;

2072 
	`F_CLR
(
•
, 
SC_EX_GLOBAL
);

2078 
gp
 = 
•
->gp;;) {

2084 i‡((
e˝
 = 
gp
->
ecq
.
lh_fú°
Ë=&gp->
excmd
) {

2085 i‡(
	`F_ISSET
(
e˝
, 
E_NAMEDISCARD
)) {

2086 
	`‰ì
(
e˝
->
if_«me
);

2087 
e˝
->
if_«me
 = 
NULL
;

2099 i‡(
e˝
->
˛í
 != 0)

2106 i‡(
	`FL_ISSET
(
e˝
->
agv_Êags
, 
AGV_ALL
)) {

2108 (
Ω
 = 
e˝
->
rq
.
cqh_fú°
) != (*)&ecp->rq)

2109 i‡(
Ω
->
°¨t
 >Ñp->
°›
) {

2110 
	`CIRCLEQ_REMOVE
(&
e˝
->
rq
, 
Ω
, 
q
);

2111 
	`‰ì
(
Ω
);

2116 i‡(
Ω
 !(*)&
e˝
->
rq
)

2120 i‡(
	`FL_ISSET
(
e˝
->
agv_Êags
,

2121 
AGV_GLOBAL
 | 
AGV_V
Ë&& 
e˝
->
ønge_ o
 !
OOBLNO
)

2122 i‡(
	`db_exi°
(
•
, 
e˝
->
ønge_ o
))

2123 
•
->
 o
 = 
e˝
->
ønge_ o
;

2125 i‡(
	`db_œ°
(
•
, &•->
 o
))

2127 i‡(
•
->
 o
 == 0)

2128 
•
->
 o
 = 1;

2130 
	`‰ì
(
e˝
->
o_˝
);

2134 
	`LIST_REMOVE
(
e˝
, 
q
);

2135 
	`‰ì
(
e˝
);

2144 
e˝
->
˝
 =É˝->
o_˝
;

2145 
	`mem˝y
(
e˝
->
˝
,É˝->˝ +É˝->
o_˛í
,Écp->o_clen);

2146 
e˝
->
˛í
 =É˝->
o_˛í
;

2147 
e˝
->
ønge_ o
 = 
•
->
 o
 = 
Ω
->
°¨t
++;

2149 i‡(
	`FL_ISSET
(
e˝
->
agv_Êags
, 
AGV_GLOBAL
 | 
AGV_V
))

2150 
	`F_SET
(
•
, 
SC_EX_GLOBAL
);

2152 
	}
}

2159 
	$ex_disˇrd
(
•
)

2160 
SCR
 *
•
;

2162 
GS
 *
gp
;

2163 
EXCMD
 *
e˝
;

2164 
RANGE
 *
Ω
;

2170 
gp
 = 
•
->gp; (
e˝
 = gp->
ecq
.
lh_fú°
Ë!&gp->
excmd
;) {

2171 i‡(
	`FL_ISSET
(
e˝
->
agv_Êags
, 
AGV_ALL
)) {

2172 (
Ω
 = 
e˝
->
rq
.
cqh_fú°
) != (*)&ecp->rq) {

2173 
	`CIRCLEQ_REMOVE
(&
e˝
->
rq
, 
Ω
, 
q
);

2174 
	`‰ì
(
Ω
);

2176 
	`‰ì
(
e˝
->
o_˝
);

2178 
	`LIST_REMOVE
(
e˝
, 
q
);

2179 
	`‰ì
(
e˝
);

2181 
gp
->
ecq
.
lh_fú°
->
˛í
 = 0;

2183 
	}
}

2190 
	$ex_unknown
(
•
, 
cmd
, 
Àn
)

2191 
SCR
 *
•
;

2192 *
cmd
;

2193 
size_t
 
Àn
;

2195 
size_t
 
bÀn
;

2196 *
bp
;

2198 
	`GET_SPACE_GOTO
(
•
, 
bp
, 
bÀn
, 
Àn
 + 1);

2199 
bp
[
Àn
] = '\0';

2200 
	`mem˝y
(
bp
, 
cmd
, 
Àn
);

2201 
	`msgq_°r
(
•
, 
M_ERR
, 
bp
, "098|The %s command is unknown");

2202 
	`FREE_SPACE
(
•
, 
bp
, 
bÀn
);

2204 
Æloc_îr
:

2206 
	}
}

2217 
	$ex_is_abbªv
(
«me
, 
Àn
)

2218 *
«me
;

2219 
size_t
 
Àn
;

2221 
EXCMDLIST
 c⁄° *
˝
;

2223  ((
˝
 = 
	`ex_comm_£¨ch
(
«me
, 
Àn
)Ë!
NULL
 &&

2224 (
˝
 =&
cmds
[
C_ABBR
] || c∞=&cmds[
C_UNABBREVIATE
]));

2225 
	}
}

2236 
	$ex_is_unm≠
(
«me
, 
Àn
)

2237 *
«me
;

2238 
size_t
 
Àn
;

2240 
EXCMDLIST
 c⁄° *
˝
;

2246 i‡(
«me
[
Àn
 - 1] != '!')

2248 --
Àn
;

2249  ((
˝
 = 
	`ex_comm_£¨ch
(
«me
, 
Àn
)Ë!
NULL
 &&

2250 
˝
 =&
cmds
[
C_UNMAP
]);

2251 
	}
}

2257 
EXCMDLIST
 const *

2258 
	$ex_comm_£¨ch
(
«me
, 
Àn
)

2259 *
«me
;

2260 
size_t
 
Àn
;

2262 
EXCMDLIST
 c⁄° *
˝
;

2264 
˝
 = 
cmds
; cp->
«me
 !
NULL
; ++cp) {

2265 i‡(
˝
->
«me
[0] >Çame[0])

2266  (
NULL
);

2267 i‡(
˝
->
«me
[0] !=Çame[0])

2269 i‡(!
	`memcmp
(
«me
, 
˝
->«me, 
Àn
))

2270  (
˝
);

2272  (
NULL
);

2273 
	}
}

2283 
	$ex_badaddr
(
•
, 
˝
, 
ba
, 
ƒë
)

2284 
SCR
 *
•
;

2285 
EXCMDLIST
 c⁄° *
˝
;

2286 
badaddr
 
ba
;

2287 
ƒesu…
 
ƒë
;

2289 
ª˙o_t
 
 o
;

2291 
ƒë
) {

2292 
NUM_OK
:

2294 
NUM_ERR
:

2295 
	`msgq
(
•
, 
M_SYSERR
, 
NULL
);

2297 
NUM_OVER
:

2298 
	`msgq
(
•
, 
M_ERR
, "099|Address value overflow");

2300 
NUM_UNDER
:

2301 
	`msgq
(
•
, 
M_ERR
, "100|Address value underflow");

2309 i‡(
•
->
ï
 =
NULL
) {

2310 
	`ex_emsg
(
•
, 
˝
->
«me
, 
EXM_NOFILEYET
);

2314 
ba
) {

2315 
A_COMBO
:

2316 
	`msgq
(
•
, 
M_ERR
, "101|Illegaláddress combination");

2318 
A_EOF
:

2319 i‡(
	`db_œ°
(
•
, &
 o
))

2321 i‡(
 o
 != 0) {

2322 
	`msgq
(
•
, 
M_ERR
,

2324 
 o
);

2328 
A_EMPTY
:

2329 
	`msgq
(
•
, 
M_ERR
, "103|Illegaláddress:Åhe file isÉmpty");

2331 
A_NOTSET
:

2332 
	`ab‹t
();

2334 
A_ZERO
:

2335 
	`msgq
(
•
, 
M_ERR
,

2337 
˝
->
«me
);

2341 
	}
}

2343 #i‡
deföed
(
DEBUG
Ë&& deföed(
COMLOG
)

2349 
	$ex_comlog
(
•
, 
e˝
)

2350 
SCR
 *
•
;

2351 
EXCMD
 *
e˝
;

2353 
	`TRACE
(
•
, "ecmd: %s", 
e˝
->
cmd
->
«me
);

2354 i‡(
e˝
->
addr˙t
 > 0) {

2355 
	`TRACE
(
•
, "á1 %d", 
e˝
->
addr1
.
 o
);

2356 i‡(
e˝
->
addr˙t
 > 1)

2357 
	`TRACE
(
•
, "á2: %d", 
e˝
->
addr2
.
 o
);

2359 i‡(
e˝
->
löío
)

2360 
	`TRACE
(
•
, "Üöê%d", 
e˝
->
löío
);

2361 i‡(
e˝
->
Êags
)

2362 
	`TRACE
(
•
, " fœg†0x%x", 
e˝
->
Êags
);

2363 i‡(
	`F_ISSET
(&
exc
, 
E_BUFFER
))

2364 
	`TRACE
(
•
, " buf„∏%c", 
e˝
->
buf„r
);

2365 i‡(
e˝
->
¨gc
)

2366 
˙t
 = 0; c¡ < 
e˝
->
¨gc
; ++cnt)

2367 
	`TRACE
(
•
, "árg %d: {%s}", 
˙t
, 
e˝
->
¨gv
[˙t]->
bp
);

2368 
	`TRACE
(
•
, "\n");

2369 
	}
}

	@ex/ex.h

12 
	#PROMPTCHAR
 ':'

	)

14 
	s_excmdli°
 {

15 *
	m«me
;

16 (*
	m‚
Ë
__P
((
SCR
 *, 
EXCMD
 *));

18 
	#E_ADDR1
 0x00000001

	)

19 
	#E_ADDR2
 0x00000002

	)

20 
	#E_ADDR2_ALL
 0x00000004

	)

21 
	#E_ADDR2_NONE
 0x00000008

	)

22 
	#E_ADDR_ZERO
 0x00000010

	)

23 
	#E_ADDR_ZERODEF
 0x00000020

	)

24 
	#E_AUTOPRINT
 0x00000040

	)

25 
	#E_CLRFLAG
 0x00000080

	)

26 
	#E_NEWSCREEN
 0x00000100

	)

27 
	#E_SECURE
 0x00000200

	)

28 
	#E_VIONLY
 0x00000400

	)

29 
	#__INUSE1
 0xfffff800

	)

30 
u_öt16_t
 
	mÊags
;

32 *
	msy¡ax
;

33 *
	mußge
;

34 *
	mhñp
;

35 } 
	tEXCMDLIST
;

37 
	#MAXCMDNAMELEN
 12

	)

38 
EXCMDLIST
 c⁄° 
cmds
[];

48 
	#IS_ESCAPE
(
•
, 
cmdp
, 
ch
) \

49 (
	`F_ISSET
(
cmdp
, 
E_VLITONLY
) ? \

50 (
ch
Ë=
CH_LITERAL
 : 
	`KEY_VAL
(
•
, chË=
K_VLNEXT
)

	)

57 
	#NEEDFILE
(
•
, 
cmdp
) { \

58 i‡((
•
)->
ï
 =
NULL
) { \

59 
	`ex_emsg
(
•
, (
cmdp
)->
cmd
->
«me
, 
EXM_NOFILEYET
); \

62 }

	)

65 
_ønge
 
	tRANGE
;

66 
	s_ønge
 {

67 
CIRCLEQ_ENTRY
(
_ønge
Ë
	mq
;

68 
ª˙o_t
 
	m°¨t
, 
	m°›
;

72 
	s_excmd
 {

73 
LIST_ENTRY
(
_excmd
Ë
	mq
;

75 *
	mif_«me
;

76 
ª˙o_t
 
	mif_ o
;

79 
	#CLEAR_EX_PARSER
(
cmdp
) \

80 
	`mem£t
(&((
cmdp
)->
˝
), 0, ((*)&(cmdp)->
Êags
 - \

81 (*)&((
cmdp
)->
˝
)Ë+ ((cmdp)->
Êags
))

	)

83 *
	m˝
;

84 
size_t
 
	m˛í
;

86 *
	mßve_cmd
;

87 
size_t
 
	mßve_cmdÀn
;

89 
EXCMDLIST
 c⁄° *
	mcmd
;

90 
EXCMDLIST
 
	mrcmd
;

92 
CIRCLEQ_HEAD
(
_rh
, 
_ønge
Ë
	mrq
;

93 
ª˙o_t
 
	mønge_ o
;

94 *
	mo_˝
;

95 
size_t
 
	mo_˛í
;

96 
	#AGV_AT
 0x01

	)

97 
	#AGV_AT_NORANGE
 0x02

	)

98 
	#AGV_GLOBAL
 0x04

	)

99 
	#AGV_V
 0x08

	)

100 
	#AGV_ALL
 (
AGV_AT
 | 
AGV_AT_NORANGE
 | 
AGV_GLOBAL
 | 
AGV_V
)

	)

101 
u_öt8_t
 
	magv_Êags
;

104 
	#CLEAR_EX_CMD
(
cmdp
) { \

105 
u_öt32_t
 
L__f
 = 
	`F_ISSET
(
cmdp
, 
E_PRESERVE
); \

106 
	`mem£t
(&((
cmdp
)->
buf„r
), 0, ((*)&(cmdp)->
Êags
 - \

107 (*)&((
cmdp
)->
buf„r
)Ë+ ((cmdp)->
Êags
)); \

108 
	`F_SET
(
cmdp
, 
L__f
); \

109 }

	)

111 
CHAR_T
 
	mbuf„r
;

112 
ª˙o_t
 
	mlöío
;

113 
	mcou¡
;

114 
	mÊagoff
;

115 
	maddr˙t
;

116 
MARK
 
	maddr1
;

117 
MARK
 
	maddr2
;

118 
ARGS
 **
	m¨gv
;

119 
	m¨gc
;

121 
	#E_C_BUFFER
 0x00001

	)

122 
	#E_C_CARAT
 0x00002

	)

123 
	#E_C_COUNT
 0x00004

	)

124 
	#E_C_COUNT_NEG
 0x00008

	)

125 
	#E_C_COUNT_POS
 0x00010

	)

126 
	#E_C_DASH
 0x00020

	)

127 
	#E_C_DOT
 0x00040

	)

128 
	#E_C_EQUAL
 0x00080

	)

129 
	#E_C_FORCE
 0x00100

	)

130 
	#E_C_HASH
 0x00200

	)

131 
	#E_C_LIST
 0x00400

	)

132 
	#E_C_PLUS
 0x00800

	)

133 
	#E_C_PRINT
 0x01000

	)

134 
u_öt16_t
 
	miÊags
;

136 
	#__INUSE2
 0x000004f‡

	)

137 
	#E_BLIGNORE
 0x00000800

	)

138 
	#E_NAMEDISCARD
 0x00001000

	)

139 
	#E_NOAUTO
 0x00002000

	)

140 
	#E_NOPRDEF
 0x00004000

	)

141 
	#E_NRSEP
 0x00008000

	)

142 
	#E_OPTNUM
 0x00010000

	)

143 
	#E_VLITONLY
 0x00020000

	)

144 
	#E_PRESERVE
 0x0003f800

	)

146 
	#E_ABSMARK
 0x00040000

	)

147 
	#E_ADDR_DEF
 0x00080000

	)

148 
	#E_DELTA
 0x00100000

	)

149 
	#E_MODIFY
 0x00200000

	)

150 
	#E_MOVETOEND
 0x00400000

	)

151 
	#E_NEWLINE
 0x00800000

	)

152 
	#E_SEARCH_WMSG
 0x01000000

	)

153 
	#E_USELASTCMD
 0x02000000

	)

154 
	#E_VISEARCH
 0x04000000

	)

155 
u_öt32_t
 
	mÊags
;

159 
	s_ex_¥iv©e
 {

160 
CIRCLEQ_HEAD
(
_tqh
, 
_ègq
Ë
	mtq
;

161 
TAILQ_HEAD
(
_ègfh
, 
_ègf
Ë
	mègfq
;

162 
LIST_HEAD
(
_csch
, 
_csc
Ë
	mcscq
;

163 *
	mèg_œ°
;

165 
CHAR_T
 *
	mœ°bcomm
;

167 
ARGS
 **
	m¨gs
;

168 
	m¨gs˙t
;

169 
	m¨gsoff
;

171 
u_öt32_t
 
	mfdef
;

173 *
	mibp
;

174 
size_t
 
	mibp_Àn
;

184 
	mobp
[1024];

185 
size_t
 
	mobp_Àn
;

187 
	#EXP_CSCINIT
 0x01

	)

188 
u_öt8_t
 
	mÊags
;

189 } 
	tEX_PRIVATE
;

190 
	#EXP
(
•
Ë((
EX_PRIVATE
 *)((•)->
ex_¥iv©e
))

	)

200 
	efûãπy≥
 { 
	mFILTER_BANG
, 
	mFILTER_RBANG
, 
	mFILTER_READ
, 
	mFILTER_WRITE
 };

204 
	mEXM_EMPTYBUF
,

205 
	mEXM_FILECOUNT
,

206 
	mEXM_NOCANON
,

207 
	mEXM_NOCANON_F
,

208 
	mEXM_NOFILEYET
,

209 
	mEXM_NOPREVBUF
,

210 
	mEXM_NOPREVRE
,

211 
	mEXM_NOSUSPEND
,

212 
	mEXM_SECURE
,

213 
	mEXM_SECURE_F
,

214 
	mEXM_USAGE


215 } 
	texm_t
;

218 
	ebadaddr
 { 
	mA_COMBO
, 
	mA_EMPTY
, 
	mA_EOF
, 
	mA_NOTSET
, 
	mA_ZERO
 };

222 
	mTAG_BADLNO
,

223 
	mTAG_EMPTY
,

224 
	mTAG_SEARCH


225 } 
	tègmsg_t
;

227 
	~"ex_def.h
"

228 
	~"ex_exã∫.h
"

	@ex/ex_abbrev.c

10 
	~"c⁄fig.h
"

12 #i‚de‡
löt


13 c⁄° 
	gsccsid
[] = "@(#)ex_abbrev.c 10.7 (Berkeley) 3/6/96";

16 
	~<sys/ty≥s.h
>

17 
	~<sys/queue.h
>

18 
	~<sys/time.h
>

20 
	~<bô°rög.h
>

21 
	~<˘y≥.h
>

22 
	~<limôs.h
>

23 
	~<°dio.h
>

24 
	~<°dlib.h
>

25 
	~<°rög.h
>

27 
	~"../comm⁄/comm⁄.h
"

28 
	~"../vi/vi.h
"

37 
	$ex_abbr
(
•
, 
cmdp
)

38 
SCR
 *
•
;

39 
EXCMD
 *
cmdp
;

41 
CHAR_T
 *
p
;

42 
size_t
 
Àn
;

44 
cmdp
->
¨gc
) {

46 i‡(
	`£q_dump
(
•
, 
SEQ_ABBREV
, 0) == 0)

47 
	`msgq
(
•
, 
M_INFO
, "105|NoábbreviationsÅo display");

52 
	`ab‹t
();

68 i‡(!
	`öw‹d
(
cmdp
->
¨gv
[0]->
bp
[cmdp->¨gv[0]->
Àn
 - 1])) {

69 
	`msgq
(
•
, 
M_ERR
,

73 
p
 = 
cmdp
->
¨gv
[0]->
bp
; *p != '\0'; ++p)

74 i‡(
	`isbœnk
(
p
[0])) {

75 
	`msgq
(
•
, 
M_ERR
,

79 i‡(
cmdp
->
¨gv
[0]->
Àn
 > 2)

80 
p
 = 
cmdp
->
¨gv
[0]->
bp
,

81 
Àn
 = 
cmdp
->
¨gv
[0]->À¿- 2;Üí; --Àn, ++
p
)

82 i‡(
	`öw‹d
(
p
[0]) != inword(p[1])) {

83 
	`msgq
(
•
, 
M_ERR
,

88 i‡(
	`£q_£t
(
•
, 
NULL
, 0, 
cmdp
->
¨gv
[0]->
bp
, cmdp->¨gv[0]->
Àn
,

89 
cmdp
->
¨gv
[1]->
bp
, cmdp->¨gv[1]->
Àn
, 
SEQ_ABBREV
, 
SEQ_USERDEF
))

92 
	`F_SET
(
•
->
gp
, 
G_ABBREV
);

94 
	}
}

103 
	$ex_u«bbr
(
•
, 
cmdp
)

104 
SCR
 *
•
;

105 
EXCMD
 *
cmdp
;

107 
ARGS
 *
≠
;

109 
≠
 = 
cmdp
->
¨gv
[0];

110 i‡(!
	`F_ISSET
(
•
->
gp
, 
G_ABBREV
) ||

111 
	`£q_dñëe
(
•
, 
≠
->
bp
,áp->
Àn
, 
SEQ_ABBREV
)) {

112 
	`msgq_°r
(
•
, 
M_ERR
, 
≠
->
bp
,

117 
	}
}

	@ex/ex_append.c

10 
	~"c⁄fig.h
"

12 #i‚de‡
löt


13 c⁄° 
	gsccsid
[] = "@(#)ex_append.c 10.30 (Berkeley) 10/23/96";

16 
	~<sys/ty≥s.h
>

17 
	~<sys/queue.h
>

19 
	~<bô°rög.h
>

20 
	~<limôs.h
>

21 
	~<°dio.h
>

22 
	~<°rög.h
>

23 
	~<uni°d.h
>

25 
	~"../comm⁄/comm⁄.h
"

27 
	ewhich
 {
	mAPPEND
, 
	mCHANGE
, 
	mINSERT
};

29 
ex_aci
 
__P
((
SCR
 *, 
EXCMD
 *, 
which
));

39 
	$ex_≠≥nd
(
•
, 
cmdp
)

40 
SCR
 *
•
;

41 
EXCMD
 *
cmdp
;

43  (
	`ex_aci
(
•
, 
cmdp
, 
APPEND
));

44 
	}
}

53 
	$ex_ch™ge
(
•
, 
cmdp
)

54 
SCR
 *
•
;

55 
EXCMD
 *
cmdp
;

57  (
	`ex_aci
(
•
, 
cmdp
, 
CHANGE
));

58 
	}
}

68 
	$ex_ö£π
(
•
, 
cmdp
)

69 
SCR
 *
•
;

70 
EXCMD
 *
cmdp
;

72  (
	`ex_aci
(
•
, 
cmdp
, 
INSERT
));

73 
	}
}

80 
	$ex_aci
(
•
, 
cmdp
, 
cmd
)

81 
SCR
 *
•
;

82 
EXCMD
 *
cmdp
;

83 
which
 
cmd
;

85 
CHAR_T
 *
p
, *
t
;

86 
GS
 *
gp
;

87 
TEXT
 *
ç
;

88 
TEXTH
 
tiq
;

89 
ª˙o_t
 
˙t
, 
 o
;

90 
size_t
 
Àn
;

91 
u_öt32_t
 
Êags
;

92 
√ed_√wlöe
;

94 
gp
 = 
•
->gp;

95 
	`NEEDFILE
(
•
, 
cmdp
);

108 
 o
 = 
cmdp
->
addr1
.lno;

109 
•
->
 o
 =Üno;

110 i‡((
cmd
 =
CHANGE
 || cmd =
INSERT
Ë&& 
 o
 != 0)

111 --
 o
;

117 i‡(
cmd
 =
CHANGE
 && 
cmdp
->
addr1
.
 o
 != 0 &&

118 (
	`cut
(
•
, 
NULL
, &
cmdp
->
addr1
, &cmdp->
addr2
, 
CUT_LINEMODE
) ||

119 
	`dñ
(
•
, &
cmdp
->
addr1
, &cmdp->
addr2
, 1)))

160 i‡(
cmdp
->
ßve_cmdÀn
 != 0) {

161 
p
 = 
cmdp
->
ßve_cmd
,

162 
Àn
 = 
cmdp
->
ßve_cmdÀn
;Üí > 0; 
p
 = 
t
) {

163 
t
 = 
p
; 
Àn
 > 0 &&Å[0] != '\n'; ++t, --len);

164 i‡(
t
 !
p
 || 
Àn
 == 0) {

165 i‡(
	`F_ISSET
(
•
, 
SC_EX_GLOBAL
) &&

166 
t
 - 
p
 == 1 &&Ö[0] == '.') {

167 ++
t
;

168 i‡(
Àn
 > 0)

169 --
Àn
;

172 i‡(
	`db_≠≥nd
(
•
, 1, 
 o
++, 
p
, 
t
 -Ö))

175 i‡(
Àn
 != 0) {

176 ++
t
;

177 i‡(--
Àn
 == 0 &&

178 
	`db_≠≥nd
(
•
, 1, 
 o
++, "", 0))

193 i‡(
Àn
 != 0)

194 
cmdp
->
ßve_cmd
 = 
t
;

195 
cmdp
->
ßve_cmdÀn
 = 
Àn
;

198 i‡(
	`F_ISSET
(
•
, 
SC_EX_GLOBAL
)) {

199 i‡((
•
->
 o
 =ÜnoË=0 && 
	`db_exi°
(sp, 1))

200 
•
->
 o
 = 1;

214 i‡(
	`F_ISSET
(
•
, 
SC_VI
)) {

215 i‡(
gp
->
	`s¸_s¸ìn
(
•
, 
SC_EX
)) {

216 
	`ex_emsg
(
•
, 
cmdp
->
cmd
->
«me
, 
EXM_NOCANON
);

221 
√ed_√wlöe
 = !
	`F_ISSET
(
•
, 
SC_SCR_EXWROTE
);

222 
	`F_SET
(
•
, 
SC_SCR_EX
 | 
SC_SCR_EXWROTE
);

223 i‡(
√ed_√wlöe
)

224 ()
	`ex_puts
(
•
, "\n");

232 ()
	`ex_puts
(
•
,

233 
	`msg_ˇt
(
•
, "273|E¡îögÉx i≈uàmode.", 
NULL
));

234 ()
	`ex_puts
(
•
, "\n");

235 ()
	`ex_fÊush
(
•
);

242 
	`LF_INIT
(
TXT_DOTTERM
 | 
TXT_NUMBER
);

243 i‡(!
	`FL_ISSET
(
cmdp
->
iÊags
, 
E_C_FORCE
Ë&& 
	`O_ISSET
(
•
, 
O_AUTOINDENT
))

244 
	`LF_SET
(
TXT_AUTOINDENT
);

245 i‡(
	`O_ISSET
(
•
, 
O_BEAUTIFY
))

246 
	`LF_SET
(
TXT_BEAUTIFY
);

257 
	`mem£t
(&
tiq
, 0, (
TEXTH
));

258 
	`CIRCLEQ_INIT
(&
tiq
);

260 i‡(
	`ex_txt
(
•
, &
tiq
, 0, 
Êags
))

263 
˙t
 = 0, 
ç
 = 
tiq
.
cqh_fú°
;

264 
ç
 !(
TEXT
 *)&
tiq
; ++
˙t
,Å∞ç->
q
.
cqe_√xt
)

265 i‡(
	`db_≠≥nd
(
•
, 1, 
 o
++, 
ç
->
lb
,Åp->
Àn
))

273 i‡((
•
->
 o
 =ÜnoË=0 && 
	`db_exi°
(sp, 1))

274 
•
->
 o
 = 1;

277 
	}
}

	@ex/ex_args.c

10 
	~"c⁄fig.h
"

12 #i‚de‡
löt


13 c⁄° 
	gsccsid
[] = "@(#)ex_args.c 10.16 (Berkeley) 7/13/96";

16 
	~<sys/ty≥s.h
>

17 
	~<sys/queue.h
>

18 
	~<sys/time.h
>

20 
	~<bô°rög.h
>

21 
	~<î∫o.h
>

22 
	~<limôs.h
>

23 
	~<°dio.h
>

24 
	~<°dlib.h
>

25 
	~<°rög.h
>

27 
	~"../comm⁄/comm⁄.h
"

28 
	~"../vi/vi.h
"

30 
ex_N_√xt
 
__P
((
SCR
 *, 
EXCMD
 *));

45 
	$ex_√xt
(
•
, 
cmdp
)

46 
SCR
 *
•
;

47 
EXCMD
 *
cmdp
;

49 
ARGS
 **
¨gv
;

50 
FREF
 *
‰p
;

51 
nﬂrgs
;

52 **
≠
;

55 i‡(
cmdp
->
¨gc
 =0 && (
•
->
ˇrgv
 =
NULL
 || sp->cargv[1] == NULL)) {

56 
	`msgq
(
•
, 
M_ERR
, "111|No more filesÅoÉdit");

60 i‡(
	`F_ISSET
(
cmdp
, 
E_NEWSCREEN
)) {

62 i‡(
cmdp
->
¨gc
 == 0) {

63 i‡(
	`¨gv_exp0
(
•
,

64 
cmdp
, 
•
->
ˇrgv
[1], 
	`°æí
(sp->cargv[1])))

66  (
	`ex_edô
(
•
, 
cmdp
));

68  (
	`ex_N_√xt
(
•
, 
cmdp
));

72 i‡(
	`fûe_m1
(
•
,

73 
	`FL_ISSET
(
cmdp
->
iÊags
, 
E_C_FORCE
), 
FS_ALL
 | 
FS_POSSIBLE
))

77 i‡(
cmdp
->
¨gc
) {

79 i‡(!
	`F_ISSET
(
•
, 
SC_ARGNOFREE
Ë&& sp->
¨gv
 !
NULL
) {

80 
≠
 = 
•
->
¨gv
; *≠ !
NULL
; ++ap)

81 
	`‰ì
(*
≠
);

82 
	`‰ì
(
•
->
¨gv
);

84 
	`F_CLR
(
•
, 
SC_ARGNOFREE
 | 
SC_ARGRECOVER
);

85 
•
->
ˇrgv
 = 
NULL
;

88 
	`CALLOC_RET
(
•
,

89 
•
->
¨gv
, **, 
cmdp
->
¨gc
 + 1, (*));

90 
≠
 = 
•
->
¨gv
,

91 
¨gv
 = 
cmdp
->¨gv;árgv[0]->
Àn
 !0; ++
≠
, ++argv)

92 i‡((*
≠
 =

93 
	`v_°rdup
(
•
, 
¨gv
[0]->
bp
,árgv[0]->
Àn
)Ë=
NULL
)

95 *
≠
 = 
NULL
;

98 
•
->
ˇrgv
 = sp->
¨gv
;

99 i‡((
‰p
 = 
	`fûe_add
(
•
, *•->
ˇrgv
)Ë=
NULL
)

101 
nﬂrgs
 = 0;

104 
	`F_SET
(
•
, 
SC_STATUS_CNT
);

106 i‡((
‰p
 = 
	`fûe_add
(
•
, sp->
ˇrgv
[1])Ë=
NULL
)

108 i‡(
	`F_ISSET
(
•
, 
SC_ARGRECOVER
))

109 
	`F_SET
(
‰p
, 
FR_RECOVER
);

110 
nﬂrgs
 = 1;

113 i‡(
	`fûe_öô
(
•
, 
‰p
, 
NULL
, 
FS_SETALT
 |

114 (
	`FL_ISSET
(
cmdp
->
iÊags
, 
E_C_FORCE
Ë? 
FS_FORCE
 : 0)))

116 i‡(
nﬂrgs
)

117 ++
•
->
ˇrgv
;

119 
	`F_SET
(
•
, 
SC_FSWITCH
);

121 
	}
}

128 
	$ex_N_√xt
(
•
, 
cmdp
)

129 
SCR
 *
•
;

130 
EXCMD
 *
cmdp
;

132 
SCR
 *
√w
;

133 
FREF
 *
‰p
;

136 i‡(
	`s¸ìn_öô
(
•
->
gp
, sp, &
√w
))

138 i‡(
	`vs_•lô
(
•
, 
√w
, 0)) {

139 ()
	`s¸ìn_íd
(
√w
);

144 i‡((
‰p
 = 
	`fûe_add
(
√w
, 
cmdp
->
¨gv
[0]->
bp
)Ë=
NULL
 ||

145 
	`fûe_öô
(
√w
, 
‰p
, 
NULL
,

146 (
	`FL_ISSET
(
cmdp
->
iÊags
, 
E_C_FORCE
Ë? 
FS_FORCE
 : 0))) {

147 ()
	`vs_disˇrd
(
√w
, 
NULL
);

148 ()
	`s¸ìn_íd
(
√w
);

153 
√w
->
ˇrgv
 =Çew->
¨gv
 = 
	`ex_buûd¨gv
(
•
, 
cmdp
, 
NULL
);

156 
	`F_SET
(
√w
, 
SC_STATUS_CNT
);

159 
•
->
√xtdi•
 = 
√w
;

160 
	`F_SET
(
•
, 
SC_SSWITCH
);

163 
	}
}

172 
	$ex_¥ev
(
•
, 
cmdp
)

173 
SCR
 *
•
;

174 
EXCMD
 *
cmdp
;

176 
FREF
 *
‰p
;

178 i‡(
•
->
ˇrgv
 =•->
¨gv
) {

179 
	`msgq
(
•
, 
M_ERR
, "112|NoÖrevious filesÅoÉdit");

183 i‡(
	`F_ISSET
(
cmdp
, 
E_NEWSCREEN
)) {

184 i‡(
	`¨gv_exp0
(
•
, 
cmdp
, sp->
ˇrgv
[-1], 
	`°æí
(sp->cargv[-1])))

186  (
	`ex_edô
(
•
, 
cmdp
));

189 i‡(
	`fûe_m1
(
•
,

190 
	`FL_ISSET
(
cmdp
->
iÊags
, 
E_C_FORCE
), 
FS_ALL
 | 
FS_POSSIBLE
))

193 i‡((
‰p
 = 
	`fûe_add
(
•
, sp->
ˇrgv
[-1])Ë=
NULL
)

196 i‡(
	`fûe_öô
(
•
, 
‰p
, 
NULL
, 
FS_SETALT
 |

197 (
	`FL_ISSET
(
cmdp
->
iÊags
, 
E_C_FORCE
Ë? 
FS_FORCE
 : 0)))

199 --
•
->
ˇrgv
;

201 
	`F_SET
(
•
, 
SC_FSWITCH
);

203 
	}
}

219 
	$ex_ªw
(
•
, 
cmdp
)

220 
SCR
 *
•
;

221 
EXCMD
 *
cmdp
;

223 
FREF
 *
‰p
;

229 i‡(
•
->
¨gv
 =
NULL
) {

230 
	`msgq
(
•
, 
M_ERR
, "113|NoÖrevious filesÅoÑewind");

234 i‡(
	`fûe_m1
(
•
,

235 
	`FL_ISSET
(
cmdp
->
iÊags
, 
E_C_FORCE
), 
FS_ALL
 | 
FS_POSSIBLE
))

239 
•
->
ˇrgv
 = sp->
¨gv
;

240 i‡((
‰p
 = 
	`fûe_add
(
•
, *•->
ˇrgv
)Ë=
NULL
)

242 i‡(
	`fûe_öô
(
•
, 
‰p
, 
NULL
, 
FS_SETALT
 |

243 (
	`FL_ISSET
(
cmdp
->
iÊags
, 
E_C_FORCE
Ë? 
FS_FORCE
 : 0)))

247 
	`F_SET
(
•
, 
SC_FSWITCH
 | 
SC_STATUS_CNT
);

250 
	}
}

259 
	$ex_¨gs
(
•
, 
cmdp
)

260 
SCR
 *
•
;

261 
EXCMD
 *
cmdp
;

263 
GS
 *
gp
;

264 
˙t
, 
cﬁ
, 
Àn
, 
£p
;

265 **
≠
;

267 i‡(
•
->
¨gv
 =
NULL
) {

268 ()
	`msgq
(
•
, 
M_ERR
, "114|No fileÜistÅo display");

272 
gp
 = 
•
->gp;

273 
cﬁ
 = 
Àn
 = 
£p
 = 0;

274 
˙t
 = 1, 
≠
 = 
•
->
¨gv
; *≠ !
NULL
; ++ap) {

275 
cﬁ
 +
Àn
 = 
	`°æí
(*
≠
Ë+ 
£p
 + (≠ =
•
->
ˇrgv
 ? 2 : 0);

276 i‡(
cﬁ
 >
•
->
cﬁs
 - 1) {

277 
cﬁ
 = 
Àn
;

278 
£p
 = 0;

279 ()
	`ex_puts
(
•
, "\n");

280 } i‡(
˙t
 != 1) {

281 
£p
 = 1;

282 ()
	`ex_puts
(
•
, " ");

284 ++
˙t
;

286 ()
	`ex_¥ötf
(
•
, "%s%s%s", 
≠
 =•->
ˇrgv
 ? "[" : "",

287 *
≠
,á∞=
•
->
ˇrgv
 ? "]" : "");

288 i‡(
	`INTERRUPTED
(
•
))

291 ()
	`ex_puts
(
•
, "\n");

293 
	}
}

302 
	$ex_buûd¨gv
(
•
, 
cmdp
, 
«me
)

303 
SCR
 *
•
;

304 
EXCMD
 *
cmdp
;

305 *
«me
;

307 
ARGS
 **
¨gv
;

308 
¨gc
;

309 **
≠
, **
s_¨gv
;

311 
¨gc
 = 
cmdp
 =
NULL
 ? 1 : cmdp->argc;

312 
	`CALLOC
(
•
, 
s_¨gv
, **, 
¨gc
 + 1, (*));

313 i‡((
≠
 = 
s_¨gv
Ë=
NULL
)

314  (
NULL
);

316 i‡(
cmdp
 =
NULL
) {

317 i‡((*
≠
 = 
	`v_°rdup
(
•
, 
«me
, 
	`°æí
“ame))Ë=
NULL
)

318  (
NULL
);

319 ++
≠
;

321 
¨gv
 = 
cmdp
->¨gv;árgv[0]->
Àn
 !0; ++
≠
, ++argv)

322 i‡((*
≠
 =

323 
	`v_°rdup
(
•
, 
¨gv
[0]->
bp
,árgv[0]->
Àn
)Ë=
NULL
)

324  (
NULL
);

325 *
≠
 = 
NULL
;

326  (
s_¨gv
);

327 
	}
}

	@ex/ex_argv.c

10 
	~"c⁄fig.h
"

12 #i‚de‡
löt


13 c⁄° 
	gsccsid
[] = "@(#)ex_argv.c 10.26 (Berkeley) 9/20/96";

16 
	~<sys/ty≥s.h
>

17 
	~<sys/queue.h
>

19 
	~<bô°rög.h
>

20 
	~<˘y≥.h
>

21 
	~<dúít.h
>

22 
	~<î∫o.h
>

23 
	~<limôs.h
>

24 
	~<°dio.h
>

25 
	~<°dlib.h
>

26 
	~<°rög.h
>

27 
	~<uni°d.h
>

29 
	~"../comm⁄/comm⁄.h
"

31 
¨gv_Æloc
 
__P
((
SCR
 *, 
size_t
));

32 
¨gv_comp
 
__P
((const *, const *));

33 
¨gv_„xp
 
__P
((
SCR
 *, 
EXCMD
 *,

34 *, 
size_t
, *, size_t *, **, size_t *, ));

35 
¨gv_Àxp
 
__P
((
SCR
 *, 
EXCMD
 *, *));

36 
¨gv_£xp
 
__P
((
SCR
 *, **, 
size_t
 *, size_t *));

45 
	$¨gv_öô
(
•
, 
ex˝
)

46 
SCR
 *
•
;

47 
EXCMD
 *
ex˝
;

49 
EX_PRIVATE
 *
exp
;

51 
exp
 = 
	`EXP
(
•
);

52 
exp
->
¨gsoff
 = 0;

53 
	`¨gv_Æloc
(
•
, 1);

55 
ex˝
->
¨gv
 = 
exp
->
¨gs
;

56 
ex˝
->
¨gc
 = 
exp
->
¨gsoff
;

58 
	}
}

67 
	$¨gv_exp0
(
•
, 
ex˝
, 
cmd
, 
cmdÀn
)

68 
SCR
 *
•
;

69 
EXCMD
 *
ex˝
;

70 *
cmd
;

71 
size_t
 
cmdÀn
;

73 
EX_PRIVATE
 *
exp
;

75 
exp
 = 
	`EXP
(
•
);

76 
	`¨gv_Æloc
(
•
, 
cmdÀn
);

77 
	`mem˝y
(
exp
->
¨gs
[exp->
¨gsoff
]->
bp
, 
cmd
, 
cmdÀn
);

78 
exp
->
¨gs
[exp->
¨gsoff
]->
bp
[
cmdÀn
] = '\0';

79 
exp
->
¨gs
[exp->
¨gsoff
]->
Àn
 = 
cmdÀn
;

80 ++
exp
->
¨gsoff
;

81 
ex˝
->
¨gv
 = 
exp
->
¨gs
;

82 
ex˝
->
¨gc
 = 
exp
->
¨gsoff
;

84 
	}
}

94 
	$¨gv_exp1
(
•
, 
ex˝
, 
cmd
, 
cmdÀn
, 
is_b™g
)

95 
SCR
 *
•
;

96 
EXCMD
 *
ex˝
;

97 *
cmd
;

98 
size_t
 
cmdÀn
;

99 
is_b™g
;

101 
EX_PRIVATE
 *
exp
;

102 
size_t
 
bÀn
, 
Àn
;

103 *
bp
, *
p
, *
t
;

105 
	`GET_SPACE_RET
(
•
, 
bp
, 
bÀn
, 512);

107 
Àn
 = 0;

108 
exp
 = 
	`EXP
(
•
);

109 i‡(
	`¨gv_„xp
(
•
, 
ex˝
, 
cmd
, 
cmdÀn
, 
bp
, &
Àn
, &bp, &
bÀn
, 
is_b™g
)) {

110 
	`FREE_SPACE
(
•
, 
bp
, 
bÀn
);

115 i‡(
Àn
 != 0) {

116 
p
 = 
bp
, 
t
 = b∞+ 
Àn
;Ö <Å; ++p)

117 i‡(!
	`isbœnk
(*
p
))

119 i‡(
p
 =
t
)

120 
ªt
;

122 
ªt
;

124 ()
	`¨gv_exp0
(
•
, 
ex˝
, 
bp
, 
Àn
);

126 
ªt
: 
	`FREE_SPACE
(
•
, 
bp
, 
bÀn
);

128 
	}
}

138 
	$¨gv_exp2
(
•
, 
ex˝
, 
cmd
, 
cmdÀn
)

139 
SCR
 *
•
;

140 
EXCMD
 *
ex˝
;

141 *
cmd
;

142 
size_t
 
cmdÀn
;

144 
size_t
 
bÀn
, 
Àn
, 
n
;

145 
rvÆ
;

146 *
bp
, *
mp
, *
p
;

148 
	`GET_SPACE_RET
(
•
, 
bp
, 
bÀn
, 512);

150 
	#SHELLECHO
 "echÿ"

	)

151 
	#SHELLOFFSET
 ((
SHELLECHO
Ë- 1)

	)

152 
	`mem˝y
(
bp
, 
SHELLECHO
, 
SHELLOFFSET
);

153 
p
 = 
bp
 + 
SHELLOFFSET
;

154 
Àn
 = 
SHELLOFFSET
;

156 #i‡
	`deföed
(
DEBUG
) && 0

157 
	`TRACE
(
•
, "fûe_¨gv: {%.*s}\n", ()
cmdÀn
, 
cmd
);

160 i‡(
	`¨gv_„xp
(
•
, 
ex˝
, 
cmd
, 
cmdÀn
, 
p
, &
Àn
, &
bp
, &
bÀn
, 0)) {

161 
rvÆ
 = 1;

162 
îr
;

165 #i‡
	`deföed
(
DEBUG
) && 0

166 
	`TRACE
(
•
, "bef‹êshñl: %d: {%s}\n", 
Àn
, 
bp
);

183 i‡(
	`›ts_em±y
(
•
, 
O_SHELL
, 1Ë|| o±s_em±y(•, 
O_SHELLMETA
, 1))

184 
n
 = 0;

186 
p
 = 
mp
 = 
	`O_STR
(
•
, 
O_SHELLMETA
); *p != '\0'; ++p)

187 i‡(
	`isbœnk
(*
p
Ë|| 
	`iß um
(*p))

189 
p
 = 
bp
 + 
SHELLOFFSET
;

190 
n
 = 
Àn
 - 
SHELLOFFSET
;

191 i‡(*
p
 != '\0') {

192 ; 
n
 > 0; --n, ++
p
)

193 i‡(
	`°rchr
(
mp
, *
p
Ë!
NULL
)

196 ; 
n
 > 0; --n, ++
p
)

197 i‡(!
	`isbœnk
(*
p
) &&

198 !
	`iß um
(*
p
Ë&& 
	`°rchr
(
mp
, *pË!
NULL
)

215 
n
) {

217 
p
 = 
bp
 + 
SHELLOFFSET
;

218 
Àn
 -
SHELLOFFSET
;

219 
rvÆ
 = 
	`¨gv_exp3
(
•
, 
ex˝
, 
p
, 
Àn
);

222 i‡(*
p
 == '*') {

223 *
p
 = '\0';

224 
rvÆ
 = 
	`¨gv_Àxp
(
•
, 
ex˝
, 
bp
 + 
SHELLOFFSET
);

229 i‡(
	`¨gv_£xp
(
•
, &
bp
, &
bÀn
, &
Àn
)) {

230 
rvÆ
 = 1;

231 
îr
;

233 
p
 = 
bp
;

234 
rvÆ
 = 
	`¨gv_exp3
(
•
, 
ex˝
, 
p
, 
Àn
);

238 
îr
: 
	`FREE_SPACE
(
•
, 
bp
, 
bÀn
);

239  (
rvÆ
);

240 
	}
}

250 
	$¨gv_exp3
(
•
, 
ex˝
, 
cmd
, 
cmdÀn
)

251 
SCR
 *
•
;

252 
EXCMD
 *
ex˝
;

253 *
cmd
;

254 
size_t
 
cmdÀn
;

256 
EX_PRIVATE
 *
exp
;

257 
size_t
 
Àn
;

258 
ch
, 
off
;

259 *
≠
, *
p
;

261 
exp
 = 
	`EXP
(
•
); 
cmdÀn
 > 0; ++exp->
¨gsoff
) {

263 ; 
cmdÀn
 > 0; --cmdÀn, ++
cmd
) {

264 
ch
 = *
cmd
;

265 i‡(!
	`isbœnk
(
ch
))

268 i‡(
cmdÀn
 == 0)

280 
≠
 = 
cmd
, 
Àn
 = 0; 
cmdÀn
 > 0; ++cmd, --cmdlen, ++len) {

281 
ch
 = *
cmd
;

282 i‡(
	`IS_ESCAPE
(
•
, 
ex˝
, 
ch
Ë&& 
cmdÀn
 > 1) {

283 ++
cmd
;

284 --
cmdÀn
;

285 } i‡(
	`isbœnk
(
ch
))

296 
	`¨gv_Æloc
(
•
, 
Àn
);

297 
off
 = 
exp
->
¨gsoff
;

298 
exp
->
¨gs
[
off
]->
Àn
 =Üen;

299 
p
 = 
exp
->
¨gs
[
off
]->
bp
; 
Àn
 > 0; --Àn, *p++ = *
≠
++)

300 i‡(
	`IS_ESCAPE
(
•
, 
ex˝
, *
≠
))

301 ++
≠
;

302 *
p
 = '\0';

304 
ex˝
->
¨gv
 = 
exp
->
¨gs
;

305 
ex˝
->
¨gc
 = 
exp
->
¨gsoff
;

307 #i‡
	`deföed
(
DEBUG
) && 0

308 
˙t
 = 0; c¡ < 
exp
->
¨gsoff
; ++cnt)

309 
	`TRACE
(
•
, "¨g %d: {%s}\n", 
˙t
, 
exp
->
¨gv
[cnt]);

312 
	}
}

319 
	$¨gv_„xp
(
•
, 
ex˝
, 
cmd
, 
cmdÀn
, 
p
, 
À≈
, 
bµ
, 
bÀ≈
, 
is_b™g
)

320 
SCR
 *
•
;

321 
EXCMD
 *
ex˝
;

322 *
cmd
, *
p
, **
bµ
;

323 
size_t
 
cmdÀn
, *
À≈
, *
bÀ≈
;

324 
is_b™g
;

326 
EX_PRIVATE
 *
exp
;

327 *
bp
, *
t
;

328 
size_t
 
bÀn
, 
Àn
, 
off
, 
éí
;

331 
bp
 = *
bµ
, 
bÀn
 = *
bÀ≈
, 
Àn
 = *
À≈
; 
cmdÀn
 > 0; --cmdÀn, ++
cmd
)

332 *
cmd
) {

334 i‡(!
is_b™g
)

335 
ös_ch
;

336 
exp
 = 
	`EXP
(
•
);

337 i‡(
exp
->
œ°bcomm
 =
NULL
) {

338 
	`msgq
(
•
, 
M_ERR
,

342 
Àn
 +
éí
 = 
	`°æí
(
exp
->
œ°bcomm
);

343 
off
 = 
p
 - 
bp
;

344 
	`ADD_SPACE_RET
(
•
, 
bp
, 
bÀn
, 
Àn
);

345 
p
 = 
bp
 + 
off
;

346 
	`mem˝y
(
p
, 
exp
->
œ°bcomm
, 
éí
);

347 
p
 +
éí
;

348 
	`F_SET
(
ex˝
, 
E_MODIFY
);

351 i‡((
t
 = 
•
->
‰p
->
«me
Ë=
NULL
) {

352 
	`msgq
(
•
, 
M_ERR
,

356 
éí
 = 
	`°æí
(
t
);

357 
Àn
 +
éí
;

358 
off
 = 
p
 - 
bp
;

359 
	`ADD_SPACE_RET
(
•
, 
bp
, 
bÀn
, 
Àn
);

360 
p
 = 
bp
 + 
off
;

361 
	`mem˝y
(
p
, 
t
, 
éí
);

362 
p
 +
éí
;

363 
	`F_SET
(
ex˝
, 
E_MODIFY
);

366 i‡((
t
 = 
•
->
Æt_«me
Ë=
NULL
) {

367 
	`msgq
(
•
, 
M_ERR
,

371 
Àn
 +
éí
 = 
	`°æí
(
t
);

372 
off
 = 
p
 - 
bp
;

373 
	`ADD_SPACE_RET
(
•
, 
bp
, 
bÀn
, 
Àn
);

374 
p
 = 
bp
 + 
off
;

375 
	`mem˝y
(
p
, 
t
, 
éí
);

376 
p
 +
éí
;

377 
	`F_SET
(
ex˝
, 
E_MODIFY
);

386 i‡(
cmdÀn
 > 1 &&

387 (
cmd
[1] == '%' || cmd[1] == '#' || cmd[1] == '!')) {

388 ++
cmd
;

389 --
cmdÀn
;

393 
ös_ch
: ++
Àn
;

394 
off
 = 
p
 - 
bp
;

395 
	`ADD_SPACE_RET
(
•
, 
bp
, 
bÀn
, 
Àn
);

396 
p
 = 
bp
 + 
off
;

397 *
p
++ = *
cmd
;

401 ++
Àn
;

402 
off
 = 
p
 - 
bp
;

403 
	`ADD_SPACE_RET
(
•
, 
bp
, 
bÀn
, 
Àn
);

404 
p
 = 
bp
 + 
off
;

405 *
p
 = '\0';

408 *
À≈
 = 
Àn
 - 1;

409 *
bµ
 = 
bp
;

410 *
bÀ≈
 = 
bÀn
;

412 
	}
}

419 
	$¨gv_Æloc
(
•
, 
Àn
)

420 
SCR
 *
•
;

421 
size_t
 
Àn
;

423 
ARGS
 *
≠
;

424 
EX_PRIVATE
 *
exp
;

425 
˙t
, 
off
;

431 
	#INCREMENT
 20

	)

432 
exp
 = 
	`EXP
(
•
);

433 
off
 = 
exp
->
¨gsoff
;

434 i‡(
exp
->
¨gs˙t
 =0 || 
off
 + 2 >=Éxp->argscnt - 1) {

435 
˙t
 = 
exp
->
¨gs˙t
 + 
INCREMENT
;

436 
	`REALLOC
(
•
, 
exp
->
¨gs
, 
ARGS
 **, 
˙t
 * (ARGS *));

437 i‡(
exp
->
¨gs
 =
NULL
) {

438 ()
	`¨gv_‰ì
(
•
);

439 
mem
;

441 
	`mem£t
(&
exp
->
¨gs
[exp->
¨gs˙t
], 0, 
INCREMENT
 * (
ARGS
 *));

442 
exp
->
¨gs˙t
 = 
˙t
;

446 i‡(
exp
->
¨gs
[
off
] =
NULL
) {

447 
	`CALLOC
(
•
, 
exp
->
¨gs
[
off
], 
ARGS
 *, 1, (ARGS));

448 i‡(
exp
->
¨gs
[
off
] =
NULL
)

449 
mem
;

453 
≠
 = 
exp
->
¨gs
[
off
];

454 
≠
->
Àn
 = 0;

455 i‡(
≠
->
bÀn
 < 
Àn
 + 1) {

456 
≠
->
bÀn
 = 
Àn
 + 1;

457 
	`REALLOC
(
•
, 
≠
->
bp
, 
CHAR_T
 *,áp->
bÀn
 * (CHAR_T));

458 i‡(
≠
->
bp
 =
NULL
) {

459 
≠
->
bp
 = 
NULL
;

460 
≠
->
bÀn
 = 0;

461 
	`F_CLR
(
≠
, 
A_ALLOCATED
);

462 
mem
: 
	`msgq
(
•
, 
M_SYSERR
, 
NULL
);

465 
	`F_SET
(
≠
, 
A_ALLOCATED
);

469 i‡(
exp
->
¨gs
[++
off
] =
NULL
) {

470 
	`CALLOC
(
•
, 
exp
->
¨gs
[
off
], 
ARGS
 *, 1, (ARGS));

471 i‡(
exp
->
¨gs
[
off
] =
NULL
)

472 
mem
;

475 
exp
->
¨gs
[
off
]->
Àn
 = 0;

477 
	}
}

486 
	$¨gv_‰ì
(
•
)

487 
SCR
 *
•
;

489 
EX_PRIVATE
 *
exp
;

490 
off
;

492 
exp
 = 
	`EXP
(
•
);

493 i‡(
exp
->
¨gs
 !
NULL
) {

494 
off
 = 0; of‡< 
exp
->
¨gs˙t
; ++off) {

495 i‡(
exp
->
¨gs
[
off
] =
NULL
)

497 i‡(
	`F_ISSET
(
exp
->
¨gs
[
off
], 
A_ALLOCATED
))

498 
	`‰ì
(
exp
->
¨gs
[
off
]->
bp
);

499 
	`‰ì
(
exp
->
¨gs
[
off
]);

501 
	`‰ì
(
exp
->
¨gs
);

503 
exp
->
¨gs
 = 
NULL
;

504 
exp
->
¨gs˙t
 = 0;

505 
exp
->
¨gsoff
 = 0;

507 
	}
}

515 
	$¨gv_Àxp
(
•
, 
ex˝
, 
∑th
)

516 
SCR
 *
•
;

517 
EXCMD
 *
ex˝
;

518 *
∑th
;

520 
dúít
 *
dp
;

521 
DIR
 *
dúp
;

522 
EX_PRIVATE
 *
exp
;

523 
off
;

524 
size_t
 
dÀn
, 
Àn
, 
∆í
;

525 *
d«me
, *
«me
, *
p
;

527 
exp
 = 
	`EXP
(
•
);

530 i‡((
p
 = 
	`°ºchr
(
∑th
, '/')Ë=
NULL
) {

531 
d«me
 = ".";

532 
dÀn
 = 0;

533 
«me
 = 
∑th
;

535 i‡(
p
 =
∑th
) {

536 
d«me
 = "/";

537 
dÀn
 = 1;

539 *
p
 = '\0';

540 
d«me
 = 
∑th
;

541 
dÀn
 = 
	`°æí
(
∑th
);

543 
«me
 = 
p
 + 1;

545 
∆í
 = 
	`°æí
(
«me
);

552 i‡((
dúp
 = 
	`›ídú
(
d«me
)Ë=
NULL
) {

553 
	`msgq_°r
(
•
, 
M_SYSERR
, 
d«me
, "%s");

556 
off
 = 
exp
->
¨gsoff
; (
dp
 = 
	`ªaddú
(
dúp
)Ë!
NULL
;) {

557 i‡(
∆í
 == 0) {

558 i‡(
dp
->
d_«me
[0] == '.')

560 
Àn
 = 
	`°æí
(
dp
->
d_«me
);

562 
Àn
 = 
	`°æí
(
dp
->
d_«me
);

563 i‡(
Àn
 < 
∆í
 || 
	`memcmp
(
dp
->
d_«me
, 
«me
,Çlen))

568 
	`¨gv_Æloc
(
•
, 
dÀn
 + 
Àn
 + 2);

569 
p
 = 
exp
->
¨gs
[exp->
¨gsoff
]->
bp
;

570 i‡(
dÀn
 != 0) {

571 
	`mem˝y
(
p
, 
d«me
, 
dÀn
);

572 
p
 +
dÀn
;

573 i‡(
dÀn
 > 1 || 
d«me
[0] != '/')

574 *
p
++ = '/';

576 
	`mem˝y
(
p
, 
dp
->
d_«me
, 
Àn
 + 1);

577 
exp
->
¨gs
[exp->
¨gsoff
]->
Àn
 = 
dÀn
 +Üen + 1;

578 ++
exp
->
¨gsoff
;

579 
ex˝
->
¨gv
 = 
exp
->
¨gs
;

580 
ex˝
->
¨gc
 = 
exp
->
¨gsoff
;

582 
	`˛o£dú
(
dúp
);

584 i‡(
off
 =
exp
->
¨gsoff
) {

590 
	`msgq
(
•
, 
M_ERR
, "304|ShellÉxpansion failed");

593 
	`qs‹t
(
exp
->
¨gs
 + 
off
,Éxp->
¨gsoff
 - off, (
ARGS
 *), 
¨gv_comp
);

595 
	}
}

602 
	$¨gv_comp
(
a
, 
b
)

603 c⁄° *
a
, *
b
;

605  (
	`°rcmp
((*)(*(
ARGS
 **)
a
)->
bp
, (*)(*(ARGS **)
b
)->bp));

606 
	}
}

614 
	$¨gv_£xp
(
•
, 
bµ
, 
bÀ≈
, 
À≈
)

615 
SCR
 *
•
;

616 **
bµ
;

617 
size_t
 *
bÀ≈
, *
À≈
;

619 íum { 
SEXP_ERR
, 
SEXP_EXPANSION_ERR
, 
SEXP_OK
 } 
rvÆ
;

620 
FILE
 *
iÂ
;

621 
pid_t
 
pid
;

622 
size_t
 
bÀn
, 
Àn
;

623 
ch
, 
°d_ouçut
[2];

624 *
bp
, *
p
, *
sh
, *
sh_∑th
;

627 i‡(
	`O_ISSET
(
•
, 
O_SECURE
)) {

628 
	`msgq
(
•
, 
M_ERR
,

633 
sh_∑th
 = 
	`O_STR
(
•
, 
O_SHELL
);

634 i‡((
sh
 = 
	`°ºchr
(
sh_∑th
, '/')Ë=
NULL
)

635 
sh
 = 
sh_∑th
;

637 ++
sh
;

640 
bp
 = *
bµ
;

641 
bÀn
 = *
bÀ≈
;

654 
iÂ
 = 
NULL
;

655 
°d_ouçut
[0] = std_output[1] = -1;

656 i‡(
	`pùe
(
°d_ouçut
) < 0) {

657 
	`msgq
(
•
, 
M_SYSERR
, "pipe");

660 i‡((
iÂ
 = 
	`fd›í
(
°d_ouçut
[0], "r")Ë=
NULL
) {

661 
	`msgq
(
•
, 
M_SYSERR
, "fdopen");

662 
îr
;

669 
pid
 = 
	`vf‹k
()) {

671 
	`msgq
(
•
, 
M_SYSERR
, "vfork");

672 
îr
: i‡(
iÂ
 !
NULL
)

673 ()
	`f˛o£
(
iÂ
);

674 i‡(
°d_ouçut
[0] != -1)

675 
	`˛o£
(
°d_ouçut
[0]);

676 i‡(
°d_ouçut
[1] != -1)

677 
	`˛o£
(
°d_ouçut
[0]);

681 ()
	`dup2
(
°d_ouçut
[1], 
STDOUT_FILENO
);

684 ()
	`˛o£
(
°d_ouçut
[0]);

685 ()
	`˛o£
(
°d_ouçut
[1]);

686 ()
	`˛o£
(
STDERR_FILENO
);

692 
	`exe˛
(
sh_∑th
, 
sh
, "-c", 
bp
, 
NULL
);

693 
	`msgq_°r
(
•
, 
M_SYSERR
, 
sh_∑th
, "118|Error:Éxecl: %s");

694 
	`_exô
(127);

697 ()
	`˛o£
(
°d_ouçut
[1]);

709 
p
 = 
bp
, 
Àn
 = 0, 
ch
 = 
EOF
;

710 (
ch
 = 
	`gëc
(
iÂ
)Ë!
EOF
; *
p
++ = ch, --
bÀn
, ++
Àn
)

711 i‡(
bÀn
 < 5) {

712 
	`ADD_SPACE_GOTO
(
•
, 
bp
, *
bÀ≈
, *blenp * 2);

713 
p
 = 
bp
 + 
Àn
;

714 
bÀn
 = *
bÀ≈
 - 
Àn
;

718 i‡(
p
 > 
bp
 && (p[-1] == '\n' ||Ö[-1] == '\r')) {

719 --
p
;

720 --
Àn
;

722 *
p
 = '\0';

723 *
À≈
 = 
Àn
;

724 *
bµ
 = 
bp
;

726 i‡(
	`„º‹
(
iÂ
))

727 
i€º
;

728 i‡(
	`f˛o£
(
iÂ
)) {

729 
i€º
: 
	`msgq_°r
(
•
, 
M_ERR
, 
sh
, "119|I/OÉrror: %s");

730 
Æloc_îr
: 
rvÆ
 = 
SEXP_ERR
;

732 
rvÆ
 = 
SEXP_OK
;

743 i‡(
	`¥oc_waô
(
•
, ()
pid
, 
sh
, 1, 0))

744 
rvÆ
 = 
SEXP_EXPANSION_ERR
;

746 
p
 = 
bp
; 
Àn
; ++p, --len)

747 i‡(!
	`isbœnk
(*
p
))

749 i‡(
Àn
 == 0)

750 
rvÆ
 = 
SEXP_EXPANSION_ERR
;

752 i‡(
rvÆ
 =
SEXP_EXPANSION_ERR
)

753 
	`msgq
(
•
, 
M_ERR
, "304|ShellÉxpansion failed");

755  (
rvÆ
 =
SEXP_OK
 ? 0 : 1);

756 
	}
}

	@ex/ex_at.c

10 
	~"c⁄fig.h
"

12 #i‚de‡
löt


13 c⁄° 
	gsccsid
[] = "@(#)ex_at.c 10.12 (Berkeley) 9/15/96";

16 
	~<sys/ty≥s.h
>

17 
	~<sys/queue.h
>

19 
	~<bô°rög.h
>

20 
	~<˘y≥.h
>

21 
	~<limôs.h
>

22 
	~<°dio.h
>

23 
	~<°dlib.h
>

24 
	~<°rög.h
>

26 
	~"../comm⁄/comm⁄.h
"

37 
	$ex_©
(
•
, 
cmdp
)

38 
SCR
 *
•
;

39 
EXCMD
 *
cmdp
;

41 
CB
 *
cbp
;

42 
CHAR_T
 
«me
;

43 
EXCMD
 *
e˝
;

44 
RANGE
 *
Ω
;

45 
TEXT
 *
ç
;

46 
size_t
 
Àn
;

47 *
p
;

54 
«me
 = 
	`FL_ISSET
(
cmdp
->
iÊags
, 
E_C_BUFFER
Ë? cmdp->
buf„r
 : '@';

55 i‡(
«me
 == '@' ||Çame == '*') {

56 i‡(!
	`F_ISSET
(
•
, 
SC_AT_SET
)) {

57 
	`ex_emsg
(
•
, 
NULL
, 
EXM_NOPREVBUF
);

60 
«me
 = 
•
->
©_lbuf
;

62 
•
->
©_lbuf
 = 
«me
;

63 
	`F_SET
(
•
, 
SC_AT_SET
);

65 
	`CBNAME
(
•
, 
cbp
, 
«me
);

66 i‡(
cbp
 =
NULL
) {

67 
	`ex_emsg
(
•
, 
	`KEY_NAME
(•, 
«me
), 
EXM_EMPTYBUF
);

86 
	`CALLOC_RET
(
•
, 
e˝
, 
EXCMD
 *, 1, (EXCMD));

87 
	`CIRCLEQ_INIT
(&
e˝
->
rq
);

88 
	`CALLOC_RET
(
•
, 
Ω
, 
RANGE
 *, 1, (RANGE));

89 
Ω
->
°¨t
 = 
cmdp
->
addr1
.
 o
;

90 i‡(
	`F_ISSET
(
cmdp
, 
E_ADDR_DEF
)) {

91 
Ω
->
°›
 =Ñp->
°¨t
;

92 
	`FL_SET
(
e˝
->
agv_Êags
, 
AGV_AT_NORANGE
);

94 
Ω
->
°›
 = 
cmdp
->
addr2
.
 o
;

95 
	`FL_SET
(
e˝
->
agv_Êags
, 
AGV_AT
);

97 
	`CIRCLEQ_INSERT_HEAD
(&
e˝
->
rq
, 
Ω
, 
q
);

107 
Àn
 = 0, 
ç
 = 
cbp
->
ãxtq
.
cqh_œ°
;

108 
ç
 !(*)&
cbp
->
ãxtq
;Å∞ç->
q
.
cqe_¥ev
)

109 
Àn
 +
ç
->len + 1;

111 
	`MALLOC_RET
(
•
, 
e˝
->
˝
, *, 
Àn
 * 2);

112 
e˝
->
o_˝
 =É˝->
˝
;

113 
e˝
->
o_˛í
 = 
Àn
;

114 
e˝
->
˝
[
Àn
] = '\0';

117 
p
 = 
e˝
->
˝
 + 
Àn
, 
ç
 = 
cbp
->
ãxtq
.
cqh_œ°
;

118 
ç
 !(*)&
cbp
->
ãxtq
;Å∞ç->
q
.
cqe_¥ev
) {

119 
	`mem˝y
(
p
, 
ç
->
lb
,Åp->
Àn
);

120 
p
 +
ç
->
Àn
;

121 *
p
++ = '\n';

124 
	`LIST_INSERT_HEAD
(&
•
->
gp
->
ecq
, 
e˝
, 
q
);

126 
	}
}

	@ex/ex_bang.c

10 
	~"c⁄fig.h
"

12 #i‚de‡
löt


13 c⁄° 
	gsccsid
[] = "@(#)ex_bang.c 10.33 (Berkeley) 9/23/96";

16 
	~<sys/ty≥s.h
>

17 
	~<sys/queue.h
>

18 
	~<sys/time.h
>

20 
	~<bô°rög.h
>

21 
	~<î∫o.h
>

22 
	~<limôs.h
>

23 
	~<°dio.h
>

24 
	~<°dlib.h
>

25 
	~<°rög.h
>

26 
	~<uni°d.h
>

28 
	~"../comm⁄/comm⁄.h
"

29 
	~"../vi/vi.h
"

50 
	$ex_b™g
(
•
, 
cmdp
)

51 
SCR
 *
•
;

52 
EXCMD
 *
cmdp
;

54 
fûãπy≥
 
·y≥
;

55 
ARGS
 *
≠
;

56 
EX_PRIVATE
 *
exp
;

57 
MARK
 
rm
;

58 
ª˙o_t
 
 o
;

59 
rvÆ
;

60 c⁄° *
msg
;

62 
≠
 = 
cmdp
->
¨gv
[0];

63 i‡(
≠
->
Àn
 == 0) {

64 
	`ex_emsg
(
•
, 
cmdp
->
cmd
->
ußge
, 
EXM_USAGE
);

69 
exp
 = 
	`EXP
(
•
);

70 i‡(
exp
->
œ°bcomm
 !
NULL
)

71 
	`‰ì
(
exp
->
œ°bcomm
);

72 i‡((
exp
->
œ°bcomm
 = 
	`°rdup
(
≠
->
bp
)Ë=
NULL
) {

73 
	`msgq
(
•
, 
M_SYSERR
, 
NULL
);

81 i‡(
	`F_ISSET
(
cmdp
, 
E_MODIFY
Ë&& !F_ISSET(
•
, 
SC_EX_SILENT
)) {

88 i‡(
	`F_ISSET
(
•
, 
SC_VI
))

89 
	`vs_upd©e
(
•
, "!", 
≠
->
bp
);

91 ()
	`ex_¥ötf
(
•
, "!%s\n", 
≠
->
bp
);

92 ()
	`ex_fÊush
(
•
);

102 i‡(
cmdp
->
addr˙t
 == 0) {

103 
msg
 = 
NULL
;

104 i‡(
•
->
ï
 !
NULL
 && 
	`F_ISSET
(•->ï, 
F_MODIFIED
))

105 i‡(
	`O_ISSET
(
•
, 
O_AUTOWRITE
)) {

106 i‡(
	`fûe_aw
(
•
, 
FS_ALL
))

108 } i‡(
	`O_ISSET
(
•
, 
O_WARN
) &&

109 !
	`F_ISSET
(
•
, 
SC_EX_SILENT
))

110 
msg
 = 
	`msg_ˇt
(
•
,

112 
NULL
);

115 ()
	`ex_exec_¥oc
(
•
,

116 
cmdp
, 
≠
->
bp
, 
msg
, !
	`F_ISSET
(
•
, 
SC_EX
 | 
SC_SCR_EXWROTE
));

129 
	`NEEDFILE
(
•
, 
cmdp
);

132 
	`F_SET
(
cmdp
, 
E_AUTOPRINT
);

145 
·y≥
 = 
FILTER_BANG
;

146 i‡(
cmdp
->
addr1
.
 o
 =1 && cmdp->
addr2
.lno == 1) {

147 i‡(
	`db_œ°
(
•
, &
 o
))

149 i‡(
 o
 == 0) {

150 
cmdp
->
addr1
.
 o
 = cmdp->
addr2
.lno = 0;

151 
·y≥
 = 
FILTER_RBANG
;

154 
rvÆ
 = 
	`ex_fûãr
(
•
, 
cmdp
,

155 &
cmdp
->
addr1
, &cmdp->
addr2
, &
rm
, 
≠
->
bp
, 
·y≥
);

168 
•
->
 o
 = 
rm
.lno;

169 i‡(
	`F_ISSET
(
•
, 
SC_VI
)) {

170 
•
->
˙o
 = 0;

171 ()
	`n⁄bœnk
(
•
, sp->
 o
, &•->
˙o
);

173 
•
->
˙o
 = 
rm
.cno;

177 i‡(!
	`F_ISSET
(
•
, 
SC_VI
Ë&& !F_ISSET(•, 
SC_EX_SILENT
))

178 ()
	`ex_puts
(
•
, "!\n");

186 
	}
}

	@ex/ex_cd.c

10 
	~"c⁄fig.h
"

12 #i‚de‡
löt


13 c⁄° 
	gsccsid
[] = "@(#)ex_cd.c 10.10 (Berkeley) 8/12/96";

16 
	~<sys/∑øm.h
>

17 
	~<sys/queue.h
>

19 
	~<bô°rög.h
>

20 
	~<î∫o.h
>

21 
	~<limôs.h
>

22 
	~<pwd.h
>

23 
	~<°dio.h
>

24 
	~<°dlib.h
>

25 
	~<°rög.h
>

26 
	~<uni°d.h
>

28 
	~"../comm⁄/comm⁄.h
"

37 
	$ex_cd
(
•
, 
cmdp
)

38 
SCR
 *
•
;

39 
EXCMD
 *
cmdp
;

41 
∑sswd
 *
pw
;

42 
ARGS
 *
≠
;

43 
CHAR_T
 
ßvech
;

44 *
dú
, *
p
, *
t
;

45 
buf
[
MAXPATHLEN
 * 2];

53 i‡(
	`F_ISSET
(
•
->
ï
, 
F_MODIFIED
) &&

54 !
	`FL_ISSET
(
cmdp
->
iÊags
, 
E_C_FORCE
Ë&& 
•
->
‰p
->
«me
[0] != '/') {

55 
	`msgq
(
•
, 
M_ERR
,

60 
cmdp
->
¨gc
) {

63 i‡((
dú
 = 
	`gëív
("HOME")Ë=
NULL
) {

64 i‡((
pw
 = 
	`gëpwuid
(
	`gëuid
())Ë=
NULL
 ||

65 
pw
->
pw_dú
 =
NULL
 ||Öw->pw_dir[0] == '\0') {

66 
	`msgq
(
•
, 
M_ERR
,

70 
dú
 = 
pw
->
pw_dú
;

74 
dú
 = 
cmdp
->
¨gv
[0]->
bp
;

77 
	`ab‹t
();

85 i‡(!
	`chdú
(
dú
))

92 i‡(
cmdp
->
¨gc
 == 0 ||

93 (
≠
 = 
cmdp
->
¨gv
[0])->
bp
[0] == '/' ||

94 
≠
->
Àn
 =1 &&áp->
bp
[0] == '.' ||

95 
≠
->
Àn
 >2 &&áp->
bp
[0] == '.' &&áp->bp[1] == '.' &&

96 (
≠
->
bp
[2] == '/' ||áp->bp[2] == '\0'))

97 
îr
;

100 
p
 = 
t
 = 
	`O_STR
(
•
, 
O_CDPATH
);; ++p)

101 i‡(*
p
 == '\0' || *p == ':') {

110 i‡(
t
 < 
p
 - 1) {

111 
ßvech
 = *
p
;

112 *
p
 = '\0';

113 ()
	`¢¥ötf
(
buf
,

114 (
buf
), "%s/%s", 
t
, 
dú
);

115 *
p
 = 
ßvech
;

116 i‡(!
	`chdú
(
buf
)) {

117 i‡(
	`gëcwd
(
buf
, (buf)Ë!
NULL
)

118 
	`msgq_°r
(
•
, 
M_INFO
, 
buf
, "122|New current directory: %s");

122 
t
 = 
p
 + 1;

123 i‡(*
p
 == '\0')

127 
îr
: 
	`msgq_°r
(
•
, 
M_SYSERR
, 
dú
, "%s");

129 
	}
}

	@ex/ex_cmd.c

10 
	~"c⁄fig.h
"

12 #i‚de‡
löt


13 c⁄° 
	gsccsid
[] = "@(#)ex_cmd.c 10.20 (Berkeley) 10/10/96";

16 
	~<sys/ty≥s.h
>

17 
	~<sys/queue.h
>

19 
	~<bô°rög.h
>

20 
	~<limôs.h
>

21 
	~<°dio.h
>

23 
	~"../comm⁄/comm⁄.h
"

51 
EXCMDLIST
 c⁄° 
	gcmds
[] = {

53 {"\004", 
ex_¥
, 
E_ADDR2
,

58 {"!", 
ex_b™g
, 
E_ADDR2_NONE
 | 
E_SECURE
,

63 {"#", 
ex_numbî
, 
E_ADDR2
|
E_CLRFLAG
,

68 {"&", 
ex_subagaö
, 
E_ADDR2
,

73 {"*", 
ex_©
, 0,

78 {"<", 
ex_shi·l
, 
E_ADDR2
|
E_AUTOPRINT
,

83 {"=", 
ex_equÆ
, 
E_ADDR1
|
E_ADDR_ZERO
|
E_ADDR_ZERODEF
,

88 {">", 
ex_shi·r
, 
E_ADDR2
|
E_AUTOPRINT
,

93 {"@", 
ex_©
, 
E_ADDR2
,

98 {"≠≥nd", 
ex_≠≥nd
, 
E_ADDR1
|
E_ADDR_ZERO
|
E_ADDR_ZERODEF
,

103 {"abbªvüã", 
ex_abbr
, 0,

108 {"¨gs", 
ex_¨gs
, 0,

113 {"bg", 
ex_bg
, 
E_VIONLY
,

118 {"ch™ge", 
ex_ch™ge
, 
E_ADDR2
|
E_ADDR_ZERODEF
,

123 {"cd", 
ex_cd
, 0,

128 {"chdú", 
ex_cd
, 0,

133 {"c›y", 
ex_c›y
, 
E_ADDR2
|
E_AUTOPRINT
,

138 {"csc›e", 
ex_csc›e
, 0,

148 {"dñëe", 
ex_dñëe
, 
E_ADDR2
|
E_AUTOPRINT
,

153 {"di•œy", 
ex_di•œy
, 0,

158 {"edô", 
ex_edô
, 
E_NEWSCREEN
,

163 {"ex", 
ex_edô
, 
E_NEWSCREEN
,

168 {"exußge", 
ex_ußge
, 0,

173 {"fûe", 
ex_fûe
, 0,

178 {"fg", 
ex_fg
, 
E_NEWSCREEN
|
E_VIONLY
,

183 {"globÆ", 
ex_globÆ
, 
E_ADDR2_ALL
,

188 {"hñp", 
ex_hñp
, 0,

193 {"ö£π", 
ex_ö£π
, 
E_ADDR1
|
E_ADDR_ZERO
|
E_ADDR_ZERODEF
,

198 {"joö", 
ex_joö
, 
E_ADDR2
|
E_AUTOPRINT
,

203 {"k", 
ex_m¨k
, 
E_ADDR1
,

208 {"li°", 
ex_li°
, 
E_ADDR2
|
E_CLRFLAG
,

213 {"move", 
ex_move
, 
E_ADDR2
|
E_AUTOPRINT
,

218 {"m¨k", 
ex_m¨k
, 
E_ADDR1
,

223 {"m≠", 
ex_m≠
, 0,

228 {"mkexrc", 
ex_mkexrc
, 0,

233 {"√xt", 
ex_√xt
, 
E_NEWSCREEN
,

238 {"numbî", 
ex_numbî
, 
E_ADDR2
|
E_CLRFLAG
,

243 {"›í", 
ex_›í
, 
E_ADDR1
,

248 {"¥öt", 
ex_¥
, 
E_ADDR2
|
E_CLRFLAG
,

253 {"≥æ", 
ex_≥æ
, 
E_ADDR2_ALL
|
E_ADDR_ZERO
|

254 
E_ADDR_ZERODEF
|
E_SECURE
,

259 {"≥ædo", 
ex_≥æ
, 
E_ADDR2_ALL
|
E_ADDR_ZERO
|

260 
E_ADDR_ZERODEF
|
E_SECURE
,

265 {"¥e£rve", 
ex_¥e£rve
, 0,

270 {"¥evious", 
ex_¥ev
, 
E_NEWSCREEN
,

275 {"put", 
ex_put
,

276 
E_ADDR1
|
E_AUTOPRINT
|
E_ADDR_ZERO
|
E_ADDR_ZERODEF
,

281 {"quô", 
ex_quô
, 0,

286 {"ªad", 
ex_ªad
, 
E_ADDR1
|
E_ADDR_ZERO
|
E_ADDR_ZERODEF
,

291 {"ªcovî", 
ex_ªcovî
, 0,

296 {"ªsize", 
ex_ªsize
, 
E_VIONLY
,

301 {"ªwöd", 
ex_ªw
, 0,

311 {"s", 
ex_s
, 
E_ADDR2
,

316 {"s¸ùt", 
ex_s¸ùt
, 
E_SECURE
,

321 {"£t", 
ex_£t
, 0,

326 {"shñl", 
ex_shñl
, 
E_SECURE
,

331 {"sour˚", 
ex_sour˚
, 0,

336 {"°›", 
ex_°›
, 
E_SECURE
,

341 {"su•íd", 
ex_°›
, 
E_SECURE
,

346 {"t", 
ex_c›y
, 
E_ADDR2
|
E_AUTOPRINT
,

351 {"èg", 
ex_èg_push
, 
E_NEWSCREEN
,

356 {"èg√xt", 
ex_èg_√xt
, 0,

361 {"ègp›", 
ex_èg_p›
, 0,

366 {"èg¥ev", 
ex_èg_¥ev
, 0,

371 {"ègt›", 
ex_èg_t›
, 0,

376 {"t˛", 
ex_t˛
, 
E_ADDR2_ALL
|
E_ADDR_ZERO
|

377 
E_ADDR_ZERODEF
|
E_SECURE
,

382 {"undo", 
ex_undo
, 
E_AUTOPRINT
,

387 {"u«bbªvüã",
ex_u«bbr
, 0,

392 {"unm≠", 
ex_unm≠
, 0,

397 {"v", 
ex_v
, 
E_ADDR2_ALL
,

402 {"vîsi⁄", 
ex_vîsi⁄
, 0,

407 {"visuÆ", 
ex_visuÆ
, 
E_ADDR1
|
E_ADDR_ZERODEF
,

412 {"visuÆ", 
ex_edô
, 
E_NEWSCREEN
,

417 {"viußge", 
ex_viußge
, 0,

422 {"wrôe", 
ex_wrôe
, 
E_ADDR2_ALL
|
E_ADDR_ZERODEF
,

427 {"wn", 
ex_wn
, 
E_ADDR2_ALL
|
E_ADDR_ZERODEF
,

432 {"wq", 
ex_wq
, 
E_ADDR2_ALL
|
E_ADDR_ZERODEF
,

437 {"xô", 
ex_xô
, 
E_ADDR2_ALL
|
E_ADDR_ZERODEF
,

442 {"y™k", 
ex_y™k
, 
E_ADDR2
,

447 {"z", 
ex_z
, 
E_ADDR1
,

452 {"~", 
ex_subtûde
, 
E_ADDR2
,

456 {
NULL
},

	@ex/ex_cscope.c

10 
	~"c⁄fig.h
"

12 #i‚de‡
löt


13 c⁄° 
	gsccsid
[] = "@(#)ex_cscope.c 10.13 (Berkeley) 9/15/96";

16 
	~<sys/∑øm.h
>

17 
	~<sys/ty≥s.h
>

18 
	~<sys/queue.h
>

19 
	~<sys/°©.h
>

20 
	~<sys/time.h
>

21 
	~<sys/waô.h
>

23 
	~<bô°rög.h
>

24 
	~<˘y≥.h
>

25 
	~<î∫o.h
>

26 
	~<f˙é.h
>

27 
	~<limôs.h
>

28 
	~<°ddef.h
>

29 
	~<°dio.h
>

30 
	~<°dlib.h
>

31 
	~<°rög.h
>

32 
	~<ãrmios.h
>

33 
	~<uni°d.h
>

35 
	~"../comm⁄/comm⁄.h
"

36 
	~"∑th«mes.h
"

37 
	~"èg.h
"

39 
	#CSCOPE_DBFILE
 "csc›e.out"

	)

40 
	#CSCOPE_PATHS
 "csc›e.ç©h"

	)

54 
	#FINDHELP
 "\
 c|d|e|f|g|i|s|àbuf„r|∑âîn\n\
: föd cÆÀr†o‡«me\n\
: födáŒ fun˘i⁄ cÆl†madê‰omÇame\n\
: födÖ©ã∫\n\
: föd fûe†wôhÇamêa†sub°rög\n\
: föd deföôi⁄ o‡«me\n\
: föd fûe†#ö˛udögÇame\n\
: födáŒ u£†o‡«me\n\
: födássignmít†tÿ«me"

	)

65 
csc›e_add
 
__P
((
SCR
 *, 
EXCMD
 *, *));

66 
csc›e_föd
 
__P
((
SCR
 *, 
EXCMD
*, *));

67 
csc›e_hñp
 
__P
((
SCR
 *, 
EXCMD
 *, *));

68 
csc›e_kûl
 
__P
((
SCR
 *, 
EXCMD
 *, *));

69 
csc›e_ª£t
 
__P
((
SCR
 *, 
EXCMD
 *, *));

71 
	s_cc
 {

72 *
	m«me
;

73 (*
	mfun˘i⁄
Ë
__P
((
SCR
 *, 
EXCMD
 *, *));

74 *
	mhñp_msg
;

75 *
	mußge_msg
;

76 } 
	tCC
;

78 
CC
 c⁄° 
	gcsc›e_cmds
[] = {

79 { "add", 
csc›e_add
,

81 { "föd", 
csc›e_föd
,

82 "QuîyÅhêd©aba£†f‹áÖ©ã∫", 
FINDHELP
 },

83 { "hñp", 
csc›e_hñp
,

85 { "kûl", 
csc›e_kûl
,

87 { "ª£t", 
csc›e_ª£t
,

89 { 
NULL
 }

92 
TAGQ
 *
¸óã_cs_cmd
 
__P
((
SCR
 *, *, 
size_t
 *));

93 
csc_hñp
 
__P
((
SCR
 *, *));

94 
csc_fûe
 
__P
((
SCR
 *,

95 
CSC
 *, *, **, 
size_t
 *, *));

96 
gë_∑ths
 
__P
((
SCR
 *, 
CSC
 *));

97 
CC
 c⁄° *
lookup_ccmd
 
__P
((*));

98 
∑r£
 
__P
((
SCR
 *, 
CSC
 *, 
TAGQ
 *, *));

99 
ªad_¥om±
 
__P
((
SCR
 *, 
CSC
 *));

100 
run_csc›e
 
__P
((
SCR
 *, 
CSC
 *, *));

101 
°¨t_csc›es
 
__P
((
SCR
 *, 
EXCMD
 *));

102 
ãrmö©e
 
__P
((
SCR
 *, 
CSC
 *, ));

111 
	$ex_csc›e
(
•
, 
cmdp
)

112 
SCR
 *
•
;

113 
EXCMD
 *
cmdp
;

115 
CC
 c⁄° *
c˝
;

116 
EX_PRIVATE
 *
exp
;

117 
i
;

118 *
cmd
, *
p
;

121 
exp
 = 
	`EXP
(
•
);

122 i‡(!
	`F_ISSET
(
exp
, 
EXP_CSCINIT
Ë&& 
	`°¨t_csc›es
(
•
, 
cmdp
))

124 
	`F_SET
(
exp
, 
EXP_CSCINIT
);

127 
p
 = 
cmdp
->
¨gv
[0]->
bp
, 
i
 = cmdp->¨gv[0]->
Àn
; i > 0; --i, ++p)

128 i‡(!
	`is•a˚
(*
p
))

130 i‡(
i
 == 0)

131 
ußge
;

134 
cmd
 = 
p
; 
i
 > 0; --i, ++p)

135 i‡(
	`is•a˚
(*
p
))

137 i‡(*
p
 != '\0') {

138 *
p
++ = '\0';

139 ; *
p
 && 
	`is•a˚
(*p); ++p);

142 i‡((
c˝
 = 
	`lookup_ccmd
(
cmd
)Ë=
NULL
) {

143 
ußge
: 
	`msgq
(
•
, 
M_ERR
, "309|Use \"cscope help\" for help");

148  (
c˝
->
	`fun˘i⁄
(
•
, 
cmdp
, 
p
));

149 
	}
}

156 
	$°¨t_csc›es
(
•
, 
cmdp
)

157 
SCR
 *
•
;

158 
EXCMD
 *
cmdp
;

160 
size_t
 
bÀn
, 
Àn
;

161 *
bp
, *
csc›es
, *
p
, *
t
;

175 i‡((
csc›es
 = 
	`gëív
("CSCOPE_DIRS")Ë=
NULL
)

177 
Àn
 = 
	`°æí
(
csc›es
);

178 
	`GET_SPACE_RET
(
•
, 
bp
, 
bÀn
, 
Àn
);

179 
	`mem˝y
(
bp
, 
csc›es
, 
Àn
 + 1);

181 
csc›es
 = 
t
 = 
bp
; (
p
 = 
	`°r£p
(&t, "\à:")Ë!
NULL
;)

182 i‡(*
p
 != '\0')

183 ()
	`csc›e_add
(
•
, 
cmdp
, 
p
);

185 
	`FREE_SPACE
(
•
, 
bp
, 
bÀn
);

187 
	}
}

194 
	$csc›e_add
(
•
, 
cmdp
, 
d«me
)

195 
SCR
 *
•
;

196 
EXCMD
 *
cmdp
;

197 *
d«me
;

199 
°©
 
sb
;

200 
EX_PRIVATE
 *
exp
;

201 
CSC
 *
csc
;

202 
size_t
 
Àn
;

203 
cur_¨gc
;

204 *
db«me
, 
∑th
[
MAXPATHLEN
];

206 
exp
 = 
	`EXP
(
•
);

213 
cur_¨gc
 = 
cmdp
->
¨gc
;

214 i‡(
	`¨gv_exp2
(
•
, 
cmdp
, 
d«me
, 
	`°æí
(dname)))

216 i‡(
cmdp
->
¨gc
 =
cur_¨gc
) {

217 ()
	`csc_hñp
(
•
, "add");

220 i‡(
cmdp
->
¨gc
 =
cur_¨gc
 + 1)

221 
d«me
 = 
cmdp
->
¨gv
[
cur_¨gc
]->
bp
;

223 
	`ex_emsg
(
•
, 
d«me
, 
EXM_FILECOUNT
);

234 i‡(
	`°©
(
d«me
, &
sb
)) {

235 
	`msgq
(
•
, 
M_SYSERR
, 
d«me
);

238 i‡(
	`S_ISDIR
(
sb
.
°_mode
)) {

239 ()
	`¢¥ötf
(
∑th
, (path),

240 "%s/%s", 
d«me
, 
CSCOPE_DBFILE
);

241 i‡(
	`°©
(
∑th
, &
sb
)) {

242 
	`msgq
(
•
, 
M_SYSERR
, 
∑th
);

245 
db«me
 = 
CSCOPE_DBFILE
;

246 } i‡((
db«me
 = 
	`°ºchr
(
d«me
, '/')Ë!
NULL
)

247 *
db«me
++ = '\0';

250 
Àn
 = 
	`°æí
(
d«me
);

251 
	`CALLOC_RET
(
•
, 
csc
, 
CSC
 *, 1, (CSCË+ 
Àn
);

252 
csc
->
d«me
 = csc->
buf
;

253 
csc
->
dÀn
 = 
Àn
;

254 
	`mem˝y
(
csc
->
d«me
, d«me, 
Àn
);

255 
csc
->
mtime
 = 
sb
.
°_mtime
;

258 i‡(
	`gë_∑ths
(
•
, 
csc
))

259 
îr
;

262 i‡(
	`run_csc›e
(
•
, 
csc
, 
db«me
))

263 
îr
;

270 
	`LIST_INSERT_HEAD
(&
exp
->
cscq
, 
csc
, 
q
);

273 i‡(
	`ªad_¥om±
(
•
, 
csc
)) {

274 
	`ãrmö©e
(
•
, 
csc
, 0);

280 
îr
: 
	`‰ì
(
csc
);

282 
	}
}

290 
	$gë_∑ths
(
•
, 
csc
)

291 
SCR
 *
•
;

292 
CSC
 *
csc
;

294 
°©
 
sb
;

295 
fd
, 
√¡rõs
;

296 
size_t
 
Àn
;

297 *
p
, **
∑thp
, 
buf
[
MAXPATHLEN
 * 2];

311 ()
	`¢¥ötf
(
buf
, (buf), "%s/%s", 
csc
->
d«me
, 
CSCOPE_PATHS
);

312 i‡(
	`°©
(
buf
, &
sb
) == 0) {

314 
Àn
 = 
sb
.
°_size
;

315 
	`MALLOC_RET
(
•
, 
csc
->
pbuf
, *, 
Àn
 + 1);

316 i‡((
fd
 = 
	`›í
(
buf
, 
O_RDONLY
, 0)) < 0 ||

317 
	`ªad
(
fd
, 
csc
->
pbuf
, 
Àn
) !=Üen) {

318 
	`msgq_°r
(
•
, 
M_SYSERR
, 
buf
, "%s");

319 i‡(
fd
 >= 0)

320 ()
	`˛o£
(
fd
);

323 ()
	`˛o£
(
fd
);

324 
csc
->
pbuf
[
Àn
] = '\0';

327 
√¡rõs
 = 0, 
p
 = 
csc
->
pbuf
; *p != '\0'; ++p)

328 i‡(
p
[0] == ':' &&Ö[1] != '\0')

329 ++
√¡rõs
;

332 
	`CALLOC_GOTO
(
•
,

333 
csc
->
∑ths
, **, 
√¡rõs
 + 1, (**));

334 
∑thp
 = 
csc
->
∑ths
, 
p
 = 
	`°πok
(csc->
pbuf
, ":");

335 
p
 !
NULL
;Ö = 
	`°πok
(NULL, ":"))

336 *
∑thp
++ = 
p
;

344 i‡((
csc
->
pbuf
 = 
	`°rdup
(csc->
d«me
)Ë=
NULL
) {

345 
	`msgq
(
•
, 
M_SYSERR
, 
NULL
);

348 
	`CALLOC_GOTO
(
•
, 
csc
->
∑ths
, **, 2, (*));

349 
csc
->
∑ths
[0] = csc->
pbuf
;

352 
Æloc_îr
:

353 i‡(
csc
->
pbuf
 !
NULL
) {

354 
	`‰ì
(
csc
->
pbuf
);

355 
csc
->
pbuf
 = 
NULL
;

358 
	}
}

365 
	$run_csc›e
(
•
, 
csc
, 
db«me
)

366 
SCR
 *
•
;

367 
CSC
 *
csc
;

368 *
db«me
;

370 
to_cs
[2], 
‰om_cs
[2];

371 
cmd
[
MAXPATHLEN
 * 2];

377 
to_cs
[0] =Åo_cs[1] = 
‰om_cs
[0] = from_cs[0] = -1;

378 i‡(
	`pùe
(
to_cs
Ë< 0 ||Öùe(
‰om_cs
) < 0) {

379 
	`msgq
(
•
, 
M_SYSERR
, "pipe");

380 
îr
;

382 
csc
->
pid
 = 
	`vf‹k
()) {

384 
	`msgq
(
•
, 
M_SYSERR
, "vfork");

385 
îr
: i‡(
to_cs
[0] != -1)

386 ()
	`˛o£
(
to_cs
[0]);

387 i‡(
to_cs
[1] != -1)

388 ()
	`˛o£
(
to_cs
[1]);

389 i‡(
‰om_cs
[0] != -1)

390 ()
	`˛o£
(
‰om_cs
[0]);

391 i‡(
‰om_cs
[1] != -1)

392 ()
	`˛o£
(
‰om_cs
[1]);

395 ()
	`dup2
(
to_cs
[0], 
STDIN_FILENO
);

396 ()
	`dup2
(
‰om_cs
[1], 
STDOUT_FILENO
);

397 ()
	`dup2
(
‰om_cs
[1], 
STDERR_FILENO
);

400 ()
	`˛o£
(
to_cs
[1]);

401 ()
	`˛o£
(
‰om_cs
[0]);

404 
	#CSCOPE_CMD_FMT
 "cd '%s' &&Éxe¯csc›ê-d»-‡%s"

	)

405 ()
	`¢¥ötf
(
cmd
, (cmd),

406 
CSCOPE_CMD_FMT
, 
csc
->
d«me
, 
db«me
);

407 ()
	`exe˛
(
_PATH_BSHELL
, "sh", "-c", 
cmd
, 
NULL
);

408 
	`msgq_°r
(
•
, 
M_SYSERR
, 
cmd
, "execl: %s");

409 
	`_exô
 (127);

413 ()
	`˛o£
(
to_cs
[0]);

414 ()
	`˛o£
(
‰om_cs
[1]);

420 
csc
->
to_fd
 = 
to_cs
[1];

421 
csc
->
to_Â
 = 
	`fd›í
(
to_cs
[1], "w");

422 
csc
->
‰om_fd
 = 
‰om_cs
[0];

423 
csc
->
‰om_Â
 = 
	`fd›í
(
‰om_cs
[0], "r");

427 
	}
}

434 
	$csc›e_föd
(
•
, 
cmdp
, 
∑âîn
)

435 
SCR
 *
•
;

436 
EXCMD
 *
cmdp
;

437 *
∑âîn
;

439 
CSC
 *
csc
, *
csc_√xt
;

440 
EX_PRIVATE
 *
exp
;

441 
FREF
 *
‰p
;

442 
TAGQ
 *
πqp
, *
tqp
;

443 
TAG
 *
πp
;

444 
ª˙o_t
 
 o
;

445 
size_t
 
˙o
, 
£¨ch
;

446 
f‹˚
, 
i°mp
, 
m©ches
;

448 
exp
 = 
	`EXP
(
•
);

451 i‡(
exp
->
cscq
.
lh_fú°
 =
NULL
) {

452 
	`msgq
(
•
, 
M_ERR
, "310|No cscope connectionsÑunning");

461 
πp
 = 
NULL
;

462 
πqp
 = 
NULL
;

463 i‡(
exp
->
tq
.
cqh_fú°
 == (*)&exp->tq) {

465 
	`CALLOC_GOTO
(
•
, 
πqp
, 
TAGQ
 *, 1, (TAGQ));

466 
	`CIRCLEQ_INIT
(&
πqp
->
ègq
);

469 
	`CALLOC_GOTO
(
•
, 
πp
, 
TAG
 *, 1, (TAG));

470 
	`CIRCLEQ_INSERT_HEAD
(&
πqp
->
ègq
, 
πp
, 
q
);

471 
πqp
->
cuºít
 = 
πp
;

475 i‡((
tqp
 = 
	`¸óã_cs_cmd
(
•
, 
∑âîn
, &
£¨ch
)Ë=
NULL
)

476 
îr
;

482 
‰p
 = 
•
->frp;

483 
 o
 = 
•
->lno;

484 
˙o
 = 
•
->cno;

485 
i°mp
 = 
	`F_ISSET
(
•
->
‰p
, 
FR_TMPFILE
Ë&& !F_ISSET(
cmdp
, 
E_NEWSCREEN
);

488 
m©ches
 = 0;

489 
csc
 = 
exp
->
cscq
.
lh_fú°
; cs¯!
NULL
; cs¯
csc_√xt
) {

491 
csc_√xt
 = 
csc
->
q
.
À_√xt
;

499 ()
	`Ârötf
(
csc
->
to_Â
, "%d%s\n", 
£¨ch
, 
tqp
->
èg
 + 2);

500 ()
	`fÊush
(
csc
->
to_Â
);

503 i‡(
	`∑r£
(
•
, 
csc
, 
tqp
, &
m©ches
)) {

504 i‡(
πqp
 !
NULL
)

505 
	`‰ì
(
πqp
);

506 
	`ègq_‰ì
(
•
, 
tqp
);

511 i‡(
m©ches
 == 0) {

512 
	`msgq
(
•
, 
M_INFO
, "278|No matches for query");

516 
tqp
->
cuºít
 =Åqp->
ègq
.
cqh_fú°
;

519 
f‹˚
 = 
	`FL_ISSET
(
cmdp
->
iÊags
, 
E_C_FORCE
);

520 i‡(
	`F_ISSET
(
cmdp
, 
E_NEWSCREEN
)) {

521 i‡(
	`ex_èg_Nswôch
(
•
, 
tqp
->
cuºít
, 
f‹˚
))

522 
îr
;

525 
•
 = sp->
√xtdi•
;

526 
exp
 = 
	`EXP
(
•
);

528 i‡(
	`ex_èg_nswôch
(
•
, 
tqp
->
cuºít
, 
f‹˚
))

529 
îr
;

536 i‡(
exp
->
tq
.
cqh_fú°
 == (*)&exp->tq) {

537 
	`CIRCLEQ_INSERT_HEAD
(&
exp
->
tq
, 
πqp
, 
q
);

539 
πqp
 = 
exp
->
tq
.
cqh_fú°
;

542 
	`CIRCLEQ_INSERT_HEAD
(&
exp
->
tq
, 
tqp
, 
q
);

544 ()
	`csc›e_£¨ch
(
•
, 
tqp
,Åqp->
cuºít
);

555 i‡(
i°mp
) {

556 
πqp
->
cuºít
->
‰p
 = 
•
->frp;

557 
πqp
->
cuºít
->
 o
 = 
•
->lno;

558 
πqp
->
cuºít
->
˙o
 = 
•
->cno;

560 
πqp
->
cuºít
->
‰p
 = frp;

561 
πqp
->
cuºít
->
 o
 =Üno;

562 
πqp
->
cuºít
->
˙o
 = cno;

567 
îr
:

568 
Æloc_îr
:

569 i‡(
πqp
 !
NULL
)

570 
	`‰ì
(
πqp
);

571 i‡(
πp
 !
NULL
)

572 
	`‰ì
(
πp
);

574 
	}
}

580 
TAGQ
 *

581 
	$¸óã_cs_cmd
(
•
, 
∑âîn
, 
£¨chp
)

582 
SCR
 *
•
;

583 *
∑âîn
;

584 
size_t
 *
£¨chp
;

586 
CB
 *
cbp
;

587 
TAGQ
 *
tqp
;

588 
size_t
 
éí
;

589 *
p
;

598 
	#CSCOPE_QUERIES
 "sgd˘Éfi"

	)

600 i‡(
∑âîn
 =
NULL
)

601 
ußge
;

604 ; 
	`isbœnk
(
∑âîn
[0]); ++pattern);

605 i‡(
∑âîn
[0] ='\0' || !
	`isbœnk
(pattern[1]))

606 
ußge
;

607 *
£¨chp
 = 0, 
p
 = 
CSCOPE_QUERIES
;

608 *
p
 !'\0' && *∞!
∑âîn
[0]; ++*
£¨chp
, ++p);

609 i‡(*
p
 == '\0') {

610 
	`msgq
(
•
, 
M_ERR
,

612 
	`KEY_NAME
(
•
, 
∑âîn
[0]), 
CSCOPE_QUERIES
);

613  (
NULL
);

617 
p
 = 
∑âîn
 + 1; *∞!'\0' && 
	`isbœnk
(*p); ++p);

618 i‡(*
p
 == '\0') {

619 
ußge
: ()
	`csc_hñp
(
•
, "find");

620  (
NULL
);

624 
cbp
 = 
NULL
;

625 i‡(
p
[0] == '"' &&Ö[1] != '\0' &&Ö[2] == '\0')

626 
	`CBNAME
(
•
, 
cbp
, 
p
[1]);

627 i‡(
cbp
 !
NULL
) {

628 
p
 = 
cbp
->
ãxtq
.
cqh_fú°
->
lb
;

629 
éí
 = 
cbp
->
ãxtq
.
cqh_fú°
->
Àn
;

631 
éí
 = 
	`°æí
(
p
);

634 
	`CALLOC
(
•
, 
tqp
, 
TAGQ
 *, 1, (TAGQË+ 
éí
 + 3);

635 i‡(
tqp
 =
NULL
)

636  (
NULL
);

637 
	`CIRCLEQ_INIT
(&
tqp
->
ègq
);

638 
tqp
->
èg
 =Åqp->
buf
;

639 
tqp
->
èg
[0] = 
∑âîn
[0];

640 
tqp
->
èg
[1] = ' ';

641 
tqp
->
éí
 =Ålen + 2;

642 
	`mem˝y
(
tqp
->
èg
 + 2, 
p
, 
éí
);

643 
tqp
->
èg
[
éí
 + 2] = '\0';

644 
	`F_SET
(
tqp
, 
TAG_CSCOPE
);

646  (
tqp
);

647 
	}
}

654 
	$∑r£
(
•
, 
csc
, 
tqp
, 
m©che•
)

655 
SCR
 *
•
;

656 
CSC
 *
csc
;

657 
TAGQ
 *
tqp
;

658 *
m©che•
;

660 
TAG
 *
ç
;

661 
ª˙o_t
 
¶no
;

662 
size_t
 
dÀn
, 
∆í
, 
¶í
;

663 
ch
, 
i
, 
isﬁdî
, 
∆öes
;

664 *
d«me
, *
«me
, *
£¨ch
, *
p
, *
t
, 
dummy
[2], 
buf
[2048];

667 i‡(!
	`fgës
(
buf
, (buf), 
csc
->
‰om_Â
))

668 
io_îr
;

676 
	#CSCOPE_NLINES_FMT
 "csc›e: %dÜöes%1[\n]"

	)

677 i‡(
	`ssˇnf
(
buf
, 
CSCOPE_NLINES_FMT
, &
∆öes
, 
dummy
) == 2)

679 i‡((
p
 = 
	`°rchr
(
buf
, '\n')Ë!
NULL
)

680 *
p
 = '\0';

681 
	`msgq
(
•
, 
M_ERR
, "%s: \"%s\"", 
csc
->
d«me
, 
buf
);

684 
∆öes
--) {

685 i‡(
	`fgës
(
buf
, (buf), 
csc
->
‰om_Â
Ë=
NULL
)

686 
io_îr
;

689 i‡((
p
 = 
	`°rchr
(
buf
, '\n')Ë=
NULL
) {

690 (
ch
 = 
	`gëc
(
csc
->
‰om_Â
)Ë!
EOF
 && ch != '\n');

693 *
p
 = '\0';

703 
p
 = 
buf
, 
i
 = 0;

704 
i
 < 3 && (
t
 = 
	`°r£p
(&
p
, "\à")Ë!
NULL
; ++i)

705 
i
) {

707 
«me
 = 
t
;

708 
∆í
 = 
	`°æí
(
«me
);

713 
¶no
 = (
ª˙o_t
)
	`©ﬁ
(
t
);

716 i‡(
i
 !3 || 
p
 =
NULL
 || 
t
 == NULL)

720 
£¨ch
 = 
p
;

721 
¶í
 = 
	`°æí
(
p
);

724 
	`csc_fûe
(
•
, 
csc
, 
«me
, &
d«me
, &
dÀn
, &
isﬁdî
);

731 i‡(
isﬁdî
 || 
	`°rcmp
(
£¨ch
, "<unknown>") == 0) {

732 
£¨ch
 = 
NULL
;

733 
¶í
 = 0;

740 
	`CALLOC_RET
(
•
, 
ç
,

741 
TAG
 *, 1, (TAGË+ 
dÀn
 + 2 + 
∆í
 + 1 + 
¶í
 + 1);

742 
ç
->
‚ame
 =Åp->
buf
;

743 i‡(
dÀn
 != 0) {

744 
	`mem˝y
(
ç
->
‚ame
, 
d«me
, 
dÀn
);

745 
ç
->
‚ame
[
dÀn
] = '/';

746 ++
dÀn
;

748 
	`mem˝y
(
ç
->
‚ame
 + 
dÀn
, 
«me
, 
∆í
 + 1);

749 
ç
->
‚Àn
 = 
dÀn
 + 
∆í
;

750 
ç
->
¶no
 = slno;

751 i‡(
¶í
 != 0) {

752 
ç
->
£¨ch
 =Åp->
‚ame
 +Åp->
‚Àn
 + 1;

753 
	`mem˝y
(
ç
->
£¨ch
, sórch, (ç->
¶í
 = slen) + 1);

755 
	`CIRCLEQ_INSERT_TAIL
(&
tqp
->
ègq
, 
ç
, 
q
);

757 ++*
m©che•
;

760 ()
	`ªad_¥om±
(
•
, 
csc
);

763 
io_îr
: i‡(
	`„of
(
csc
->
‰om_Â
))

764 
î∫o
 = 
EIO
;

765 
	`msgq_°r
(
•
, 
M_SYSERR
, "%s", 
csc
->
d«me
);

766 
	`ãrmö©e
(
•
, 
csc
, 0);

768 
	}
}

775 
	$csc_fûe
(
•
, 
csc
, 
«me
, 
dúp
, 
dÀ≈
, 
isﬁdîp
)

776 
SCR
 *
•
;

777 
CSC
 *
csc
;

778 *
«me
, **
dúp
;

779 
size_t
 *
dÀ≈
;

780 *
isﬁdîp
;

782 
°©
 
sb
;

783 **
µ
, 
buf
[
MAXPATHLEN
];

792 
µ
 = 
csc
->
∑ths
; *µ !
NULL
; ++pp) {

793 ()
	`¢¥ötf
(
buf
, (buf), "%s/%s", *
µ
, 
«me
);

794 i‡(
	`°©
(
buf
, &
sb
) == 0) {

795 *
dúp
 = *
µ
;

796 *
dÀ≈
 = 
	`°æí
(*
µ
);

797 *
isﬁdîp
 = 
sb
.
°_mtime
 < 
csc
->
mtime
;

801 *
dÀ≈
 = 0;

802 
	}
}

809 
	$csc›e_hñp
(
•
, 
cmdp
, 
subcmd
)

810 
SCR
 *
•
;

811 
EXCMD
 *
cmdp
;

812 *
subcmd
;

814  (
	`csc_hñp
(
•
, 
subcmd
));

815 
	}
}

822 
	$csc_hñp
(
•
, 
cmd
)

823 
SCR
 *
•
;

824 *
cmd
;

826 
CC
 c⁄° *
c˝
;

828 i‡(
cmd
 !
NULL
 && *cmd != '\0')

829 i‡((
c˝
 = 
	`lookup_ccmd
(
cmd
)Ë=
NULL
) {

830 
	`ex_¥ötf
(
•
,

831 "%†d€¢'àm©chány csc›êcomm™d\n", 
cmd
);

834 
	`ex_¥ötf
(
•
,

835 "Comm™d: %†(%s)\n", 
c˝
->
«me
, c˝->
hñp_msg
);

836 
	`ex_¥ötf
(
•
, " Ußge: %s\n", 
c˝
->
ußge_msg
);

840 
	`ex_¥ötf
(
•
, "cscope commands:\n");

841 
c˝
 = 
csc›e_cmds
; c˝->
«me
 !
NULL
; ++ccp)

842 
	`ex_¥ötf
(
•
, " %*s: %s\n", 5, 
c˝
->
«me
, c˝->
hñp_msg
);

844 
	}
}

851 
	$csc›e_kûl
(
•
, 
cmdp
, 
˙
)

852 
SCR
 *
•
;

853 
EXCMD
 *
cmdp
;

854 *
˙
;

856  (
	`ãrmö©e
(
•
, 
NULL
, 
	`©oi
(
˙
)));

857 
	}
}

864 
	$ãrmö©e
(
•
, 
csc
, 
n
)

865 
SCR
 *
•
;

866 
CSC
 *
csc
;

867 
n
;

869 
EX_PRIVATE
 *
exp
;

870 
i
, 
p°©
;

872 
exp
 = 
	`EXP
(
•
);

878 i‡(
csc
 =
NULL
) {

879 i‡(
n
 < 1)

880 
badno
;

881 
i
 = 1, 
csc
 = 
exp
->
cscq
.
lh_fú°
;

882 
csc
 !
NULL
; cs¯csc->
q
.
À_√xt
, 
i
++)

883 i‡(
i
 =
n
)

885 i‡(
csc
 =
NULL
) {

886 
badno
: 
	`msgq
(
•
, 
M_ERR
, "312|%d:Çÿsuch csc›ê£ssi⁄", 
n
);

899 i‡(
csc
->
‰om_Â
 !
NULL
)

900 ()
	`f˛o£
(
csc
->
‰om_Â
);

901 i‡(
csc
->
to_Â
 !
NULL
)

902 ()
	`f˛o£
(
csc
->
to_Â
);

903 ()
	`waôpid
(
csc
->
pid
, &
p°©
, 0);

906 
	`LIST_REMOVE
(
csc
, 
q
);

907 i‡(
csc
->
pbuf
 !
NULL
)

908 
	`‰ì
(
csc
->
pbuf
);

909 i‡(
csc
->
∑ths
 !
NULL
)

910 
	`‰ì
(
csc
->
∑ths
);

911 
	`‰ì
(
csc
);

913 
	}
}

920 
	$csc›e_ª£t
(
•
, 
cmdp
, 
nŸu£dp
)

921 
SCR
 *
•
;

922 
EXCMD
 *
cmdp
;

923 *
nŸu£dp
;

925 
EX_PRIVATE
 *
exp
;

927 
exp
 = 
	`EXP
(
•
);Éxp->
cscq
.
lh_fú°
 !
NULL
;)

928 i‡(
	`csc›e_kûl
(
•
, 
cmdp
, "1"))

931 
	}
}

940 
	$csc›e_di•œy
(
•
)

941 
SCR
 *
•
;

943 
EX_PRIVATE
 *
exp
;

944 
CSC
 *
csc
;

945 
i
;

947 
exp
 = 
	`EXP
(
•
);

948 i‡(
exp
->
cscq
.
lh_fú°
 =
NULL
) {

949 
	`ex_¥ötf
(
•
, "No cscope connections.\n");

952 
i
 = 1,

953 
csc
 = 
exp
->
cscq
.
lh_fú°
; cs¯!
NULL
; ++
i
, cs¯csc->
q
.
À_√xt
)

954 
	`ex_¥ötf
(
•
,

955 "%2d %†’ro˚s†%lu)\n", 
i
, 
csc
->
d«me
, (
u_l⁄g
)csc->
pid
);

957 
	}
}

966 
	$csc›e_£¨ch
(
•
, 
tqp
, 
ç
)

967 
SCR
 *
•
;

968 
TAGQ
 *
tqp
;

969 
TAG
 *
ç
;

971 
MARK
 
m
;

974 i‡(
ç
->
£¨ch
 =
NULL
) {

975 i‡(!
	`db_exi°
(
•
, 
ç
->
¶no
)) {

976 
	`èg_msg
(
•
, 
TAG_BADLNO
, 
tqp
->
èg
);

979 
m
.
 o
 = 
ç
->
¶no
;

985 
m
.
 o
 = 1;

986 
m
.
˙o
 = 0;

987 i‡(
	`f_£¨ch
(
•
, &
m
, &m,

988 
ç
->
£¨ch
,Åp->
¶í
, 
NULL
, 
SEARCH_CSCOPE
 | 
SEARCH_FILE
)) {

989 
	`èg_msg
(
•
, 
TAG_SEARCH
, 
tqp
->
èg
);

998 i‡(
•
->
£¨chdú
 =
NOTSET
)

999 
•
->
£¨chdú
 = 
FORWARD
;

1006 
•
->
 o
 = 
m
.lno;

1007 
•
->
˙o
 = 0;

1008 ()
	`n⁄bœnk
(
•
, sp->
 o
, &•->
˙o
);

1010 
	}
}

1017 
CC
 const *

1018 
	$lookup_ccmd
(
«me
)

1019 *
«me
;

1021 
CC
 c⁄° *
c˝
;

1022 
size_t
 
Àn
;

1024 
Àn
 = 
	`°æí
(
«me
);

1025 
c˝
 = 
csc›e_cmds
; c˝->
«me
 !
NULL
; ++ccp)

1026 i‡(
	`°∫cmp
(
«me
, 
c˝
->«me, 
Àn
) == 0)

1027  (
c˝
);

1028  (
NULL
);

1029 
	}
}

1036 
	$ªad_¥om±
(
•
, 
csc
)

1037 
SCR
 *
•
;

1038 
CSC
 *
csc
;

1040 
ch
;

1042 
	#CSCOPE_PROMPT
 ">> "

	)

1044 (
ch
 =

1045 
	`gëc
(
csc
->
‰om_Â
)Ë!
EOF
 && 
ch
 !
CSCOPE_PROMPT
[0]);

1046 i‡(
ch
 =
EOF
) {

1047 
	`ãrmö©e
(
•
, 
csc
, 0);

1050 i‡(
	`gëc
(
csc
->
‰om_Â
Ë!
CSCOPE_PROMPT
[1])

1052 i‡(
	`gëc
(
csc
->
‰om_Â
Ë!
CSCOPE_PROMPT
[2])

1057 
	}
}

	@ex/ex_delete.c

10 
	~"c⁄fig.h
"

12 #i‚de‡
löt


13 c⁄° 
	gsccsid
[] = "@(#)ex_delete.c 10.9 (Berkeley) 10/23/96";

16 
	~<sys/ty≥s.h
>

17 
	~<sys/queue.h
>

19 
	~<bô°rög.h
>

20 
	~<limôs.h
>

21 
	~<°dio.h
>

23 
	~"../comm⁄/comm⁄.h
"

33 
	$ex_dñëe
(
•
, 
cmdp
)

34 
SCR
 *
•
;

35 
EXCMD
 *
cmdp
;

37 
ª˙o_t
 
 o
;

39 
	`NEEDFILE
(
•
, 
cmdp
);

47 i‡(
	`cut
(
•
,

48 
	`FL_ISSET
(
cmdp
->
iÊags
, 
E_C_BUFFER
Ë? &cmdp->
buf„r
 : 
NULL
,

49 &
cmdp
->
addr1
, &cmdp->
addr2
, 
CUT_LINEMODE
))

53 i‡(
	`dñ
(
•
, &
cmdp
->
addr1
, &cmdp->
addr2
, 1))

57 
•
->
 o
 = 
cmdp
->
addr1
.lno;

60 i‡(
	`db_œ°
(
•
, &
 o
))

62 i‡(
•
->
 o
 >Üno)

63 
•
->
 o
 =Üno;

65 
	}
}

	@ex/ex_display.c

10 
	~"c⁄fig.h
"

12 #i‚de‡
löt


13 c⁄° 
	gsccsid
[] = "@(#)ex_display.c 10.12 (Berkeley) 4/10/96";

16 
	~<sys/ty≥s.h
>

17 
	~<sys/queue.h
>

19 
	~<bô°rög.h
>

20 
	~<˘y≥.h
>

21 
	~<limôs.h
>

22 
	~<°dio.h
>

23 
	~<°rög.h
>

25 
	~"../comm⁄/comm⁄.h
"

26 
	~"èg.h
"

28 
bdi•œy
 
__P
((
SCR
 *));

29 
db
 
__P
((
SCR
 *, 
CB
 *, 
CHAR_T
 *));

39 
	$ex_di•œy
(
•
, 
cmdp
)

40 
SCR
 *
•
;

41 
EXCMD
 *
cmdp
;

43 
cmdp
->
¨gv
[0]->
bp
[0]) {

45 #unde‡
ARG


46 
	#ARG
 "buf„rs"

	)

47 i‡(
cmdp
->
¨gv
[0]->
Àn
 >(
ARG
) ||

48 
	`memcmp
(
cmdp
->
¨gv
[0]->
bp
, 
ARG
, cmdp->¨gv[0]->
Àn
))

50  (
	`bdi•œy
(
•
));

52 #unde‡
ARG


53 
	#ARG
 "c⁄√˘i⁄s"

	)

54 i‡(
cmdp
->
¨gv
[0]->
Àn
 >(
ARG
) ||

55 
	`memcmp
(
cmdp
->
¨gv
[0]->
bp
, 
ARG
, cmdp->¨gv[0]->
Àn
))

57  (
	`csc›e_di•œy
(
•
));

59 #unde‡
ARG


60 
	#ARG
 "s¸ìns"

	)

61 i‡(
cmdp
->
¨gv
[0]->
Àn
 >(
ARG
) ||

62 
	`memcmp
(
cmdp
->
¨gv
[0]->
bp
, 
ARG
, cmdp->¨gv[0]->
Àn
))

64  (
	`ex_sdi•œy
(
•
));

66 #unde‡
ARG


67 
	#ARG
 "ègs"

	)

68 i‡(
cmdp
->
¨gv
[0]->
Àn
 >(
ARG
) ||

69 
	`memcmp
(
cmdp
->
¨gv
[0]->
bp
, 
ARG
, cmdp->¨gv[0]->
Àn
))

71  (
	`ex_èg_di•œy
(
•
));

73 
	`ex_emsg
(
•
, 
cmdp
->
cmd
->
ußge
, 
EXM_USAGE
);

75 
	}
}

83 
	$bdi•œy
(
•
)

84 
SCR
 *
•
;

86 
CB
 *
cbp
;

88 i‡(
•
->
gp
->
cutq
.
lh_fú°
 =
NULL
 && sp->gp->
dcbp
 == NULL) {

89 
	`msgq
(
•
, 
M_INFO
, "123|No cut buffersÅo display");

94 
cbp
 = 
•
->
gp
->
cutq
.
lh_fú°
; cb∞!
NULL
; cb∞cbp->
q
.
À_√xt
) {

95 i‡(
	`isdigô
(
cbp
->
«me
))

97 i‡(
cbp
->
ãxtq
.
cqh_fú°
 != (*)&cbp->textq)

98 
	`db
(
•
, 
cbp
, 
NULL
);

99 i‡(
	`INTERRUPTED
(
•
))

103 
cbp
 = 
•
->
gp
->
cutq
.
lh_fú°
; cb∞!
NULL
; cb∞cbp->
q
.
À_√xt
) {

104 i‡(!
	`isdigô
(
cbp
->
«me
))

106 i‡(
cbp
->
ãxtq
.
cqh_fú°
 != (*)&cbp->textq)

107 
	`db
(
•
, 
cbp
, 
NULL
);

108 i‡(
	`INTERRUPTED
(
•
))

112 i‡((
cbp
 = 
•
->
gp
->
dcbp
Ë!
NULL
)

113 
	`db
(
•
, 
cbp
, "default buffer");

115 
	}
}

122 
	$db
(
•
, 
cbp
, 
«me
)

123 
SCR
 *
•
;

124 
CB
 *
cbp
;

125 
CHAR_T
 *
«me
;

127 
CHAR_T
 *
p
;

128 
GS
 *
gp
;

129 
TEXT
 *
ç
;

130 
size_t
 
Àn
;

132 
gp
 = 
•
->gp;

133 ()
	`ex_¥ötf
(
•
, "********** %s%s\n",

134 
«me
 =
NULL
 ? 
	`KEY_NAME
(
•
, 
cbp
->name) :Çame,

135 
	`F_ISSET
(
cbp
, 
CB_LMODE
) ? " (line mode)" : " (character mode)");

136 
ç
 = 
cbp
->
ãxtq
.
cqh_fú°
;

137 
ç
 !(*)&
cbp
->
ãxtq
;Å∞ç->
q
.
cqe_√xt
) {

138 
Àn
 = 
ç
->Àn, 
p
 =Åp->
lb
;Üen--; ++p) {

139 ()
	`ex_puts
(
•
, 
	`KEY_NAME
(•, *
p
));

140 i‡(
	`INTERRUPTED
(
•
))

143 ()
	`ex_puts
(
•
, "\n");

145 
	}
}

	@ex/ex_edit.c

10 
	~"c⁄fig.h
"

12 #i‚de‡
löt


13 c⁄° 
	gsccsid
[] = "@(#)ex_edit.c 10.10 (Berkeley) 4/27/96";

16 
	~<sys/ty≥s.h
>

17 
	~<sys/queue.h
>

18 
	~<sys/time.h
>

20 
	~<bô°rög.h
>

21 
	~<î∫o.h
>

22 
	~<limôs.h
>

23 
	~<°dio.h
>

24 
	~<°dlib.h
>

25 
	~<°rög.h
>

27 
	~"../comm⁄/comm⁄.h
"

28 
	~"../vi/vi.h
"

30 
ex_N_edô
 
__P
((
SCR
 *, 
EXCMD
 *, 
FREF
 *, ));

49 
	$ex_edô
(
•
, 
cmdp
)

50 
SCR
 *
•
;

51 
EXCMD
 *
cmdp
;

53 
FREF
 *
‰p
;

54 
©èch
, 
£è…
;

56 
cmdp
->
¨gc
) {

65 
‰p
 = 
•
->frp;

66 i‡(
•
->
ï
 =
NULL
 || 
	`F_ISSET
(
‰p
, 
FR_TMPFILE
)) {

67 i‡((
‰p
 = 
	`fûe_add
(
•
, 
NULL
)) == NULL)

69 
©èch
 = 0;

71 
©èch
 = 1;

72 
£è…
 = 0;

75 i‡((
‰p
 = 
	`fûe_add
(
•
, 
cmdp
->
¨gv
[0]->
bp
)Ë=
NULL
)

77 
©èch
 = 0;

78 
£è…
 = 1;

79 
	`£t_Æt_«me
(
•
, 
cmdp
->
¨gv
[0]->
bp
);

82 
	`ab‹t
();

85 i‡(
	`F_ISSET
(
cmdp
, 
E_NEWSCREEN
))

86  (
	`ex_N_edô
(
•
, 
cmdp
, 
‰p
, 
©èch
));

94 i‡(
	`fûe_m2
(
•
, 
	`FL_ISSET
(
cmdp
->
iÊags
, 
E_C_FORCE
)))

98 i‡(
	`fûe_öô
(
•
, 
‰p
, 
NULL
, (
£è…
 ? 
FS_SETALT
 : 0) |

99 (
	`FL_ISSET
(
cmdp
->
iÊags
, 
E_C_FORCE
Ë? 
FS_FORCE
 : 0)))

102 
	`F_SET
(
•
, 
SC_FSWITCH
);

104 
	}
}

111 
	$ex_N_edô
(
•
, 
cmdp
, 
‰p
, 
©èch
)

112 
SCR
 *
•
;

113 
EXCMD
 *
cmdp
;

114 
FREF
 *
‰p
;

115 
©èch
;

117 
SCR
 *
√w
;

120 i‡(
	`s¸ìn_öô
(
•
->
gp
, sp, &
√w
))

122 i‡(
	`vs_•lô
(
•
, 
√w
, 0)) {

123 ()
	`s¸ìn_íd
(
√w
);

128 i‡(
©èch
) {

130 
√w
->
ï
 = 
•
->ep;

131 ++
√w
->
ï
->
ªf˙t
;

133 
√w
->
‰p
 = frp;

134 
√w
->
‰p
->
Êags
 = 
•
->frp->flags;

136 
√w
->
 o
 = 
•
->lno;

137 
√w
->
˙o
 = 
•
->cno;

138 } i‡(
	`fûe_öô
(
√w
, 
‰p
, 
NULL
,

139 (
	`FL_ISSET
(
cmdp
->
iÊags
, 
E_C_FORCE
Ë? 
FS_FORCE
 : 0))) {

140 ()
	`vs_disˇrd
(
√w
, 
NULL
);

141 ()
	`s¸ìn_íd
(
√w
);

146 
√w
->
ˇrgv
 =Çew->
¨gv
 = 
	`ex_buûd¨gv
(
•
, 
NULL
, 
‰p
->
«me
);

149 
•
->
√xtdi•
 = 
√w
;

150 
	`F_SET
(
•
, 
SC_SSWITCH
);

153 
	}
}

	@ex/ex_equal.c

10 
	~"c⁄fig.h
"

12 #i‚de‡
löt


13 c⁄° 
	gsccsid
[] = "@(#)ex_equal.c 10.10 (Berkeley) 3/6/96";

16 
	~<sys/ty≥s.h
>

17 
	~<sys/queue.h
>

19 
	~<bô°rög.h
>

20 
	~<limôs.h
>

21 
	~<°dio.h
>

23 
	~"../comm⁄/comm⁄.h
"

31 
	$ex_equÆ
(
•
, 
cmdp
)

32 
SCR
 *
•
;

33 
EXCMD
 *
cmdp
;

35 
ª˙o_t
 
 o
;

37 
	`NEEDFILE
(
•
, 
cmdp
);

51 i‡(
	`F_ISSET
(
cmdp
, 
E_ADDR_DEF
)) {

52 i‡(
	`db_œ°
(
•
, &
 o
))

55 
 o
 = 
cmdp
->
addr1
.lno;

57 ()
	`ex_¥ötf
(
•
, "%ld\n", 
 o
);

59 
	}
}

	@ex/ex_file.c

10 
	~"c⁄fig.h
"

12 #i‚de‡
löt


13 c⁄° 
	gsccsid
[] = "@(#)ex_file.c 10.12 (Berkeley) 7/12/96";

16 
	~<sys/ty≥s.h
>

17 
	~<sys/queue.h
>

19 
	~<bô°rög.h
>

20 
	~<î∫o.h
>

21 
	~<limôs.h
>

22 
	~<°dio.h
>

23 
	~<°dlib.h
>

24 
	~<°rög.h
>

26 
	~"../comm⁄/comm⁄.h
"

35 
	$ex_fûe
(
•
, 
cmdp
)

36 
SCR
 *
•
;

37 
EXCMD
 *
cmdp
;

39 
CHAR_T
 *
p
;

40 
FREF
 *
‰p
;

42 
	`NEEDFILE
(
•
, 
cmdp
);

44 
cmdp
->
¨gc
) {

48 
‰p
 = 
•
->frp;

51 i‡((
p
 = 
	`v_°rdup
(
•
,

52 
cmdp
->
¨gv
[0]->
bp
, cmdp->¨gv[0]->
Àn
)Ë=
NULL
)

56 i‡(!
	`F_ISSET
(
‰p
, 
FR_TMPFILE
))

57 
	`£t_Æt_«me
(
•
, 
‰p
->
«me
);

60 
	`‰ì
(
‰p
->
«me
);

61 
‰p
->
«me
 = 
p
;

67 
	`F_CLR
(
‰p
, 
FR_TMPEXIT
 | 
FR_TMPFILE
);

70 
	`F_SET
(
‰p
, 
FR_NAMECHANGE
);

73 ()
•
->
gp
->
	`s¸_ª«me
(•, sp->
‰p
->
«me
, 1);

76 
	`ab‹t
();

78 
	`msgq_°©us
(
•
, sp->
 o
, 
MSTAT_SHOWLAST
);

80 
	}
}

	@ex/ex_filter.c

10 
	~"c⁄fig.h
"

12 #i‚de‡
löt


13 c⁄° 
	gsccsid
[] = "@(#)ex_filter.c 10.34 (Berkeley) 10/23/96";

16 
	~<sys/ty≥s.h
>

17 
	~<sys/queue.h
>

19 
	~<bô°rög.h
>

20 
	~<î∫o.h
>

21 
	~<f˙é.h
>

22 
	~<limôs.h
>

23 
	~<°dio.h
>

24 
	~<°dlib.h
>

25 
	~<°rög.h
>

26 
	~<uni°d.h
>

28 
	~"../comm⁄/comm⁄.h
"

30 
fûãr_ldi•œy
 
__P
((
SCR
 *, 
FILE
 *));

42 
	$ex_fûãr
(
•
, 
cmdp
, 
fm
, 
tm
, 
Ω
, 
cmd
, 
·y≥
)

43 
SCR
 *
•
;

44 
EXCMD
 *
cmdp
;

45 
MARK
 *
fm
, *
tm
, *
Ω
;

46 *
cmd
;

47 
fûãπy≥
 
·y≥
;

49 
FILE
 *
iÂ
, *
oÂ
;

50 
pid_t
 
∑ª¡_wrôî_pid
, 
utûôy_pid
;

51 
ª˙o_t
 
ƒód
;

52 
öput
[2], 
ouçut
[2], 
rvÆ
;

53 *
«me
;

55 
rvÆ
 = 0;

58 *
Ω
 = *
fm
;

59 i‡(
Ω
->
 o
 == 0)

60 
Ω
->
 o
 = 1;

63 i‡(
	`›ts_em±y
(
•
, 
O_SHELL
, 0))

83 
oÂ
 = 
NULL
;

84 
öput
[0] = i≈ut[1] = 
ouçut
[0] = output[1] = -1;

85 i‡(
·y≥
 !
FILTER_READ
 && 
	`pùe
(
öput
) < 0) {

86 
	`msgq
(
•
, 
M_SYSERR
, "pipe");

87 
îr
;

91 i‡(
	`pùe
(
ouçut
) < 0) {

92 
	`msgq
(
•
, 
M_SYSERR
, "pipe");

93 
îr
;

95 i‡((
oÂ
 = 
	`fd›í
(
ouçut
[0], "r")Ë=
NULL
) {

96 
	`msgq
(
•
, 
M_SYSERR
, "fdopen");

97 
îr
;

101 
utûôy_pid
 = 
	`vf‹k
()) {

103 
	`msgq
(
•
, 
M_SYSERR
, "vfork");

104 
îr
: i‡(
öput
[0] != -1)

105 ()
	`˛o£
(
öput
[0]);

106 i‡(
öput
[1] != -1)

107 ()
	`˛o£
(
öput
[1]);

108 i‡(
oÂ
 !
NULL
)

109 ()
	`f˛o£
(
oÂ
);

110 i‡(
ouçut
[0] != -1)

111 ()
	`˛o£
(
ouçut
[0]);

112 i‡(
ouçut
[1] != -1)

113 ()
	`˛o£
(
ouçut
[1]);

126 i‡(
öput
[0] != -1)

127 ()
	`dup2
(
öput
[0], 
STDIN_FILENO
);

128 ()
	`dup2
(
ouçut
[1], 
STDOUT_FILENO
);

129 ()
	`dup2
(
ouçut
[1], 
STDERR_FILENO
);

132 i‡(
öput
[0] != -1)

133 ()
	`˛o£
(
öput
[0]);

134 i‡(
öput
[1] != -1)

135 ()
	`˛o£
(
öput
[1]);

136 ()
	`˛o£
(
ouçut
[0]);

137 ()
	`˛o£
(
ouçut
[1]);

139 i‡((
«me
 = 
	`°ºchr
(
	`O_STR
(
•
, 
O_SHELL
), '/')Ë=
NULL
)

140 
«me
 = 
	`O_STR
(
•
, 
O_SHELL
);

142 ++
«me
;

144 
	`exe˛
(
	`O_STR
(
•
, 
O_SHELL
), 
«me
, "-c", 
cmd
, 
NULL
);

145 
	`msgq_°r
(
•
, 
M_SYSERR
, 
	`O_STR
(•, 
O_SHELL
), "execl: %s");

146 
	`_exô
 (127);

150 i‡(
öput
[0] != -1)

151 ()
	`˛o£
(
öput
[0]);

152 ()
	`˛o£
(
ouçut
[1]);

175 i‡(
·y≥
 =
FILTER_RBANG
 || fty≥ =
FILTER_READ
) {

176 i‡(
·y≥
 =
FILTER_RBANG
)

177 ()
	`˛o£
(
öput
[1]);

179 i‡(
	`ex_ªadÂ
(
•
, "fûãr", 
oÂ
, 
fm
, &
ƒód
, 1))

180 
rvÆ
 = 1;

181 
•
->
Ωéöes
[
L_ADDED
] +
ƒód
;

182 i‡(
·y≥
 =
FILTER_READ
)

183 i‡(
fm
->
 o
 == 0)

184 
Ω
->
 o
 = 
ƒód
;

186 
Ω
->
 o
 +
ƒód
;

187 
uwaô
;

220 
	`F_SET
(
•
->
ï
, 
F_MULTILOCK
);

221 
∑ª¡_wrôî_pid
 = 
	`f‹k
()) {

223 
	`msgq
(
•
, 
M_SYSERR
, "fork");

224 ()
	`˛o£
(
öput
[1]);

225 ()
	`˛o£
(
ouçut
[0]);

226 
rvÆ
 = 1;

233 ()
	`˛o£
(
ouçut
[0]);

234 i‡((
iÂ
 = 
	`fd›í
(
öput
[1], "w")Ë=
NULL
)

235 
	`_exô
 (1);

236 
	`_exô
(
	`ex_wrôeÂ
(
•
, "fûãr", 
iÂ
, 
fm
, 
tm
, 
NULL
, NULL, 1));

240 ()
	`˛o£
(
öput
[1]);

241 i‡(
·y≥
 =
FILTER_WRITE
) {

246 i‡(
	`fûãr_ldi•œy
(
•
, 
oÂ
))

247 
rvÆ
 = 1;

254 i‡(
	`ex_ªadÂ
(
•
, "fûãr", 
oÂ
, 
tm
, &
ƒód
, 1))

255 
rvÆ
 = 1;

256 
•
->
Ωéöes
[
L_ADDED
] +
ƒód
;

260 i‡(
	`¥oc_waô
(
•
,

261 ()
∑ª¡_wrôî_pid
, "parent-writer", 0, 1))

262 
rvÆ
 = 1;

265 i‡(
rvÆ
 =0 && 
·y≥
 =
FILTER_BANG
 &&

266 (
	`cut
(
•
, 
NULL
, 
fm
, 
tm
, 
CUT_LINEMODE
) ||

267 
	`dñ
(
•
, 
fm
, 
tm
, 1))) {

268 
rvÆ
 = 1;

277 i‡(
Ω
->
 o
 > 1 && !
	`db_exi°
(
•
,Ñp->lno))

278 --
Ω
->
 o
;

281 
	`F_CLR
(
•
->
ï
, 
F_MULTILOCK
);

288 
uwaô
:  (
	`¥oc_waô
(
•
, ()
utûôy_pid
, 
cmd
,

289 
·y≥
 =
FILTER_READ
 && 
	`F_ISSET
(
•
, 
SC_VI
Ë? 1 : 0, 0Ë|| 
rvÆ
);

290 
	}
}

301 
	$fûãr_ldi•œy
(
•
, 
Â
)

302 
SCR
 *
•
;

303 
FILE
 *
Â
;

305 
size_t
 
Àn
;

307 
EX_PRIVATE
 *
exp
;

309 
exp
 = 
	`EXP
(
•
); !
	`ex_gëlöe
(•, 
Â
, &
Àn
Ë&& !
	`INTERRUPTED
(sp);)

310 i‡(
	`ex_ldi•œy
(
•
, 
exp
->
ibp
, 
Àn
, 0, 0))

312 i‡(
	`„º‹
(
Â
))

313 
	`msgq
(
•
, 
M_SYSERR
, "filterÑead");

314 ()
	`f˛o£
(
Â
);

316 
	}
}

	@ex/ex_global.c

10 
	~"c⁄fig.h
"

12 #i‚de‡
löt


13 c⁄° 
	gsccsid
[] = "@(#)ex_global.c 10.22 (Berkeley) 10/10/96";

16 
	~<sys/ty≥s.h
>

17 
	~<sys/queue.h
>

19 
	~<bô°rög.h
>

20 
	~<˘y≥.h
>

21 
	~<î∫o.h
>

22 
	~<limôs.h
>

23 
	~<°dio.h
>

24 
	~<°dlib.h
>

25 
	~<°rög.h
>

26 
	~<uni°d.h
>

28 
	~"../comm⁄/comm⁄.h
"

30 
	ewhich
 {
	mGLOBAL
, 
	mV
};

32 
ex_g_£tup
 
__P
((
SCR
 *, 
EXCMD
 *, 
which
));

41 
	$ex_globÆ
(
•
, 
cmdp
)

42 
SCR
 *
•
;

43 
EXCMD
 *
cmdp
;

45  (
	`ex_g_£tup
(
•
,

46 
cmdp
, 
	`FL_ISSET
(cmdp->
iÊags
, 
E_C_FORCE
Ë? 
V
 : 
GLOBAL
));

47 
	}
}

56 
	$ex_v
(
•
, 
cmdp
)

57 
SCR
 *
•
;

58 
EXCMD
 *
cmdp
;

60  (
	`ex_g_£tup
(
•
, 
cmdp
, 
V
));

61 
	}
}

68 
	$ex_g_£tup
(
•
, 
cmdp
, 
cmd
)

69 
SCR
 *
•
;

70 
EXCMD
 *
cmdp
;

71 
which
 
cmd
;

73 
CHAR_T
 *
±∫
, *
p
, *
t
;

74 
EXCMD
 *
e˝
;

75 
MARK
 
abs
;

76 
RANGE
 *
Ω
;

77 
busy_t
 
bty≥
;

78 
ª˙o_t
 
°¨t
, 
íd
;

79 
ªgex_t
 *
ª
;

80 
ªgm©ch_t
 
m©ch
[1];

81 
size_t
 
Àn
;

82 
˙t
, 
dñim
, 
evÆ
;

83 *
dbp
;

85 
	`NEEDFILE
(
•
, 
cmdp
);

87 i‡(
	`F_ISSET
(
•
, 
SC_EX_GLOBAL
)) {

88 
	`msgq
(
•
, 
M_ERR
,

90 
cmdp
->
cmd
->
«me
);

98 i‡(
cmdp
->
¨gc
 == 0)

99 
ußge
;

100 
p
 = 
cmdp
->
¨gv
[0]->
bp
; 
	`isbœnk
(*p); ++p);

101 i‡(*
p
 ='\0' || 
	`iß um
(*p) ||

102 *
p
 == '\\' || *p == '|' || *p == '\n') {

103 
ußge
: 
	`ex_emsg
(
•
, 
cmdp
->
cmd
->ußge, 
EXM_USAGE
);

106 
dñim
 = *
p
++;

114 
±∫
 = 
t
 = 
p
;;) {

115 i‡(
p
[0] ='\0' ||Ö[0] =
dñim
) {

116 i‡(
p
[0] =
dñim
)

117 ++
p
;

123 *
t
 = '\0';

126 i‡(
p
[0] == '\\')

127 i‡(
p
[1] =
dñim
)

128 ++
p
;

129 i‡(
p
[1] == '\\')

130 *
t
++ = *
p
++;

131 *
t
++ = *
p
++;

135 i‡(*
±∫
 == '\0') {

136 i‡(
•
->
ª
 =
NULL
) {

137 
	`ex_emsg
(
•
, 
NULL
, 
EXM_NOPREVRE
);

142 i‡(!
	`F_ISSET
(
•
, 
SC_RE_SEARCH
Ë&& 
	`ª_compûe
(sp,

143 
•
->
ª
, sp->
ª_Àn
, 
NULL
, NULL, &•->
ª_c
, 
RE_C_SEARCH
))

147 i‡(
	`ª_compûe
(
•
, 
±∫
, 
t
 -Ötrn,

148 &
•
->
ª
, &•->
ª_Àn
, &•->
ª_c
, 
RE_C_SEARCH
))

155 
•
->
£¨chdú
 = 
FORWARD
;

157 
ª
 = &
•
->
ª_c
;

160 
abs
.
 o
 = 
•
->lno;

161 
abs
.
˙o
 = 
•
->cno;

162 i‡(
	`m¨k_£t
(
•
, 
ABSMARK1
, &
abs
, 1))

166 
	`CALLOC_RET
(
•
, 
e˝
, 
EXCMD
 *, 1, (EXCMD));

167 
	`CIRCLEQ_INIT
(&
e˝
->
rq
);

176 i‡((
Àn
 = 
cmdp
->
¨gv
[0]->À¿- (
p
 - cmdp->¨gv[0]->
bp
)) == 0) {

177 
p
 = "pp";

178 
Àn
 = 1;

181 
	`MALLOC_RET
(
•
, 
e˝
->
˝
, *, 
Àn
 * 2);

182 
e˝
->
o_˝
 =É˝->
˝
;

183 
e˝
->
o_˛í
 = 
Àn
;

184 
	`mem˝y
(
e˝
->
˝
 + 
Àn
, 
p
,Üen);

185 
e˝
->
ønge_ o
 = 
OOBLNO
;

186 
	`FL_SET
(
e˝
->
agv_Êags
, 
cmd
 =
GLOBAL
 ? 
AGV_GLOBAL
 : 
AGV_V
);

187 
	`LIST_INSERT_HEAD
(&
•
->
gp
->
ecq
, 
e˝
, 
q
);

201 
bty≥
 = 
BUSY_ON
;

202 
˙t
 = 
INTERRUPT_CHECK
;

203 
°¨t
 = 
cmdp
->
addr1
.
 o
,

204 
íd
 = 
cmdp
->
addr2
.
 o
; 
°¨t
 <=Énd; ++start) {

205 i‡(
˙t
-- == 0) {

206 i‡(
	`INTERRUPTED
(
•
)) {

207 
	`LIST_REMOVE
(
e˝
, 
q
);

208 
	`‰ì
(
e˝
->
˝
);

209 
	`‰ì
(
e˝
);

212 
	`£¨ch_busy
(
•
, 
bty≥
);

213 
bty≥
 = 
BUSY_UPDATE
;

214 
˙t
 = 
INTERRUPT_CHECK
;

216 i‡(
	`db_gë
(
•
, 
°¨t
, 
DBG_FATAL
, &
dbp
, &
Àn
))

218 
m©ch
[0].
rm_so
 = 0;

219 
m©ch
[0].
rm_eo
 = 
Àn
;

220 
evÆ
 =

221 
	`ªgexec
(&
•
->
ª_c
, 
dbp
, 0, 
m©ch
, 
REG_STARTEND
)) {

223 i‡(
cmd
 =
V
)

226 
REG_NOMATCH
:

227 i‡(
cmd
 =
GLOBAL
)

231 
	`ª_îr‹
(
•
, 
evÆ
, &•->
ª_c
);

236 i‡((
Ω
 = 
e˝
->
rq
.
cqh_œ°
) != (*)&ecp->rq &&

237 
Ω
->
°›
 =
°¨t
 - 1) {

238 ++
Ω
->
°›
;

243 
	`CALLOC
(
•
, 
Ω
, 
RANGE
 *, 1, (RANGE));

244 i‡(
Ω
 =
NULL
)

246 
Ω
->
°¨t
 =Ñp->
°›
 = start;

247 
	`CIRCLEQ_INSERT_TAIL
(&
e˝
->
rq
, 
Ω
, 
q
);

249 
	`£¨ch_busy
(
•
, 
BUSY_OFF
);

251 
	}
}

260 
	$ex_g_ösdñ
(
•
, 
›
, 
 o
)

261 
SCR
 *
•
;

262 
 ›_t
 
›
;

263 
ª˙o_t
 
 o
;

265 
EXCMD
 *
e˝
;

266 
RANGE
 *
ƒp
, *
Ω
;

269 i‡(
›
 =
LINE_APPEND
)

270 
	`ab‹t
();

272 i‡(
›
 =
LINE_RESET
)

275 
e˝
 = 
•
->
gp
->
ecq
.
lh_fú°
;É˝ !
NULL
;É˝ =É˝->
q
.
À_√xt
) {

276 i‡(!
	`FL_ISSET
(
e˝
->
agv_Êags
, 
AGV_AT
 | 
AGV_GLOBAL
 | 
AGV_V
))

278 
Ω
 = 
e˝
->
rq
.
cqh_fú°
;Ñ∞!(*)&e˝->rq;Ñ∞
ƒp
) {

279 
ƒp
 = 
Ω
->
q
.
cqe_√xt
;

282 i‡(
Ω
->
°›
 < 
 o
)

289 i‡(
Ω
->
°¨t
 > 
 o
) {

290 i‡(
›
 =
LINE_DELETE
) {

291 --
Ω
->
°¨t
;

292 --
Ω
->
°›
;

294 ++
Ω
->
°¨t
;

295 ++
Ω
->
°›
;

306 i‡(
›
 =
LINE_DELETE
) {

307 i‡(
Ω
->
°¨t
 > --Ω->
°›
) {

308 
	`CIRCLEQ_REMOVE
(&
e˝
->
rq
, 
Ω
, 
q
);

309 
	`‰ì
(
Ω
);

312 
	`CALLOC_RET
(
•
, 
ƒp
, 
RANGE
 *, 1, (RANGE));

313 
ƒp
->
°¨t
 = 
 o
 + 1;

314 
ƒp
->
°›
 = 
Ω
->stop + 1;

315 
Ω
->
°›
 = 
 o
 - 1;

316 
	`CIRCLEQ_INSERT_AFTER
(&
e˝
->
rq
, 
Ω
, 
ƒp
, 
q
);

317 
Ω
 = 
ƒp
;

325 
e˝
->
ønge_ o
 = 
 o
;

328 
	}
}

	@ex/ex_init.c

10 
	~"c⁄fig.h
"

12 #i‚de‡
löt


13 c⁄° 
	gsccsid
[] = "@(#)ex_init.c 10.26 (Berkeley) 8/12/96";

16 
	~<sys/∑øm.h
>

17 
	~<sys/ty≥s.h
>

18 
	~<sys/queue.h
>

19 
	~<sys/°©.h
>

21 
	~<bô°rög.h
>

22 
	~<f˙é.h
>

23 
	~<limôs.h
>

24 
	~<°dio.h
>

25 
	~<°dlib.h
>

26 
	~<°rög.h
>

27 
	~<uni°d.h
>

29 
	~"../comm⁄/comm⁄.h
"

30 
	~"èg.h
"

31 
	~"∑th«mes.h
"

33 
	erc
 { 
	mNOEXIST
, 
	mNOPERM
, 
	mRCOK
 };

34 
rc
 
exrc_isok
 
__P
((
SCR
 *, 
°©
 *, *, , ));

36 
ex_run_fûe
 
__P
((
SCR
 *, *));

45 
	$ex_s¸ìn_c›y
(
‹ig
, 
•
)

46 
SCR
 *
‹ig
, *
•
;

48 
EX_PRIVATE
 *
€xp
, *
√xp
;

51 
	`CALLOC_RET
(
‹ig
, 
√xp
, 
EX_PRIVATE
 *, 1, (EX_PRIVATE));

52 
•
->
ex_¥iv©e
 = 
√xp
;

55 
	`CIRCLEQ_INIT
(&
√xp
->
tq
);

56 
	`TAILQ_INIT
(&
√xp
->
ègfq
);

57 
	`LIST_INIT
(&
√xp
->
cscq
);

59 i‡(
‹ig
 =
NULL
) {

61 
€xp
 = 
	`EXP
(
‹ig
);

63 i‡(
€xp
->
œ°bcomm
 !
NULL
 &&

64 (
√xp
->
œ°bcomm
 = 
	`°rdup
(
€xp
->œ°bcomm)Ë=
NULL
) {

65 
	`msgq
(
•
, 
M_SYSERR
, 
NULL
);

68 i‡(
	`ex_èg_c›y
(
‹ig
, 
•
))

72 
	}
}

81 
	$ex_s¸ìn_íd
(
•
)

82 
SCR
 *
•
;

84 
EX_PRIVATE
 *
exp
;

85 
rvÆ
;

87 i‡((
exp
 = 
	`EXP
(
•
)Ë=
NULL
)

90 
rvÆ
 = 0;

93 i‡(
	`F_ISSET
(
•
, 
SC_SCRIPT
Ë&& 
	`ss¸_íd
(sp))

94 
rvÆ
 = 1;

96 i‡(
	`¨gv_‰ì
(
•
))

97 
rvÆ
 = 1;

99 i‡(
exp
->
ibp
 !
NULL
)

100 
	`‰ì
(
exp
->
ibp
);

102 i‡(
exp
->
œ°bcomm
 !
NULL
)

103 
	`‰ì
(
exp
->
œ°bcomm
);

105 i‡(
	`ex_èg_‰ì
(
•
))

106 
rvÆ
 = 1;

109 
	`‰ì
(
exp
);

110 
•
->
ex_¥iv©e
 = 
NULL
;

112  (
rvÆ
);

113 
	}
}

122 
	$ex_›tch™ge
(
•
, 
off£t
, 
°r
, 
vÆp
)

123 
SCR
 *
•
;

124 
off£t
;

125 *
°r
;

126 
u_l⁄g
 *
vÆp
;

128 
off£t
) {

129 
O_TAGS
:

130  (
	`ex_ègf_Æloc
(
•
, 
°r
));

133 
	}
}

143 
	$ex_exrc
(
•
)

144 
SCR
 *
•
;

146 
°©
 
hsb
, 
lsb
;

147 *
p
, 
∑th
[
MAXPATHLEN
];

173 
	`exrc_isok
(
•
, &
hsb
, 
_PATH_SYSEXRC
, 1, 0)) {

174 
NOEXIST
:

175 
NOPERM
:

177 
RCOK
:

178 i‡(
	`ex_run_fûe
(
•
, 
_PATH_SYSEXRC
))

184 i‡(
	`EXCMD_RUNNING
(
•
->
gp
))

185 ()
	`ex_cmd
(
•
);

186 i‡(
	`F_ISSET
(
•
, 
SC_EXIT
 | 
SC_EXIT_FORCE
))

189 i‡((
p
 = 
	`gëív
("NEXINIT")Ë!
NULL
) {

190 i‡(
	`ex_run_°r
(
•
, "NEXINIT", 
p
, 
	`°æí
(p), 1, 0))

192 } i‡((
p
 = 
	`gëív
("EXINIT")Ë!
NULL
) {

193 i‡(
	`ex_run_°r
(
•
, "EXINIT", 
p
, 
	`°æí
(p), 1, 0))

195 } i‡((
p
 = 
	`gëív
("HOME")Ë!
NULL
 && *p) {

196 ()
	`¢¥ötf
(
∑th
, ’©h), "%s/%s", 
p
, 
_PATH_NEXRC
);

197 
	`exrc_isok
(
•
, &
hsb
, 
∑th
, 0, 1)) {

198 
NOEXIST
:

199 ()
	`¢¥ötf
(
∑th
,

200 (
∑th
), "%s/%s", 
p
, 
_PATH_EXRC
);

201 i‡(
	`exrc_isok
(
•
,

202 &
hsb
, 
∑th
, 0, 1Ë=
RCOK
 && 
	`ex_run_fûe
(
•
,Öath))

205 
NOPERM
:

207 
RCOK
:

208 i‡(
	`ex_run_fûe
(
•
, 
∑th
))

215 i‡(
	`EXCMD_RUNNING
(
•
->
gp
))

216 ()
	`ex_cmd
(
•
);

217 i‡(
	`F_ISSET
(
•
, 
SC_EXIT
 | 
SC_EXIT_FORCE
))

221 i‡(
	`O_ISSET
(
•
, 
O_EXRC
)) {

222 
	`exrc_isok
(
•
, &
lsb
, 
_PATH_NEXRC
, 0, 0)) {

223 
NOEXIST
:

224 i‡(
	`exrc_isok
(
•
, &
lsb
, 
_PATH_EXRC
, 0, 0Ë=
RCOK
 &&

225 (
lsb
.
°_dev
 !
hsb
.st_dev ||

226 
lsb
.
°_öo
 !
hsb
.st_ino) &&

227 
	`ex_run_fûe
(
•
, 
_PATH_EXRC
))

230 
NOPERM
:

232 
RCOK
:

233 i‡((
lsb
.
°_dev
 !
hsb
.st_dev ||

234 
lsb
.
°_öo
 !
hsb
.st_ino) &&

235 
	`ex_run_fûe
(
•
, 
_PATH_NEXRC
))

240 i‡(
	`EXCMD_RUNNING
(
•
->
gp
))

241 ()
	`ex_cmd
(
•
);

242 i‡(
	`F_ISSET
(
•
, 
SC_EXIT
 | 
SC_EXIT_FORCE
))

247 
	}
}

254 
	$ex_run_fûe
(
•
, 
«me
)

255 
SCR
 *
•
;

256 *
«me
;

258 
ARGS
 *
≠
[2], 
a
;

259 
EXCMD
 
cmd
;

261 
	`ex_cöô
(&
cmd
, 
C_SOURCE
, 0, 
OOBLNO
, OOBLNO, 0, 
≠
);

262 
	`ex_ˇdd
(&
cmd
, &
a
, 
«me
, 
	`°æí
(name));

263  (
	`ex_sour˚
(
•
, &
cmd
));

264 
	}
}

273 
	$ex_run_°r
(
•
, 
«me
, 
°r
, 
Àn
, 
ex_Êags
, 
noc›y
)

274 
SCR
 *
•
;

275 *
«me
, *
°r
;

276 
size_t
 
Àn
;

277 
ex_Êags
, 
noc›y
;

279 
GS
 *
gp
;

280 
EXCMD
 *
e˝
;

282 
gp
 = 
•
->gp;

283 i‡(
	`EXCMD_RUNNING
(
gp
)) {

284 
	`CALLOC_RET
(
•
, 
e˝
, 
EXCMD
 *, 1, (EXCMD));

285 
	`LIST_INSERT_HEAD
(&
gp
->
ecq
, 
e˝
, 
q
);

287 
e˝
 = &
gp
->
excmd
;

289 
	`F_INIT
(
e˝
,

290 
ex_Êags
 ? 
E_BLIGNORE
 | 
E_NOAUTO
 | 
E_NOPRDEF
 | 
E_VLITONLY
 : 0);

292 i‡(
noc›y
)

293 
e˝
->
˝
 = 
°r
;

295 i‡((
e˝
->
˝
 = 
	`v_°rdup
(
•
, 
°r
, 
Àn
)Ë=
NULL
)

297 
e˝
->
˛í
 = 
Àn
;

299 i‡(
«me
 =
NULL
)

300 
e˝
->
if_«me
 = 
NULL
;

302 i‡((
e˝
->
if_«me
 = 
	`v_°rdup
(
•
, 
«me
, 
	`°æí
“ame))Ë=
NULL
)

304 
e˝
->
if_ o
 = 1;

305 
	`F_SET
(
e˝
, 
E_NAMEDISCARD
);

309 
	}
}

347 
rc


348 
	$exrc_isok
(
•
, 
sbp
, 
∑th
, 
roŸown
, 
roŸid
)

349 
SCR
 *
•
;

350 
°©
 *
sbp
;

351 *
∑th
;

352 
roŸown
, 
roŸid
;

354 íum { 
ROOTOWN
, 
OWN
, 
WRITER
 } 
ëy≥
;

355 
uid_t
 
euid
;

356 
nf1
, 
nf2
;

357 *
a
, *
b
, 
buf
[
MAXPATHLEN
];

360 i‡(
	`°©
(
∑th
, 
sbp
))

361  (
NOEXIST
);

364 
euid
 = 
	`gëeuid
();

365 i‡(!(
roŸown
 && 
sbp
->
°_uid
 == 0) &&

366 !(
roŸid
 && 
euid
 =0Ë&& 
sbp
->
°_uid
 !=Éuid) {

367 
ëy≥
 = 
roŸown
 ? 
ROOTOWN
 : 
OWN
;

368 
díõd
;

372 i‡(
sbp
->
°_mode
 & (
S_IWGRP
 | 
S_IWOTH
)) {

373 
ëy≥
 = 
WRITER
;

374 
díõd
;

376  (
RCOK
);

378 
díõd
: 
a
 = 
	`msg_¥öt
(
•
, 
∑th
, &
nf1
);

379 i‡(
	`°rchr
(
∑th
, '/'Ë=
NULL
 && 
	`gëcwd
(
buf
, (buf)) != NULL) {

380 
b
 = 
	`msg_¥öt
(
•
, 
buf
, &
nf2
);

381 
ëy≥
) {

382 
ROOTOWN
:

383 
	`msgq
(
•
, 
M_ERR
,

385 
b
, 
a
);

387 
OWN
:

388 
	`msgq
(
•
, 
M_ERR
,

389 "126|%s/%s:ÇŸ sour˚d:ÇŸ ow√d by you", 
b
, 
a
);

391 
WRITER
:

392 
	`msgq
(
•
, 
M_ERR
,

393 "127|%s/%s:ÇŸ sour˚d: wrôóbÀ byá u£∏ŸhîÅh™Åhêow√r", 
b
, 
a
);

396 i‡(
nf2
)

397 
	`FREE_SPACE
(
•
, 
b
, 0);

399 
ëy≥
) {

400 
ROOTOWN
:

401 
	`msgq
(
•
, 
M_ERR
,

402 "128|%s:ÇŸ sour˚d:ÇŸ ow√d by you o∏roŸ", 
a
);

404 
OWN
:

405 
	`msgq
(
•
, 
M_ERR
,

406 "129|%s:ÇŸ sour˚d:ÇŸ ow√d by you", 
a
);

408 
WRITER
:

409 
	`msgq
(
•
, 
M_ERR
,

410 "130|%s:ÇŸ sour˚d: wrôóbÀ byá u£∏ŸhîÅh™Åhêow√r", 
a
);

414 i‡(
nf1
)

415 
	`FREE_SPACE
(
•
, 
a
, 0);

416  (
NOPERM
);

417 
	}
}

	@ex/ex_join.c

10 
	~"c⁄fig.h
"

12 #i‚de‡
löt


13 c⁄° 
	gsccsid
[] = "@(#)ex_join.c 10.10 (Berkeley) 9/15/96";

16 
	~<sys/ty≥s.h
>

17 
	~<sys/queue.h
>

19 
	~<bô°rög.h
>

20 
	~<˘y≥.h
>

21 
	~<limôs.h
>

22 
	~<°dio.h
>

23 
	~<°dlib.h
>

24 
	~<°rög.h
>

26 
	~"../comm⁄/comm⁄.h
"

35 
	$ex_joö
(
•
, 
cmdp
)

36 
SCR
 *
•
;

37 
EXCMD
 *
cmdp
;

39 
ª˙o_t
 
‰om
, 
to
;

40 
size_t
 
bÀn
, 
˛í
, 
Àn
, 
éí
;

41 
ech¨
, 
exåa
, 
fú°
;

42 *
bp
, *
p
, *
tbp
;

44 
	`NEEDFILE
(
•
, 
cmdp
);

46 
‰om
 = 
cmdp
->
addr1
.
 o
;

47 
to
 = 
cmdp
->
addr2
.
 o
;

50 i‡(!
	`db_exi°
(
•
, 
‰om
 + 1)) {

51 
	`msgq
(
•
, 
M_ERR
, "131|No followingÜinesÅo join");

55 
	`GET_SPACE_RET
(
•
, 
bp
, 
bÀn
, 256);

61 i‡(
	`FL_ISSET
(
cmdp
->
iÊags
, 
E_C_COUNT
))

62 ++
cmdp
->
addr2
.
 o
;

68 i‡(
cmdp
->
addr1
.
 o
 =cmdp->
addr2
.lno)

69 ++
cmdp
->
addr2
.
 o
;

71 
˛í
 = 
éí
 = 0;

72 
fú°
 = 1,

73 
‰om
 = 
cmdp
->
addr1
.
 o
, 
to
 = cmdp->
addr2
.lno; from <=Åo; ++from) {

78 i‡(
	`db_gë
(
•
, 
‰om
, 0, &
p
, &
Àn
)) {

79 
cmdp
->
addr2
.
 o
 = 
‰om
 - 1;

84 i‡(
Àn
 == 0)

92 
éí
 +
Àn
 + 2;

93 
	`ADD_SPACE_RET
(
•
, 
bp
, 
bÀn
, 
éí
);

94 
tbp
 = 
bp
 + 
˛í
;

112 
exåa
 = 0;

113 i‡(!
fú°
 && !
	`FL_ISSET
(
cmdp
->
iÊags
, 
E_C_FORCE
)) {

114 i‡(
	`isbœnk
(
ech¨
))

115 ; 
Àn
 && 
	`isbœnk
(*
p
); --len, ++p);

116 i‡(
p
[0] != ')') {

117 i‡(
	`°rchr
(".?!", 
ech¨
)) {

118 *
tbp
++ = ' ';

119 ++
˛í
;

120 
exåa
 = 1;

122 *
tbp
++ = ' ';

123 ++
˛í
;

124 ; 
Àn
 && 
	`isbœnk
(*
p
); --len, ++p);

128 i‡(
Àn
 != 0) {

129 
	`mem˝y
(
tbp
, 
p
, 
Àn
);

130 
tbp
 +
Àn
;

131 
˛í
 +
Àn
;

132 
ech¨
 = 
p
[
Àn
 - 1];

134 
ech¨
 = ' ';

155 i‡(
fú°
) {

156 
•
->
˙o
 = (
tbp
 - 
bp
Ë- (1 + 
exåa
);

157 
fú°
 = 0;

159 
•
->
˙o
 = (
tbp
 - 
bp
Ë- 
Àn
 - (1 + 
exåa
);

161 
•
->
 o
 = 
cmdp
->
addr1
.lno;

164 
‰om
 = 
cmdp
->
addr1
.
 o
, 
to
 = cmdp->
addr2
.lno;Åo > from; --to)

165 i‡(
	`db_dñëe
(
•
, 
to
))

166 
îr
;

169 i‡(!
fú°
 && 
	`db_£t
(
•
, 
‰om
, 
bp
, 
tbp
 - bp)) {

170 
îr
: 
	`FREE_SPACE
(
•
, 
bp
, 
bÀn
);

173 
	`FREE_SPACE
(
•
, 
bp
, 
bÀn
);

175 
•
->
Ωéöes
[
L_JOINED
] +(
cmdp
->
addr2
.
 o
 - cmdp->
addr1
.lno) + 1;

177 
	}
}

	@ex/ex_map.c

10 
	~"c⁄fig.h
"

12 #i‚de‡
löt


13 c⁄° 
	gsccsid
[] = "@(#)ex_map.c 10.9 (Berkeley) 3/6/96";

16 
	~<sys/ty≥s.h
>

17 
	~<sys/queue.h
>

19 
	~<bô°rög.h
>

20 
	~<˘y≥.h
>

21 
	~<limôs.h
>

22 
	~<°dio.h
>

23 
	~<°dlib.h
>

24 
	~<°rög.h
>

26 
	~"../comm⁄/comm⁄.h
"

45 
	$ex_m≠
(
•
, 
cmdp
)

46 
SCR
 *
•
;

47 
EXCMD
 *
cmdp
;

49 
£q_t
 
°y≥
;

50 
CHAR_T
 *
öput
, *
p
;

52 
°y≥
 = 
	`FL_ISSET
(
cmdp
->
iÊags
, 
E_C_FORCE
Ë? 
SEQ_INPUT
 : 
SEQ_COMMAND
;

54 
cmdp
->
¨gc
) {

56 i‡(
	`£q_dump
(
•
, 
°y≥
, 1) == 0)

57 
	`msgq
(
•
, 
M_INFO
, 
°y≥
 =
SEQ_INPUT
 ?

62 
öput
 = 
cmdp
->
¨gv
[0]->
bp
;

65 
	`ab‹t
();

74 i‡(
öput
[0] ='#' && 
	`isdigô
(input[1])) {

75 
p
 = 
öput
 + 2; 
	`isdigô
(*p); ++p);

76 i‡(
p
[0] != '\0')

77 
nofunc
;

79 i‡(
	`£q_£t
(
•
, 
NULL
, 0, 
öput
, 
cmdp
->
¨gv
[0]->
Àn
,

80 
cmdp
->
¨gv
[1]->
bp
, cmdp->¨gv[1]->
Àn
, 
°y≥
,

81 
SEQ_FUNCMAP
 | 
SEQ_USERDEF
))

83  (
•
->
gp
->
s¸_fm≠
 =
NULL
 ? 0 :

84 
•
->
gp
->
	`s¸_fm≠
(•, 
°y≥
, 
öput
, 
cmdp
->
¨gv
[0]->
Àn
,

85 
cmdp
->
¨gv
[1]->
bp
, cmdp->¨gv[1]->
Àn
));

89 
nofunc
: i‡(
°y≥
 =
SEQ_COMMAND
 && 
öput
[1] == '\0')

90 
	`KEY_VAL
(
•
, 
öput
[0])) {

91 
K_COLON
:

92 
K_ESCAPE
:

93 
K_NL
:

94 
	`msgq
(
•
, 
M_ERR
,

96 
	`KEY_NAME
(
•
, 
öput
[0]));

99  (
	`£q_£t
(
•
, 
NULL
, 0, 
öput
, 
cmdp
->
¨gv
[0]->
Àn
,

100 
cmdp
->
¨gv
[1]->
bp
, cmdp->¨gv[1]->
Àn
, 
°y≥
, 
SEQ_USERDEF
));

101 
	}
}

110 
	$ex_unm≠
(
•
, 
cmdp
)

111 
SCR
 *
•
;

112 
EXCMD
 *
cmdp
;

114 i‡(
	`£q_dñëe
(
•
, 
cmdp
->
¨gv
[0]->
bp
, cmdp->¨gv[0]->
Àn
,

115 
	`FL_ISSET
(
cmdp
->
iÊags
, 
E_C_FORCE
Ë? 
SEQ_INPUT
 : 
SEQ_COMMAND
)) {

116 
	`msgq_°r
(
•
, 
M_INFO
,

117 
cmdp
->
¨gv
[0]->
bp
, "135|\"%s\" isn't currently mapped");

121 
	}
}

	@ex/ex_mark.c

10 
	~"c⁄fig.h
"

12 #i‚de‡
löt


13 c⁄° 
	gsccsid
[] = "@(#)ex_mark.c 10.8 (Berkeley) 3/6/96";

16 
	~<sys/ty≥s.h
>

17 
	~<sys/queue.h
>

19 
	~<bô°rög.h
>

20 
	~<limôs.h
>

21 
	~<°dio.h
>

23 
	~"../comm⁄/comm⁄.h
"

34 
	$ex_m¨k
(
•
, 
cmdp
)

35 
SCR
 *
•
;

36 
EXCMD
 *
cmdp
;

38 
	`NEEDFILE
(
•
, 
cmdp
);

40 i‡(
cmdp
->
¨gv
[0]->
Àn
 != 1) {

41 
	`msgq
(
•
, 
M_ERR
, "136|MarkÇames must beá single character");

44  (
	`m¨k_£t
(
•
, 
cmdp
->
¨gv
[0]->
bp
[0], &cmdp->
addr1
, 1));

45 
	}
}

	@ex/ex_mkexrc.c

10 
	~"c⁄fig.h
"

12 #i‚de‡
löt


13 c⁄° 
	gsccsid
[] = "@(#)ex_mkexrc.c 10.11 (Berkeley) 3/6/96";

16 
	~<sys/ty≥s.h
>

17 
	~<sys/queue.h
>

18 
	~<sys/°©.h
>

20 
	~<bô°rög.h
>

21 
	~<î∫o.h
>

22 
	~<f˙é.h
>

23 
	~<limôs.h
>

24 
	~<°dio.h
>

25 
	~<°dlib.h
>

26 
	~<°rög.h
>

27 
	~<uni°d.h
>

29 
	~"../comm⁄/comm⁄.h
"

30 
	~"∑th«mes.h
"

40 
	$ex_mkexrc
(
•
, 
cmdp
)

41 
SCR
 *
•
;

42 
EXCMD
 *
cmdp
;

44 
°©
 
sb
;

45 
FILE
 *
Â
;

46 
fd
, 
svî∫o
;

47 *
‚ame
;

49 
cmdp
->
¨gc
) {

51 
‚ame
 = 
_PATH_EXRC
;

54 
‚ame
 = 
cmdp
->
¨gv
[0]->
bp
;

55 
	`£t_Æt_«me
(
•
, 
‚ame
);

58 
	`ab‹t
();

61 i‡(!
	`FL_ISSET
(
cmdp
->
iÊags
, 
E_C_FORCE
Ë&& !
	`°©
(
‚ame
, &
sb
)) {

62 
	`msgq_°r
(
•
, 
M_ERR
, 
‚ame
,

68 i‡((
fd
 = 
	`›í
(
‚ame
, 
O_CREAT
 | 
O_TRUNC
 | 
O_WRONLY
,

69 
S_IRUSR
 | 
S_IWUSR
 | 
S_IRGRP
 | 
S_IROTH
)) < 0) {

70 
	`msgq_°r
(
•
, 
M_SYSERR
, 
‚ame
, "%s");

74 i‡((
Â
 = 
	`fd›í
(
fd
, "w")Ë=
NULL
) {

75 
svî∫o
 = 
î∫o
;

76 ()
	`˛o£
(
fd
);

77 
e2
;

80 i‡(
	`£q_ßve
(
•
, 
Â
, "abbªvüã ", 
SEQ_ABBREV
Ë|| 
	`„º‹
(fp))

81 
e1
;

82 i‡(
	`£q_ßve
(
•
, 
Â
, "m≠ ", 
SEQ_COMMAND
Ë|| 
	`„º‹
(fp))

83 
e1
;

84 i‡(
	`£q_ßve
(
•
, 
Â
, "m≠! ", 
SEQ_INPUT
Ë|| 
	`„º‹
(fp))

85 
e1
;

86 i‡(
	`›ts_ßve
(
•
, 
Â
Ë|| 
	`„º‹
(fp))

87 
e1
;

88 i‡(
	`f˛o£
(
Â
)) {

89 
svî∫o
 = 
î∫o
;

90 
e2
;

93 
	`msgq_°r
(
•
, 
M_INFO
, 
‚ame
, "138|NewÉxrc file: %s");

96 
e1
: 
svî∫o
 = 
î∫o
;

97 ()
	`f˛o£
(
Â
);

98 
e2
: 
î∫o
 = 
svî∫o
;

99 
	`msgq_°r
(
•
, 
M_SYSERR
, 
‚ame
, "%s");

101 
	}
}

	@ex/ex_move.c

10 
	~"c⁄fig.h
"

12 #i‚de‡
löt


13 c⁄° 
	gsccsid
[] = "@(#)ex_move.c 10.10 (Berkeley) 9/15/96";

16 
	~<sys/ty≥s.h
>

17 
	~<sys/queue.h
>

19 
	~<bô°rög.h
>

20 
	~<limôs.h
>

21 
	~<°dio.h
>

22 
	~<°dlib.h
>

23 
	~<°rög.h
>

25 
	~"../comm⁄/comm⁄.h
"

34 
	$ex_c›y
(
•
, 
cmdp
)

35 
SCR
 *
•
;

36 
EXCMD
 *
cmdp
;

38 
CB
 
cb
;

39 
MARK
 
fm1
, 
fm2
, 
m
, 
tm
;

40 
ª˙o_t
 
˙t
;

41 
rvÆ
;

43 
rvÆ
 = 0;

45 
	`NEEDFILE
(
•
, 
cmdp
);

52 
fm1
 = 
cmdp
->
addr1
;

53 
fm2
 = 
cmdp
->
addr2
;

54 
	`mem£t
(&
cb
, 0, (cb));

55 
	`CIRCLEQ_INIT
(&
cb
.
ãxtq
);

56 
˙t
 = 
fm1
.
 o
; c¡ <
fm2
.lno; ++cnt)

57 i‡(
	`cut_löe
(
•
, 
˙t
, 0, 0, &
cb
)) {

58 
rvÆ
 = 1;

59 
îr
;

61 
cb
.
Êags
 |
CB_LMODE
;

64 
tm
.
 o
 = 
cmdp
->
löío
;

65 
tm
.
˙o
 = 0;

66 i‡(
	`put
(
•
, &
cb
, 
NULL
, &
tm
, &
m
, 1))

67 
rvÆ
 = 1;

74 
˙t
 = (
fm2
.
 o
 - 
fm1
.lno) + 1;

75 
•
->
 o
 = 
m
. ÿ+ (
˙t
 - 1);

76 
•
->
˙o
 = 0;

78 
îr
: 
	`ãxt_l‰ì
(&
cb
.
ãxtq
);

79  (
rvÆ
);

80 
	}
}

89 
	$ex_move
(
•
, 
cmdp
)

90 
SCR
 *
•
;

91 
EXCMD
 *
cmdp
;

93 
LMARK
 *
lmp
;

94 
MARK
 
fm1
, 
fm2
;

95 
ª˙o_t
 
˙t
, 
diff
, 
Ê
, 
é
, 
mÊ
, 
mé
;

96 
size_t
 
bÀn
, 
Àn
;

97 
m¨k_ª£t
;

98 *
bp
, *
p
;

100 
	`NEEDFILE
(
•
, 
cmdp
);

106 
fm1
 = 
cmdp
->
addr1
;

107 
fm2
 = 
cmdp
->
addr2
;

108 i‡(
cmdp
->
löío
 >
fm1
.
 o
 && cmdp->löíÿ<
fm2
.lno) {

109 
	`msgq
(
•
, 
M_ERR
, "139|DestinationÜine is inside moveÑange");

124 
Ê
 = 
fm1
.
 o
;

125 
é
 = 
cmdp
->
löío
;

128 
m¨k_ª£t
 = 0;

129 
lmp
 = 
•
->
ï
->
m¨ks
.
lh_fú°
;Üm∞!
NULL
;Üm∞lmp->
q
.
À_√xt
)

130 i‡(
lmp
->
«me
 !
ABSMARK1
 &&

131 
lmp
->
 o
 >
Ê
 &&Ümp-> ÿ<
é
) {

132 
m¨k_ª£t
 = 1;

133 
	`F_CLR
(
lmp
, 
MARK_USERSET
);

134 ()
	`log_m¨k
(
•
, 
lmp
);

138 
	`GET_SPACE_RET
(
•
, 
bp
, 
bÀn
, 256);

141 
diff
 = (
fm2
.
 o
 - 
fm1
.lno) + 1;

142 i‡(
é
 > 
Ê
) {

143 
mÊ
 = 
é
 - 
diff
;

144 
mé
 = 
é
;

145 
˙t
 = 
diff
; cnt--;) {

146 i‡(
	`db_gë
(
•
, 
Ê
, 
DBG_FATAL
, &
p
, &
Àn
))

148 
	`BINC_RET
(
•
, 
bp
, 
bÀn
, 
Àn
);

149 
	`mem˝y
(
bp
, 
p
, 
Àn
);

150 i‡(
	`db_≠≥nd
(
•
, 1, 
é
, 
bp
, 
Àn
))

152 i‡(
m¨k_ª£t
)

153 
lmp
 = 
•
->
ï
->
m¨ks
.
lh_fú°
;

154 
lmp
 !
NULL
;Üm∞lmp->
q
.
À_√xt
)

155 i‡(
lmp
->
«me
 !
ABSMARK1
 &&

156 
lmp
->
 o
 =
Ê
)

157 
lmp
->
 o
 = 
é
 + 1;

158 i‡(
	`db_dñëe
(
•
, 
Ê
))

162 
mÊ
 = 
é
;

163 
mé
 = 
é
 + 
diff
;

164 
˙t
 = 
diff
; cnt--;) {

165 i‡(
	`db_gë
(
•
, 
Ê
, 
DBG_FATAL
, &
p
, &
Àn
))

167 
	`BINC_RET
(
•
, 
bp
, 
bÀn
, 
Àn
);

168 
	`mem˝y
(
bp
, 
p
, 
Àn
);

169 i‡(
	`db_≠≥nd
(
•
, 1, 
é
++, 
bp
, 
Àn
))

171 i‡(
m¨k_ª£t
)

172 
lmp
 = 
•
->
ï
->
m¨ks
.
lh_fú°
;

173 
lmp
 !
NULL
;Üm∞lmp->
q
.
À_√xt
)

174 i‡(
lmp
->
«me
 !
ABSMARK1
 &&

175 
lmp
->
 o
 =
Ê
)

176 
lmp
->
 o
 = 
é
;

177 ++
Ê
;

178 i‡(
	`db_dñëe
(
•
, 
Ê
))

182 
	`FREE_SPACE
(
•
, 
bp
, 
bÀn
);

184 
•
->
 o
 = 
é
;

185 
•
->
˙o
 = 0;

188 i‡(
m¨k_ª£t
)

189 
lmp
 = 
•
->
ï
->
m¨ks
.
lh_fú°
;

190 
lmp
 !
NULL
;Üm∞lmp->
q
.
À_√xt
)

191 i‡(
lmp
->
«me
 !
ABSMARK1
 &&

192 
lmp
->
 o
 >
mÊ
 &&Ümp-> ÿ<
mé
)

193 ()
	`log_m¨k
(
•
, 
lmp
);

196 
•
->
Ωéöes
[
L_MOVED
] +
diff
;

198 
	}
}

	@ex/ex_open.c

10 
	~"c⁄fig.h
"

12 #i‚de‡
löt


13 c⁄° 
	gsccsid
[] = "@(#)ex_open.c 10.7 (Berkeley) 3/6/96";

16 
	~<sys/ty≥s.h
>

17 
	~<sys/queue.h
>

19 
	~<bô°rög.h
>

20 
	~<limôs.h
>

21 
	~<°dio.h
>

23 
	~"../comm⁄/comm⁄.h
"

33 
	$ex_›í
(
•
, 
cmdp
)

34 
SCR
 *
•
;

35 
EXCMD
 *
cmdp
;

38 i‡(!
	`O_ISSET
(
•
, 
O_OPEN
)) {

39 
	`msgq
(
•
, 
M_ERR
,

44 
	`msgq
(
•
, 
M_ERR
, "141|The open command isÇot yet implemented");

46 
	}
}

	@ex/ex_perl.c

14 
	~"c⁄fig.h
"

16 #i‚de‡
löt


17 c⁄° 
	gsccsid
[] = "@(#)ex_perl.c 8.10 (Berkeley) 9/15/96";

20 
	~<sys/ty≥s.h
>

21 
	~<sys/queue.h
>

22 
	~<sys/time.h
>

24 
	~<bô°rög.h
>

25 
	~<˘y≥.h
>

26 
	~<limôs.h
>

27 
	~<°dio.h
>

28 
	~<°rög.h
>

29 
	~<ãrmios.h
>

30 
	~<uni°d.h
>

32 
	~"../comm⁄/comm⁄.h
"

44 
	$ex_≥æ
(
•
, 
cmdp
)

45 
SCR
 *
•
;

46 
EXCMD
 *
cmdp
;

48 #ifde‡
HAVE_PERL_INTERP


49 
CHAR_T
 *
p
;

50 
size_t
 
Àn
;

53 i‡(
cmdp
->
¨gc
 != 0)

54 
p
 = 
cmdp
->
¨gv
[0]->
bp
,

55 
Àn
 = 
cmdp
->
¨gv
[0]->Àn;Üí > 0; --Àn, ++
p
)

56 i‡(!
	`isbœnk
(*
p
))

58 i‡(
cmdp
->
¨gc
 =0 || 
Àn
 == 0) {

59 
	`ex_emsg
(
•
, 
cmdp
->
cmd
->
ußge
, 
EXM_USAGE
);

62  (
cmdp
->
cmd
 =&
cmds
[
C_PERLCMD
] ?

63 
	`≥æ_ex_≥æ
(
•
, 
p
, 
Àn
, 
cmdp
->
addr1
.
 o
, cmdp->
addr2
.lno) :

64 
	`≥æ_ex_≥ædo
(
•
, 
p
, 
Àn
, 
cmdp
->
addr1
.
 o
, cmdp->
addr2
.lno));

66 
	`msgq
(
•
, 
M_ERR
, "306|Vi wasÇotÜoaded withá Perl interpreter");

69 
	}
}

	@ex/ex_preserve.c

10 
	~"c⁄fig.h
"

12 #i‚de‡
löt


13 c⁄° 
	gsccsid
[] = "@(#)ex_preserve.c 10.12 (Berkeley) 4/27/96";

16 
	~<sys/ty≥s.h
>

17 
	~<sys/queue.h
>

19 
	~<bô°rög.h
>

20 
	~<î∫o.h
>

21 
	~<limôs.h
>

22 
	~<°dio.h
>

23 
	~<°rög.h
>

25 
	~"../comm⁄/comm⁄.h
"

34 
	$ex_¥e£rve
(
•
, 
cmdp
)

35 
SCR
 *
•
;

36 
EXCMD
 *
cmdp
;

38 
ª˙o_t
 
 o
;

40 
	`NEEDFILE
(
•
, 
cmdp
);

42 i‡(!
	`F_ISSET
(
•
->
ï
, 
F_RCV_ON
)) {

43 
	`msgq
(
•
, 
M_ERR
, "142|Preservation ofÅhis fileÇotÖossible");

48 i‡(
	`F_ISSET
(
•
->
ï
, 
F_FIRSTMODIFY
Ë&& 
	`rcv_öô
(sp))

52 i‡(
	`db_œ°
(
•
, &
 o
))

56 i‡(
	`rcv_sync
(
•
, 
RCV_SNAPSHOT
))

59 
	`msgq
(
•
, 
M_INFO
, "143|FileÖreserved");

61 
	}
}

70 
	$ex_ªcovî
(
•
, 
cmdp
)

71 
SCR
 *
•
;

72 
EXCMD
 *
cmdp
;

74 
ARGS
 *
≠
;

75 
FREF
 *
‰p
;

77 
≠
 = 
cmdp
->
¨gv
[0];

80 
	`£t_Æt_«me
(
•
, 
≠
->
bp
);

86 i‡(
	`fûe_m2
(
•
, 
	`FL_ISSET
(
cmdp
->
iÊags
, 
E_C_FORCE
)))

90 i‡((
‰p
 = 
	`fûe_add
(
•
, 
≠
->
bp
)Ë=
NULL
)

94 
	`F_SET
(
‰p
, 
FR_RECOVER
);

97 i‡(
	`fûe_öô
(
•
, 
‰p
, 
NULL
, 
FS_SETALT
 |

98 (
	`FL_ISSET
(
cmdp
->
iÊags
, 
E_C_FORCE
Ë? 
FS_FORCE
 : 0)))

101 
	`F_SET
(
•
, 
SC_FSWITCH
);

103 
	}
}

	@ex/ex_print.c

10 
	~"c⁄fig.h
"

12 #i‚de‡
löt


13 c⁄° 
	gsccsid
[] = "@(#)ex_print.c 10.18 (Berkeley) 5/12/96";

16 
	~<sys/ty≥s.h
>

17 
	~<sys/queue.h
>

19 
	~<bô°rög.h
>

20 
	~<˘y≥.h
>

21 
	~<limôs.h
>

22 
	~<°dio.h
>

23 
	~<°rög.h
>

25 #ifde‡
__STDC__


26 
	~<°d¨g.h
>

28 
	~<v¨¨gs.h
>

31 
	~"../comm⁄/comm⁄.h
"

33 
ex_¥ch¨s
 
__P
((
SCR
 *, c⁄° *, 
size_t
 *, size_t, 
u_öt
, ));

43 
	$ex_li°
(
•
, 
cmdp
)

44 
SCR
 *
•
;

45 
EXCMD
 *
cmdp
;

47 i‡(
	`ex_¥öt
(
•
, 
cmdp
,

48 &
cmdp
->
addr1
, &cmdp->
addr2
, cmdp->
iÊags
 | 
E_C_LIST
))

50 
•
->
 o
 = 
cmdp
->
addr2
.lno;

51 
•
->
˙o
 = 
cmdp
->
addr2
.cno;

53 
	}
}

63 
	$ex_numbî
(
•
, 
cmdp
)

64 
SCR
 *
•
;

65 
EXCMD
 *
cmdp
;

67 i‡(
	`ex_¥öt
(
•
, 
cmdp
,

68 &
cmdp
->
addr1
, &cmdp->
addr2
, cmdp->
iÊags
 | 
E_C_HASH
))

70 
•
->
 o
 = 
cmdp
->
addr2
.lno;

71 
•
->
˙o
 = 
cmdp
->
addr2
.cno;

73 
	}
}

83 
	$ex_¥
(
•
, 
cmdp
)

84 
SCR
 *
•
;

85 
EXCMD
 *
cmdp
;

87 i‡(
	`ex_¥öt
(
•
, 
cmdp
, &cmdp->
addr1
, &cmdp->
addr2
, cmdp->
iÊags
))

89 
•
->
 o
 = 
cmdp
->
addr2
.lno;

90 
•
->
˙o
 = 
cmdp
->
addr2
.cno;

92 
	}
}

101 
	$ex_¥öt
(
•
, 
cmdp
, 
Â
, 
ç
, 
Êags
)

102 
SCR
 *
•
;

103 
EXCMD
 *
cmdp
;

104 
MARK
 *
Â
, *
ç
;

105 
u_öt32_t
 
Êags
;

107 
GS
 *
gp
;

108 
ª˙o_t
 
‰om
, 
to
;

109 
size_t
 
cﬁ
, 
Àn
;

110 *
p
, 
buf
[10];

112 
	`NEEDFILE
(
•
, 
cmdp
);

114 
gp
 = 
•
->gp;

115 
‰om
 = 
Â
->
 o
, 
to
 = 
ç
->lno; from <=Åo; ++from) {

116 
cﬁ
 = 0;

123 i‡(
	`LF_ISSET
(
E_C_HASH
)) {

124 i‡(
‰om
 <= 999999) {

125 
	`¢¥ötf
(
buf
, (buf), "%6ld ", 
‰om
);

126 
p
 = 
buf
;

128 
p
 = "TOOBIG ";

129 i‡(
	`ex_¥ch¨s
(
•
, 
p
, &
cﬁ
, 8, 0, 0))

138 i‡(
	`db_gë
(
•
, 
‰om
, 
DBG_FATAL
, &
p
, &
Àn
))

141 i‡(
Àn
 =0 && !
	`LF_ISSET
(
E_C_LIST
))

142 ()
	`ex_puts
(
•
, "\n");

143 i‡(
	`ex_ldi•œy
(
•
, 
p
, 
Àn
, 
cﬁ
, 
Êags
))

146 i‡(
	`INTERRUPTED
(
•
))

150 
	}
}

159 
	$ex_ldi•œy
(
•
, 
p
, 
Àn
, 
cﬁ
, 
Êags
)

160 
SCR
 *
•
;

161 c⁄° *
p
;

162 
size_t
 
Àn
, 
cﬁ
;

163 
u_öt
 
Êags
;

165 i‡(
Àn
 > 0 && 
	`ex_¥ch¨s
(
•
, 
p
, &
cﬁ
,Üí, 
	`LF_ISSET
(
E_C_LIST
), 0))

167 i‡(!
	`INTERRUPTED
(
•
Ë&& 
	`LF_ISSET
(
E_C_LIST
)) {

168 
p
 = "$";

169 i‡(
	`ex_¥ch¨s
(
•
, 
p
, &
cﬁ
, 1, 
	`LF_ISSET
(
E_C_LIST
), 0))

172 i‡(!
	`INTERRUPTED
(
•
))

173 ()
	`ex_puts
(
•
, "\n");

175 
	}
}

184 
	$ex_s˝röt
(
•
, 
Â
, 
ç
)

185 
SCR
 *
•
;

186 
MARK
 *
Â
, *
ç
;

188 c⁄° *
p
;

189 
size_t
 
cﬁ
, 
Àn
;

191 
cﬁ
 = 0;

192 i‡(
	`O_ISSET
(
•
, 
O_NUMBER
)) {

193 
p
 = " ";

194 i‡(
	`ex_¥ch¨s
(
•
, 
p
, &
cﬁ
, 8, 0, 0))

198 i‡(
	`db_gë
(
•
, 
Â
->
 o
, 
DBG_FATAL
, (**)&
p
, &
Àn
))

201 i‡(
	`ex_¥ch¨s
(
•
, 
p
, &
cﬁ
, 
Â
->
˙o
, 0, ' '))

203 
p
 +
Â
->
˙o
;

204 i‡(
	`ex_¥ch¨s
(
•
,

205 
p
, &
cﬁ
, 
ç
->
˙o
 =
Â
->cno ? 1 :Åp->cno - fp->cno, 0, '^'))

207 i‡(
	`INTERRUPTED
(
•
))

209 
p
 = "[ynq]";

210 i‡(
	`ex_¥ch¨s
(
•
, 
p
, &
cﬁ
, 5, 0, 0))

212 ()
	`ex_fÊush
(
•
);

214 
	}
}

221 
	$ex_¥ch¨s
(
•
, 
p
, 
cﬁp
, 
Àn
, 
Êags
, 
ª≥©c
)

222 
SCR
 *
•
;

223 c⁄° *
p
;

224 
size_t
 *
cﬁp
, 
Àn
;

225 
u_öt
 
Êags
;

226 
ª≥©c
;

228 
CHAR_T
 
ch
, *
kp
;

229 
GS
 *
gp
;

230 
size_t
 
cﬁ
, 
éí
, 
ts
;

232 i‡(
	`O_ISSET
(
•
, 
O_LIST
))

233 
	`LF_SET
(
E_C_LIST
);

234 
gp
 = 
•
->gp;

235 
ts
 = 
	`O_VAL
(
•
, 
O_TABSTOP
);

236 
cﬁ
 = *
cﬁp
; 
Àn
--;)

237 i‡((
ch
 = *
p
++Ë='\t' && !
	`LF_ISSET
(
E_C_LIST
))

238 
éí
 = 
ts
 - 
cﬁ
 %Ås;

239 
cﬁ
 < 
•
->
cﬁs
 && 
éí
--; ++col) {

240 ()
	`ex_¥ötf
(
•
,

241 "%c", 
ª≥©c
 ?Ñepeatc : ' ');

242 i‡(
	`INTERRUPTED
(
•
))

243 
öå
;

246 
kp
 = 
	`KEY_NAME
(
•
, 
ch
);

247 
éí
 = 
	`KEY_LEN
(
•
, 
ch
);

248 i‡(!
ª≥©c
 && 
cﬁ
 + 
éí
 < 
•
->
cﬁs
) {

249 ()
	`ex_puts
(
•
, 
kp
);

250 
cﬁ
 +
éí
;

252 ; 
éí
--; ++
kp
, ++
cﬁ
) {

253 i‡(
cﬁ
 =
•
->
cﬁs
) {

254 
cﬁ
 = 0;

255 ()
	`ex_puts
(
•
, "\n");

257 ()
	`ex_¥ötf
(
•
,

258 "%c", 
ª≥©c
 ?Ñïót¯: *
kp
);

259 i‡(
	`INTERRUPTED
(
•
))

260 
öå
;

263 
öå
: *
cﬁp
 = 
cﬁ
;

265 
	}
}

274 #ifde‡
__STDC__


275 
	$ex_¥ötf
(
SCR
 *
•
, c⁄° *
fmt
, ...)

277 
	$ex_¥ötf
(
•
, 
fmt
, 
va_Æi°
)

278 
SCR
 *
•
;

279 c⁄° *
fmt
;

280 
va_d˛


283 
EX_PRIVATE
 *
exp
;

284 
va_li°
 
≠
;

285 
size_t
 
n
;

287 
exp
 = 
	`EXP
(
•
);

289 #ifde‡
__STDC__


290 
	`va_°¨t
(
≠
, 
fmt
);

292 
	`va_°¨t
(
≠
);

294 
exp
->
obp_Àn
 +
n
 = 
	`v¢¥ötf
”xp->
obp
 +Éxp->obp_len,

295 (
exp
->
obp
Ë-Éxp->
obp_Àn
, 
fmt
, 
≠
);

296 
	`va_íd
(
≠
);

299 i‡(
exp
->
obp
[exp->
obp_Àn
 - 1] == '\n' ||

300 
exp
->
obp_Àn
 > ”xp->
obp
) / 2)

301 ()
	`ex_fÊush
(
•
);

302  (
n
);

303 
	}
}

312 
	$ex_puts
(
•
, 
°r
)

313 
SCR
 *
•
;

314 c⁄° *
°r
;

316 
EX_PRIVATE
 *
exp
;

317 
doÊush
, 
n
;

319 
exp
 = 
	`EXP
(
•
);

322 
doÊush
 = 
n
 = 0; *
°r
 != '\0'; ++n) {

323 i‡(
exp
->
obp_Àn
 > ”xp->
obp
))

324 ()
	`ex_fÊush
(
•
);

325 i‡((
exp
->
obp
[exp->
obp_Àn
++] = *
°r
++) == '\n')

326 
doÊush
 = 1;

328 i‡(
doÊush
)

329 ()
	`ex_fÊush
(
•
);

330  (
n
);

331 
	}
}

340 
	$ex_fÊush
(
•
)

341 
SCR
 *
•
;

343 
EX_PRIVATE
 *
exp
;

345 
exp
 = 
	`EXP
(
•
);

347 i‡(
exp
->
obp_Àn
 != 0) {

348 
•
->
gp
->
	`s¸_msg
(•, 
M_NONE
, 
exp
->
obp
,Éxp->
obp_Àn
);

349 
exp
->
obp_Àn
 = 0;

352 
	}
}

	@ex/ex_put.c

10 
	~"c⁄fig.h
"

12 #i‚de‡
löt


13 c⁄° 
	gsccsid
[] = "@(#)ex_put.c 10.7 (Berkeley) 3/6/96";

16 
	~<sys/ty≥s.h
>

17 
	~<sys/queue.h
>

19 
	~<bô°rög.h
>

20 
	~<˘y≥.h
>

21 
	~<limôs.h
>

22 
	~<°dio.h
>

23 
	~<°rög.h
>

25 
	~"../comm⁄/comm⁄.h
"

34 
	$ex_put
(
•
, 
cmdp
)

35 
SCR
 *
•
;

36 
EXCMD
 *
cmdp
;

38 
MARK
 
m
;

40 
	`NEEDFILE
(
•
, 
cmdp
);

42 
m
.
 o
 = 
•
->lno;

43 
m
.
˙o
 = 
•
->cno;

44 i‡(
	`put
(
•
, 
NULL
,

45 
	`FL_ISSET
(
cmdp
->
iÊags
, 
E_C_BUFFER
Ë? &cmdp->
buf„r
 : 
NULL
,

46 &
cmdp
->
addr1
, &
m
, 1))

48 
•
->
 o
 = 
m
.lno;

49 
•
->
˙o
 = 
m
.cno;

51 
	}
}

	@ex/ex_quit.c

10 
	~"c⁄fig.h
"

12 #i‚de‡
löt


13 c⁄° 
	gsccsid
[] = "@(#)ex_quit.c 10.7 (Berkeley) 4/27/96";

16 
	~<sys/ty≥s.h
>

17 
	~<sys/queue.h
>

19 
	~<bô°rög.h
>

20 
	~<limôs.h
>

21 
	~<°dio.h
>

23 
	~"../comm⁄/comm⁄.h
"

32 
	$ex_quô
(
•
, 
cmdp
)

33 
SCR
 *
•
;

34 
EXCMD
 *
cmdp
;

36 
f‹˚
;

38 
f‹˚
 = 
	`FL_ISSET
(
cmdp
->
iÊags
, 
E_C_FORCE
);

41 i‡(
	`fûe_m2
(
•
, 
f‹˚
Ë|| 
	`ex_ncheck
(sp, force))

44 
	`F_SET
(
•
, 
f‹˚
 ? 
SC_EXIT_FORCE
 : 
SC_EXIT
);

46 
	}
}

	@ex/ex_read.c

10 
	~"c⁄fig.h
"

12 #i‚de‡
löt


13 c⁄° 
	gsccsid
[] = "@(#)ex_read.c 10.38 (Berkeley) 8/12/96";

16 
	~<sys/ty≥s.h
>

17 
	~<sys/queue.h
>

18 
	~<sys/°©.h
>

19 
	~<sys/time.h
>

21 
	~<bô°rög.h
>

22 
	~<˘y≥.h
>

23 
	~<î∫o.h
>

24 
	~<limôs.h
>

25 
	~<°dio.h
>

26 
	~<°dlib.h
>

27 
	~<°rög.h
>

29 
	~"../comm⁄/comm⁄.h
"

30 
	~"../vi/vi.h
"

43 
	$ex_ªad
(
•
, 
cmdp
)

44 
SCR
 *
•
;

45 
EXCMD
 *
cmdp
;

47 íum { 
R_ARG
, 
R_EXPANDARG
, 
R_FILTER
 } 
which
;

48 
°©
 
sb
;

49 
CHAR_T
 *
¨g
, *
«me
;

50 
EX_PRIVATE
 *
exp
;

51 
FILE
 *
Â
;

52 
FREF
 *
‰p
;

53 
GS
 *
gp
;

54 
MARK
 
rm
;

55 
ª˙o_t
 
∆öes
;

56 
size_t
 
¨gÀn
;

57 
¨gc
, 
rvÆ
;

58 *
p
;

60 
gp
 = 
•
->gp;

66 
cmdp
->
¨gc
) {

68 
which
 = 
R_ARG
;

71 
¨g
 = 
cmdp
->
¨gv
[0]->
bp
;

72 
¨gÀn
 = 
cmdp
->
¨gv
[0]->
Àn
;

73 i‡(*
¨g
 == '!') {

74 ++
¨g
;

75 --
¨gÀn
;

76 
which
 = 
R_FILTER
;

79 i‡(
	`O_ISSET
(
•
, 
O_SECURE
)) {

80 
	`ex_emsg
(
•
, 
cmdp
->
cmd
->
«me
, 
EXM_SECURE_F
);

84 
which
 = 
R_EXPANDARG
;

87 
	`ab‹t
();

92 i‡(
•
->
ï
 =
NULL
) {

93 i‡((
‰p
 = 
	`fûe_add
(
•
, 
NULL
)) == NULL)

95 i‡(
	`fûe_öô
(
•
, 
‰p
, 
NULL
, 0))

99 
which
) {

100 
R_FILTER
:

105 
¨gc
 = 
cmdp
->argc;

106 i‡(
	`¨gv_exp1
(
•
, 
cmdp
, 
¨g
, 
¨gÀn
, 1))

108 i‡(
¨gc
 =
cmdp
->argc) {

109 
	`ex_emsg
(
•
, 
cmdp
->
cmd
->
ußge
, 
EXM_USAGE
);

112 
¨gc
 = 
cmdp
->argc - 1;

115 
exp
 = 
	`EXP
(
•
);

116 i‡(
exp
->
œ°bcomm
 !
NULL
)

117 
	`‰ì
(
exp
->
œ°bcomm
);

118 i‡((
exp
->
œ°bcomm
 =

119 
	`°rdup
(
cmdp
->
¨gv
[
¨gc
]->
bp
)Ë=
NULL
) {

120 
	`msgq
(
•
, 
M_SYSERR
, 
NULL
);

129 i‡(
	`F_ISSET
(
•
, 
SC_VI
)) {

130 i‡(
	`F_ISSET
(
cmdp
, 
E_MODIFY
))

131 ()
	`vs_upd©e
(
•
, "!", 
cmdp
->
¨gv
[
¨gc
]->
bp
);

133 i‡(
	`F_ISSET
(
cmdp
, 
E_MODIFY
))

134 ()
	`ex_¥ötf
(
•
,

135 "!%s\n", 
cmdp
->
¨gv
[
¨gc
]->
bp
);

137 ()
	`ex_puts
(
•
, "!\n");

138 ()
	`ex_fÊush
(
•
);

146 i‡(!
	`F_ISSET
(
•
, 
SC_SCR_EXWROTE
))

147 
	`F_SET
(
•
, 
SC_EX_WAIT_NO
);

158 i‡(
	`F_ISSET
(
•
, 
SC_VI
)) {

159 i‡(
gp
->
	`s¸_s¸ìn
(
•
, 
SC_EX
)) {

160 
	`ex_emsg
(
•
, 
cmdp
->
cmd
->
«me
, 
EXM_NOCANON_F
);

169 
	`F_SET
(
•
, 
SC_SCR_EX
 | 
SC_SCR_EXWROTE
);

172 i‡(
	`ex_fûãr
(
•
, 
cmdp
, &cmdp->
addr1
,

173 
NULL
, &
rm
, 
cmdp
->
¨gv
[
¨gc
]->
bp
, 
FILTER_READ
))

177 
	`F_SET
(
cmdp
, 
E_AUTOPRINT
);

183 
•
->
 o
 = 
rm
.lno;

184 i‡(
	`F_ISSET
(
•
, 
SC_VI
)) {

185 
•
->
˙o
 = 0;

186 ()
	`n⁄bœnk
(
•
, sp->
 o
, &•->
˙o
);

189 
R_ARG
:

190 
«me
 = 
•
->
‰p
->name;

192 
R_EXPANDARG
:

193 i‡(
	`¨gv_exp2
(
•
, 
cmdp
, 
¨g
, 
¨gÀn
))

204 
cmdp
->
¨gc
) {

207 
	`ab‹t
();

210 
«me
 = 
cmdp
->
¨gv
[1]->
bp
;

217 i‡(
	`F_ISSET
(
•
->
‰p
, 
FR_TMPFILE
) &&

218 !
	`F_ISSET
(
•
->
‰p
, 
FR_EXNAMED
)) {

219 i‡((
p
 = 
	`v_°rdup
(
•
, 
cmdp
->
¨gv
[1]->
bp
,

220 
cmdp
->
¨gv
[1]->
Àn
)Ë!
NULL
) {

221 
	`‰ì
(
•
->
‰p
->
«me
);

222 
•
->
‰p
->
«me
 = 
p
;

228 
	`F_CLR
(
•
->
‰p
, 
FR_TMPEXIT
 | 
FR_TMPFILE
);

229 
	`F_SET
(
•
->
‰p
, 
FR_NAMECHANGE
 | 
FR_EXNAMED
);

232 ()
•
->
gp
->
	`s¸_ª«me
(•, sp->
‰p
->
«me
, 1);

234 
	`£t_Æt_«me
(
•
, 
«me
);

237 
	`ex_emsg
(
•
, 
cmdp
->
¨gv
[0]->
bp
, 
EXM_FILECOUNT
);

252 i‡((
Â
 = 
	`f›í
(
«me
, "r")Ë=
NULL
 || 
	`f°©
(
	`fûío
(Â), &
sb
)) {

253 
	`msgq_°r
(
•
, 
M_SYSERR
, 
«me
, "%s");

256 i‡(!
	`S_ISFIFO
(
sb
.
°_mode
Ë&& !
	`S_ISREG
(sb.st_mode)) {

257 ()
	`f˛o£
(
Â
);

258 
	`msgq
(
•
, 
M_ERR
,

264 i‡(
	`fûe_lock
(
•
, 
NULL
, NULL, 
	`fûío
(
Â
), 0Ë=
LOCK_UNAVAIL
)

265 
	`msgq
(
•
, 
M_ERR
, "146|%s:ÑódÜock wa†u«vaûabÀ", 
«me
);

267 
rvÆ
 = 
	`ex_ªadÂ
(
•
, 
«me
, 
Â
, &
cmdp
->
addr1
, &
∆öes
, 0);

278 i‡(
	`F_ISSET
(
•
, 
SC_VI
)) {

279 
•
->
 o
 = 
cmdp
->
addr1
.lno;

280 i‡(
∆öes
)

281 ++
•
->
 o
;

283 
•
->
 o
 = 
cmdp
->
addr1
. ÿ+ 
∆öes
;

284  (
rvÆ
);

285 
	}
}

294 
	$ex_ªadÂ
(
•
, 
«me
, 
Â
, 
fm
, 
∆öe•
, 
sûít
)

295 
SCR
 *
•
;

296 *
«me
;

297 
FILE
 *
Â
;

298 
MARK
 *
fm
;

299 
ª˙o_t
 *
∆öe•
;

300 
sûít
;

302 
EX_PRIVATE
 *
exp
;

303 
GS
 *
gp
;

304 
ª˙o_t
 
l˙t
, 
 o
;

305 
size_t
 
Àn
;

306 
u_l⁄g
 
c˙t
;

307 
nf
, 
rvÆ
;

308 *
p
;

310 
gp
 = 
•
->gp;

311 
exp
 = 
	`EXP
(
•
);

317 
c˙t
 = 0;

318 
l˙t
 = 0;

319 
p
 = "147|Reading...";

320 
 o
 = 
fm
-> o; !
	`ex_gëlöe
(
•
, 
Â
, &
Àn
); ++ o, ++
l˙t
) {

321 i‡((
l˙t
 + 1Ë% 
INTERRUPT_CHECK
 == 0) {

322 i‡(
	`INTERRUPTED
(
•
))

324 i‡(!
sûít
) {

325 
gp
->
	`s¸_busy
(
•
, 
p
,

326 
p
 =
NULL
 ? 
BUSY_UPDATE
 : 
BUSY_ON
);

327 
p
 = 
NULL
;

330 i‡(
	`db_≠≥nd
(
•
, 1, 
 o
, 
exp
->
ibp
, 
Àn
))

331 
îr
;

332 
c˙t
 +
Àn
;

335 i‡(
	`„º‹
(
Â
Ë|| 
	`f˛o£
(fp))

336 
îr
;

339 i‡(
∆öe•
 !
NULL
)

340 *
∆öe•
 = 
l˙t
;

342 i‡(!
sûít
) {

343 
p
 = 
	`msg_¥öt
(
•
, 
«me
, &
nf
);

344 
	`msgq
(
•
, 
M_INFO
,

345 "148|%s: %luÜöes, %lu ch¨a˘îs", 
p
, 
l˙t
, 
c˙t
);

346 i‡(
nf
)

347 
	`FREE_SPACE
(
•
, 
p
, 0);

350 
rvÆ
 = 0;

352 
îr
: 
	`msgq_°r
(
•
, 
M_SYSERR
, 
«me
, "%s");

353 ()
	`f˛o£
(
Â
);

354 
rvÆ
 = 1;

357 i‡(!
sûít
)

358 
gp
->
	`s¸_busy
(
•
, 
NULL
, 
BUSY_OFF
);

359  (
rvÆ
);

360 
	}
}

	@ex/ex_screen.c

10 
	~"c⁄fig.h
"

12 #i‚de‡
löt


13 c⁄° 
	gsccsid
[] = "@(#)ex_screen.c 10.11 (Berkeley) 6/29/96";

16 
	~<sys/ty≥s.h
>

17 
	~<sys/queue.h
>

18 
	~<sys/time.h
>

20 
	~<bô°rög.h
>

21 
	~<limôs.h
>

22 
	~<°dio.h
>

23 
	~<°dlib.h
>

24 
	~<°rög.h
>

26 
	~"../comm⁄/comm⁄.h
"

27 
	~"../vi/vi.h
"

36 
	$ex_bg
(
•
, 
cmdp
)

37 
SCR
 *
•
;

38 
EXCMD
 *
cmdp
;

40  (
	`vs_bg
(
•
));

41 
	}
}

50 
	$ex_fg
(
•
, 
cmdp
)

51 
SCR
 *
•
;

52 
EXCMD
 *
cmdp
;

54 
SCR
 *
n•
;

55 
√ws¸ìn
;

57 
√ws¸ìn
 = 
	`F_ISSET
(
cmdp
, 
E_NEWSCREEN
);

58 i‡(
	`vs_fg
(
•
, &
n•
, 
cmdp
->
¨gc
 ? cmdp->
¨gv
[0]->
bp
 : 
NULL
, 
√ws¸ìn
))

62 i‡(
√ws¸ìn
) {

63 
•
->
√xtdi•
 = 
n•
;

64 
	`F_SET
(
•
, 
SC_SSWITCH
);

67 
	}
}

76 
	$ex_ªsize
(
•
, 
cmdp
)

77 
SCR
 *
•
;

78 
EXCMD
 *
cmdp
;

80 
adj_t
 
adj
;

82 
	`FL_ISSET
(
cmdp
->
iÊags
,

83 
E_C_COUNT
 | 
E_C_COUNT_NEG
 | 
E_C_COUNT_POS
)) {

84 
E_C_COUNT
:

85 
adj
 = 
A_SET
;

87 
E_C_COUNT
 | 
E_C_COUNT_NEG
:

88 
adj
 = 
A_DECREASE
;

90 
E_C_COUNT
 | 
E_C_COUNT_POS
:

91 
adj
 = 
A_INCREASE
;

94 
	`ex_emsg
(
•
, 
cmdp
->
cmd
->
ußge
, 
EXM_USAGE
);

97  (
	`vs_ªsize
(
•
, 
cmdp
->
cou¡
, 
adj
));

98 
	}
}

107 
	$ex_sdi•œy
(
•
)

108 
SCR
 *
•
;

110 
GS
 *
gp
;

111 
SCR
 *
t•
;

112 
˙t
, 
cﬁ
, 
Àn
, 
£p
;

114 
gp
 = 
•
->gp;

115 i‡((
t•
 = 
gp
->
hq
.
cqh_fú°
) == (*)&gp->hq) {

116 
	`msgq
(
•
, 
M_INFO
, "149|No background screensÅo display");

120 
cﬁ
 = 
Àn
 = 
£p
 = 0;

121 
˙t
 = 1; 
t•
 !(*)&
gp
->
hq
 && !
	`INTERRUPTED
(
•
);

122 
t•
 =Å•->
q
.
cqe_√xt
) {

123 
cﬁ
 +
Àn
 = 
	`°æí
(
t•
->
‰p
->
«me
Ë+ 
£p
;

124 i‡(
cﬁ
 >
•
->
cﬁs
 - 1) {

125 
cﬁ
 = 
Àn
;

126 
£p
 = 0;

127 ()
	`ex_puts
(
•
, "\n");

128 } i‡(
˙t
 != 1) {

129 
£p
 = 1;

130 ()
	`ex_puts
(
•
, " ");

132 ()
	`ex_puts
(
•
, 
t•
->
‰p
->
«me
);

133 ++
˙t
;

135 i‡(!
	`INTERRUPTED
(
•
))

136 ()
	`ex_puts
(
•
, "\n");

138 
	}
}

	@ex/ex_script.c

13 
	~"c⁄fig.h
"

15 #i‚de‡
löt


16 c⁄° 
	gsccsid
[] = "@(#)ex_script.c 10.30 (Berkeley) 9/24/96";

19 
	~<sys/ty≥s.h
>

20 
	~<sys/io˘l.h
>

21 
	~<sys/queue.h
>

22 #ifde‡
HAVE_SYS_SELECT_H


23 
	~<sys/£À˘.h
>

25 
	~<sys/°©.h
>

26 #ifde‡
HAVE_SYS5_PTY


27 
	~<sys/°r›ts.h
>

29 
	~<sys/time.h
>

30 
	~<sys/waô.h
>

32 
	~<bô°rög.h
>

33 
	~<î∫o.h
>

34 
	~<f˙é.h
>

35 
	~<°dio.h
>

36 
	~<gΩ.h
>

37 
	~<limôs.h
>

38 
	~<°dlib.h
>

39 
	~<°rög.h
>

40 
	~<ãrmios.h
>

41 
	~<uni°d.h
>

43 
	~"../comm⁄/comm⁄.h
"

44 
	~"../vi/vi.h
"

45 
	~"s¸ùt.h
"

46 
	~"∑th«mes.h
"

48 
ss¸_check
 
__P
((
SCR
 *));

49 
ss¸_gë¥om±
 
__P
((
SCR
 *));

50 
ss¸_öô
 
__P
((
SCR
 *));

51 
ss¸_ö£π
 
__P
((
SCR
 *));

52 
ss¸_m©ch¥om±
 
__P
((
SCR
 *, *, 
size_t
, size_t *));

53 
ss¸_±y
 
__P
((*, *, *, 
ãrmios
 *, *));

54 
ss¸_£çrom±
 
__P
((
SCR
 *, *, 
size_t
));

63 
	$ex_s¸ùt
(
•
, 
cmdp
)

64 
SCR
 *
•
;

65 
EXCMD
 *
cmdp
;

68 i‡(!
	`F_ISSET
(
•
, 
SC_VI
)) {

69 
	`msgq
(
•
, 
M_ERR
,

75 i‡(
cmdp
->
¨gc
 !0 && 
	`ex_edô
(
•
, cmdp))

79 i‡(
	`ss¸_öô
(
•
))

83 
	}
}

90 
	$ss¸_öô
(
•
)

91 
SCR
 *
•
;

93 
SCRIPT
 *
sc
;

94 *
sh
, *
sh_∑th
;

97 i‡(
	`›ts_em±y
(
•
, 
O_SHELL
, 0))

100 
	`MALLOC_RET
(
•
, 
sc
, 
SCRIPT
 *, (SCRIPT));

101 
•
->
s¸ùt
 = 
sc
;

102 
sc
->
sh_¥om±
 = 
NULL
;

103 
sc
->
sh_¥om±_Àn
 = 0;

109 
sc
->
sh_ma°î
 = sc->
sh_¶ave
 = -1;

111 i‡(
	`tcgë©å
(
STDIN_FILENO
, &
sc
->
sh_ãrm
) == -1) {

112 
	`msgq
(
•
, 
M_SYSERR
, "tcgetattr");

113 
îr
;

119 
sc
->
sh_ãrm
.
c_oÊag
 &~
OPOST
;

120 
sc
->
sh_ãrm
.
c_cÊag
 &~(
ECHO
|
ECHOE
|
ECHONL
|
ECHOK
);

122 #ifde‡
TIOCGWINSZ


123 i‡(
	`io˘l
(
STDIN_FILENO
, 
TIOCGWINSZ
, &
sc
->
sh_wö
) == -1) {

124 
	`msgq
(
•
, 
M_SYSERR
, "tcgetattr");

125 
îr
;

128 i‡(
	`ss¸_±y
(&
sc
->
sh_ma°î
,

129 &
sc
->
sh_¶ave
, sc->
sh_«me
, &sc->
sh_ãrm
, &sc->
sh_wö
) == -1) {

130 
	`msgq
(
•
, 
M_SYSERR
, "pty");

131 
îr
;

134 i‡(
	`ss¸_±y
(&
sc
->
sh_ma°î
,

135 &
sc
->
sh_¶ave
, sc->
sh_«me
, &sc->
sh_ãrm
, 
NULL
) == -1) {

136 
	`msgq
(
•
, 
M_SYSERR
, "pty");

137 
îr
;

146 
sc
->
sh_pid
 = 
	`f‹k
()) {

148 
	`msgq
(
•
, 
M_SYSERR
, "fork");

149 
îr
: i‡(
sc
->
sh_ma°î
 != -1)

150 ()
	`˛o£
(
sc
->
sh_ma°î
);

151 i‡(
sc
->
sh_¶ave
 != -1)

152 ()
	`˛o£
(
sc
->
sh_¶ave
);

159 ()
	`£ãnv
("TERM", "emacs", 1);

160 ()
	`£ãnv
("TERMCAP", "emacs:", 1);

161 ()
	`£ãnv
("EMACS", "t", 1);

163 ()
	`£tsid
();

164 #ifde‡
TIOCSCTTY


171 ()
	`io˘l
(
sc
->
sh_¶ave
, 
TIOCSCTTY
, 0);

173 ()
	`˛o£
(
sc
->
sh_ma°î
);

174 ()
	`dup2
(
sc
->
sh_¶ave
, 
STDIN_FILENO
);

175 ()
	`dup2
(
sc
->
sh_¶ave
, 
STDOUT_FILENO
);

176 ()
	`dup2
(
sc
->
sh_¶ave
, 
STDERR_FILENO
);

177 ()
	`˛o£
(
sc
->
sh_¶ave
);

180 
sh_∑th
 = 
	`O_STR
(
•
, 
O_SHELL
);

181 i‡((
sh
 = 
	`°ºchr
(
sh_∑th
, '/')Ë=
NULL
)

182 
sh
 = 
sh_∑th
;

184 ++
sh
;

185 
	`exe˛
(
sh_∑th
, 
sh
, "-i", 
NULL
);

186 
	`msgq_°r
(
•
, 
M_SYSERR
, 
sh_∑th
, "execl: %s");

187 
	`_exô
(127);

192 i‡(
	`ss¸_gë¥om±
(
•
))

195 
	`F_SET
(
•
, 
SC_SCRIPT
);

196 
	`F_SET
(
•
->
gp
, 
G_SCRWIN
);

198 
	}
}

206 
	$ss¸_gë¥om±
(
•
)

207 
SCR
 *
•
;

209 
timevÆ
 
tv
;

210 
CHAR_T
 *
ídp
, *
p
, *
t
, 
buf
[1024];

211 
SCRIPT
 *
sc
;

212 
fd_£t
 
fd£t
;

213 
ª˙o_t
 
Œöe
;

214 
size_t
 
Œí
, 
Àn
;

215 
u_öt
 
vÆue
;

216 
ƒ
;

218 
	`FD_ZERO
(&
fd£t
);

219 
ídp
 = 
buf
;

220 
Àn
 = (
buf
);

223 
tv
.
tv_£c
 = 5;

224 
tv
.
tv_u£c
 = 0;

225 
sc
 = 
•
->
s¸ùt
;

226 
	`FD_SET
(
sc
->
sh_ma°î
, &
fd£t
);

227 
	`£À˘
(
sc
->
sh_ma°î
 + 1, &
fd£t
, 
NULL
, NULL, &
tv
)) {

229 
	`msgq
(
•
, 
M_SYSERR
, "select");

230 
¥om±îr
;

232 
	`msgq
(
•
, 
M_ERR
, "Error:Åimed out");

233 
¥om±îr
;

239 
m‹e
: 
Àn
 = (
buf
Ë- (
ídp
 - buf);

240 
ƒ
 = 
	`ªad
(
sc
->
sh_ma°î
, 
ídp
, 
Àn
)) {

242 
	`msgq
(
•
, 
M_ERR
, "Error: shell: EOF");

243 
¥om±îr
;

245 
	`msgq
(
•
, 
M_SYSERR
, "shell");

246 
¥om±îr
;

248 
ídp
 +
ƒ
;

253 
p
 = 
t
 = 
buf
;Ö < 
ídp
; ++p) {

254 
vÆue
 = 
	`KEY_VAL
(
•
, *
p
);

255 i‡(
vÆue
 =
K_CR
 || vÆuê=
K_NL
) {

256 i‡(
	`db_œ°
(
•
, &
Œöe
) ||

257 
	`db_≠≥nd
(
•
, 0, 
Œöe
, 
t
, 
p
 -Å))

258 
¥om±îr
;

259 
t
 = 
p
 + 1;

262 i‡(
p
 > 
buf
) {

263 
	`memmove
(
buf
, 
t
, 
ídp
 -Å);

264 
ídp
 = 
buf
 + (íd∞- 
t
);

266 i‡(
ídp
 =
buf
)

267 
m‹e
;

270 
tv
.
tv_£c
 = 0;

271 
tv
.
tv_u£c
 = 100000;

272 
	`£À˘
(
sc
->
sh_ma°î
 + 1, &
fd£t
, 
NULL
, NULL, &
tv
)) {

274 
	`msgq
(
•
, 
M_SYSERR
, "select");

275 
¥om±îr
;

279 
m‹e
;

283 
Œí
 = 
ídp
 - 
buf
;

284 
ídp
 = 
buf
;

287 i‡(
	`db_œ°
(
•
, &
Œöe
Ë|| 
	`db_≠≥nd
(•, 0,Ülöe, 
buf
, 
Œí
)) {

288 
¥om±îr
: 
	`ss¸_íd
(
•
);

292  (
	`ss¸_£çrom±
(
•
, 
buf
, 
Œí
));

293 
	}
}

302 
	$ss¸_exec
(
•
, 
 o
)

303 
SCR
 *
•
;

304 
ª˙o_t
 
 o
;

306 
SCRIPT
 *
sc
;

307 
ª˙o_t
 
œ°_ o
;

308 
size_t
 
bÀn
, 
Àn
, 
œ°_Àn
, 
éí
;

309 
i£m±y
, 
m©ch¥om±
, 
nw
, 
rvÆ
;

310 *
bp
, *
p
;

313 i‡(
	`db_œ°
(
•
, &
œ°_ o
))

315 i‡(
	`db_gë
(
•
, 
œ°_ o
, 
DBG_FATAL
, &
p
, &
œ°_Àn
))

317 i‡(
	`ss¸_m©ch¥om±
(
•
, 
p
, 
œ°_Àn
, &
éí
) &&Ålen == 0) {

318 
m©ch¥om±
 = 1;

319 
	`GET_SPACE_RET
(
•
, 
bp
, 
bÀn
, 
œ°_Àn
 + 128);

320 
	`memmove
(
bp
, 
p
, 
œ°_Àn
);

322 
m©ch¥om±
 = 0;

325 i‡(
	`db_egë
(
•
, 
 o
, &
p
, &
Àn
, &
i£m±y
)) {

326 i‡(
i£m±y
)

327 
em±y
;

328 
îr1
;

332 i‡(
Àn
 == 0)

333 
em±y
;

336 i‡(
	`ss¸_m©ch¥om±
(
•
, 
p
, 
Àn
, &
éí
)) {

337 i‡(
éí
 =
Àn
) {

338 
em±y
: 
	`msgq
(
•
, 
M_BERR
, "151|No commandÅoÉxecute");

339 
îr1
;

341 
p
 +(
Àn
 - 
éí
);

342 
Àn
 = 
éí
;

346 
sc
 = 
•
->
s¸ùt
;

347 i‡((
nw
 = 
	`wrôe
(
sc
->
sh_ma°î
, 
p
, 
Àn
)) !=Üen)

348 
îr2
;

349 
rvÆ
 = 0;

350 i‡(
	`wrôe
(
sc
->
sh_ma°î
, "\n", 1) != 1) {

351 
îr2
: i‡(
nw
 == 0)

352 
î∫o
 = 
EIO
;

353 
	`msgq
(
•
, 
M_SYSERR
, "shell");

354 
îr1
;

357 i‡(
m©ch¥om±
) {

358 
	`ADD_SPACE_RET
(
•
, 
bp
, 
bÀn
, 
œ°_Àn
 + 
Àn
);

359 
	`memmove
(
bp
 + 
œ°_Àn
, 
p
, 
Àn
);

360 i‡(
	`db_£t
(
•
, 
œ°_ o
, 
bp
, 
œ°_Àn
 + 
Àn
))

361 
îr1
: 
rvÆ
 = 1;

363 i‡(
m©ch¥om±
)

364 
	`FREE_SPACE
(
•
, 
bp
, 
bÀn
);

365  (
rvÆ
);

366 
	}
}

375 
	$ss¸_öput
(
•
)

376 
SCR
 *
•
;

378 
GS
 *
gp
;

379 
timevÆ
 
pﬁl
;

380 
fd_£t
 
rdfd
;

381 
maxfd
;

383 
gp
 = 
•
->gp;

385 
lo›
: 
maxfd
 = 0;

386 
	`FD_ZERO
(&
rdfd
);

387 
pﬁl
.
tv_£c
 = 0;

388 
pﬁl
.
tv_u£c
 = 0;

391 
•
 = 
gp
->
dq
.
cqh_fú°
; s∞!(*)&gp->dq; s∞•->
q
.
cqe_√xt
)

392 i‡(
	`F_ISSET
(
•
, 
SC_SCRIPT
)) {

393 
	`FD_SET
(
•
->
s¸ùt
->
sh_ma°î
, &
rdfd
);

394 i‡(
•
->
s¸ùt
->
sh_ma°î
 > 
maxfd
)

395 
maxfd
 = 
•
->
s¸ùt
->
sh_ma°î
;

399 
	`£À˘
(
maxfd
 + 1, &
rdfd
, 
NULL
, NULL, &
pﬁl
)) {

401 
	`msgq
(
•
, 
M_SYSERR
, "select");

410 
•
 = 
gp
->
dq
.
cqh_fú°
; s∞!(*)&gp->dq; s∞•->
q
.
cqe_√xt
)

411 i‡(
	`F_ISSET
(
•
, 
SC_SCRIPT
) &&

412 
	`FD_ISSET
(
•
->
s¸ùt
->
sh_ma°î
, &
rdfd
Ë&& 
	`ss¸_ö£π
(sp))

414 
lo›
;

415 
	}
}

422 
	$ss¸_ö£π
(
•
)

423 
SCR
 *
•
;

425 
timevÆ
 
tv
;

426 
CHAR_T
 *
ídp
, *
p
, *
t
;

427 
SCRIPT
 *
sc
;

428 
fd_£t
 
rdfd
;

429 
ª˙o_t
 
 o
;

430 
size_t
 
bÀn
, 
Àn
, 
éí
;

431 
u_öt
 
vÆue
;

432 
ƒ
, 
rvÆ
;

433 *
bp
;

436 i‡(
	`db_œ°
(
•
, &
 o
))

439 
	#MINREAD
 1024

	)

440 
	`GET_SPACE_RET
(
•
, 
bp
, 
bÀn
, 
MINREAD
);

441 
ídp
 = 
bp
;

444 
rvÆ
 = 1;

445 
sc
 = 
•
->
s¸ùt
;

446 
m‹e
: 
ƒ
 = 
	`ªad
(
sc
->
sh_ma°î
, 
ídp
, 
MINREAD
)) {

448 
	`ss¸_íd
(
•
);

449 
rvÆ
 = 0;

450 
ªt
;

452 
	`msgq
(
•
, 
M_SYSERR
, "shell");

453 
ªt
;

455 
ídp
 +
ƒ
;

460 
p
 = 
t
 = 
bp
;Ö < 
ídp
; ++p) {

461 
vÆue
 = 
	`KEY_VAL
(
•
, *
p
);

462 i‡(
vÆue
 =
K_CR
 || vÆuê=
K_NL
) {

463 
Àn
 = 
p
 - 
t
;

464 i‡(
	`db_≠≥nd
(
•
, 1, 
 o
++, 
t
, 
Àn
))

465 
ªt
;

466 
t
 = 
p
 + 1;

469 i‡(
p
 > 
t
) {

470 
Àn
 = 
p
 - 
t
;

478 i‡(!
	`ss¸_m©ch¥om±
(
•
, 
t
, 
Àn
, &
éí
) ||Ålen != 0) {

479 
tv
.
tv_£c
 = 0;

480 
tv
.
tv_u£c
 = 100000;

481 
	`FD_ZERO
(&
rdfd
);

482 
	`FD_SET
(
sc
->
sh_ma°î
, &
rdfd
);

483 i‡(
	`£À˘
(
sc
->
sh_ma°î
 + 1,

484 &
rdfd
, 
NULL
, NULL, &
tv
) == 1) {

485 
	`memmove
(
bp
, 
t
, 
Àn
);

486 
ídp
 = 
bp
 + 
Àn
;

487 
m‹e
;

490 i‡(
	`ss¸_£çrom±
(
•
, 
t
, 
Àn
))

492 i‡(
	`db_≠≥nd
(
•
, 1, 
 o
++, 
t
, 
Àn
))

493 
ªt
;

497 
•
->
 o
 =Üno;

498 
•
->
˙o
 = 
Àn
 ?Üen - 1 : 0;

499 
rvÆ
 = 
	`vs_ª‰esh
(
•
, 1);

501 
ªt
: 
	`FREE_SPACE
(
•
, 
bp
, 
bÀn
);

502  (
rvÆ
);

503 
	}
}

512 
	$ss¸_£çrom±
(
•
, 
buf
, 
Àn
)

513 
SCR
 *
•
;

514 *
buf
;

515 
size_t
 
Àn
;

517 
SCRIPT
 *
sc
;

519 
sc
 = 
•
->
s¸ùt
;

520 i‡(
sc
->
sh_¥om±
)

521 
	`‰ì
(
sc
->
sh_¥om±
);

522 
	`MALLOC
(
•
, 
sc
->
sh_¥om±
, *, 
Àn
 + 1);

523 i‡(
sc
->
sh_¥om±
 =
NULL
) {

524 
	`ss¸_íd
(
•
);

527 
	`memmove
(
sc
->
sh_¥om±
, 
buf
, 
Àn
);

528 
sc
->
sh_¥om±_Àn
 = 
Àn
;

529 
sc
->
sh_¥om±
[
Àn
] = '\0';

531 
	}
}

539 
	$ss¸_m©ch¥om±
(
•
, 
Õ
, 
löe_Àn
, 
À≈
)

540 
SCR
 *
•
;

541 *
Õ
;

542 
size_t
 
löe_Àn
, *
À≈
;

544 
SCRIPT
 *
sc
;

545 
size_t
 
¥om±_Àn
;

546 *
µ
;

548 
sc
 = 
•
->
s¸ùt
;

549 i‡(
löe_Àn
 < (
¥om±_Àn
 = 
sc
->
sh_¥om±_Àn
))

552 
µ
 = 
sc
->
sh_¥om±
;

553 
¥om±_Àn
 && 
löe_Àn
; --prompt_len, --line_len) {

554 i‡(*
µ
 == '\0') {

555 ; 
¥om±_Àn
 && *
µ
 == '\0'; --prompt_len, ++pp);

556 i‡(!
¥om±_Àn
)

558 ; 
löe_Àn
 && *
Õ
 !*
µ
; --line_len, ++lp);

559 i‡(!
löe_Àn
)

562 i‡(*
µ
++ !*
Õ
++)

566 i‡(
¥om±_Àn
)

568 i‡(
À≈
 !
NULL
)

569 *
À≈
 = 
löe_Àn
;

571 
	}
}

580 
	$ss¸_íd
(
•
)

581 
SCR
 *
•
;

583 
SCRIPT
 *
sc
;

585 i‡((
sc
 = 
•
->
s¸ùt
Ë=
NULL
)

589 
	`F_CLR
(
•
, 
SC_SCRIPT
);

590 
	`ss¸_check
(
•
);

593 i‡(
sc
->
sh_ma°î
 != -1)

594 ()
	`˛o£
(
sc
->
sh_ma°î
);

595 i‡(
sc
->
sh_¶ave
 != -1)

596 ()
	`˛o£
(
sc
->
sh_¶ave
);

599 ()
	`¥oc_waô
(
•
, ()
sc
->
sh_pid
, "script-shell", 0, 0);

602 
	`‰ì
(
sc
->
sh_¥om±
);

603 
	`‰ì
(
sc
);

604 
•
->
s¸ùt
 = 
NULL
;

607 
	}
}

614 
	$ss¸_check
(
•
)

615 
SCR
 *
•
;

617 
GS
 *
gp
;

619 
gp
 = 
•
->gp;

620 
•
 = 
gp
->
dq
.
cqh_fú°
; s∞!(*)&gp->dq; s∞•->
q
.
cqe_√xt
)

621 i‡(
	`F_ISSET
(
•
, 
SC_SCRIPT
)) {

622 
	`F_SET
(
gp
, 
G_SCRWIN
);

625 
	`F_CLR
(
gp
, 
G_SCRWIN
);

626 
	}
}

628 #ifde‡
HAVE_SYS5_PTY


629 
±ys_›í
 
__P
((, *));

630 
±ym_›í
 
__P
((*));

633 
	$ss¸_±y
(
ama°î
, 
a¶ave
, 
«me
, 
ãrmp
, 
wöp
)

634 *
ama°î
, *
a¶ave
;

635 *
«me
;

636 
ãrmios
 *
ãrmp
;

637 *
wöp
;

639 
ma°î
, 
¶ave
, 
âygid
;

642 i‡((
ma°î
 = 
	`±ym_›í
(
«me
)) < 0) {

643 
î∫o
 = 
ENOENT
;

648 i‡((
¶ave
 = 
	`±ys_›í
(
ma°î
, 
«me
)) >= 0) {

649 *
ama°î
 = 
ma°î
;

650 *
a¶ave
 = 
¶ave
;

652 
î∫o
 = 
ENOENT
;

656 i‡(
ãrmp
)

657 (Ë
	`tc£èâr
(
¶ave
, 
TCSAFLUSH
, 
ãrmp
);

658 #ifde‡
TIOCSWINSZ


659 i‡(
wöp
 !
NULL
)

660 (Ë
	`io˘l
(
¶ave
, 
TIOCSWINSZ
, (
wösize
 *)
wöp
);

663 
	}
}

671 
	$±ym_›í
(
±s_«me
)

672 *
±s_«me
;

674 
fdm
;

675 *
±r
, *
	`±¢ame
();

677 
	`°r˝y
(
±s_«me
, 
_PATH_SYSV_PTY
);

678 i‡((
fdm
 = 
	`›í
(
±s_«me
, 
O_RDWR
)) < 0 )

681 i‡(
	`gø¡±
(
fdm
) < 0) {

682 
	`˛o£
(
fdm
);

686 i‡(
	`u∆ock±
(
fdm
) < 0) {

687 
	`˛o£
(
fdm
);

691 i‡(
	`u∆ock±
(
fdm
) < 0) {

692 
	`˛o£
(
fdm
);

697 i‡((
±r
 = 
	`±¢ame
(
fdm
)Ë=
NULL
) {

698 
	`˛o£
(
fdm
);

701 
	`°r˝y
(
±s_«me
, 
±r
);

702  (
fdm
);

703 
	}
}

710 
	$±ys_›í
(
fdm
, 
±s_«me
)

711 
fdm
;

712 *
±s_«me
;

714 
fds
;

716 i‡((
fds
 = 
	`›í
(
±s_«me
, 
O_RDWR
)) < 0) {

717 
	`˛o£
(
fdm
);

721 i‡(
	`io˘l
(
fds
, 
I_PUSH
, "ptem") < 0) {

722 
	`˛o£
(
fds
);

723 
	`˛o£
(
fdm
);

727 i‡(
	`io˘l
(
fds
, 
I_PUSH
, "ldterm") < 0) {

728 
	`˛o£
(
fds
);

729 
	`˛o£
(
fdm
);

733 i‡(
	`io˘l
(
fds
, 
I_PUSH
, "ttcompat") < 0) {

734 
	`˛o£
(
fds
);

735 
	`˛o£
(
fdm
);

739  (
fds
);

740 
	}
}

745 
	$ss¸_±y
(
ama°î
, 
a¶ave
, 
«me
, 
ãrmp
, 
wöp
)

746 *
ama°î
, *
a¶ave
;

747 *
«me
;

748 
ãrmios
 *
ãrmp
;

749 *
wöp
;

751 
löe
[] = "/dev/ptyXX";

752 *
˝1
, *
˝2
;

753 
ma°î
, 
¶ave
, 
âygid
;

754 
group
 *
gr
;

756 i‡((
gr
 = 
	`gëg∫am
("ây")Ë!
NULL
)

757 
âygid
 = 
gr
->
gr_gid
;

759 
âygid
 = -1;

761 
˝1
 = "pqrs"; *cp1; cp1++) {

762 
löe
[8] = *
˝1
;

763 
˝2
 = "0123456789abcdef"; *cp2; cp2++) {

764 
löe
[5] = 'p';

765 
löe
[9] = *
˝2
;

766 i‡((
ma°î
 = 
	`›í
(
löe
, 
O_RDWR
, 0)) == -1) {

767 i‡(
î∫o
 =
ENOENT
)

770 
löe
[5] = 't';

771 (Ë
	`chown
(
löe
, 
	`gëuid
(), 
âygid
);

772 (Ë
	`chmod
(
löe
, 
S_IRUSR
|
S_IWUSR
|
S_IWGRP
);

773 #ifde‡
HAVE_REVOKE


774 (Ë
	`ªvoke
(
löe
);

776 i‡((
¶ave
 = 
	`›í
(
löe
, 
O_RDWR
, 0)) != -1) {

777 *
ama°î
 = 
ma°î
;

778 *
a¶ave
 = 
¶ave
;

779 i‡(
«me
)

780 
	`°r˝y
(
«me
, 
löe
);

781 i‡(
ãrmp
)

782 (Ë
	`tc£èâr
(
¶ave
,

783 
TCSAFLUSH
, 
ãrmp
);

784 #ifde‡
TIOCSWINSZ


785 i‡(
wöp
)

786 (Ë
	`io˘l
(
¶ave
, 
TIOCSWINSZ
,

787 (*)
wöp
);

791 (Ë
	`˛o£
(
ma°î
);

795 
î∫o
 = 
ENOENT
;

797 
	}
}

	@ex/ex_set.c

10 
	~"c⁄fig.h
"

12 #i‚de‡
löt


13 c⁄° 
	gsccsid
[] = "@(#)ex_set.c 10.7 (Berkeley) 3/6/96";

16 
	~<sys/ty≥s.h
>

17 
	~<sys/queue.h
>

19 
	~<bô°rög.h
>

20 
	~<limôs.h
>

21 
	~<°dio.h
>

23 
	~"../comm⁄/comm⁄.h
"

32 
	$ex_£t
(
•
, 
cmdp
)

33 
SCR
 *
•
;

34 
EXCMD
 *
cmdp
;

36 
cmdp
->
¨gc
) {

38 
	`›ts_dump
(
•
, 
CHANGED_DISPLAY
);

41 i‡(
	`›ts_£t
(
•
, 
cmdp
->
¨gv
, cmdp->
cmd
->
ußge
))

46 
	}
}

	@ex/ex_shell.c

10 
	~"c⁄fig.h
"

12 #i‚de‡
löt


13 c⁄° 
	gsccsid
[] = "@(#)ex_shell.c 10.38 (Berkeley) 8/19/96";

16 
	~<sys/∑øm.h
>

17 
	~<sys/queue.h
>

18 
	~<sys/waô.h
>

20 
	~<bô°rög.h
>

21 
	~<î∫o.h
>

22 
	~<limôs.h
>

23 
	~<sig«l.h
>

24 
	~<°dio.h
>

25 
	~<°dlib.h
>

26 
	~<°rög.h
>

27 
	~<uni°d.h
>

29 
	~"../comm⁄/comm⁄.h
"

31 c⁄° *
sigmsg
 
__P
(());

41 
	$ex_shñl
(
•
, 
cmdp
)

42 
SCR
 *
•
;

43 
EXCMD
 *
cmdp
;

45 
rvÆ
;

46 
buf
[
MAXPATHLEN
];

49 i‡(
	`›ts_em±y
(
•
, 
O_SHELL
, 0))

56 ()
	`¢¥ötf
(
buf
, (buf), "%†-i", 
	`O_STR
(
•
, 
O_SHELL
));

59 ()
•
->
gp
->
	`s¸_ª«me
(•, 
NULL
, 0);

62 
rvÆ
 = 
	`ex_exec_¥oc
(
•
, 
cmdp
, 
buf
, 
NULL
, !
	`F_ISSET
(•, 
SC_SCR_EXWROTE
));

65 ()
•
->
gp
->
	`s¸_ª«me
(•, sp->
‰p
->
«me
, 1);

72 
	`F_SET
(
•
, 
SC_EX_WAIT_NO
);

74  (
rvÆ
);

75 
	}
}

84 
	$ex_exec_¥oc
(
•
, 
cmdp
, 
cmd
, 
msg
, 
√ed_√wlöe
)

85 
SCR
 *
•
;

86 
EXCMD
 *
cmdp
;

87 *
cmd
;

88 c⁄° *
msg
;

89 
√ed_√wlöe
;

91 
GS
 *
gp
;

92 c⁄° *
«me
;

93 
pid_t
 
pid
;

95 
gp
 = 
•
->gp;

98 i‡(
	`›ts_em±y
(
•
, 
O_SHELL
, 0))

102 i‡(
	`F_ISSET
(
•
, 
SC_VI
)) {

103 i‡(
gp
->
	`s¸_s¸ìn
(
•
, 
SC_EX
)) {

104 
	`ex_emsg
(
•
, 
cmdp
->
cmd
->
«me
, 
EXM_NOCANON
);

107 ()
gp
->
	`s¸_©å
(
•
, 
SA_ALTERNATE
, 0);

108 
	`F_SET
(
•
, 
SC_SCR_EX
 | 
SC_SCR_EXWROTE
);

112 i‡(
√ed_√wlöe
)

113 ()
	`ex_puts
(
•
, "\n");

114 i‡(
msg
 !
NULL
) {

115 ()
	`ex_puts
(
•
, 
msg
);

116 ()
	`ex_puts
(
•
, "\n");

118 ()
	`ex_fÊush
(
•
);

120 
pid
 = 
	`vf‹k
()) {

122 
	`msgq
(
•
, 
M_SYSERR
, "vfork");

125 i‡((
«me
 = 
	`°ºchr
(
	`O_STR
(
•
, 
O_SHELL
), '/')Ë=
NULL
)

126 
«me
 = 
	`O_STR
(
•
, 
O_SHELL
);

128 ++
«me
;

129 
	`exe˛
(
	`O_STR
(
•
, 
O_SHELL
), 
«me
, "-c", 
cmd
, 
NULL
);

130 
	`msgq_°r
(
•
, 
M_SYSERR
, 
	`O_STR
(•, 
O_SHELL
), "execl: %s");

131 
	`_exô
(127);

134  (
	`¥oc_waô
(
•
, ()
pid
, 
cmd
, 0, 0));

137 
	}
}

152 
	$¥oc_waô
(
•
, 
pid
, 
cmd
, 
sûít
, 
okpùe
)

153 
SCR
 *
•
;

154 
pid
;

155 c⁄° *
cmd
;

156 
sûít
, 
okpùe
;

158 
size_t
 
Àn
;

159 
nf
, 
p°©
;

160 *
p
;

164 
î∫o
 = 0;

165 i‡(
	`waôpid
((
pid_t
)
pid
, &
p°©
, 0) != -1)

167 i‡(
î∫o
 !
EINTR
) {

168 
	`msgq
(
•
, 
M_SYSERR
, "waitpid");

178 i‡(
	`WIFSIGNALED
(
p°©
Ë&& (!
okpùe
 || 
	`WTERMSIG
’°©Ë!
SIGPIPE
)) {

179 ; 
	`isbœnk
(*
cmd
); ++cmd);

180 
p
 = 
	`msg_¥öt
(
•
, 
cmd
, &
nf
);

181 
Àn
 = 
	`°æí
(
p
);

182 
	`msgq
(
•
, 
M_ERR
, "%.*s%s:Ñeceived signal: %s%s",

183 
	`MIN
(
Àn
, 20), 
p
,Üen > 20 ? " ..." : "",

184 
	`sigmsg
(
	`WTERMSIG
(
p°©
)),

185 
	`WCOREDUMP
(
p°©
) ? "; core dumped" : "");

186 i‡(
nf
)

187 
	`FREE_SPACE
(
•
, 
p
, 0);

191 i‡(
	`WIFEXITED
(
p°©
Ë&& 
	`WEXITSTATUS
(pstat)) {

200 i‡(!
sûít
) {

201 ; 
	`isbœnk
(*
cmd
); ++cmd);

202 
p
 = 
	`msg_¥öt
(
•
, 
cmd
, &
nf
);

203 
Àn
 = 
	`°æí
(
p
);

204 
	`msgq
(
•
, 
M_ERR
, "%.*s%s:Éxited with status %d",

205 
	`MIN
(
Àn
, 20), 
p
,Üen > 20 ? " ..." : "",

206 
	`WEXITSTATUS
(
p°©
));

207 i‡(
nf
)

208 
	`FREE_SPACE
(
•
, 
p
, 0);

213 
	}
}

220 
	s_sigs
 {

221 
	mnumbî
;

222 *
	mmesßge
;

223 } 
	tSIGS
;

225 
SIGS
 c⁄° 
	gsigs
[] = {

226 #ifde‡
SIGABRT


227 
SIGABRT
, "AbortÅrap",

229 #ifde‡
SIGALRM


230 
SIGALRM
, "Alarm clock",

232 #ifde‡
SIGBUS


233 
SIGBUS
, "BusÉrror",

235 #ifde‡
SIGCLD


236 
SIGCLD
, "ChildÉxited or stopped",

238 #ifde‡
SIGCHLD


239 
SIGCHLD
, "ChildÉxited",

241 #ifde‡
SIGCONT


242 
SIGCONT
, "Continued",

244 #ifde‡
SIGDANGER


245 
SIGDANGER
, "System crash imminent",

247 #ifde‡
SIGEMT


248 
SIGEMT
, "EMTÅrap",

250 #ifde‡
SIGFPE


251 
SIGFPE
, "FloatingÖointÉxception",

253 #ifde‡
SIGGRANT


254 
SIGGRANT
, "HFT monitor mode granted",

256 #ifde‡
SIGHUP


257 
SIGHUP
, "Hangup",

259 #ifde‡
SIGILL


260 
SIGILL
, "Illegal instruction",

262 #ifde‡
SIGINFO


263 
SIGINFO
, "InformationÑequest",

265 #ifde‡
SIGINT


266 
SIGINT
, "Interrupt",

268 #ifde‡
SIGIO


269 
SIGIO
, "I/OÖossible",

271 #ifde‡
SIGIOT


272 
SIGIOT
, "IOTÅrap",

274 #ifde‡
SIGKILL


275 
SIGKILL
, "Killed",

277 #ifde‡
SIGLOST


278 
SIGLOST
, "RecordÜock",

280 #ifde‡
SIGMIGRATE


281 
SIGMIGRATE
, "MigrateÖrocessÅoánother CPU",

283 #ifde‡
SIGMSG


284 
SIGMSG
, "HFT input dataÖending",

286 #ifde‡
SIGPIPE


287 
SIGPIPE
, "BrokenÖipe",

289 #ifde‡
SIGPOLL


290 
SIGPOLL
, "I/OÖossible",

292 #ifde‡
SIGPRE


293 
SIGPRE
, "ProgrammingÉrror",

295 #ifde‡
SIGPROF


296 
SIGPROF
, "ProfilingÅimerÉxpired",

298 #ifde‡
SIGPWR


299 
SIGPWR
, "Power failure imminent",

301 #ifde‡
SIGRETRACT


302 
SIGRETRACT
, "HFT monitor modeÑetracted",

304 #ifde‡
SIGQUIT


305 
SIGQUIT
, "Quit",

307 #ifde‡
SIGSAK


308 
SIGSAK
, "Secure Attention Key",

310 #ifde‡
SIGSEGV


311 
SIGSEGV
, "Segmentation fault",

313 #ifde‡
SIGSOUND


314 
SIGSOUND
, "HFT sound sequence completed",

316 #ifde‡
SIGSTOP


317 
SIGSTOP
, "Suspended (signal)",

319 #ifde‡
SIGSYS


320 
SIGSYS
, "Bad system call",

322 #ifde‡
SIGTERM


323 
SIGTERM
, "Terminated",

325 #ifde‡
SIGTRAP


326 
SIGTRAP
, "Trace/BPTÅrap",

328 #ifde‡
SIGTSTP


329 
SIGTSTP
, "Suspended",

331 #ifde‡
SIGTTIN


332 
SIGTTIN
, "Stopped (tty input)",

334 #ifde‡
SIGTTOU


335 
SIGTTOU
, "Stopped (tty output)",

337 #ifde‡
SIGURG


338 
SIGURG
, "Urgent I/O condition",

340 #ifde‡
SIGUSR1


341 
SIGUSR1
, "User defined signal 1",

343 #ifde‡
SIGUSR2


344 
SIGUSR2
, "User defined signal 2",

346 #ifde‡
SIGVTALRM


347 
SIGVTALRM
, "VirtualÅimerÉxpired",

349 #ifde‡
SIGWINCH


350 
SIGWINCH
, "Window size changes",

352 #ifde‡
SIGXCPU


353 
SIGXCPU
, "CputimeÜimitÉxceeded",

355 #ifde‡
SIGXFSZ


356 
SIGXFSZ
, "FilesizeÜimitÉxceeded",

365 
	$sigmsg
(
signo
)

366 
signo
;

368 
buf
[40];

369 c⁄° 
SIGS
 *
sigp
;

370 
n
;

372 
n
 = 0,

373 
sigp
 = &
sigs
[0]; 
n
 < (sigs) / (sigs[0]); ++n, ++sigp)

374 i‡(
sigp
->
numbî
 =
signo
)

375  (
sigp
->
mesßge
);

376 ()
	`¢¥ötf
(
buf
, (buf), "Unknow¿sig«l: %d", 
signo
);

377  (
buf
);

378 
	}
}

	@ex/ex_shift.c

10 
	~"c⁄fig.h
"

12 #i‚de‡
löt


13 c⁄° 
	gsccsid
[] = "@(#)ex_shift.c 10.11 (Berkeley) 9/15/96";

16 
	~<sys/ty≥s.h
>

17 
	~<sys/queue.h
>

19 
	~<bô°rög.h
>

20 
	~<limôs.h
>

21 
	~<°dio.h
>

22 
	~<°dlib.h
>

23 
	~<°rög.h
>

25 
	~"../comm⁄/comm⁄.h
"

27 
	ewhich
 {
	mLEFT
, 
	mRIGHT
};

28 
shi·
 
__P
((
SCR
 *, 
EXCMD
 *, 
which
));

37 
	$ex_shi·l
(
•
, 
cmdp
)

38 
SCR
 *
•
;

39 
EXCMD
 *
cmdp
;

41  (
	`shi·
(
•
, 
cmdp
, 
LEFT
));

42 
	}
}

50 
	$ex_shi·r
(
•
, 
cmdp
)

51 
SCR
 *
•
;

52 
EXCMD
 *
cmdp
;

54  (
	`shi·
(
•
, 
cmdp
, 
RIGHT
));

55 
	}
}

62 
	$shi·
(
•
, 
cmdp
, 
æ
)

63 
SCR
 *
•
;

64 
EXCMD
 *
cmdp
;

65 
which
 
æ
;

67 
ª˙o_t
 
‰om
, 
to
;

68 
size_t
 
bÀn
, 
Àn
, 
√wcﬁ
, 
√widx
, 
ﬁdcﬁ
, 
ﬁdidx
, 
sw
;

69 
cur£t
;

70 *
p
, *
bp
, *
tbp
;

72 
	`NEEDFILE
(
•
, 
cmdp
);

74 i‡(
	`O_VAL
(
•
, 
O_SHIFTWIDTH
) == 0) {

75 
	`msgq
(
•
, 
M_INFO
, "152|shiftwidth option setÅo 0");

80 i‡(
	`cut
(
•
, 
NULL
, &
cmdp
->
addr1
, &cmdp->
addr2
, 
CUT_LINEMODE
))

93 
p
 = 
cmdp
->
¨gv
[0]->
bp
, 
sw
 = 0; *p == '>' || *p == '<'; ++p)

94 
sw
 +
	`O_VAL
(
•
, 
O_SHIFTWIDTH
);

96 
	`GET_SPACE_RET
(
•
, 
bp
, 
bÀn
, 256);

98 
cur£t
 = 0;

99 
‰om
 = 
cmdp
->
addr1
.
 o
, 
to
 = cmdp->
addr2
.lno; from <=Åo; ++from) {

100 i‡(
	`db_gë
(
•
, 
‰om
, 
DBG_FATAL
, &
p
, &
Àn
))

101 
îr
;

102 i‡(!
Àn
) {

103 i‡(
•
->
 o
 =
‰om
)

104 
cur£t
 = 1;

112 
ﬁdidx
 = 0, 
ﬁdcﬁ
 = 0; oldidx < 
Àn
; ++oldidx)

113 i‡(
p
[
ﬁdidx
] == ' ')

114 ++
ﬁdcﬁ
;

115 i‡(
p
[
ﬁdidx
] == '\t')

116 
ﬁdcﬁ
 +
	`O_VAL
(
•
, 
O_TABSTOP
) -

117 
ﬁdcﬁ
 % 
	`O_VAL
(
•
, 
O_TABSTOP
);

122 i‡(
æ
 =
RIGHT
)

123 
√wcﬁ
 = 
ﬁdcﬁ
 + 
sw
;

125 
√wcﬁ
 = 
ﬁdcﬁ
 < 
sw
 ? 0 : oldcol - sw;

126 i‡(
√wcﬁ
 =
ﬁdcﬁ
) {

127 i‡(
•
->
 o
 =
‰om
)

128 
cur£t
 = 1;

134 
	`ADD_SPACE_RET
(
•
, 
bp
, 
bÀn
, 
√wcﬁ
 + 
Àn
);

140 
tbp
 = 
bp
, 
√widx
 = 0;

141 
√wcﬁ
 >
	`O_VAL
(
•
, 
O_TABSTOP
); ++
√widx
) {

142 *
tbp
++ = '\t';

143 
√wcﬁ
 -
	`O_VAL
(
•
, 
O_TABSTOP
);

145 ; 
√wcﬁ
 > 0; --√wcﬁ, ++
√widx
)

146 *
tbp
++ = ' ';

149 
	`mem˝y
(
tbp
, 
p
 + 
ﬁdidx
, 
Àn
 - oldidx);

152 i‡(
	`db_£t
(
•
, 
‰om
, 
bp
, (
tbp
 + (
Àn
 - 
ﬁdidx
)) - bp)) {

153 
îr
: 
	`FREE_SPACE
(
•
, 
bp
, 
bÀn
);

173 i‡(
•
->
 o
 =
‰om
) {

174 
cur£t
 = 1;

175 i‡(
√widx
 > 
ﬁdidx
)

176 
•
->
˙o
 +
√widx
 - 
ﬁdidx
;

177 i‡(
•
->
˙o
 >
ﬁdidx
 - 
√widx
)

178 
•
->
˙o
 -
ﬁdidx
 - 
√widx
;

181 i‡(!
cur£t
) {

182 
•
->
 o
 = 
to
;

183 
•
->
˙o
 = 0;

184 ()
	`n⁄bœnk
(
•
, 
to
, &•->
˙o
);

187 
	`FREE_SPACE
(
•
, 
bp
, 
bÀn
);

189 
•
->
Ωéöes
[
L_SHIFT
] +
cmdp
->
addr2
.
 o
 - cmdp->
addr1
.lno + 1;

191 
	}
}

	@ex/ex_source.c

10 
	~"c⁄fig.h
"

12 #i‚de‡
löt


13 c⁄° 
	gsccsid
[] = "@(#)ex_source.c 10.12 (Berkeley) 8/10/96";

16 
	~<sys/ty≥s.h
>

17 
	~<sys/queue.h
>

18 
	~<sys/°©.h
>

20 
	~<bô°rög.h
>

21 
	~<î∫o.h
>

22 
	~<f˙é.h
>

23 
	~<limôs.h
>

24 
	~<°dio.h
>

25 
	~<°dlib.h
>

26 
	~<°rög.h
>

27 
	~<uni°d.h
>

29 
	~"../comm⁄/comm⁄.h
"

38 
	$ex_sour˚
(
•
, 
cmdp
)

39 
SCR
 *
•
;

40 
EXCMD
 *
cmdp
;

42 
°©
 
sb
;

43 
fd
, 
Àn
;

44 *
bp
, *
«me
;

46 
«me
 = 
cmdp
->
¨gv
[0]->
bp
;

47 i‡((
fd
 = 
	`›í
(
«me
, 
O_RDONLY
, 0)Ë< 0 || 
	`f°©
(fd, &
sb
))

48 
îr
;

59 
	#MEGABYTE
 1048576

	)

60 i‡(
sb
.
°_size
 > 
MEGABYTE
) {

61 
î∫o
 = 
ENOMEM
;

62 
îr
;

65 
	`MALLOC
(
•
, 
bp
, *, (
size_t
)
sb
.
°_size
 + 1);

66 i‡(
bp
 =
NULL
) {

67 ()
	`˛o£
(
fd
);

70 
bp
[
sb
.
°_size
] = '\0';

73 
Àn
 = 
	`ªad
(
fd
, 
bp
, ()
sb
.
°_size
);

74 ()
	`˛o£
(
fd
);

75 i‡(
Àn
 =-1 ||Üí !
sb
.
°_size
) {

76 i‡(
Àn
 !
sb
.
°_size
)

77 
î∫o
 = 
EIO
;

78 
	`‰ì
(
bp
);

79 
îr
: 
	`msgq_°r
(
•
, 
M_SYSERR
, 
«me
, "%s");

84  (
	`ex_run_°r
(
•
, 
«me
, 
bp
, (
size_t
)
sb
.
°_size
, 1, 1));

85 
	}
}

	@ex/ex_stop.c

10 
	~"c⁄fig.h
"

12 #i‚de‡
löt


13 c⁄° 
	gsccsid
[] = "@(#)ex_stop.c 10.10 (Berkeley) 3/6/96";

16 
	~<sys/ty≥s.h
>

17 
	~<sys/queue.h
>

19 
	~<bô°rög.h
>

20 
	~<î∫o.h
>

21 
	~<limôs.h
>

22 
	~<°dio.h
>

23 
	~<°rög.h
>

24 
	~<uni°d.h
>

26 
	~"../comm⁄/comm⁄.h
"

36 
	$ex_°›
(
•
, 
cmdp
)

37 
SCR
 *
•
;

38 
EXCMD
 *
cmdp
;

40 
Ælowed
;

43 i‡(!
	`FL_ISSET
(
cmdp
->
iÊags
, 
E_C_FORCE
Ë&& 
	`fûe_aw
(
•
, 
FS_ALL
))

46 i‡(
•
->
gp
->
	`s¸_su•íd
(•, &
Ælowed
))

48 i‡(!
Ælowed
)

49 
	`ex_emsg
(
•
, 
NULL
, 
EXM_NOSUSPEND
);

51 
	}
}

	@ex/ex_subst.c

10 
	~"c⁄fig.h
"

12 #i‚de‡
löt


13 c⁄° 
	gsccsid
[] = "@(#)ex_subst.c 10.37 (Berkeley) 9/15/96";

16 
	~<sys/ty≥s.h
>

17 
	~<sys/queue.h
>

18 
	~<sys/time.h
>

20 
	~<bô°rög.h
>

21 
	~<˘y≥.h
>

22 
	~<î∫o.h
>

23 
	~<limôs.h
>

24 
	~<°dio.h
>

25 
	~<°dlib.h
>

26 
	~<°rög.h
>

27 
	~<uni°d.h
>

29 
	~"../comm⁄/comm⁄.h
"

30 
	~"../vi/vi.h
"

32 
	#SUB_FIRST
 0x01

	)

33 
	#SUB_MUSTSETR
 0x02

	)

35 
ª_c⁄v
 
__P
((
SCR
 *, **, 
size_t
 *, *));

36 
ª_csc›e_c⁄v
 
__P
((
SCR
 *, **, 
size_t
 *, *));

37 
ª_sub
 
__P
((
SCR
 *,

38 *, **, 
size_t
 *, size_à*, 
ªgm©ch_t
 [10]));

39 
ª_èg_c⁄v
 
__P
((
SCR
 *, **, 
size_t
 *, *));

40 
s
 
__P
((
SCR
 *, 
EXCMD
 *, *, 
ªgex_t
 *, 
u_öt
));

51 
	$ex_s
(
•
, 
cmdp
)

52 
SCR
 *
•
;

53 
EXCMD
 *
cmdp
;

55 
ªgex_t
 *
ª
;

56 
size_t
 
bÀn
, 
Àn
;

57 
u_öt
 
Êags
;

58 
dñim
;

59 *
bp
, *
±∫
, *
ªp
, *
p
, *
t
;

72 i‡(
cmdp
->
¨gc
 == 0)

73 
subagaö
;

74 
p
 = 
cmdp
->
¨gv
[0]->
bp
,

75 
Àn
 = 
cmdp
->
¨gv
[0]->Àn;Üí > 0; --Àn, ++
p
) {

76 i‡(!
	`isbœnk
(*
p
))

79 i‡(
Àn
 == 0)

80 
subagaö
:  (
	`ex_subagaö
(
•
, 
cmdp
));

82 
dñim
 = *
p
++;

83 i‡(
	`iß um
(
dñim
) || delim == '\\')

84  (
	`s
(
•
, 
cmdp
, 
p
, &•->
subª_c
, 
SUB_MUSTSETR
));

91 
•
->
c_suffix
 = sp->
g_suffix
 = 0;

112 
±∫
 = 
t
 = 
p
;;) {

113 i‡(
p
[0] ='\0' ||Ö[0] =
dñim
) {

114 i‡(
p
[0] =
dñim
)

115 ++
p
;

121 *
t
 = '\0';

124 i‡(
p
[0] == '\\')

125 i‡(
p
[1] =
dñim
)

126 ++
p
;

127 i‡(
p
[1] == '\\')

128 *
t
++ = *
p
++;

129 *
t
++ = *
p
++;

136 i‡(*
±∫
 == '\0') {

137 i‡(
•
->
ª
 =
NULL
) {

138 
	`ex_emsg
(
•
, 
NULL
, 
EXM_NOPREVRE
);

143 i‡(!
	`F_ISSET
(
•
, 
SC_RE_SEARCH
Ë&& 
	`ª_compûe
(sp,

144 
•
->
ª
, sp->
ª_Àn
, 
NULL
, NULL, &•->
ª_c
, 
RE_C_SEARCH
))

146 
Êags
 = 0;

155 i‡(
	`ª_compûe
(
•
, 
±∫
, 
t
 -Ötrn,

156 &
•
->
ª
, &•->
ª_Àn
, &•->
ª_c
, 
RE_C_SEARCH
))

158 i‡(
	`ª_compûe
(
•
, 
±∫
, 
t
 -Ötrn,

159 &
•
->
subª
, &•->
subª_Àn
, &•->
subª_c
, 
RE_C_SUBST
))

162 
Êags
 = 
SUB_FIRST
;

163 
•
->
£¨chdú
 = 
FORWARD
;

165 
ª
 = &
•
->
ª_c
;

191 i‡(
p
[0] ='\0' ||Ö[0] =
dñim
) {

192 i‡(
p
[0] =
dñim
)

193 ++
p
;

194 i‡(
•
->
ª∂
 !
NULL
)

195 
	`‰ì
(
•
->
ª∂
);

196 
•
->
ª∂
 = 
NULL
;

197 
•
->
ª∂_Àn
 = 0;

198 } i‡(
p
[0] ='%' && (p[1] ='\0' ||Ö[1] =
dñim
))

199 
p
 +p[1] =
dñim
 ? 2 : 1;

201 
ªp
 = 
p
, 
Àn
 = 0;

202 
p
[0] !'\0' &&Ö[0] !
dñim
; ++p, ++
Àn
)

203 i‡(
p
[0] == '~')

204 
Àn
 +
•
->
ª∂_Àn
;

205 
	`GET_SPACE_RET
(
•
, 
bp
, 
bÀn
, 
Àn
);

206 
t
 = 
bp
, 
Àn
 = 0, 
p
 = 
ªp
;;) {

207 i‡(
p
[0] ='\0' ||Ö[0] =
dñim
) {

208 i‡(
p
[0] =
dñim
)

209 ++
p
;

212 i‡(
p
[0] == '\\') {

213 i‡(
p
[1] =
dñim
)

214 ++
p
;

215 i‡(
p
[1] == '\\') {

216 *
t
++ = *
p
++;

217 ++
Àn
;

218 } i‡(
p
[1] == '~') {

219 ++
p
;

220 i‡(!
	`O_ISSET
(
•
, 
O_MAGIC
))

221 
tûde
;

223 } i‡(
p
[0] ='~' && 
	`O_ISSET
(
•
, 
O_MAGIC
)) {

224 
tûde
: ++
p
;

225 
	`mem˝y
(
t
, 
•
->
ª∂
, sp->
ª∂_Àn
);

226 
t
 +
•
->
ª∂_Àn
;

227 
Àn
 +
•
->
ª∂_Àn
;

230 *
t
++ = *
p
++;

231 ++
Àn
;

233 i‡((
•
->
ª∂_Àn
 = 
Àn
) != 0) {

234 i‡(
•
->
ª∂
 !
NULL
)

235 
	`‰ì
(
•
->
ª∂
);

236 i‡((
•
->
ª∂
 = 
	`mÆloc
(
Àn
)Ë=
NULL
) {

237 
	`msgq
(
•
, 
M_SYSERR
, 
NULL
);

238 
	`FREE_SPACE
(
•
, 
bp
, 
bÀn
);

241 
	`mem˝y
(
•
->
ª∂
, 
bp
, 
Àn
);

243 
	`FREE_SPACE
(
•
, 
bp
, 
bÀn
);

245  (
	`s
(
•
, 
cmdp
, 
p
, 
ª
, 
Êags
));

246 
	}
}

257 
	$ex_subagaö
(
•
, 
cmdp
)

258 
SCR
 *
•
;

259 
EXCMD
 *
cmdp
;

261 i‡(
•
->
subª
 =
NULL
) {

262 
	`ex_emsg
(
•
, 
NULL
, 
EXM_NOPREVRE
);

265 i‡(!
	`F_ISSET
(
•
, 
SC_RE_SUBST
Ë&& 
	`ª_compûe
(sp,

266 
•
->
subª
, sp->
subª_Àn
, 
NULL
, NULL, &•->
subª_c
, 
RE_C_SUBST
))

268  (
	`s
(
•
,

269 
cmdp
, cmdp->
¨gc
 ? cmdp->
¨gv
[0]->
bp
 : 
NULL
, &
•
->
subª_c
, 0));

270 
	}
}

281 
	$ex_subtûde
(
•
, 
cmdp
)

282 
SCR
 *
•
;

283 
EXCMD
 *
cmdp
;

285 i‡(
•
->
ª
 =
NULL
) {

286 
	`ex_emsg
(
•
, 
NULL
, 
EXM_NOPREVRE
);

289 i‡(!
	`F_ISSET
(
•
, 
SC_RE_SEARCH
Ë&& 
	`ª_compûe
(sp,

290 
•
->
ª
, sp->
ª_Àn
, 
NULL
, NULL, &•->
ª_c
, 
RE_C_SEARCH
))

292  (
	`s
(
•
,

293 
cmdp
, cmdp->
¨gc
 ? cmdp->
¨gv
[0]->
bp
 : 
NULL
, &
•
->
ª_c
, 0));

294 
	}
}

309 
	#NEEDNEWLINE
(
•
) { \

310 i‡(
•
->
√wl_Àn
 =•->
√wl_˙t
) { \

311 
•
->
√wl_Àn
 += 25; \

312 
	`REALLOC
(
•
, sp->
√wl
, 
size_t
 *, \

313 
•
->
√wl_Àn
 * (
size_t
)); \

314 i‡(
•
->
√wl
 =
NULL
) { \

315 
•
->
√wl_Àn
 = 0; \

319 }

	)

321 
	#BUILD
(
•
, 
l
, 
Àn
) { \

322 i‡(
lb˛í
 + (
Àn
Ë> 
lbÀn
) { \

323 
lbÀn
 +
	`MAX
(
lb˛í
 + (
Àn
), 256); \

324 
	`REALLOC
(
•
, 
lb
, *, 
lbÀn
); \

325 i‡(
lb
 =
NULL
) { \

326 
lb˛í
 = 0; \

330 
	`mem˝y
(
lb
 + 
lb˛í
, 
l
, 
Àn
); \

331 
lb˛í
 +
Àn
; \

332 }

	)

334 
	#NEEDSP
(
•
, 
Àn
, 
≤t
) { \

335 i‡(
lb˛í
 + (
Àn
Ë> 
lbÀn
) { \

336 
lbÀn
 +
	`MAX
(
lb˛í
 + (
Àn
), 256); \

337 
	`REALLOC
(
•
, 
lb
, *, 
lbÀn
); \

338 i‡(
lb
 =
NULL
) { \

339 
lb˛í
 = 0; \

342 
≤t
 = 
lb
 + 
lb˛í
; \

344 }

	)

347 
	$s
(
•
, 
cmdp
, 
s
, 
ª
, 
Êags
)

348 
SCR
 *
•
;

349 
EXCMD
 *
cmdp
;

350 *
s
;

351 
ªgex_t
 *
ª
;

352 
u_öt
 
Êags
;

354 
EVENT
 
ev
;

355 
MARK
 
‰om
, 
to
;

356 
TEXTH
 
tiq
;

357 
ª˙o_t
 
ñno
, 
 o
, 
¶no
;

358 
ªgm©ch_t
 
m©ch
[10];

359 
size_t
 
bÀn
, 
˙t
, 
œ°
, 
lb˛í
, 
lbÀn
, 
Àn
, 
Œí
;

360 
size_t
 
off£t
, 
ßved_off£t
, 
s˙o
;

361 
cÊag
, 
lÊag
, 
nÊag
, 
pÊag
, 
rÊag
;

362 
didsub
, 
do_eﬁ_m©ch
, 
eÊags
, 
em±y_ok
, 
evÆ
;

363 
löech™ged
, 
m©ched
, 
quô
, 
rvÆ
;

364 *
bp
, *
lb
;

366 
	`NEEDFILE
(
•
, 
cmdp
);

368 
¶no
 = 
•
->
 o
;

369 
s˙o
 = 
•
->
˙o
;

379 i‡(!
	`O_ISSET
(
•
, 
O_EDCOMPATIBLE
))

380 
•
->
c_suffix
 = sp->
g_suffix
 = 0;

398 
cÊag
 = 
lÊag
 = 
nÊag
 = 
pÊag
 = 
rÊag
 = 0;

399 i‡(
s
 =
NULL
)

400 
nﬂrgs
;

401 
 o
 = 
OOBLNO
; *
s
 != '\0'; ++s)

402 *
s
) {

407 ++
cmdp
->
Êagoff
;

410 --
cmdp
->
Êagoff
;

414 i‡(
 o
 !
OOBLNO
)

415 
ußge
;

416 
î∫o
 = 0;

417 
 o
 = 
	`°πoul
(
s
, &s, 10);

418 i‡(*
s
 == '\0')

419 --
s
;

420 i‡(
î∫o
 =
ERANGE
) {

421 i‡(
 o
 =
LONG_MAX
)

422 
	`msgq
(
•
, 
M_ERR
, "153|Count overflow");

423 i‡(
 o
 =
LONG_MIN
)

424 
	`msgq
(
•
, 
M_ERR
, "154|Count underflow");

426 
	`msgq
(
•
, 
M_SYSERR
, 
NULL
);

433 
cmdp
->
addr1
.
 o
 = cmdp->
addr2
.lno;

434 
cmdp
->
addr2
.
 o
 +=Üno - 1;

435 i‡(!
	`db_exi°
(
•
, 
cmdp
->
addr2
.
 o
) &&

436 
	`db_œ°
(
•
, &
cmdp
->
addr2
.
 o
))

440 
nÊag
 = 1;

443 
•
->
c_suffix
 = !sp->c_suffix;

446 i‡(
	`F_ISSET
(
•
, 
SC_EX
)) {

447 
	`mem£t
(&
tiq
, 0, (
TEXTH
));

448 
	`CIRCLEQ_INIT
(&
tiq
);

452 
•
->
g_suffix
 = !sp->g_suffix;

455 
lÊag
 = 1;

458 
pÊag
 = 1;

461 i‡(
	`LF_ISSET
(
SUB_FIRST
)) {

462 
	`msgq
(
•
, 
M_ERR
,

466 i‡(!
	`F_ISSET
(
•
, 
SC_RE_SEARCH
)) {

467 
	`ex_emsg
(
•
, 
NULL
, 
EXM_NOPREVRE
);

470 
rÊag
 = 1;

471 
ª
 = &
•
->
ª_c
;

474 
ußge
;

477 i‡(*
s
 !'\0' || !
rÊag
 && 
	`LF_ISSET
(
SUB_MUSTSETR
)) {

478 
ußge
: 
	`ex_emsg
(
•
, 
cmdp
->
cmd
->ußge, 
EXM_USAGE
);

482 
nﬂrgs
: i‡(
	`F_ISSET
(
•
, 
SC_VI
Ë&& sp->
c_suffix
 && (
lÊag
 || 
nÊag
 || 
pÊag
)) {

483 
	`msgq
(
•
, 
M_ERR
,

495 
bp
 = 
lb
 = 
NULL
;

496 
bÀn
 = 
lb˛í
 = 
lbÀn
 = 0;

499 
m©ched
 = 
quô
 = 0, 
 o
 = 
cmdp
->
addr1
.lno,

500 
ñno
 = 
cmdp
->
addr2
.
 o
; !
quô
 &&Üno <=Élno; ++lno) {

503 i‡(
	`INTERRUPTED
(
•
))

507 i‡(
	`db_gë
(
•
, 
 o
, 
DBG_FATAL
, &
s
, &
Œí
))

508 
îr
;

514 i‡(
•
->
c_suffix
) {

515 i‡(
bp
 =
NULL
) {

516 
	`GET_SPACE_RET
(
•
, 
bp
, 
bÀn
, 
Œí
);

518 
	`ADD_SPACE_RET
(
•
, 
bp
, 
bÀn
, 
Œí
);

519 
	`mem˝y
(
bp
, 
s
, 
Œí
);

520 
s
 = 
bp
;

524 
off£t
 = 0;

525 
Àn
 = 
Œí
;

528 
lb˛í
 = 0;

531 
em±y_ok
 = 1;

539 
didsub
 = 
löech™ged
 = 0;

542 
do_eﬁ_m©ch
 = 1;

545 
eÊags
 = 
REG_STARTEND
;

554 
√xtm©ch
: 
m©ch
[0].
rm_so
 = 0;

555 
m©ch
[0].
rm_eo
 = 
Àn
;

558 
evÆ
 = 
	`ªgexec
(
ª
, (*)
s
 + 
off£t
, 10, 
m©ch
, 
eÊags
);

565 i‡(
evÆ
 =
REG_NOMATCH
)

566 
ídm©ch
;

567 i‡(
evÆ
 != 0) {

568 
	`ª_îr‹
(
•
, 
evÆ
, 
ª
);

569 
îr
;

571 
m©ched
 = 1;

574 
eÊags
 |
REG_NOTBOL
;

596 i‡(!
em±y_ok
 && 
m©ch
[0].
rm_so
 =0 && m©ch[0].
rm_eo
 == 0) {

597 
em±y_ok
 = 1;

598 i‡(
Àn
 == 0)

599 
ídm©ch
;

600 
	`BUILD
(
•
, 
s
 + 
off£t
, 1)

601 ++
off£t
;

602 --
Àn
;

603 
√xtm©ch
;

607 i‡(
•
->
c_suffix
) {

613 
‰om
.
 o
 = 
to
.lno =Üno;

614 
‰om
.
˙o
 = 
m©ch
[0].
rm_so
 + 
off£t
;

615 
to
.
˙o
 = 
m©ch
[0].
rm_eo
 + 
off£t
;

620 i‡(
Œí
 == 0)

621 
‰om
.
˙o
 = 
to
.cno = 0;

622 i‡(
	`F_ISSET
(
•
, 
SC_VI
)) {

631 i‡(
to
.
˙o
 >
Œí
)

632 
to
.
˙o
 = 
Œí
 - 1;

633 i‡(
‰om
.
˙o
 >
Œí
)

634 
‰om
.
˙o
 = 
Œí
 - 1;

636 
•
->
 o
 = 
‰om
.lno;

637 
•
->
˙o
 = 
‰om
.cno;

638 i‡(
	`vs_ª‰esh
(
•
, 1))

639 
îr
;

641 
	`vs_upd©e
(
•
, 
	`msg_ˇt
(sp,

642 "169|C⁄fúm ch™ge? [n]", 
NULL
), NULL);

644 i‡(
	`v_evít_gë
(
•
, &
ev
, 0, 0))

645 
îr
;

646 
ev
.
e_evít
) {

647 
E_CHARACTER
:

649 
E_EOF
:

650 
E_ERR
:

651 
E_INTERRUPT
:

652 
lquô
;

654 
	`v_evít_îr
(
•
, &
ev
);

655 
lquô
;

658 i‡(
	`ex_¥öt
(
•
, 
cmdp
, &
‰om
, &
to
, 0) ||

659 
	`ex_s˝röt
(
•
, &
‰om
, &
to
))

660 
lquô
;

661 i‡(
	`ex_txt
(
•
, &
tiq
, 0, 
TXT_CR
))

662 
îr
;

663 
ev
.
e_c
 = 
tiq
.
cqh_fú°
->
lb
[0];

666 
ev
.
e_c
) {

667 
CH_YES
:

670 
CH_NO
:

671 
didsub
 = 0;

672 
	`BUILD
(
•
, 
s
 +
off£t
, 
m©ch
[0].
rm_eo
);

673 
skù
;

674 
CH_QUIT
:

676 
lquô
: 
quô
 = 1;

677 
	`F_SET
(
•
->
gp
, 
G_INTERRUPTED
);

683 
ídm©ch
;

691 
•
->
 o
 =Üno;

692 
•
->
˙o
 = 
m©ch
[0].
rm_so
;

695 
	`BUILD
(
•
, 
s
 + 
off£t
, 
m©ch
[0].
rm_so
);

698 
didsub
 = 1;

699 i‡(
	`ª_sub
(
•
, 
s
 + 
off£t
, &
lb
, &
lb˛í
, &
lbÀn
, 
m©ch
))

700 
îr
;

703 
löech™ged
 = 1;

706 
skù
: 
off£t
 +
m©ch
[0].
rm_eo
;

707 
Àn
 -
m©ch
[0].
rm_eo
;

710 
em±y_ok
 = 0;

717 i‡(
didsub
 && 
•
->
c_suffix
 && sp->
g_suffix
) {

722 
ßved_off£t
 = 
lb˛í
;

725 i‡(
Àn
)

726 
	`BUILD
(
•
, 
s
 + 
off£t
, 
Àn
)

729 
off£t
 = 
ßved_off£t
;

732 
œ°
 = 0;

733 i‡(
•
->
√wl_˙t
) {

734 
˙t
 = 0;

735 
˙t
 < 
•
->
√wl_˙t
; ++˙t, ++
 o
, ++
ñno
) {

736 i‡(
	`db_ö£π
(
•
, 
 o
,

737 
lb
 + 
œ°
, 
•
->
√wl
[
˙t
] -Üast))

738 
îr
;

739 
œ°
 = 
•
->
√wl
[
˙t
] + 1;

740 ++
•
->
Ωéöes
[
L_ADDED
];

742 
lb˛í
 -
œ°
;

743 
off£t
 -
œ°
;

744 
•
->
√wl_˙t
 = 0;

748 i‡(
	`db_£t
(
•
, 
 o
, 
lb
 + 
œ°
, 
lb˛í
))

749 
îr
;

750 i‡(
	`db_gë
(
•
, 
 o
, 
DBG_FATAL
, &
s
, &
Œí
))

751 
îr
;

752 
	`ADD_SPACE_RET
(
•
, 
bp
, 
bÀn
, 
Œí
)

753 
	`mem˝y
(
bp
, 
s
, 
Œí
);

754 
s
 = 
bp
;

755 
Àn
 = 
Œí
 - 
off£t
;

758 
lb˛í
 = 0;

759 
	`BUILD
(
•
, 
s
, 
off£t
);

766 i‡(!
do_eﬁ_m©ch
)

767 
ídm©ch
;

768 i‡(
off£t
 =
Àn
) {

769 
do_eﬁ_m©ch
 = 0;

770 
eÊags
 |
REG_NOTEOL
;

772 
√xtm©ch
;

782 i‡(
•
->
g_suffix
 && 
do_eﬁ_m©ch
) {

783 i‡(
Àn
 == 0) {

784 
do_eﬁ_m©ch
 = 0;

785 
eÊags
 |
REG_NOTEOL
;

787 
√xtm©ch
;

790 
ídm©ch
: i‡(!
löech™ged
)

794 i‡(
Àn
)

795 
	`BUILD
(
•
, 
s
 + 
off£t
, 
Àn
)

798 
œ°
 = 0;

799 i‡(
•
->
√wl_˙t
) {

800 
˙t
 = 0;

801 
˙t
 < 
•
->
√wl_˙t
; ++˙t, ++
 o
, ++
ñno
) {

802 i‡(
	`db_ö£π
(
•
,

803 
 o
, 
lb
 + 
œ°
, 
•
->
√wl
[
˙t
] -Üast))

804 
îr
;

805 
œ°
 = 
•
->
√wl
[
˙t
] + 1;

806 ++
•
->
Ωéöes
[
L_ADDED
];

808 
lb˛í
 -
œ°
;

809 
•
->
√wl_˙t
 = 0;

813 i‡(
	`db_£t
(
•
, 
 o
, 
lb
 + 
œ°
, 
lb˛í
))

814 
îr
;

817 i‡(
•
->
Ωéch™ge
 !
 o
) {

818 
•
->
Ωéch™ge
 = 
 o
;

819 ++
•
->
Ωéöes
[
L_CHANGED
];

828 i‡(
lÊag
 || 
nÊag
 || 
pÊag
) {

829 
‰om
.
 o
 = 
to
.lno =Üno;

830 
‰om
.
˙o
 = 
to
.cno = 0;

831 i‡(
lÊag
)

832 ()
	`ex_¥öt
(
•
, 
cmdp
, &
‰om
, &
to
, 
E_C_LIST
);

833 i‡(
nÊag
)

834 ()
	`ex_¥öt
(
•
, 
cmdp
, &
‰om
, &
to
, 
E_C_HASH
);

835 i‡(
pÊag
)

836 ()
	`ex_¥öt
(
•
, 
cmdp
, &
‰om
, &
to
, 
E_C_PRINT
);

856 i‡(!
•
->
c_suffix
 && (•->
 o
 !
¶no
 || sp->
˙o
 !
s˙o
)) {

857 
•
->
˙o
 = 0;

858 ()
	`n⁄bœnk
(
•
, sp->
 o
, &•->
˙o
);

865 
rvÆ
 = 0;

866 i‡(!
m©ched
) {

867 i‡(!
	`F_ISSET
(
•
, 
SC_EX_GLOBAL
)) {

868 
	`msgq
(
•
, 
M_ERR
, "157|No match found");

869 
îr
;

871 } i‡(!
lÊag
 && !
nÊag
 && !
pÊag
)

872 
	`F_SET
(
cmdp
, 
E_AUTOPRINT
);

875 
îr
: 
rvÆ
 = 1;

878 i‡(
bp
 !
NULL
)

879 
	`FREE_SPACE
(
•
, 
bp
, 
bÀn
);

880 i‡(
lb
 !
NULL
)

881 
	`‰ì
(
lb
);

882  (
rvÆ
);

883 
	}
}

893 
	$ª_compûe
(
•
, 
±∫
, 
∂í
, 
±∫p
, 
À≈
, 
ªp
, 
Êags
)

894 
SCR
 *
•
;

895 *
±∫
, **
±∫p
;

896 
size_t
 
∂í
, *
À≈
;

897 
ªgex_t
 *
ªp
;

898 
u_öt
 
Êags
;

900 
size_t
 
Àn
;

901 
ªÊags
, 
ª∂a˚d
, 
rvÆ
;

902 *
p
;

905 
ªÊags
 = 0;

906 i‡(!
	`LF_ISSET
(
RE_C_CSCOPE
 | 
RE_C_TAG
)) {

907 i‡(
	`O_ISSET
(
•
, 
O_EXTENDED
))

908 
ªÊags
 |
REG_EXTENDED
;

909 i‡(
	`O_ISSET
(
•
, 
O_IGNORECASE
))

910 
ªÊags
 |
REG_ICASE
;

911 i‡(
	`O_ISSET
(
•
, 
O_ICLOWER
)) {

912 
p
 = 
±∫
, 
Àn
 = 
∂í
;Üen > 0; ++p, --len)

913 i‡(
	`isuµî
(*
p
))

915 i‡(
Àn
 == 0)

916 
ªÊags
 |
REG_ICASE
;

921 i‡(
	`LF_ISSET
(
RE_C_SEARCH
Ë&& 
	`F_ISSET
(
•
, 
SC_RE_SEARCH
)) {

922 
	`ªg‰ì
(&
•
->
ª_c
);

923 
	`F_CLR
(
•
, 
SC_RE_SEARCH
);

925 i‡(
	`LF_ISSET
(
RE_C_SUBST
Ë&& 
	`F_ISSET
(
•
, 
SC_RE_SUBST
)) {

926 
	`ªg‰ì
(&
•
->
subª_c
);

927 
	`F_CLR
(
•
, 
SC_RE_SUBST
);

935 i‡(
±∫p
 !
NULL
) {

936 i‡(
	`LF_ISSET
(
RE_C_CSCOPE
)) {

937 i‡(
	`ª_csc›e_c⁄v
(
•
, &
±∫
, &
∂í
, &
ª∂a˚d
))

945 
ªÊags
 |
REG_EXTENDED
;

946 } i‡(
	`LF_ISSET
(
RE_C_TAG
)) {

947 i‡(
	`ª_èg_c⁄v
(
•
, &
±∫
, &
∂í
, &
ª∂a˚d
))

950 i‡(
	`ª_c⁄v
(
•
, &
±∫
, &
∂í
, &
ª∂a˚d
))

954 i‡(*
±∫p
 !
NULL
) {

955 
	`‰ì
(*
±∫p
);

956 *
±∫p
 = 
NULL
;

958 i‡(
À≈
 !
NULL
)

959 *
À≈
 = 
∂í
;

968 
	`MALLOC
(
•
, *
±∫p
, *, 
∂í
 + 1);

969 i‡(*
±∫p
 !
NULL
) {

970 
	`mem˝y
(*
±∫p
, 
±∫
, 
∂í
);

971 (*
±∫p
)[
∂í
] = '\0';

975 i‡(
ª∂a˚d
)

976 
	`FREE_SPACE
(
•
, 
±∫
, 0);

978 i‡(*
±∫p
 =
NULL
)

981 
±∫
 = *
±∫p
;

989 i‡((
rvÆ
 = 
	`ªgcomp
(
ªp
, 
±∫
, 
ªÊags
)) != 0) {

990 i‡(!
	`LF_ISSET
(
RE_C_SILENT
))

991 
	`ª_îr‹
(
•
, 
rvÆ
, 
ªp
);

995 i‡(
	`LF_ISSET
(
RE_C_SEARCH
))

996 
	`F_SET
(
•
, 
SC_RE_SEARCH
);

997 i‡(
	`LF_ISSET
(
RE_C_SUBST
))

998 
	`F_SET
(
•
, 
SC_RE_SUBST
);

1001 
	}
}

1026 
	$ª_c⁄v
(
•
, 
±∫p
, 
∂íp
, 
ª∂a˚dp
)

1027 
SCR
 *
•
;

1028 **
±∫p
;

1029 
size_t
 *
∂íp
;

1030 *
ª∂a˚dp
;

1032 
size_t
 
bÀn
, 
Àn
, 
√edÀn
;

1033 
magic
;

1034 *
bp
, *
p
, *
t
;

1042 
magic
 = 0;

1043 
p
 = *
±∫p
, 
Àn
 = *
∂íp
, 
√edÀn
 = 0;Üen > 0; ++p, --len)

1044 *
p
) {

1046 i‡(
Àn
 > 1) {

1047 --
Àn
;

1048 *++
p
) {

1050 
magic
 = 1;

1051 
√edÀn
 +(
RE_WSTART
);

1054 
magic
 = 1;

1055 
√edÀn
 +(
RE_WSTOP
);

1058 i‡(!
	`O_ISSET
(
•
, 
O_MAGIC
)) {

1059 
magic
 = 1;

1060 
√edÀn
 +
•
->
ª∂_Àn
;

1066 i‡(!
	`O_ISSET
(
•
, 
O_MAGIC
)) {

1067 
magic
 = 1;

1068 
√edÀn
 += 1;

1072 
√edÀn
 += 2;

1075 
√edÀn
 += 1;

1078 i‡(
	`O_ISSET
(
•
, 
O_MAGIC
)) {

1079 
magic
 = 1;

1080 
√edÀn
 +
•
->
ª∂_Àn
;

1086 i‡(!
	`O_ISSET
(
•
, 
O_MAGIC
)) {

1087 
magic
 = 1;

1088 
√edÀn
 += 2;

1092 
√edÀn
 += 1;

1096 i‡(!
magic
) {

1097 *
ª∂a˚dp
 = 0;

1102 *
ª∂a˚dp
 = 1;

1103 
	`GET_SPACE_RET
(
•
, 
bp
, 
bÀn
, 
√edÀn
);

1105 
p
 = *
±∫p
, 
Àn
 = *
∂íp
, 
t
 = 
bp
;Üen > 0; ++p, --len)

1106 *
p
) {

1108 i‡(
Àn
 > 1) {

1109 --
Àn
;

1110 *++
p
) {

1112 
	`mem˝y
(
t
,

1113 
RE_WSTART
, (RE_WSTART) - 1);

1114 
t
 +(
RE_WSTART
) - 1;

1117 
	`mem˝y
(
t
,

1118 
RE_WSTOP
, (RE_WSTOP) - 1);

1119 
t
 +(
RE_WSTOP
) - 1;

1122 i‡(
	`O_ISSET
(
•
, 
O_MAGIC
))

1123 *
t
++ = '~';

1125 
	`mem˝y
(
t
,

1126 
•
->
ª∂
, sp->
ª∂_Àn
);

1127 
t
 +
•
->
ª∂_Àn
;

1133 i‡(
	`O_ISSET
(
•
, 
O_MAGIC
))

1134 *
t
++ = '\\';

1135 *
t
++ = *
p
;

1138 *
t
++ = '\\';

1139 *
t
++ = *
p
;

1142 *
t
++ = '\\';

1145 i‡(
	`O_ISSET
(
•
, 
O_MAGIC
)) {

1146 
	`mem˝y
(
t
, 
•
->
ª∂
, sp->
ª∂_Àn
);

1147 
t
 +
•
->
ª∂_Àn
;

1149 *
t
++ = '~';

1154 i‡(!
	`O_ISSET
(
•
, 
O_MAGIC
))

1155 *
t
++ = '\\';

1156 *
t
++ = *
p
;

1159 *
t
++ = *
p
;

1163 *
±∫p
 = 
bp
;

1164 *
∂íp
 = 
t
 - 
bp
;

1166 
	}
}

1174 
	$ª_èg_c⁄v
(
•
, 
±∫p
, 
∂íp
, 
ª∂a˚dp
)

1175 
SCR
 *
•
;

1176 **
±∫p
;

1177 
size_t
 *
∂íp
;

1178 *
ª∂a˚dp
;

1180 
size_t
 
bÀn
, 
Àn
;

1181 
œ°dﬁœr
;

1182 *
bp
, *
p
, *
t
;

1184 
Àn
 = *
∂íp
;

1187 *
ª∂a˚dp
 = 1;

1188 
	`GET_SPACE_RET
(
•
, 
bp
, 
bÀn
, 
Àn
 * 2);

1190 
p
 = *
±∫p
;

1191 
t
 = 
bp
;

1194 i‡(
Àn
 > 0 && (
p
[len - 1] == '/' ||Ö[len - 1] == '?'))

1195 --
Àn
;

1198 i‡(
Àn
 > 0 && 
p
[len - 1] == '$') {

1199 --
Àn
;

1200 
œ°dﬁœr
 = 1;

1202 
œ°dﬁœr
 = 0;

1205 i‡(
Àn
 > 0 && (
p
[0] == '/' ||Ö[0] == '?')) {

1206 ++
p
;

1207 --
Àn
;

1211 i‡(
p
[0] == '^') {

1212 *
t
++ = *
p
++;

1213 --
Àn
;

1221 ; 
Àn
 > 0; --len) {

1222 i‡(
p
[0] == '\\' && (p[1] == '/' ||Ö[1] == '?')) {

1223 ++
p
;

1224 --
Àn
;

1225 } i‡(
	`°rchr
("^.[]$*", 
p
[0]))

1226 *
t
++ = '\\';

1227 *
t
++ = *
p
++;

1229 i‡(
œ°dﬁœr
)

1230 *
t
++ = '$';

1232 *
±∫p
 = 
bp
;

1233 *
∂íp
 = 
t
 - 
bp
;

1235 
	}
}

1243 
	$ª_csc›e_c⁄v
(
•
, 
±∫p
, 
∂íp
, 
ª∂a˚dp
)

1244 
SCR
 *
•
;

1245 **
±∫p
;

1246 
size_t
 *
∂íp
;

1247 *
ª∂a˚dp
;

1249 
size_t
 
bÀn
, 
Àn
, 
n•a˚s
;

1250 *
bp
, *
p
, *
t
;

1256 
	#CSCOPE_RE_SPACE
 "([ \t]|/\\*([^*]|\\*/)*\\*/)*"

	)

1257 
n•a˚s
 = 0, 
p
 = *
±∫p
, 
Àn
 = *
∂íp
;Üen > 0; ++p, --len)

1258 i‡(*
p
 == ' ')

1259 ++
n•a˚s
;

1267 *
ª∂a˚dp
 = 1;

1268 
Àn
 = (
p
 - *
±∫p
Ë* 2 + (
n•a˚s
 + 2Ë* (
CSCOPE_RE_SPACE
) + 3;

1269 
	`GET_SPACE_RET
(
•
, 
bp
, 
bÀn
, 
Àn
);

1271 
p
 = *
±∫p
;

1272 
t
 = 
bp
;

1274 *
t
++ = '^';

1275 
	`mem˝y
(
t
, 
CSCOPE_RE_SPACE
, (CSCOPE_RE_SPACE) - 1);

1276 
t
 +(
CSCOPE_RE_SPACE
) - 1;

1278 
Àn
 = *
∂íp
;Üí > 0; ++
p
, --len)

1279 i‡(*
p
 == ' ') {

1280 
	`mem˝y
(
t
, 
CSCOPE_RE_SPACE
, (CSCOPE_RE_SPACE) - 1);

1281 
t
 +(
CSCOPE_RE_SPACE
) - 1;

1283 i‡(
	`°rchr
("\\^.[]$*+?()|{}", *
p
))

1284 *
t
++ = '\\';

1285 *
t
++ = *
p
;

1288 
	`mem˝y
(
t
, 
CSCOPE_RE_SPACE
, (CSCOPE_RE_SPACE) - 1);

1289 
t
 +(
CSCOPE_RE_SPACE
) - 1;

1290 *
t
++ = '$';

1292 *
±∫p
 = 
bp
;

1293 *
∂íp
 = 
t
 - 
bp
;

1295 
	}
}

1304 
	$ª_îr‹
(
•
, 
îrcode
, 
¥eg
)

1305 
SCR
 *
•
;

1306 
îrcode
;

1307 
ªgex_t
 *
¥eg
;

1309 
size_t
 
s
;

1310 *
€
;

1312 
s
 = 
	`ªgîr‹
(
îrcode
, 
¥eg
, "", 0);

1313 i‡((
€
 = 
	`mÆloc
(
s
)Ë=
NULL
)

1314 
	`msgq
(
•
, 
M_SYSERR
, 
NULL
);

1316 ()
	`ªgîr‹
(
îrcode
, 
¥eg
, 
€
, 
s
);

1317 
	`msgq
(
•
, 
M_ERR
, "REÉº‹: %s", 
€
);

1318 
	`‰ì
(
€
);

1320 
	}
}

1327 
	$ª_sub
(
•
, 
ù
, 
lbp
, 
lb˛íp
, 
lbÀ≈
, 
m©ch
)

1328 
SCR
 *
•
;

1329 *
ù
;

1330 **
lbp
;

1331 
size_t
 *
lb˛íp
, *
lbÀ≈
;

1332 
ªgm©ch_t
 
m©ch
[10];

1334 íum { 
C_NOTSET
, 
C_LOWER
, 
C_ONELOWER
, 
C_ONEUPPER
, 
C_UPPER
 } 
c⁄v
;

1335 
size_t
 
lb˛í
, 
lbÀn
;

1336 
size_t
 
mÀn
;

1337 
size_t
 
Ωl
;

1338 *
Ω
;

1339 
ch
;

1340 
no
;

1341 *
p
, *
t
;

1342 *
lb
;

1344 
lb
 = *
lbp
;

1345 
lb˛í
 = *
lb˛íp
;

1346 
lbÀn
 = *
lbÀ≈
;

1365 
	#OUTCH
(
ch
, 
∆å™s
) { \

1366 
CHAR_T
 
__ch
 = (
ch
); \

1367 
u_öt
 
__vÆue
 = 
	`KEY_VAL
(
•
, 
__ch
); \

1368 i‡(
∆å™s
 && (
__vÆue
 =
K_CR
 || __vÆuê=
K_NL
)) { \

1369 
	`NEEDNEWLINE
(
•
); \

1370 
•
->
√wl
[•->
√wl_˙t
++] = 
lb˛í
; \

1371 } i‡(
c⁄v
 !
C_NOTSET
) { \

1372 
c⁄v
) { \

1373 
C_ONELOWER
: \

1374 
c⁄v
 = 
C_NOTSET
; \

1376 
C_LOWER
: \

1377 i‡(
	`isuµî
(
__ch
)) \

1378 
__ch
 = 
	`tﬁowî
(__ch); \

1380 
C_ONEUPPER
: \

1381 
c⁄v
 = 
C_NOTSET
; \

1383 
C_UPPER
: \

1384 i‡(
	`i¶owî
(
__ch
)) \

1385 
__ch
 = 
	`touµî
(__ch); \

1388 
	`ab‹t
(); \

1391 
	`NEEDSP
(
•
, 1, 
p
); \

1392 *
p
++ = 
__ch
; \

1393 ++
lb˛í
; \

1394 }

	)

1395 
c⁄v
 = 
C_NOTSET
;

1396 
Ω
 = 
•
->
ª∂
, 
Ωl
 = sp->
ª∂_Àn
, 
p
 = 
lb
 + 
lb˛í
;Ñpl--;) {

1397 
ch
 = *
Ω
++) {

1399 i‡(
	`O_ISSET
(
•
, 
O_MAGIC
)) {

1400 
no
 = 0;

1401 
subzîo
;

1405 i‡(
Ωl
 == 0)

1407 --
Ωl
;

1408 
ch
 = *
Ω
) {

1410 ++
Ω
;

1411 i‡(!
	`O_ISSET
(
•
, 
O_MAGIC
)) {

1412 
no
 = 0;

1413 
subzîo
;

1418 
no
 = *
Ω
++ - '0';

1419 
subzîo
: i‡(
m©ch
[
no
].
rm_so
 == -1 ||

1420 
m©ch
[
no
].
rm_eo
 == -1)

1422 
mÀn
 = 
m©ch
[
no
].
rm_eo
 - m©ch[no].
rm_so
;

1423 
t
 = 
ù
 + 
m©ch
[
no
].
rm_so
; 
mÀn
--; ++t)

1424 
	`OUTCH
(*
t
, 0);

1428 ++
Ω
;

1429 
c⁄v
 = 
C_NOTSET
;

1432 ++
Ω
;

1433 
c⁄v
 = 
C_ONELOWER
;

1436 ++
Ω
;

1437 
c⁄v
 = 
C_LOWER
;

1440 ++
Ω
;

1441 
c⁄v
 = 
C_ONEUPPER
;

1444 ++
Ω
;

1445 
c⁄v
 = 
C_UPPER
;

1448 ++
Ω
;

1452 
	`OUTCH
(
ch
, 1);

1455 *
lbp
 = 
lb
;

1456 *
lb˛íp
 = 
lb˛í
;

1457 *
lbÀ≈
 = 
lbÀn
;

1459 
	}
}

	@ex/ex_tag.c

13 
	~"c⁄fig.h
"

15 #i‚de‡
löt


16 c⁄° 
	gsccsid
[] = "@(#)ex_tag.c 10.36 (Berkeley) 9/15/96";

19 
	~<sys/∑øm.h
>

20 
	~<sys/ty≥s.h
>

22 #ifde‡
HAVE_SYS_MMAN_H


23 
	~<sys/mm™.h
>

26 
	~<sys/queue.h
>

27 
	~<sys/°©.h
>

28 
	~<sys/time.h
>

30 
	~<bô°rög.h
>

31 
	~<˘y≥.h
>

32 
	~<î∫o.h
>

33 
	~<f˙é.h
>

34 
	~<limôs.h
>

35 
	~<°ddef.h
>

36 
	~<°dio.h
>

37 
	~<°dlib.h
>

38 
	~<°rög.h
>

39 
	~<uni°d.h
>

41 
	~"../comm⁄/comm⁄.h
"

42 
	~"../vi/vi.h
"

43 
	~"èg.h
"

45 *
bö¨y_£¨ch
 
__P
((*, *, *));

46 
com∑ª
 
__P
((*, *, *));

47 
˘ag_fûe
 
__P
((
SCR
 *, 
TAGF
 *, *, **, 
size_t
 *));

48 
˘ag_£¨ch
 
__P
((
SCR
 *, *, 
size_t
, *));

49 
˘ag_sfûe
 
__P
((
SCR
 *, 
TAGF
 *, 
TAGQ
 *, *));

50 
TAGQ
 *
˘ag_¶i°
 
__P
((
SCR
 *, *));

51 *
löór_£¨ch
 
__P
((*, *, *));

52 
èg_c›y
 
__P
((
SCR
 *, 
TAG
 *, TAG **));

53 
èg_p›
 
__P
((
SCR
 *, 
TAGQ
 *, ));

54 
ègf_c›y
 
__P
((
SCR
 *, 
TAGF
 *, TAGF **));

55 
ègf_‰ì
 
__P
((
SCR
 *, 
TAGF
 *));

56 
ègq_c›y
 
__P
((
SCR
 *, 
TAGQ
 *, TAGQ **));

65 
	$ex_èg_fú°
(
•
, 
èg¨g
)

66 
SCR
 *
•
;

67 *
èg¨g
;

69 
ARGS
 *
≠
[2], 
a
;

70 
EXCMD
 
cmd
;

73 
	`ex_cöô
(&
cmd
, 
C_TAG
, 0, 
OOBLNO
, OOBLNO, 0, 
≠
);

74 
	`ex_ˇdd
(&
cmd
, &
a
, 
èg¨g
, 
	`°æí
(tagarg));

82 i‡(
	`ex_èg_push
(
•
, &
cmd
))

86 
	`F_CLR
(
•
, 
SC_SCR_TOP
);

87 
	`F_SET
(
•
, 
SC_SCR_CENTER
);

90 
	}
}

101 
	$ex_èg_push
(
•
, 
cmdp
)

102 
SCR
 *
•
;

103 
EXCMD
 *
cmdp
;

105 
EX_PRIVATE
 *
exp
;

106 
FREF
 *
‰p
;

107 
TAG
 *
πp
;

108 
TAGQ
 *
πqp
, *
tqp
;

109 
ª˙o_t
 
 o
;

110 
size_t
 
˙o
;

111 
é
;

112 
f‹˚
, 
i°mp
;

114 
exp
 = 
	`EXP
(
•
);

115 
cmdp
->
¨gc
) {

117 i‡(
exp
->
èg_œ°
 !
NULL
)

118 
	`‰ì
(
exp
->
èg_œ°
);

120 i‡((
exp
->
èg_œ°
 = 
	`°rdup
(
cmdp
->
¨gv
[0]->
bp
)Ë=
NULL
) {

121 
	`msgq
(
•
, 
M_SYSERR
, 
NULL
);

126 i‡((
é
 =

127 
	`O_VAL
(
•
, 
O_TAGLENGTH
)Ë!0 && 
	`°æí
(
exp
->
èg_œ°
Ë> 
é
)

128 
exp
->
èg_œ°
[
é
] = '\0';

131 i‡(
exp
->
èg_œ°
 =
NULL
) {

132 
	`msgq
(
•
, 
M_ERR
, "158|NoÖreviousÅagÉntered");

137 
	`ab‹t
();

141 i‡((
tqp
 = 
	`˘ag_¶i°
(
•
, 
exp
->
èg_œ°
)Ë=
NULL
)

148 
πp
 = 
NULL
;

149 
πqp
 = 
NULL
;

150 i‡(
exp
->
tq
.
cqh_fú°
 == (*)&exp->tq) {

152 
	`CALLOC_GOTO
(
•
, 
πqp
, 
TAGQ
 *, 1, (TAGQ));

153 
	`CIRCLEQ_INIT
(&
πqp
->
ègq
);

156 
	`CALLOC_GOTO
(
•
, 
πp
, 
TAG
 *, 1, (TAG));

157 
	`CIRCLEQ_INSERT_HEAD
(&
πqp
->
ègq
, 
πp
, 
q
);

158 
πqp
->
cuºít
 = 
πp
;

166 
‰p
 = 
•
->frp;

167 
 o
 = 
•
->lno;

168 
˙o
 = 
•
->cno;

169 
i°mp
 = 
‰p
 =
NULL
 ||

170 
	`F_ISSET
(
‰p
, 
FR_TMPFILE
Ë&& !F_ISSET(
cmdp
, 
E_NEWSCREEN
);

173 
f‹˚
 = 
	`FL_ISSET
(
cmdp
->
iÊags
, 
E_C_FORCE
);

174 i‡(
	`F_ISSET
(
cmdp
, 
E_NEWSCREEN
)) {

175 i‡(
	`ex_èg_Nswôch
(
•
, 
tqp
->
ègq
.
cqh_fú°
, 
f‹˚
))

176 
îr
;

179 
•
 = sp->
√xtdi•
;

180 
exp
 = 
	`EXP
(
•
);

182 i‡(
	`ex_èg_nswôch
(
•
, 
tqp
->
ègq
.
cqh_fú°
, 
f‹˚
))

183 
îr
;

190 i‡(
exp
->
tq
.
cqh_fú°
 == (*)&exp->tq) {

191 
	`CIRCLEQ_INSERT_HEAD
(&
exp
->
tq
, 
πqp
, 
q
);

193 
πqp
 = 
exp
->
tq
.
cqh_fú°
;

196 
	`CIRCLEQ_INSERT_HEAD
(&
exp
->
tq
, 
tqp
, 
q
);

198 ()
	`˘ag_£¨ch
(
•
,

199 
tqp
->
cuºít
->
£¨ch
,Åqp->cuºít->
¶í
,Åqp->
èg
);

210 i‡(
i°mp
) {

211 
πqp
->
cuºít
->
‰p
 = 
•
->frp;

212 
πqp
->
cuºít
->
 o
 = 
•
->lno;

213 
πqp
->
cuºít
->
˙o
 = 
•
->cno;

215 
πqp
->
cuºít
->
‰p
 = frp;

216 
πqp
->
cuºít
->
 o
 =Üno;

217 
πqp
->
cuºít
->
˙o
 = cno;

221 
îr
:

222 
Æloc_îr
:

223 i‡(
πqp
 !
NULL
)

224 
	`‰ì
(
πqp
);

225 i‡(
πp
 !
NULL
)

226 
	`‰ì
(
πp
);

227 
	`ègq_‰ì
(
•
, 
tqp
);

229 
	}
}

238 
	$ex_èg_√xt
(
•
, 
cmdp
)

239 
SCR
 *
•
;

240 
EXCMD
 *
cmdp
;

242 
EX_PRIVATE
 *
exp
;

243 
TAG
 *
ç
;

244 
TAGQ
 *
tqp
;

246 
exp
 = 
	`EXP
(
•
);

247 i‡((
tqp
 = 
exp
->
tq
.
cqh_fú°
) == (*)&exp->tq) {

248 
	`èg_msg
(
•
, 
TAG_EMPTY
, 
NULL
);

251 i‡((
ç
 = 
tqp
->
cuºít
->
q
.
cqe_√xt
Ë=(*)&tqp->
ègq
) {

252 
	`msgq
(
•
, 
M_ERR
, "282|AlreadyátÅheÜastÅag ofÅhis group");

255 i‡(
	`ex_èg_nswôch
(
•
, 
ç
, 
	`FL_ISSET
(
cmdp
->
iÊags
, 
E_C_FORCE
)))

257 
tqp
->
cuºít
 = 
ç
;

259 i‡(
	`F_ISSET
(
tqp
, 
TAG_CSCOPE
))

260 ()
	`csc›e_£¨ch
(
•
, 
tqp
, 
ç
);

262 ()
	`˘ag_£¨ch
(
•
, 
ç
->
£¨ch
,Åp->
¶í
, 
tqp
->
èg
);

264 
	}
}

273 
	$ex_èg_¥ev
(
•
, 
cmdp
)

274 
SCR
 *
•
;

275 
EXCMD
 *
cmdp
;

277 
EX_PRIVATE
 *
exp
;

278 
TAG
 *
ç
;

279 
TAGQ
 *
tqp
;

281 
exp
 = 
	`EXP
(
•
);

282 i‡((
tqp
 = 
exp
->
tq
.
cqh_fú°
) == (*)&exp->tq) {

283 
	`èg_msg
(
•
, 
TAG_EMPTY
, 
NULL
);

286 i‡((
ç
 = 
tqp
->
cuºít
->
q
.
cqe_¥ev
Ë=(*)&tqp->
ègq
) {

287 
	`msgq
(
•
, 
M_ERR
, "255|AlreadyátÅhe firstÅag ofÅhis group");

290 i‡(
	`ex_èg_nswôch
(
•
, 
ç
, 
	`FL_ISSET
(
cmdp
->
iÊags
, 
E_C_FORCE
)))

292 
tqp
->
cuºít
 = 
ç
;

294 i‡(
	`F_ISSET
(
tqp
, 
TAG_CSCOPE
))

295 ()
	`csc›e_£¨ch
(
•
, 
tqp
, 
ç
);

297 ()
	`˘ag_£¨ch
(
•
, 
ç
->
£¨ch
,Åp->
¶í
, 
tqp
->
èg
);

299 
	}
}

308 
	$ex_èg_nswôch
(
•
, 
ç
, 
f‹˚
)

309 
SCR
 *
•
;

310 
TAG
 *
ç
;

311 
f‹˚
;

314 i‡(
ç
->
‰p
 =
NULL
 && (ç->‰∞
	`fûe_add
(
•
,Åp->
‚ame
)) == NULL)

318 i‡(
ç
->
‰p
 =
•
->frp)

322 i‡(
	`fûe_m1
(
•
, 
f‹˚
, 
FS_ALL
 | 
FS_POSSIBLE
))

326 i‡(
	`fûe_öô
(
•
, 
ç
->
‰p
, 
NULL
, 
FS_SETALT
))

330 
	`F_CLR
(
•
, 
SC_SCR_TOP
);

331 
	`F_SET
(
•
, 
SC_SCR_CENTER
);

334 
	`F_SET
(
•
, 
SC_FSWITCH
);

336 
	}
}

345 
	$ex_èg_Nswôch
(
•
, 
ç
, 
f‹˚
)

346 
SCR
 *
•
;

347 
TAG
 *
ç
;

348 
f‹˚
;

350 
SCR
 *
√w
;

353 i‡(
ç
->
‰p
 =
NULL
 && (ç->‰∞
	`fûe_add
(
•
,Åp->
‚ame
)) == NULL)

357 i‡(
	`s¸ìn_öô
(
•
->
gp
, sp, &
√w
))

359 i‡(
	`vs_•lô
(
•
, 
√w
, 0)) {

360 ()
	`fûe_íd
(
√w
,Çew->
ï
, 1);

361 ()
	`s¸ìn_íd
(
√w
);

366 i‡(
ç
->
‰p
 =
•
->frp) {

368 
√w
->
ï
 = 
•
->ep;

369 ++
√w
->
ï
->
ªf˙t
;

371 
√w
->
‰p
 = 
ç
->frp;

372 
√w
->
‰p
->
Êags
 = 
•
->frp->flags;

373 } i‡(
	`fûe_öô
(
√w
, 
ç
->
‰p
, 
NULL
, 
f‹˚
)) {

374 ()
	`vs_disˇrd
(
√w
, 
NULL
);

375 ()
	`s¸ìn_íd
(
√w
);

380 
√w
->
ˇrgv
 =Çew->
¨gv
 = 
	`ex_buûd¨gv
(
•
, 
NULL
, 
ç
->
‰p
->
«me
);

383 
	`F_CLR
(
√w
, 
SC_SCR_TOP
);

384 
	`F_SET
(
√w
, 
SC_SCR_CENTER
);

387 
•
->
√xtdi•
 = 
√w
;

388 
	`F_SET
(
•
, 
SC_SSWITCH
);

391 
	}
}

402 
	$ex_èg_p›
(
•
, 
cmdp
)

403 
SCR
 *
•
;

404 
EXCMD
 *
cmdp
;

406 
EX_PRIVATE
 *
exp
;

407 
TAGQ
 *
tqp
, *
dtqp
;

408 
size_t
 
¨gÀn
;

409 
off
;

410 *
¨g
, *
p
, *
t
;

413 
exp
 = 
	`EXP
(
•
);

414 i‡(
exp
->
tq
.
cqh_fú°
 == (*)&exp->tq) {

415 
	`èg_msg
(
•
, 
TAG_EMPTY
, 
NULL
);

420 
cmdp
->
¨gc
) {

422 
dtqp
 = 
exp
->
tq
.
cqh_fú°
;

425 
¨g
 = 
cmdp
->
¨gv
[0]->
bp
;

426 
off
 = 
	`°πﬁ
(
¨g
, &
p
, 10);

427 i‡(*
p
 != '\0')

428 
fûórg
;

431 i‡(
off
 < 1)

433 
tqp
 = 
exp
->
tq
.
cqh_fú°
;

434 
tqp
 !(*)&
exp
->
tq
 && --
off
 > 1;

435 
tqp
 =Åqp->
q
.
cqe_√xt
);

436 i‡(
tqp
 =(*)&
exp
->
tq
) {

437 
	`msgq
(
•
, 
M_ERR
,

439 
¨g
);

442 
dtqp
 = 
tqp
;

446 
fûórg
: 
¨gÀn
 = 
	`°æí
(
¨g
);

447 
tqp
 = 
exp
->
tq
.
cqh_fú°
;

448 
tqp
 !(*)&
exp
->
tq
;

449 
dtqp
 = 
tqp
,Åq∞tqp->
q
.
cqe_√xt
) {

451 i‡(
tqp
 =
exp
->
tq
.
cqh_fú°
)

453 
p
 = 
tqp
->
cuºít
->
‰p
->
«me
;

454 i‡((
t
 = 
	`°ºchr
(
p
, '/')Ë=
NULL
)

455 
t
 = 
p
;

457 ++
t
;

458 i‡(!
	`°∫cmp
(
¨g
, 
t
, 
¨gÀn
))

461 i‡(
tqp
 =(*)&
exp
->
tq
) {

462 
	`msgq_°r
(
•
, 
M_ERR
, 
¨g
,

466 i‡(
tqp
 =
exp
->
tq
.
cqh_fú°
)

470 
	`ab‹t
();

473  (
	`èg_p›
(
•
, 
dtqp
, 
	`FL_ISSET
(
cmdp
->
iÊags
, 
E_C_FORCE
)));

474 
	}
}

483 
	$ex_èg_t›
(
•
, 
cmdp
)

484 
SCR
 *
•
;

485 
EXCMD
 *
cmdp
;

487 
EX_PRIVATE
 *
exp
;

489 
exp
 = 
	`EXP
(
•
);

492 i‡(
exp
->
tq
.
cqh_fú°
 == (*)&exp->tq) {

493 
	`èg_msg
(
•
, 
TAG_EMPTY
, 
NULL
);

498  (
	`èg_p›
(
•
,

499 
exp
->
tq
.
cqh_œ°
->
q
.
cqe_¥ev
, 
	`FL_ISSET
(
cmdp
->
iÊags
, 
E_C_FORCE
)));

500 
	}
}

507 
	$èg_p›
(
•
, 
dtqp
, 
f‹˚
)

508 
SCR
 *
•
;

509 
TAGQ
 *
dtqp
;

510 
f‹˚
;

512 
EX_PRIVATE
 *
exp
;

513 
TAG
 *
ç
;

514 
TAGQ
 *
tqp
;

516 
exp
 = 
	`EXP
(
•
);

522 
ç
 = 
dtqp
->
q
.
cqe_√xt
->
cuºít
;

523 i‡(
ç
->
‰p
 =
•
->frp) {

524 
•
->
 o
 = 
ç
->lno;

525 
•
->
˙o
 = 
ç
->cno;

527 i‡(
	`fûe_m1
(
•
, 
f‹˚
, 
FS_ALL
 | 
FS_POSSIBLE
))

530 
ç
->
‰p
->
 o
 =Åp->lno;

531 
ç
->
‰p
->
˙o
 =Åp->cno;

532 
	`F_SET
(
•
->
‰p
, 
FR_CURSORSET
);

533 i‡(
	`fûe_öô
(
•
, 
ç
->
‰p
, 
NULL
, 
FS_SETALT
))

536 
	`F_SET
(
•
, 
SC_FSWITCH
);

541 
tqp
 = 
exp
->
tq
.
cqh_fú°
;

542 i‡(
	`ègq_‰ì
(
•
, 
tqp
))

544 } 
tqp
 !
dtqp
);

550 i‡(
exp
->
tq
.
cqh_fú°
->
q
.
cqe_√xt
 == (*)&exp->tq)

551 
	`ègq_‰ì
(
•
, 
exp
->
tq
.
cqh_fú°
);

554 
	}
}

563 
	$ex_èg_di•œy
(
•
)

564 
SCR
 *
•
;

566 
EX_PRIVATE
 *
exp
;

567 
TAG
 *
ç
;

568 
TAGQ
 *
tqp
;

569 
˙t
;

570 
size_t
 
Àn
;

571 *
p
, *
£p
;

573 
exp
 = 
	`EXP
(
•
);

574 i‡((
tqp
 = 
exp
->
tq
.
cqh_fú°
) == (*)&exp->tq) {

575 
	`èg_msg
(
•
, 
TAG_EMPTY
, 
NULL
);

589 
	#L_NAME
 30

	)

590 
	#L_SLOP
 4

	)

591 
	#L_SPACE
 5

	)

592 
	#L_TAG
 20

	)

593 i‡(
•
->
cﬁs
 <
L_NAME
 + 
L_SLOP
) {

594 
	`msgq
(
•
, 
M_ERR
, "292|DisplayÅoo small.");

602 
˙t
 = 1, 
tqp
 = 
exp
->
tq
.
cqh_fú°
; !
	`INTERRUPTED
(
•
) &&

603 
tqp
 !(*)&
exp
->
tq
; ++
˙t
,Åq∞tqp->
q
.
cqe_√xt
)

604 
ç
 = 
tqp
->
ègq
.
cqh_fú°
;

605 
ç
 !(*)&
tqp
->
ègq
;Å∞ç->
q
.
cqe_√xt
) {

606 i‡(
ç
 =
tqp
->
ègq
.
cqh_fú°
)

607 ()
	`ex_¥ötf
(
•
, "%2d ", 
˙t
);

609 ()
	`ex_¥ötf
(
•
, " ");

610 
p
 = 
ç
->
‰p
 =
NULL
 ?Åp->
‚ame
 :Åp->‰p->
«me
;

611 i‡((
Àn
 = 
	`°æí
(
p
)Ë> 
L_NAME
) {

612 
Àn
 =Üí - (
L_NAME
 - 4);

613 ()
	`ex_¥ötf
(
•
, " ... %*.*s",

614 
L_NAME
 - 4, L_NAME - 4, 
p
 + 
Àn
);

616 ()
	`ex_¥ötf
(
•
,

617 " %*.*s", 
L_NAME
, L_NAME, 
p
);

618 i‡(
tqp
->
cuºít
 =
ç
)

619 ()
	`ex_¥ötf
(
•
, "*");

621 i‡(
ç
 =
tqp
->
ègq
.
cqh_fú°
 &&Åqp->
èg
 !
NULL
 &&

622 (
•
->
cﬁs
 - 
L_NAME
Ë>
L_TAG
 + 
L_SPACE
) {

623 
Àn
 = 
	`°æí
(
tqp
->
èg
);

624 i‡(
Àn
 > 
•
->
cﬁs
 - (
L_NAME
 + 
L_SPACE
))

625 
Àn
 = 
•
->
cﬁs
 - (
L_NAME
 + 
L_SPACE
);

626 ()
	`ex_¥ötf
(
•
, "%s%.*s",

627 
tqp
->
cuºít
 =
ç
 ? " " : " ",

628 ()
Àn
, 
tqp
->
èg
);

630 ()
	`ex_¥ötf
(
•
, "\n");

633 
	}
}

642 
	$ex_èg_c›y
(
‹ig
, 
•
)

643 
SCR
 *
‹ig
, *
•
;

645 
EX_PRIVATE
 *
€xp
, *
√xp
;

646 
TAGQ
 *
aqp
, *
tqp
;

647 
TAG
 *
≠
, *
ç
;

648 
TAGF
 *
©Â
, *
tÂ
;

650 
€xp
 = 
	`EXP
(
‹ig
);

651 
√xp
 = 
	`EXP
(
•
);

654 
aqp
 = 
€xp
->
tq
.
cqh_fú°
;

655 
aqp
 !(*)&
€xp
->
tq
;áq∞aqp->
q
.
cqe_√xt
) {

656 i‡(
	`ègq_c›y
(
•
, 
aqp
, &
tqp
))

658 
≠
 = 
aqp
->
ègq
.
cqh_fú°
;

659 
≠
 !(*)&
aqp
->
ègq
;á∞≠->
q
.
cqe_√xt
) {

660 i‡(
	`èg_c›y
(
•
, 
≠
, &
ç
))

663 i‡(
aqp
->
cuºít
 =
≠
)

664 
tqp
->
cuºít
 = 
ç
;

665 
	`CIRCLEQ_INSERT_TAIL
(&
tqp
->
ègq
, 
ç
, 
q
);

667 
	`CIRCLEQ_INSERT_TAIL
(&
√xp
->
tq
, 
tqp
, 
q
);

671 
©Â
 = 
€xp
->
ègfq
.
tqh_fú°
;

672 
©Â
 !
NULL
;átÂ =átÂ->
q
.
tqe_√xt
) {

673 i‡(
	`ègf_c›y
(
•
, 
©Â
, &
tÂ
))

675 
	`TAILQ_INSERT_TAIL
(&
√xp
->
ègfq
, 
tÂ
, 
q
);

679 i‡(
€xp
->
èg_œ°
 !
NULL
 &&

680 (
√xp
->
èg_œ°
 = 
	`°rdup
(
€xp
->èg_œ°)Ë=
NULL
) {

681 
	`msgq
(
•
, 
M_SYSERR
, 
NULL
);

685 
	}
}

692 
	$ègf_c›y
(
•
, 
ŸÂ
, 
tÂp
)

693 
SCR
 *
•
;

694 
TAGF
 *
ŸÂ
, **
tÂp
;

696 
TAGF
 *
tÂ
;

698 
	`MALLOC_RET
(
•
, 
tÂ
, 
TAGF
 *, (TAGF));

699 *
tÂ
 = *
ŸÂ
;

702 i‡((
tÂ
->
«me
 = 
	`°rdup
(
ŸÂ
->«me)Ë=
NULL
)

705 *
tÂp
 = 
tÂ
;

707 
	}
}

714 
	$ègq_c›y
(
•
, 
Ÿqp
, 
tqµ
)

715 
SCR
 *
•
;

716 
TAGQ
 *
Ÿqp
, **
tqµ
;

718 
TAGQ
 *
tqp
;

719 
size_t
 
Àn
;

721 
Àn
 = (
TAGQ
);

722 i‡(
Ÿqp
->
èg
 !
NULL
)

723 
Àn
 +
Ÿqp
->
éí
 + 1;

724 
	`MALLOC_RET
(
•
, 
tqp
, 
TAGQ
 *, 
Àn
);

725 
	`mem˝y
(
tqp
, 
Ÿqp
, 
Àn
);

727 
	`CIRCLEQ_INIT
(&
tqp
->
ègq
);

728 
tqp
->
cuºít
 = 
NULL
;

729 i‡(
Ÿqp
->
èg
 !
NULL
)

730 
tqp
->
èg
 =Åqp->
buf
;

732 *
tqµ
 = 
tqp
;

734 
	}
}

741 
	$èg_c›y
(
•
, 
Ÿp
, 
çp
)

742 
SCR
 *
•
;

743 
TAG
 *
Ÿp
, **
çp
;

745 
TAG
 *
ç
;

746 
size_t
 
Àn
;

748 
Àn
 = (
TAG
);

749 i‡(
Ÿp
->
‚ame
 !
NULL
)

750 
Àn
 +
Ÿp
->
‚Àn
 + 1;

751 i‡(
Ÿp
->
£¨ch
 !
NULL
)

752 
Àn
 +
Ÿp
->
¶í
 + 1;

753 
	`MALLOC_RET
(
•
, 
ç
, 
TAG
 *, 
Àn
);

754 
	`mem˝y
(
ç
, 
Ÿp
, 
Àn
);

756 i‡(
Ÿp
->
‚ame
 !
NULL
)

757 
ç
->
‚ame
 =Åp->
buf
;

758 i‡(
Ÿp
->
£¨ch
 !
NULL
)

759 
ç
->
£¨ch
 =Åp->
‚ame
 + 
Ÿp
->
‚Àn
 + 1;

761 *
çp
 = 
ç
;

763 
	}
}

770 
	$ègf_‰ì
(
•
, 
tÂ
)

771 
SCR
 *
•
;

772 
TAGF
 *
tÂ
;

774 
EX_PRIVATE
 *
exp
;

776 
exp
 = 
	`EXP
(
•
);

777 
	`TAILQ_REMOVE
(&
exp
->
ègfq
, 
tÂ
, 
q
);

778 
	`‰ì
(
tÂ
->
«me
);

779 
	`‰ì
(
tÂ
);

781 
	}
}

790 
	$ègq_‰ì
(
•
, 
tqp
)

791 
SCR
 *
•
;

792 
TAGQ
 *
tqp
;

794 
EX_PRIVATE
 *
exp
;

795 
TAG
 *
ç
;

797 
exp
 = 
	`EXP
(
•
);

798 (
ç
 = 
tqp
->
ègq
.
cqh_fú°
) != (*)&tqp->tagq) {

799 
	`CIRCLEQ_REMOVE
(&
tqp
->
ègq
, 
ç
, 
q
);

800 
	`‰ì
(
ç
);

807 i‡(
tqp
->
q
.
cqe_√xt
 !
NULL
)

808 
	`CIRCLEQ_REMOVE
(&
exp
->
tq
, 
tqp
, 
q
);

809 
	`‰ì
(
tqp
);

811 
	}
}

820 
	$èg_msg
(
•
, 
msg
, 
èg
)

821 
SCR
 *
•
;

822 
ègmsg_t
 
msg
;

823 *
èg
;

825 
msg
) {

826 
TAG_BADLNO
:

827 
	`msgq_°r
(
•
, 
M_ERR
, 
èg
,

830 
TAG_EMPTY
:

831 
	`msgq
(
•
, 
M_INFO
, "165|TheÅags stack isÉmpty");

833 
TAG_SEARCH
:

834 
	`msgq_°r
(
•
, 
M_ERR
, 
èg
, "166|%s: searchÖatternÇot found");

837 
	`ab‹t
();

839 
	}
}

848 
	$ex_ègf_Æloc
(
•
, 
°r
)

849 
SCR
 *
•
;

850 *
°r
;

852 
EX_PRIVATE
 *
exp
;

853 
TAGF
 *
tÂ
;

854 
size_t
 
Àn
;

855 *
p
, *
t
;

858 
exp
 = 
	`EXP
(
•
);

859 (
tÂ
 = 
exp
->
ègfq
.
tqh_fú°
Ë!
NULL
)

860 
	`ègf_‰ì
(
•
, 
tÂ
);

863 
p
 = 
t
 = 
°r
;; ++p) {

864 i‡(*
p
 ='\0' || 
	`isbœnk
(*p)) {

865 i‡((
Àn
 = 
p
 - 
t
) > 1) {

866 
	`MALLOC_RET
(
•
, 
tÂ
, 
TAGF
 *, (TAGF));

867 
	`MALLOC
(
•
, 
tÂ
->
«me
, *, 
Àn
 + 1);

868 i‡(
tÂ
->
«me
 =
NULL
) {

869 
	`‰ì
(
tÂ
);

872 
	`mem˝y
(
tÂ
->
«me
, 
t
, 
Àn
);

873 
tÂ
->
«me
[
Àn
] = '\0';

874 
tÂ
->
Êags
 = 0;

875 
	`TAILQ_INSERT_TAIL
(&
exp
->
ègfq
, 
tÂ
, 
q
);

877 
t
 = 
p
 + 1;

879 i‡(*
p
 == '\0')

883 
	}
}

892 
	$ex_èg_‰ì
(
•
)

893 
SCR
 *
•
;

895 
EX_PRIVATE
 *
exp
;

896 
TAGF
 *
tÂ
;

897 
TAGQ
 *
tqp
;

900 
exp
 = 
	`EXP
(
•
);

901 (
tqp
 = 
exp
->
tq
.
cqh_fú°
) != (*)&exp->tq)

902 
	`ègq_‰ì
(
•
, 
tqp
);

903 (
tÂ
 = 
exp
->
ègfq
.
tqh_fú°
Ë!
NULL
)

904 
	`ègf_‰ì
(
•
, 
tÂ
);

905 i‡(
exp
->
èg_œ°
 !
NULL
)

906 
	`‰ì
(
exp
->
èg_œ°
);

908 
	}
}

915 
	$˘ag_£¨ch
(
•
, 
£¨ch
, 
¶í
, 
èg
)

916 
SCR
 *
•
;

917 *
£¨ch
, *
èg
;

918 
size_t
 
¶í
;

920 
MARK
 
m
;

921 *
p
;

929 i‡(
	`isdigô
(
£¨ch
[0])) {

930 
m
.
 o
 = 
	`©oi
(
£¨ch
);

931 i‡(!
	`db_exi°
(
•
, 
m
.
 o
)) {

932 
	`èg_msg
(
•
, 
TAG_BADLNO
, 
èg
);

940 
m
.
 o
 = 1;

941 
m
.
˙o
 = 0;

942 i‡(
	`f_£¨ch
(
•
, &
m
, &m,

943 
£¨ch
, 
¶í
, 
NULL
, 
SEARCH_FILE
 | 
SEARCH_TAG
))

944 i‡((
p
 = 
	`°ºchr
(
£¨ch
, '(')Ë!
NULL
) {

945 
¶í
 = 
p
 - 
£¨ch
;

946 i‡(
	`f_£¨ch
(
•
, &
m
, &m, 
£¨ch
, 
¶í
,

947 
NULL
, 
SEARCH_FILE
 | 
SEARCH_TAG
))

948 
nŸfound
;

950 
nŸfound
: 
	`èg_msg
(
•
, 
TAG_SEARCH
, 
èg
);

958 i‡(
•
->
£¨chdú
 =
NOTSET
)

959 
•
->
£¨chdú
 = 
FORWARD
;

966 
•
->
 o
 = 
m
.lno;

967 
•
->
˙o
 = 0;

968 ()
	`n⁄bœnk
(
•
, sp->
 o
, &•->
˙o
);

970 
	}
}

976 
TAGQ
 *

977 
	$˘ag_¶i°
(
•
, 
èg
)

978 
SCR
 *
•
;

979 *
èg
;

981 
EX_PRIVATE
 *
exp
;

982 
TAGF
 *
tÂ
;

983 
TAGQ
 *
tqp
;

984 
size_t
 
Àn
;

985 
echk
;

987 
exp
 = 
	`EXP
(
•
);

990 
Àn
 = 
	`°æí
(
èg
);

991 
	`CALLOC_GOTO
(
•
, 
tqp
, 
TAGQ
 *, 1, (TAGQË+ 
Àn
 + 1);

992 
	`CIRCLEQ_INIT
(&
tqp
->
ègq
);

993 
tqp
->
èg
 =Åqp->
buf
;

994 
	`mem˝y
(
tqp
->
èg
,Åag, (tqp->
éí
 = 
Àn
) + 1);

1000 
echk
 = 0,

1001 
tÂ
 = 
exp
->
ègfq
.
tqh_fú°
;ÅÂ !
NULL
;ÅÂ =ÅÂ->
q
.
tqe_√xt
)

1002 i‡(
	`˘ag_sfûe
(
•
, 
tÂ
, 
tqp
, 
èg
)) {

1003 
echk
 = 1;

1004 
	`F_SET
(
tÂ
, 
TAGF_ERR
);

1006 
	`F_CLR
(
tÂ
, 
TAGF_ERR
 | 
TAGF_ERR_WARN
);

1009 i‡(
tqp
->
ègq
.
cqh_fú°
 == (*)&tqp->tagq) {

1010 
	`msgq_°r
(
•
, 
M_ERR
, 
èg
, "162|%s:ÅagÇot found");

1011 i‡(
echk
)

1012 
tÂ
 = 
exp
->
ègfq
.
tqh_fú°
;

1013 
tÂ
 !
NULL
;ÅÂ =ÅÂ->
q
.
tqe_√xt
)

1014 i‡(
	`F_ISSET
(
tÂ
, 
TAGF_ERR
) &&

1015 !
	`F_ISSET
(
tÂ
, 
TAGF_ERR_WARN
)) {

1016 
î∫o
 = 
tÂ
->
î∫um
;

1017 
	`msgq_°r
(
•
, 
M_SYSERR
, 
tÂ
->
«me
, "%s");

1018 
	`F_SET
(
tÂ
, 
TAGF_ERR_WARN
);

1020 
	`‰ì
(
tqp
);

1021  (
NULL
);

1024 
tqp
->
cuºít
 =Åqp->
ègq
.
cqh_fú°
;

1025  (
tqp
);

1027 
Æloc_îr
:

1028  (
NULL
);

1029 
	}
}

1036 
	$˘ag_sfûe
(
•
, 
tÂ
, 
tqp
, 
äame
)

1037 
SCR
 *
•
;

1038 
TAGF
 *
tÂ
;

1039 
TAGQ
 *
tqp
;

1040 *
äame
;

1042 
°©
 
sb
;

1043 
TAG
 *
ç
;

1044 
size_t
 
dÀn
, 
∆í
, 
¶í
;

1045 
fd
, 
i
, 
nf1
, 
nf2
;

1046 *
back
, *
˙ame
, *
d«me
, *
‰⁄t
, *
m≠
, *
«me
, *
p
, *
£¨ch
, *
t
;

1048 i‡((
fd
 = 
	`›í
(
tÂ
->
«me
, 
O_RDONLY
, 0)) < 0) {

1049 
tÂ
->
î∫um
 = 
î∫o
;

1058 #i‚de‡
MAP_FILE


1059 
	#MAP_FILE
 0

	)

1069 i‡(
	`f°©
(
fd
, &
sb
) != 0 ||

1070 (
m≠
 = 
	`mm≠
(
NULL
, (
size_t
)
sb
.
°_size
, 
PROT_READ
 | 
PROT_WRITE
,

1071 
MAP_FILE
 | 
MAP_PRIVATE
, 
fd
, (
off_t
)0)Ë=(
ˇddr_t
)-1) {

1072 
tÂ
->
î∫um
 = 
î∫o
;

1073 ()
	`˛o£
(
fd
);

1077 
‰⁄t
 = 
m≠
;

1078 
back
 = 
‰⁄t
 + 
sb
.
°_size
;

1079 
‰⁄t
 = 
	`bö¨y_£¨ch
(
äame
, fr⁄t, 
back
);

1080 
‰⁄t
 = 
	`löór_£¨ch
(
äame
, fr⁄t, 
back
);

1081 i‡(
‰⁄t
 =
NULL
)

1082 
d⁄e
;

1103 
p
 = 
‰⁄t
;Ö < 
back
 && *p != '\n'; ++p);

1104 i‡(
p
 =
back
 || *p != '\n')

1106 *
p
 = '\0';

1109 
t
 = 
p
 + 1;

1110 
p
 = 
‰⁄t
;

1111 
‰⁄t
 = 
t
;

1114 
i
 = 0; i < 2 && (
t
 = 
	`°r£p
(&
p
, "\à")Ë!
NULL
; ++i)

1115 
i
) {

1117 
˙ame
 = 
t
;

1120 
«me
 = 
t
;

1121 
∆í
 = 
	`°æí
(
«me
);

1126 i‡(
i
 !2 || 
p
 =
NULL
 || 
t
 == NULL)

1127 
c‹ru±
;

1130 
£¨ch
 = 
p
;

1131 i‡((
¶í
 = 
	`°æí
(
p
)) == 0) {

1132 
c‹ru±
: 
p
 = 
	`msg_¥öt
(
•
, 
äame
, &
nf1
);

1133 
t
 = 
	`msg_¥öt
(
•
, 
tÂ
->
«me
, &
nf2
);

1134 
	`msgq
(
•
, 
M_ERR
, "163|%s: c‹ru±edÅag i¿%s", 
p
, 
t
);

1135 i‡(
nf1
)

1136 
	`FREE_SPACE
(
•
, 
p
, 0);

1137 i‡(
nf2
)

1138 
	`FREE_SPACE
(
•
, 
t
, 0);

1143 i‡(
	`°rcmp
(
äame
, 
˙ame
))

1147 
	`˘ag_fûe
(
•
, 
tÂ
, 
«me
, &
d«me
, &
dÀn
);

1149 
	`CALLOC_GOTO
(
•
, 
ç
,

1150 
TAG
 *, 1, (TAGË+ 
dÀn
 + 2 + 
∆í
 + 1 + 
¶í
 + 1);

1151 
ç
->
‚ame
 =Åp->
buf
;

1152 i‡(
dÀn
 != 0) {

1153 
	`mem˝y
(
ç
->
‚ame
, 
d«me
, 
dÀn
);

1154 
ç
->
‚ame
[
dÀn
] = '/';

1155 ++
dÀn
;

1157 
	`mem˝y
(
ç
->
‚ame
 + 
dÀn
, 
«me
, 
∆í
 + 1);

1158 
ç
->
‚Àn
 = 
dÀn
 + 
∆í
;

1159 
ç
->
£¨ch
 =Åp->
‚ame
 +Åp->
‚Àn
 + 1;

1160 
	`mem˝y
(
ç
->
£¨ch
, sórch, (ç->
¶í
 = slen) + 1);

1161 
	`CIRCLEQ_INSERT_TAIL
(&
tqp
->
ègq
, 
ç
, 
q
);

1164 
Æloc_îr
:

1165 
d⁄e
: i‡(
	`munm≠
(
m≠
, (
size_t
)
sb
.
°_size
))

1166 
	`msgq
(
•
, 
M_SYSERR
, "munmap");

1167 i‡(
	`˛o£
(
fd
))

1168 
	`msgq
(
•
, 
M_SYSERR
, "close");

1170 
	}
}

1177 
	$˘ag_fûe
(
•
, 
tÂ
, 
«me
, 
dúp
, 
dÀ≈
)

1178 
SCR
 *
•
;

1179 
TAGF
 *
tÂ
;

1180 *
«me
, **
dúp
;

1181 
size_t
 *
dÀ≈
;

1183 
°©
 
sb
;

1184 
size_t
 
Àn
;

1185 *
p
, 
buf
[
MAXPATHLEN
];

1195 *
dÀ≈
 = 0;

1196 i‡(
«me
[0] != '/' &&

1197 
	`°©
(
«me
, &
sb
Ë&& (
p
 = 
	`°ºchr
(
tÂ
->«me, '/')Ë!
NULL
) {

1198 *
p
 = '\0';

1199 
Àn
 = 
	`¢¥ötf
(
buf
, (buf), "%s/%s", 
tÂ
->
«me
,Çame);

1200 *
p
 = '/';

1201 i‡(
	`°©
(
buf
, &
sb
) == 0) {

1202 *
dúp
 = 
tÂ
->
«me
;

1203 *
dÀ≈
 = 
	`°æí
(*
dúp
);

1206 
	}
}

1246 
	#EQUAL
 0

	)

1247 
	#GREATER
 1

	)

1248 
	#LESS
 (-1)

	)

1250 
	#SKIP_PAST_NEWLINE
(
p
, 
back
Ë∞< back && *p++ !'\n');

	)

1253 
	$bö¨y_£¨ch
(
°rög
, 
‰⁄t
, 
back
)

1254 *
°rög
, *
‰⁄t
, *
back
;

1256 *
p
;

1258 
p
 = 
‰⁄t
 + (
back
 - front) / 2;

1259 
	`SKIP_PAST_NEWLINE
(
p
, 
back
);

1261 
p
 !
back
) {

1262 i‡(
	`com∑ª
(
°rög
, 
p
, 
back
Ë=
GREATER
)

1263 
‰⁄t
 = 
p
;

1265 
back
 = 
p
;

1266 
p
 = 
‰⁄t
 + (
back
 - front) / 2;

1267 
	`SKIP_PAST_NEWLINE
(
p
, 
back
);

1269  (
‰⁄t
);

1270 
	}
}

1284 
	$löór_£¨ch
(
°rög
, 
‰⁄t
, 
back
)

1285 *
°rög
, *
‰⁄t
, *
back
;

1287 
‰⁄t
 < 
back
) {

1288 
	`com∑ª
(
°rög
, 
‰⁄t
, 
back
)) {

1289 
EQUAL
:

1290  (
‰⁄t
);

1291 
LESS
:

1292  (
NULL
);

1293 
GREATER
:

1296 
	`SKIP_PAST_NEWLINE
(
‰⁄t
, 
back
);

1298  (
NULL
);

1299 
	}
}

1316 
	$com∑ª
(
s1
, 
s2
, 
back
)

1317 *
s1
, *
s2
, *
back
;

1319 ; *
s1
 && 
s2
 < 
back
 && (*s2 != '\t' && *s2 != ' '); ++s1, ++s2)

1320 i‡(*
s1
 !*
s2
)

1321  (*
s1
 < *
s2
 ? 
LESS
 : 
GREATER
);

1322  (*
s1
 ? 
GREATER
 : 
s2
 < 
back
 &&

1323 (*
s2
 !'\t' && *s2 !' 'Ë? 
LESS
 : 
EQUAL
);

1324 
	}
}

	@ex/ex_tcl.c

12 
	~"c⁄fig.h
"

14 #i‚de‡
löt


15 c⁄° 
	gsccsid
[] = "@(#)ex_tcl.c 8.10 (Berkeley) 9/15/96";

18 
	~<sys/ty≥s.h
>

19 
	~<sys/queue.h
>

21 
	~<bô°rög.h
>

22 
	~<limôs.h
>

23 
	~<°dio.h
>

24 
	~<°rög.h
>

25 
	~<ãrmios.h
>

26 
	~<uni°d.h
>

28 
	~"../comm⁄/comm⁄.h
"

30 #ifde‡
HAVE_TCL_INTERP


31 
	~<t˛.h
>

41 
	$ex_t˛
(
•
, 
cmdp
)

42 
SCR
 *
•
;

43 
EXCMD
 *
cmdp
;

45 #ifde‡
HAVE_TCL_INTERP


46 
CHAR_T
 *
p
;

47 
GS
 *
gp
;

48 
size_t
 
Àn
;

49 
buf
[128];

52 
gp
 = 
•
->gp;

53 i‡(
gp
->
t˛_öãΩ
 =
NULL
 && 
	`t˛_öô
(gp))

57 i‡(
cmdp
->
¨gc
 != 0)

58 
p
 = 
cmdp
->
¨gv
[0]->
bp
,

59 
Àn
 = 
cmdp
->
¨gv
[0]->Àn;Üí > 0; --Àn, ++
p
)

60 i‡(!
	`isbœnk
(*
p
))

62 i‡(
cmdp
->
¨gc
 =0 || 
Àn
 == 0) {

63 
	`ex_emsg
(
•
, 
cmdp
->
cmd
->
ußge
, 
EXM_USAGE
);

67 ()
	`¢¥ötf
(
buf
, (buf),

69 
•
->
id
, 
cmdp
->
addr1
.
 o
, cmdp->
addr2
.lno);

70 i‡(
	`T˛_EvÆ
(
gp
->
t˛_öãΩ
, 
buf
Ë=
TCL_OK
 &&

71 
	`T˛_EvÆ
(
gp
->
t˛_öãΩ
, 
cmdp
->
¨gv
[0]->
bp
Ë=
TCL_OK
)

74 
	`msgq
(
•
, 
M_ERR
, "T˛: %s", ((
T˛_I¡îp
 *)
gp
->
t˛_öãΩ
)->
ªsu…
);

77 
	`msgq
(
•
, 
M_ERR
, "302|Vi wasÇotÜoaded withá Tcl interpreter");

80 
	}
}

	@ex/ex_txt.c

10 
	~"c⁄fig.h
"

12 #i‚de‡
löt


13 c⁄° 
	gsccsid
[] = "@(#)ex_txt.c 10.17 (Berkeley) 10/10/96";

16 
	~<sys/ty≥s.h
>

17 
	~<sys/queue.h
>

19 
	~<bô°rög.h
>

20 
	~<˘y≥.h
>

21 
	~<limôs.h
>

22 
	~<°dio.h
>

23 
	~<°dlib.h
>

24 
	~<°rög.h
>

26 
	~"../comm⁄/comm⁄.h
"

45 
txt_dít
 
__P
((
SCR
 *, 
TEXT
 *));

46 
txt_¥om±
 
__P
((
SCR
 *, 
TEXT
 *, 
ARG_CHAR_T
, 
u_öt32_t
));

55 
	$ex_txt
(
•
, 
tiqh
, 
¥om±
, 
Êags
)

56 
SCR
 *
•
;

57 
TEXTH
 *
tiqh
;

58 
ARG_CHAR_T
 
¥om±
;

59 
u_öt32_t
 
Êags
;

61 
EVENT
 
ev
;

62 
GS
 *
gp
;

63 
TEXT
 
aô
, *
¡p
, *
ç
;

64 
ˇøt_t
 
ˇøt_°
;

65 
size_t
 
˙t
;

66 
rvÆ
;

68 
rvÆ
 = 0;

75 i‡(
tiqh
->
cqh_fú°
 != (*)tiqh) {

76 
ç
 = 
tiqh
->
cqh_fú°
;

77 i‡(
ç
->
q
.
cqe_√xt
 !(*)
tiqh
 ||Åp->
lb_Àn
 < 32) {

78 
	`ãxt_l‰ì
(
tiqh
);

79 
√wç
;

81 
ç
->
Àn
 = 0;

83 
√wç
: i‡((
ç
 = 
	`ãxt_öô
(
•
, 
NULL
, 0, 32)) == NULL)

84 
îr
;

85 
	`CIRCLEQ_INSERT_HEAD
(
tiqh
, 
ç
, 
q
);

89 
ç
->
 o
 = 
•
->lno + 1;

103 
gp
 = 
•
->gp;

104 i‡(
	`F_ISSET
(
gp
, 
G_SCRIPTED
))

105 
	`LF_CLR
(
TXT_AUTOINDENT
);

107 i‡(
	`LF_ISSET
(
TXT_AUTOINDENT
)) {

108 
	`LF_SET
(
TXT_EOFCHAR
);

109 i‡(
	`v_txt_auto
(
•
, sp->
 o
, 
NULL
, 0, 
ç
))

110 
îr
;

112 
	`txt_¥om±
(
•
, 
ç
, 
¥om±
, 
Êags
);

115 
ˇøt_°
 = 
C_NOTSET
;;) {

116 i‡(
	`v_evít_gë
(
•
, &
ev
, 0, 0))

117 
îr
;

120 
ev
.
e_evít
) {

121 
E_CHARACTER
:

123 
E_ERR
:

124 
îr
;

125 
E_REPAINT
:

126 
E_WRESIZE
:

128 
E_EOF
:

129 
rvÆ
 = 1;

131 
E_INTERRUPT
:

137 
nŸœ°
;

139 
	`v_evít_îr
(
•
, &
ev
);

140 
nŸœ°
;

149 
	`BINC_GOTO
(
•
, 
ç
->
lb
,Åp->
lb_Àn
,Åp->
Àn
 + 1);

151 
ev
.
e_vÆue
) {

152 
K_CR
:

162 i‡(!
	`F_ISSET
(&
ev
.
e_ch
, 
CH_MAPPED
))

163 
ös_ch
;

165 
K_NL
:

171 i‡(
	`LF_ISSET
(
TXT_BACKSLASH
) &&

172 
ç
->
Àn
 !0 &&Åp->
lb
[tp->len - 1] == '\\')

173 
ös_ch
;

181 i‡(
	`LF_ISSET
(
TXT_CR
)) {

182 
ç
->
lb
[ç->
Àn
] = '\0';

183 
d⁄e
;

190 i‡(
	`LF_ISSET
(
TXT_DOTTERM
Ë&& 
ç
->
Àn
 =ç->
ai
 + 1 &&

191 
ç
->
lb
[ç->
Àn
 - 1] == '.') {

192 
nŸœ°
: 
	`CIRCLEQ_REMOVE
(
tiqh
, 
ç
, 
q
);

193 
	`ãxt_‰ì
(
ç
);

194 
d⁄e
;

198 i‡((
¡p
 = 
	`ãxt_öô
(
•
, 
NULL
, 0, 32)) == NULL)

199 
îr
;

200 
¡p
->
 o
 = 
ç
->lno + 1;

210 i‡(
	`LF_ISSET
(
TXT_AUTOINDENT
)) {

211 i‡(
ˇøt_°
 =
C_NOCHANGE
) {

212 i‡(
	`v_txt_auto
(
•
,

213 
OOBLNO
, &
aô
,áô.
ai
, 
¡p
))

214 
îr
;

215 
	`‰ì
(
aô
.
lb
);

217 i‡(
	`v_txt_auto
(
•
,

218 
OOBLNO
, 
ç
,Åp->
Àn
, 
¡p
))

219 
îr
;

220 
ˇøt_°
 = 
C_NOTSET
;

222 
	`txt_¥om±
(
•
, 
¡p
, 
¥om±
, 
Êags
);

228 
ç
 = 
¡p
;

229 
	`CIRCLEQ_INSERT_TAIL
(
tiqh
, 
ç
, 
q
);

231 
K_CARAT
:

232 i‡(
ç
->
Àn
 <ç->
ai
 && 
	`LF_ISSET
(
TXT_AUTOINDENT
))

233 
ˇøt_°
 = 
C_CARATSET
;

234 
ös_ch
;

235 
K_ZERO
:

236 i‡(
ç
->
Àn
 <ç->
ai
 && 
	`LF_ISSET
(
TXT_AUTOINDENT
))

237 
ˇøt_°
 = 
C_ZEROSET
;

238 
ös_ch
;

239 
K_CNTRLD
:

247 i‡(
	`LF_ISSET
(
TXT_CNTRLD
)) {

248 
˙t
 = 0; c¡ < 
ç
->
Àn
; ++cnt)

249 i‡(!
	`isbœnk
(
ç
->
lb
[
˙t
]))

251 i‡(
˙t
 =
ç
->
Àn
) {

252 
ç
->
Àn
 = 1;

253 
ç
->
lb
[0] = 
ev
.
e_c
;

254 
ç
->
lb
[1] = '\0';

260 ()
	`putch¨
('\n');

261 
d⁄e
;

284 i‡(!
	`LF_ISSET
(
TXT_AUTOINDENT
Ë|| 
ç
->
Àn
 == 0)

286 
ˇøt_°
) {

287 
C_CARATSET
:

288 i‡(
ç
->
Àn
 >Åp->
ai
 + 1)

292 
aô
.
lb
 = 
NULL
;

293 
aô
.
lb_Àn
 = 0;

294 
	`BINC_GOTO
(
•
, 
aô
.
lb
,áô.
lb_Àn
, 
ç
->
ai
);

295 
	`mem˝y
(
aô
.
lb
, 
ç
->lb,Åp->
ai
);

296 
aô
.
ai
 =áô.
Àn
 = 
ç
->ai;

298 
ˇøt_°
 = 
C_NOCHANGE
;

299 
À·m¨gö
;

300 
C_ZEROSET
:

301 i‡(
ç
->
Àn
 >Åp->
ai
 + 1)

304 
ˇøt_°
 = 
C_NOTSET
;

305 
À·m¨gö
: ()
gp
->
	`s¸_ex_adju°
(
•
, 
EX_TERM_CE
);

306 
ç
->
ai
 =Åp->
Àn
 = 0;

308 
C_NOTSET
:

309 i‡(
ç
->
Àn
 >Åp->
ai
)

312 i‡(
	`txt_dít
(
•
, 
ç
))

313 
îr
;

316 
	`ab‹t
();

320 ()
gp
->
	`s¸_ex_adju°
(
•
, 
EX_TERM_CE
);

321 
	`txt_¥om±
(
•
, 
ç
, 
¥om±
, 
Êags
);

331 
ös_ch
: i‡(
	`LF_ISSET
(
TXT_BEAUTIFY
Ë&& 
	`is˙ål
(
ev
.
e_c
) &&

332 
ev
.
e_vÆue
 !
K_FORMFEED
 &&Év.e_vÆuê!
K_TAB
)

335 
ç
->
lb
[ç->
Àn
++] = 
ev
.
e_c
;

341 
d⁄e
:  (
rvÆ
);

343 
îr
:

344 
Æloc_îr
:

346 
	}
}

355 
	$txt_¥om±
(
•
, 
ç
, 
¥om±
, 
Êags
)

356 
SCR
 *
•
;

357 
TEXT
 *
ç
;

358 
ARG_CHAR_T
 
¥om±
;

359 
u_öt32_t
 
Êags
;

362 i‡(
	`LF_ISSET
(
TXT_PROMPT
))

363 ()
	`¥ötf
("%c", 
¥om±
);

366 i‡(
	`LF_ISSET
(
TXT_NUMBER
Ë&& 
	`O_ISSET
(
•
, 
O_NUMBER
))

367 ()
	`¥ötf
("%6lu ", (
u_l⁄g
)
ç
->
 o
);

370 i‡(
	`LF_ISSET
(
TXT_AUTOINDENT
))

371 ()
	`¥ötf
("%.*s", ()
ç
->
ai
,Åp->
lb
);

372 ()
	`fÊush
(
°dout
);

373 
	}
}

383 
	$txt_dít
(
•
, 
ç
)

384 
SCR
 *
•
;

385 
TEXT
 *
ç
;

387 
u_l⁄g
 
sw
, 
ts
;

388 
size_t
 
˙o
, 
off
, 
s˙o
, 
•a˚s
, 
èbs
;

390 
ts
 = 
	`O_VAL
(
•
, 
O_TABSTOP
);

391 
sw
 = 
	`O_VAL
(
•
, 
O_SHIFTWIDTH
);

394 
off
 = 
s˙o
 = 0; of‡< 
ç
->
Àn
; ++off)

395 i‡(
ç
->
lb
[
off
] == '\t')

396 
s˙o
 +
	`COL_OFF
(s˙o, 
ts
);

398 ++
s˙o
;

401 
˙o
 = 
s˙o
;

402 
s˙o
 ---s˙ÿ% 
sw
;

414 
˙o
 = 0, 
èbs
 = 0; cnÿ+ 
	`COL_OFF
(˙o, 
ts
Ë<
s˙o
; ++tabs)

415 
˙o
 +
	`COL_OFF
(˙o, 
ts
);

416 
•a˚s
 = 
s˙o
 - 
˙o
;

419 
	`BINC_RET
(
•
, 
ç
->
lb
,Åp->
lb_Àn
, 
èbs
 + 
•a˚s
 + 1);

422 
ç
->
ai
 = 
èbs
 + 
•a˚s
;

425 
ç
->
Àn
 = 0; 
èbs
 > 0; --tabs)

426 
ç
->
lb
[ç->
Àn
++] = '\t';

427 ; 
•a˚s
 > 0; --spaces)

428 
ç
->
lb
[ç->
Àn
++] = ' ';

430 
	}
}

	@ex/ex_undo.c

10 
	~"c⁄fig.h
"

12 #i‚de‡
löt


13 c⁄° 
	gsccsid
[] = "@(#)ex_undo.c 10.6 (Berkeley) 3/6/96";

16 
	~<sys/ty≥s.h
>

17 
	~<sys/queue.h
>

19 
	~<bô°rög.h
>

20 
	~<limôs.h
>

21 
	~<°dio.h
>

22 
	~<°dlib.h
>

24 
	~"../comm⁄/comm⁄.h
"

33 
	$ex_undo
(
•
, 
cmdp
)

34 
SCR
 *
•
;

35 
EXCMD
 *
cmdp
;

37 
EXF
 *
ï
;

38 
MARK
 
m
;

44 
m
.
 o
 = 
•
->lno;

45 
m
.
˙o
 = 
•
->cno;

46 i‡(
	`m¨k_£t
(
•
, 
ABSMARK1
, &
m
, 1))

55 
ï
 = 
•
->ep;

56 i‡(!
	`F_ISSET
(
ï
, 
F_UNDO
)) {

57 
	`F_SET
(
ï
, 
F_UNDO
);

58 
ï
->
lundo
 = 
FORWARD
;

60 
ï
->
lundo
) {

61 
BACKWARD
:

62 i‡(
	`log_f‹w¨d
(
•
, &
m
))

64 
ï
->
lundo
 = 
FORWARD
;

66 
FORWARD
:

67 i‡(
	`log_backw¨d
(
•
, &
m
))

69 
ï
->
lundo
 = 
BACKWARD
;

71 
NOTSET
:

72 
	`ab‹t
();

74 
•
->
 o
 = 
m
.lno;

75 
•
->
˙o
 = 
m
.cno;

77 
	}
}

	@ex/ex_usage.c

10 
	~"c⁄fig.h
"

12 #i‚de‡
löt


13 c⁄° 
	gsccsid
[] = "@(#)ex_usage.c 10.13 (Berkeley) 5/3/96";

16 
	~<sys/ty≥s.h
>

17 
	~<sys/queue.h
>

18 
	~<sys/time.h
>

20 
	~<bô°rög.h
>

21 
	~<˘y≥.h
>

22 
	~<limôs.h
>

23 
	~<°dio.h
>

24 
	~<°dlib.h
>

25 
	~<°rög.h
>

27 
	~"../comm⁄/comm⁄.h
"

28 
	~"../vi/vi.h
"

37 
	$ex_hñp
(
•
, 
cmdp
)

38 
SCR
 *
•
;

39 
EXCMD
 *
cmdp
;

41 ()
	`ex_puts
(
•
,

43 ()
	`ex_puts
(
•
,

45 ()
	`ex_puts
(
•
,

47 ()
	`ex_puts
(
•
,

49 ()
	`ex_puts
(
•
, "ToÉxit,Énter \":q!\"\n");

51 
	}
}

60 
	$ex_ußge
(
•
, 
cmdp
)

61 
SCR
 *
•
;

62 
EXCMD
 *
cmdp
;

64 
ARGS
 *
≠
;

65 
EXCMDLIST
 c⁄° *
˝
;

66 
√ws¸ìn
;

67 *
«me
, *
p
, 
nb
[
MAXCMDNAMELEN
 + 5];

69 
cmdp
->
¨gc
) {

71 
≠
 = 
cmdp
->
¨gv
[0];

72 i‡(
	`isuµî
(
≠
->
bp
[0])) {

73 
√ws¸ìn
 = 1;

74 
≠
->
bp
[0] = 
	`tﬁowî
(ap->bp[0]);

76 
√ws¸ìn
 = 0;

77 
˝
 = 
cmds
; cp->
«me
 !
NULL
 &&

78 
	`memcmp
(
≠
->
bp
, 
˝
->
«me
,áp->
Àn
); ++cp);

79 i‡(
˝
->
«me
 =
NULL
 ||

80 
√ws¸ìn
 && !
	`F_ISSET
(
˝
, 
E_NEWSCREEN
)) {

81 i‡(
√ws¸ìn
)

82 
≠
->
bp
[0] = 
	`touµî
(ap->bp[0]);

83 ()
	`ex_¥ötf
(
•
, "The %.*s command is unknown\n",

84 ()
≠
->
Àn
,áp->
bp
);

86 ()
	`ex_¥ötf
(
•
,

87 "Comm™d: %s\¿ Ußge: %s\n", 
˝
->
hñp
, cp->
ußge
);

93 i‡(
˝
 !&
cmds
[
C_VISUAL_EX
] &&

94 
˝
 !&
cmds
[
C_VISUAL_VI
])

96 i‡(
˝
 =&
cmds
[
C_VISUAL_EX
])

97 
˝
 = &
cmds
[
C_VISUAL_VI
];

99 
˝
 = &
cmds
[
C_VISUAL_EX
];

100 ()
	`ex_¥ötf
(
•
,

101 "Comm™d: %s\¿ Ußge: %s\n", 
˝
->
hñp
, cp->
ußge
);

105 
˝
 = 
cmds
; cp->
«me
 !
NULL
 && !
	`INTERRUPTED
(
•
); ++cp) {

114 i‡(
˝
 =&
cmds
[
C_SCROLL
])

115 
«me
 = "^D";

116 i‡(
	`F_ISSET
(
˝
, 
E_NEWSCREEN
)) {

117 
nb
[0] = '[';

118 
nb
[1] = 
	`touµî
(
˝
->
«me
[0]);

119 
nb
[2] = 
˝
->
«me
[0];

120 
nb
[3] = ']';

121 
«me
 = 
˝
->name + 1,

122 
p
 = 
nb
 + 4; (*p++ = *
«me
++) != '\0';);

123 
«me
 = 
nb
;

125 
«me
 = 
˝
->name;

126 ()
	`ex_¥ötf
(
•
,

127 "%*s: %s\n", 
MAXCMDNAMELEN
, 
«me
, 
˝
->
hñp
);

131 
	`ab‹t
();

134 
	}
}

143 
	$ex_viußge
(
•
, 
cmdp
)

144 
SCR
 *
•
;

145 
EXCMD
 *
cmdp
;

147 
GS
 *
gp
;

148 
VIKEYS
 c⁄° *
kp
;

149 
key
;

151 
gp
 = 
•
->gp;

152 
cmdp
->
¨gc
) {

154 i‡(
cmdp
->
¨gv
[0]->
Àn
 != 1) {

155 
	`ex_emsg
(
•
, 
cmdp
->
cmd
->
ußge
, 
EXM_USAGE
);

158 
key
 = 
cmdp
->
¨gv
[0]->
bp
[0];

159 i‡(
key
 > 
MAXVIKEY
)

160 
nokey
;

163 i‡((
key
 ='[' || key =']'Ë&& 
cmdp
->
¨gv
[0]->
bp
[1] != key)

164 
nokey
;

167 i‡(
key
 ='~' && 
	`O_ISSET
(
•
, 
O_TILDEOP
))

168 
kp
 = &
tmŸi⁄
;

170 
kp
 = &
vikeys
[
key
];

172 i‡(
kp
->
ußge
 =
NULL
)

173 
nokey
: ()
	`ex_¥ötf
(
•
,

175 
	`KEY_NAME
(
•
, 
key
));

177 ()
	`ex_¥ötf
(
•
,

179 
	`isbœnk
(*
kp
->
hñp
Ë? "" : " ", kp->hñp, kp->
ußge
);

182 
key
 = 0; key <
MAXVIKEY
 && !
	`INTERRUPTED
(
•
); ++key) {

184 i‡(
key
 ='~' && 
	`O_ISSET
(
•
, 
O_TILDEOP
))

185 
kp
 = &
tmŸi⁄
;

187 
kp
 = &
vikeys
[
key
];

188 i‡(
kp
->
hñp
 !
NULL
)

189 ()
	`ex_¥ötf
(
•
, "%s\n", 
kp
->
hñp
);

193 
	`ab‹t
();

196 
	}
}

	@ex/ex_util.c

10 
	~"c⁄fig.h
"

12 #i‚de‡
löt


13 c⁄° 
	gsccsid
[] = "@(#)ex_util.c 10.23 (Berkeley) 6/19/96";

16 
	~<sys/ty≥s.h
>

17 
	~<sys/queue.h
>

18 
	~<sys/°©.h
>

20 
	~<bô°rög.h
>

21 
	~<î∫o.h
>

22 
	~<limôs.h
>

23 
	~<°dio.h
>

24 
	~<°dlib.h
>

25 
	~<°rög.h
>

26 
	~<uni°d.h
>

28 
	~"../comm⁄/comm⁄.h
"

38 
	$ex_cöô
(
cmdp
, 
cmd_id
, 
«ddr
, 
 o1
, 
 o2
, 
f‹˚
, 
≠
)

39 
EXCMD
 *
cmdp
;

40 
cmd_id
, 
f‹˚
, 
«ddr
;

41 
ª˙o_t
 
 o1
, 
 o2
;

42 
ARGS
 **
≠
;

44 
	`mem£t
(
cmdp
, 0, (
EXCMD
));

45 
cmdp
->
cmd
 = &
cmds
[
cmd_id
];

46 
cmdp
->
addr˙t
 = 
«ddr
;

47 
cmdp
->
addr1
.
 o
 = 
 o1
;

48 
cmdp
->
addr2
.
 o
 = 
 o2
;

49 
cmdp
->
addr1
.
˙o
 = cmdp->
addr2
.cno = 1;

50 i‡(
f‹˚
)

51 
cmdp
->
iÊags
 |
E_C_FORCE
;

52 
cmdp
->
¨gc
 = 0;

53 i‡((
cmdp
->
¨gv
 = 
≠
Ë!
NULL
)

54 
cmdp
->
¨gv
[0] = 
NULL
;

55 
	}
}

64 
	$ex_ˇdd
(
cmdp
, 
≠
, 
¨g
, 
Àn
)

65 
EXCMD
 *
cmdp
;

66 
ARGS
 *
≠
;

67 *
¨g
;

68 
size_t
 
Àn
;

70 
cmdp
->
¨gv
[cmdp->
¨gc
] = 
≠
;

71 
≠
->
bp
 = 
¨g
;

72 
≠
->
Àn
 =Üen;

73 
cmdp
->
¨gv
[++cmdp->
¨gc
] = 
NULL
;

74 
	}
}

83 
	$ex_gëlöe
(
•
, 
Â
, 
À≈
)

84 
SCR
 *
•
;

85 
FILE
 *
Â
;

86 
size_t
 *
À≈
;

88 
EX_PRIVATE
 *
exp
;

89 
size_t
 
off
;

90 
ch
;

91 *
p
;

93 
exp
 = 
	`EXP
(
•
);

94 
î∫o
 = 0, 
off
 = 0, 
p
 = 
exp
->
ibp
;;) {

95 i‡(
off
 >
exp
->
ibp_Àn
) {

96 
	`BINC_RET
(
•
, 
exp
->
ibp
,Éxp->
ibp_Àn
, 
off
 + 1);

97 
p
 = 
exp
->
ibp
 + 
off
;

99 i‡((
ch
 = 
	`gëc
(
Â
)Ë=
EOF
 && !
	`„of
(fp)) {

100 i‡(
î∫o
 =
EINTR
) {

101 
î∫o
 = 0;

102 
	`˛óªº
(
Â
);

107 i‡(
ch
 =
EOF
 || ch == '\n') {

108 i‡(
ch
 =
EOF
 && !
off
)

110 *
À≈
 = 
off
;

113 *
p
++ = 
ch
;

114 ++
off
;

117 
	}
}

126 
	$ex_ncheck
(
•
, 
f‹˚
)

127 
SCR
 *
•
;

128 
f‹˚
;

130 **
≠
;

137 i‡(!
f‹˚
 && 
•
->
c˙t
 !•->
q_c˙t
 + 1 &&

138 
•
->
ˇrgv
 !
NULL
 && sp->cargv[1] != NULL) {

139 
•
->
q_c˙t
 = sp->
c˙t
;

141 
≠
 = 
•
->
ˇrgv
 + 1; *≠ !
NULL
; ++ap);

142 
	`msgq
(
•
, 
M_ERR
,

143 "167|%d m‹êfûe†tÿedô", (
≠
 - 
•
->
ˇrgv
) - 1);

148 
	}
}

157 
	$ex_öô
(
•
)

158 
SCR
 *
•
;

160 
GS
 *
gp
;

162 
gp
 = 
•
->gp;

164 i‡(
gp
->
	`s¸_s¸ìn
(
•
, 
SC_EX
))

166 ()
gp
->
	`s¸_©å
(
•
, 
SA_ALTERNATE
, 0);

168 
•
->
rows
 = 
	`O_VAL
(•, 
O_LINES
);

169 
•
->
cﬁs
 = 
	`O_VAL
(•, 
O_COLUMNS
);

171 
	`F_CLR
(
•
, 
SC_VI
);

172 
	`F_SET
(
•
, 
SC_EX
 | 
SC_SCR_EX
);

174 
	}
}

183 
	$ex_emsg
(
•
, 
p
, 
which
)

184 
SCR
 *
•
;

185 *
p
;

186 
exm_t
 
which
;

188 
which
) {

189 
EXM_EMPTYBUF
:

190 
	`msgq
(
•
, 
M_ERR
, "168|Buf„∏%†i†em±y", 
p
);

192 
EXM_FILECOUNT
:

193 
	`msgq_°r
(
•
, 
M_ERR
, 
p
,

196 
EXM_NOCANON
:

197 
	`msgq
(
•
, 
M_ERR
,

198 "283|Thê%†comm™dÑequúe†thêexÅîmöÆ i¡îÁ˚", 
p
);

200 
EXM_NOCANON_F
:

201 
	`msgq
(
•
, 
M_ERR
,

203 
p
);

205 
EXM_NOFILEYET
:

206 i‡(
p
 =
NULL
)

207 
	`msgq
(
•
, 
M_ERR
,

210 
	`msgq
(
•
, 
M_ERR
,

211 "173|Thê%†comm™dÑequúe†th©á fûêhavêÆªady bì¿ªad in", 
p
);

213 
EXM_NOPREVBUF
:

214 
	`msgq
(
•
, 
M_ERR
, "171|NoÖrevious bufferÅoÉxecute");

216 
EXM_NOPREVRE
:

217 
	`msgq
(
•
, 
M_ERR
, "172|NoÖreviousÑegularÉxpression");

219 
EXM_NOSUSPEND
:

220 
	`msgq
(
•
, 
M_ERR
, "230|This screen mayÇot be suspended");

222 
EXM_SECURE
:

223 
	`msgq
(
•
, 
M_ERR
,

224 "290|Thê%†comm™d i†nŸ suµ‹ãd whíÅhê£cuªÉdô o±i⁄ i†£t", 
p
);

226 
EXM_SECURE_F
:

227 
	`msgq
(
•
, 
M_ERR
,

228 "284|Th© f‹m o‡%†i†nŸ suµ‹ãd whíÅhê£cuªÉdô o±i⁄ i†£t", 
p
);

230 
EXM_USAGE
:

231 
	`msgq
(
•
, 
M_ERR
, "174|Ußge: %s", 
p
);

234 
	}
}

	@ex/ex_version.c

10 
	~"c⁄fig.h
"

12 #i‚de‡
löt


13 c⁄° 
	gsccsid
[] = "@(#)ex_version.c 10.31 (Berkeley) 8/22/96";

16 
	~<sys/ty≥s.h
>

17 
	~<sys/queue.h
>

19 
	~<bô°rög.h
>

20 
	~<limôs.h
>

21 
	~<°dio.h
>

23 
	~"../comm⁄/comm⁄.h
"

24 
	~"vîsi⁄.h
"

33 
	$ex_vîsi⁄
(
•
, 
cmdp
)

34 
SCR
 *
•
;

35 
EXCMD
 *
cmdp
;

37 
	`msgq
(
•
, 
M_INFO
, 
VI_VERSION
);

39 
	}
}

	@ex/ex_visual.c

10 
	~"c⁄fig.h
"

12 #i‚de‡
löt


13 c⁄° 
	gsccsid
[] = "@(#)ex_visual.c 10.13 (Berkeley) 6/28/96";

16 
	~<sys/ty≥s.h
>

17 
	~<sys/queue.h
>

18 
	~<sys/time.h
>

20 
	~<bô°rög.h
>

21 
	~<limôs.h
>

22 
	~<°dio.h
>

23 
	~<°dlib.h
>

24 
	~<°rög.h
>

25 
	~<uni°d.h
>

27 
	~"../comm⁄/comm⁄.h
"

28 
	~"../vi/vi.h
"

37 
	$ex_visuÆ
(
•
, 
cmdp
)

38 
SCR
 *
•
;

39 
EXCMD
 *
cmdp
;

41 
SCR
 *
t•
;

42 
size_t
 
Àn
;

43 
pos
;

44 
buf
[256];

47 i‡(!
	`O_ISSET
(
•
, 
O_OPEN
)) {

48 
	`msgq
(
•
, 
M_ERR
,

54 
•
->
 o
 = 
cmdp
->
addr1
.lno == 0 ? 1 : cmdp->addr1.lno;

60 
	`FL_ISSET
(
cmdp
->
iÊags
,

61 
E_C_CARAT
 | 
E_C_DASH
 | 
E_C_DOT
 | 
E_C_PLUS
)) {

62 
E_C_CARAT
:

63 
pos
 = '^';

65 
E_C_DASH
:

66 
pos
 = '-';

68 
E_C_DOT
:

69 
pos
 = '.';

71 
E_C_PLUS
:

72 
pos
 = '+';

75 
•
->
‰p
->
 o
 = sp->lno;

76 
•
->
‰p
->
˙o
 = 0;

77 ()
	`n⁄bœnk
(
•
, sp->
 o
, &•->
˙o
);

78 
	`F_SET
(
•
->
‰p
, 
FR_CURSORSET
);

79 
n›ush
;

82 i‡(
	`FL_ISSET
(
cmdp
->
iÊags
, 
E_C_COUNT
))

83 
Àn
 = 
	`¢¥ötf
(
buf
, (buf),

84 "%luz%c%lu", 
•
->
 o
, 
pos
, 
cmdp
->
cou¡
);

86 
Àn
 = 
	`¢¥ötf
(
buf
, (buf), "%luz%c", 
•
->
 o
, 
pos
);

87 ()
	`v_evít_push
(
•
, 
NULL
, 
buf
, 
Àn
, 
CH_NOMAP
 | 
CH_QUOTED
);

96 
	`FL_ISSET
(
cmdp
->
iÊags
, 
E_C_HASH
 | 
E_C_LIST
 | 
E_C_PRINT
)) {

97 
E_C_HASH
:

98 
	`O_SET
(
•
, 
O_NUMBER
);

100 
E_C_LIST
:

101 
	`O_SET
(
•
, 
O_LIST
);

103 
E_C_PRINT
:

107 
n›ush
:

121 i‡(!
	`F_ISSET
(
•
, 
SC_SCR_EXWROTE
))

122 
	`F_SET
(
•
, 
SC_EX_WAIT_NO
);

124 i‡(
	`F_ISSET
(
•
, 
SC_EX_GLOBAL
)) {

130 ++
•
->
ªf˙t
;

131 ++
•
->
ï
->
ªf˙t
;

137 
t•
 = 
•
;

138 i‡(
	`vi
(&
t•
))

151 i‡(
	`ex_öô
(
•
))

155 ()
	`ex_puts
(
•
, "\n");

157 
	`F_CLR
(
•
, 
SC_EX
 | 
SC_SCR_EX
);

158 
	`F_SET
(
•
, 
SC_VI
);

161 
	}
}

	@ex/ex_write.c

10 
	~"c⁄fig.h
"

12 #i‚de‡
löt


13 c⁄° 
	gsccsid
[] = "@(#)ex_write.c 10.30 (Berkeley) 7/12/96";

16 
	~<sys/ty≥s.h
>

17 
	~<sys/queue.h
>

18 
	~<sys/°©.h
>

20 
	~<bô°rög.h
>

21 
	~<˘y≥.h
>

22 
	~<î∫o.h
>

23 
	~<f˙é.h
>

24 
	~<limôs.h
>

25 
	~<°dio.h
>

26 
	~<°dlib.h
>

27 
	~<°rög.h
>

28 
	~<uni°d.h
>

30 
	~"../comm⁄/comm⁄.h
"

32 
	ewhich
 {
	mWN
, 
	mWQ
, 
	mWRITE
, 
	mXIT
};

33 
exwr
 
__P
((
SCR
 *, 
EXCMD
 *, 
which
));

42 
	$ex_wn
(
•
, 
cmdp
)

43 
SCR
 *
•
;

44 
EXCMD
 *
cmdp
;

46 i‡(
	`exwr
(
•
, 
cmdp
, 
WN
))

48 i‡(
	`fûe_m3
(
•
, 0))

52 
cmdp
->
¨gc
 = 0;

54  (
	`ex_√xt
(
•
, 
cmdp
));

55 
	}
}

64 
	$ex_wq
(
•
, 
cmdp
)

65 
SCR
 *
•
;

66 
EXCMD
 *
cmdp
;

68 
f‹˚
;

70 i‡(
	`exwr
(
•
, 
cmdp
, 
WQ
))

72 i‡(
	`fûe_m3
(
•
, 0))

75 
f‹˚
 = 
	`FL_ISSET
(
cmdp
->
iÊags
, 
E_C_FORCE
);

77 i‡(
	`ex_ncheck
(
•
, 
f‹˚
))

80 
	`F_SET
(
•
, 
f‹˚
 ? 
SC_EXIT_FORCE
 : 
SC_EXIT
);

82 
	}
}

92 
	$ex_wrôe
(
•
, 
cmdp
)

93 
SCR
 *
•
;

94 
EXCMD
 *
cmdp
;

96  (
	`exwr
(
•
, 
cmdp
, 
WRITE
));

97 
	}
}

107 
	$ex_xô
(
•
, 
cmdp
)

108 
SCR
 *
•
;

109 
EXCMD
 *
cmdp
;

111 
f‹˚
;

113 
	`NEEDFILE
(
•
, 
cmdp
);

115 i‡(
	`F_ISSET
(
•
->
ï
, 
F_MODIFIED
Ë&& 
	`exwr
(•, 
cmdp
, 
XIT
))

117 i‡(
	`fûe_m3
(
•
, 0))

120 
f‹˚
 = 
	`FL_ISSET
(
cmdp
->
iÊags
, 
E_C_FORCE
);

122 i‡(
	`ex_ncheck
(
•
, 
f‹˚
))

125 
	`F_SET
(
•
, 
f‹˚
 ? 
SC_EXIT_FORCE
 : 
SC_EXIT
);

127 
	}
}

134 
	$exwr
(
•
, 
cmdp
, 
cmd
)

135 
SCR
 *
•
;

136 
EXCMD
 *
cmdp
;

137 
which
 
cmd
;

139 
MARK
 
rm
;

140 
Êags
;

141 *
«me
, *
p
;

143 
	`NEEDFILE
(
•
, 
cmdp
);

146 
	`LF_INIT
(
FS_POSSIBLE
);

147 i‡(
	`FL_ISSET
(
cmdp
->
iÊags
, 
E_C_FORCE
))

148 
	`LF_SET
(
FS_FORCE
);

151 i‡(
cmdp
->
¨gc
 != 0)

152 
p
 = 
cmdp
->
¨gv
[0]->
bp
; *∞!'\0' && 
	`isbœnk
(*p); ++p);

155 i‡(
cmdp
->
¨gc
 !0 && 
cmd
 =
WRITE
 && *
p
 == '!') {

157 i‡(
	`O_ISSET
(
•
, 
O_SECURE
)) {

158 
	`ex_emsg
(
•
, 
cmdp
->
cmd
->
«me
, 
EXM_SECURE_F
);

163 ++
p
; *∞&& 
	`isbœnk
(*p); ++p);

164 i‡(*
p
 == '\0') {

165 
	`ex_emsg
(
•
, 
cmdp
->
cmd
->
ußge
, 
EXM_USAGE
);

168 i‡(
	`¨gv_exp1
(
•
, 
cmdp
, 
p
, 
	`°æí
(p), 1))

177 
	`F_SET
(
•
, 
SC_EX_WAIT_YES
);

184 i‡(
	`ex_fûãr
(
•
, 
cmdp
, &cmdp->
addr1
,

185 &
cmdp
->
addr2
, &
rm
, cmdp->
¨gv
[1]->
bp
, 
FILTER_WRITE
))

189 i‡(!
	`F_ISSET
(
•
, 
SC_VI
Ë&& !F_ISSET(•, 
SC_EX_SILENT
))

190 ()
	`ex_puts
(
•
, "!\n");

196 i‡(
cmdp
->
addr1
.
 o
 <1 && !
	`db_exi°
(
•
, cmdp->
addr2
.lno + 1))

197 
	`LF_SET
(
FS_ALL
);

200 i‡(
cmdp
->
¨gc
 !0 && 
cmd
 !
XIT
 && 
p
[0] == '>' &&Ö[1] == '>') {

201 
	`LF_SET
(
FS_APPEND
);

204 
p
 +2; *∞&& 
	`isbœnk
(*p); ++p);

208 i‡(
cmdp
->
¨gc
 =0 || *
p
 == '\0')

209  (
	`fûe_wrôe
(
•
,

210 &
cmdp
->
addr1
, &cmdp->
addr2
, 
NULL
, 
Êags
));

213 i‡(
	`¨gv_exp2
(
•
, 
cmdp
, 
p
, 
	`°æí
(p)))

225 
cmdp
->
¨gc
) {

228 
	`ab‹t
();

231 
«me
 = 
cmdp
->
¨gv
[1]->
bp
;

239 i‡(
	`F_ISSET
(
•
->
‰p
, 
FR_TMPFILE
) &&

240 !
	`F_ISSET
(
•
->
‰p
, 
FR_EXNAMED
)) {

241 i‡((
p
 = 
	`v_°rdup
(
•
,

242 
cmdp
->
¨gv
[1]->
bp
, cmdp->¨gv[1]->
Àn
)Ë!
NULL
) {

243 
	`‰ì
(
•
->
‰p
->
«me
);

244 
•
->
‰p
->
«me
 = 
p
;

255 
	`F_CLR
(
•
->
‰p
, 
FR_TMPEXIT
 | 
FR_TMPFILE
);

256 
	`F_SET
(
•
->
‰p
, 
FR_NAMECHANGE
 | 
FR_EXNAMED
);

259 ()
•
->
gp
->
	`s¸_ª«me
(•, sp->
‰p
->
«me
, 1);

261 
	`£t_Æt_«me
(
•
, 
«me
);

264 
	`ex_emsg
(
•
, 
p
, 
EXM_FILECOUNT
);

268  (
	`fûe_wrôe
(
•
, &
cmdp
->
addr1
, &cmdp->
addr2
, 
«me
, 
Êags
));

269 
	}
}

279 
	$ex_wrôeÂ
(
•
, 
«me
, 
Â
, 
fm
, 
tm
, 
∆no
, 
nch
, 
sûít
)

280 
SCR
 *
•
;

281 *
«me
;

282 
FILE
 *
Â
;

283 
MARK
 *
fm
, *
tm
;

284 
u_l⁄g
 *
∆no
, *
nch
;

285 
sûít
;

287 
°©
 
sb
;

288 
GS
 *
gp
;

289 
u_l⁄g
 
c˙t
;

290 
ª˙o_t
 
Êöe
, 
éöe
, 
l˙t
;

291 
size_t
 
Àn
;

292 
rvÆ
;

293 *
msg
, *
p
;

295 
gp
 = 
•
->gp;

296 
Êöe
 = 
fm
->
 o
;

297 
éöe
 = 
tm
->
 o
;

299 i‡(
∆no
 !
NULL
) {

300 *
nch
 = 0;

301 *
∆no
 = 0;

319 
c˙t
 = 0;

320 
l˙t
 = 0;

321 
msg
 = "253|Writing...";

322 i‡(
éöe
 != 0)

323 ; 
Êöe
 <
éöe
; ++Êöe, ++
l˙t
) {

325 i‡((
l˙t
 + 1Ë% 
INTERRUPT_CHECK
 == 0) {

326 i‡(
	`INTERRUPTED
(
•
))

328 i‡(!
sûít
) {

329 
gp
->
	`s¸_busy
(
•
, 
msg
, msg =
NULL
 ?

330 
BUSY_UPDATE
 : 
BUSY_ON
);

331 
msg
 = 
NULL
;

334 i‡(
	`db_gë
(
•
, 
Êöe
, 
DBG_FATAL
, &
p
, &
Àn
))

335 
îr
;

336 i‡(
	`fwrôe
(
p
, 1, 
Àn
, 
Â
) !=Üen)

337 
îr
;

338 
c˙t
 +
Àn
;

339 i‡(
	`putc
('\n', 
Â
) != '\n')

341 ++
c˙t
;

344 i‡(
	`fÊush
(
Â
))

345 
îr
;

351 i‡(!
	`f°©
(
	`fûío
(
Â
), &
sb
) &&

352 
	`S_ISREG
(
sb
.
°_mode
Ë&& 
	`fsync
(
	`fûío
(
Â
)))

353 
îr
;

355 i‡(
	`f˛o£
(
Â
))

356 
îr
;

358 
rvÆ
 = 0;

360 
îr
: i‡(!
	`F_ISSET
(
•
->
ï
, 
F_MULTILOCK
))

361 
	`msgq_°r
(
•
, 
M_SYSERR
, 
«me
, "%s");

362 ()
	`f˛o£
(
Â
);

363 
rvÆ
 = 1;

366 i‡(!
sûít
)

367 
gp
->
	`s¸_busy
(
•
, 
NULL
, 
BUSY_OFF
);

370 i‡(
∆no
 !
NULL
) {

371 *
nch
 = 
c˙t
;

372 *
∆no
 = 
l˙t
;

374  (
rvÆ
);

375 
	}
}

	@ex/ex_yank.c

10 
	~"c⁄fig.h
"

12 #i‚de‡
löt


13 c⁄° 
	gsccsid
[] = "@(#)ex_yank.c 10.7 (Berkeley) 3/6/96";

16 
	~<sys/ty≥s.h
>

17 
	~<sys/queue.h
>

19 
	~<bô°rög.h
>

20 
	~<limôs.h
>

21 
	~<°dio.h
>

23 
	~"../comm⁄/comm⁄.h
"

32 
	$ex_y™k
(
•
, 
cmdp
)

33 
SCR
 *
•
;

34 
EXCMD
 *
cmdp
;

36 
	`NEEDFILE
(
•
, 
cmdp
);

43  (
	`cut
(
•
,

44 
	`FL_ISSET
(
cmdp
->
iÊags
, 
E_C_BUFFER
Ë? &cmdp->
buf„r
 : 
NULL
,

45 &
cmdp
->
addr1
, &cmdp->
addr2
, 
CUT_LINEMODE
));

46 
	}
}

	@ex/ex_z.c

10 
	~"c⁄fig.h
"

12 #i‚de‡
löt


13 c⁄° 
	gsccsid
[] = "@(#)ex_z.c 10.10 (Berkeley) 3/6/96";

16 
	~<sys/ty≥s.h
>

17 
	~<sys/queue.h
>

19 
	~<bô°rög.h
>

20 
	~<limôs.h
>

21 
	~<°dio.h
>

22 
	~<°dlib.h
>

23 
	~<°rög.h
>

25 
	~"../comm⁄/comm⁄.h
"

34 
	$ex_z
(
•
, 
cmdp
)

35 
SCR
 *
•
;

36 
EXCMD
 *
cmdp
;

38 
MARK
 
abs
;

39 
ª˙o_t
 
˙t
, 
equÆs
, 
 o
;

40 
eofcheck
;

42 
	`NEEDFILE
(
•
, 
cmdp
);

55 i‡(
	`FL_ISSET
(
cmdp
->
iÊags
, 
E_C_COUNT
))

56 
˙t
 = 
cmdp
->
cou¡
;

58 #ifde‡
HISTORIC_PRACTICE


59 
˙t
 = 
	`O_VAL
(
•
, 
O_SCROLL
) * 2;

61 
˙t
 = 
	`O_VAL
(
•
, 
O_WINDOW
) - 1;

64 
equÆs
 = 0;

65 
eofcheck
 = 0;

66 
 o
 = 
cmdp
->
addr1
.lno;

68 
	`FL_ISSET
(
cmdp
->
iÊags
,

69 
E_C_CARAT
 | 
E_C_DASH
 | 
E_C_DOT
 | 
E_C_EQUAL
 | 
E_C_PLUS
)) {

70 
E_C_CARAT
:

71 
eofcheck
 = 1;

72 i‡(
 o
 > 
˙t
 * 2)

73 
cmdp
->
addr1
.
 o
 = ( ÿ- 
˙t
 * 2) + 1;

75 
cmdp
->
addr1
.
 o
 = 1;

76 
cmdp
->
addr2
.
 o
 = (cmdp->
addr1
. ÿ+ 
˙t
) - 1;

78 
E_C_DASH
:

79 
cmdp
->
addr1
.
 o
 =Ünÿ> 
˙t
 ? (lno - cnt) + 1 : 1;

80 
cmdp
->
addr2
.
 o
 =Üno;

82 
E_C_DOT
:

90 
eofcheck
 = 1;

91 
˙t
 = (cnt - 1) / 2;

92 
cmdp
->
addr1
.
 o
 =Ünÿ> 
˙t
 ?Üno - cnt : 1;

93 
cmdp
->
addr2
.
 o
 =Ünÿ+ 
˙t
;

99 
abs
.
 o
 = 
•
->lno;

100 
abs
.
˙o
 = 
•
->cno;

101 ()
	`m¨k_£t
(
•
, 
ABSMARK1
, &
abs
, 1);

103 
E_C_EQUAL
:

112 
eofcheck
 = 1;

113 
˙t
 = (cnt - 1) / 2;

114 
cmdp
->
addr1
.
 o
 =Ünÿ> 
˙t
 ?Üno - cnt : 1;

115 
cmdp
->
addr2
.
 o
 =Üno - 1;

116 i‡(
	`ex_¥
(
•
, 
cmdp
))

118 ()
	`ex_puts
(
•
, "----------------------------------------\n");

119 
cmdp
->
addr2
.
 o
 = cmdp->
addr1
. ÿ
equÆs
 =Üno;

120 i‡(
	`ex_¥
(
•
, 
cmdp
))

122 ()
	`ex_puts
(
•
, "----------------------------------------\n");

123 
cmdp
->
addr1
.
 o
 =Üno + 1;

124 
cmdp
->
addr2
.
 o
 = ( ÿ+ 
˙t
) - 1;

128 i‡(
	`F_ISSET
(
cmdp
, 
E_ADDR_DEF
))

129 ++
 o
;

131 
E_C_PLUS
:

132 
eofcheck
 = 1;

133 
cmdp
->
addr1
.
 o
 =Üno;

134 
cmdp
->
addr2
.
 o
 = ( ÿ+ 
˙t
) - 1;

138 i‡(
eofcheck
) {

139 i‡(
	`db_œ°
(
•
, &
 o
))

141 i‡(
cmdp
->
addr2
.
 o
 >Üno)

142 
cmdp
->
addr2
.
 o
 =Üno;

145 i‡(
	`ex_¥
(
•
, 
cmdp
))

147 i‡(
equÆs
)

148 
•
->
 o
 = 
equÆs
;

150 
	}
}

	@ex/script.h

12 
	s_s¸ùt
 {

13 
pid_t
 
	msh_pid
;

14 
	msh_ma°î
;

15 
	msh_¶ave
;

16 *
	msh_¥om±
;

17 
size_t
 
	msh_¥om±_Àn
;

18 
	msh_«me
[64];

19 #ifde‡
TIOCGWINSZ


20 
wösize
 
	msh_wö
;

22 
ãrmios
 
	msh_ãrm
;

	@ex/tag.h

18 
	s_csc
 {

19 
LIST_ENTRY
(
_csc
Ë
	mq
;

21 *
	md«me
;

22 
size_t
 
	mdÀn
;

23 
pid_t
 
	mpid
;

24 
time_t
 
	mmtime
;

26 
FILE
 *
	m‰om_Â
;

27 
	m‰om_fd
;

28 
FILE
 *
	mto_Â
;

29 
	mto_fd
;

31 **
	m∑ths
;

32 *
	mpbuf
;

33 
size_t
 
	mpbÀn
;

35 
	mbuf
[1];

42 
	s_ègf
 {

43 
TAILQ_ENTRY
(
_ègf
Ë
	mq
;

44 *
	m«me
;

45 
	mî∫um
;

47 
	#TAGF_ERR
 0x01

	)

48 
	#TAGF_ERR_WARN
 0x02

	)

49 
u_öt8_t
 
	mÊags
;

76 
	s_èg
 {

77 
CIRCLEQ_ENTRY
(
_èg
Ë
	mq
;

80 
FREF
 *
	m‰p
;

81 
ª˙o_t
 
	m o
;

82 
size_t
 
	m˙o
;

84 *
	m‚ame
;

85 
size_t
 
	m‚Àn
;

86 
ª˙o_t
 
	m¶no
;

87 *
	m£¨ch
;

88 
size_t
 
	m¶í
;

90 
	mbuf
[1];

93 
	s_ègq
 {

94 
CIRCLEQ_ENTRY
(
_ègq
Ë
	mq
;

96 
CIRCLEQ_HEAD
(
_ègqh
, 
_èg
Ë
	mègq
;

98 
TAG
 *
	mcuºít
;

100 *
	mèg
;

101 
size_t
 
	méí
;

103 
	#TAG_CSCOPE
 0x01

	)

104 
u_öt8_t
 
	mÊags
;

106 
	mbuf
[1];

	@ex/version.h

1 
	#VI_VERSION
 \

2 "Vîsi⁄ 1.79 (10/23/96ËThêCSRG, Univîsôy o‡CÆif‹nü, Bîkñey."

	)

	@include/bitstring.h

39 #i‚de‡
_BITSTRING_H_


40 
	#_BITSTRING_H_


	)

42 
	tbô°r_t
;

46 
	#_bô_byã
(
bô
) \

47 ((
bô
Ë>> 3)

	)

50 
	#_bô_mask
(
bô
) \

51 (1 << ((
bô
)&0x7))

	)

55 
	#bô°r_size
(
nbôs
) \

56 ((((
nbôs
Ë- 1Ë>> 3Ë+ 1)

	)

59 
	#bô_Æloc
(
nbôs
) \

60 (
bô°r_t
 *)
	`ˇŒoc
(1, \

61 ()
	`bô°r_size
(
nbôs
Ë* (
bô°r_t
))

	)

64 
	#bô_de˛
(
«me
, 
nbôs
) \

65 (
«me
)[
	`bô°r_size
(
nbôs
)]

	)

68 
	#bô_ã°
(
«me
, 
bô
) \

69 ((
«me
)[
	`_bô_byã
(
bô
)] & 
	`_bô_mask
(bô))

	)

72 
	#bô_£t
(
«me
, 
bô
) \

73 (
«me
)[
	`_bô_byã
(
bô
)] |
	`_bô_mask
(bô)

	)

76 
	#bô_˛ór
(
«me
, 
bô
) \

77 (
«me
)[
	`_bô_byã
(
bô
)] &~
	`_bô_mask
(bô)

	)

80 
	#bô_n˛ór
(
«me
, 
°¨t
, 
°›
) { \

81 
bô°r_t
 *
_«me
 = 
«me
; \

82 
_°¨t
 = 
°¨t
, 
_°›
 = 
°›
; \

83 
_°¨tbyã
 = 
	`_bô_byã
(
_°¨t
); \

84 
_°›byã
 = 
	`_bô_byã
(
_°›
); \

85 i‡(
_°¨tbyã
 =
_°›byã
) { \

86 
_«me
[
_°¨tbyã
] &((0xf‡>> (8 - (
_°¨t
&0x7))) | \

87 (0xf‡<< ((
_°›
&0x7) + 1))); \

89 
_«me
[
_°¨tbyã
] &0xf‡>> (8 - (
_°¨t
&0x7)); \

90 ++
_°¨tbyã
 < 
_°›byã
) \

91 
_«me
[
_°¨tbyã
] = 0; \

92 
_«me
[
_°›byã
] &0xf‡<< ((
_°›
&0x7) + 1); \

94 }

	)

97 
	#bô_n£t
(
«me
, 
°¨t
, 
°›
) { \

98 
bô°r_t
 *
_«me
 = 
«me
; \

99 
_°¨t
 = 
°¨t
, 
_°›
 = 
°›
; \

100 
_°¨tbyã
 = 
	`_bô_byã
(
_°¨t
); \

101 
_°›byã
 = 
	`_bô_byã
(
_°›
); \

102 i‡(
_°¨tbyã
 =
_°›byã
) { \

103 
_«me
[
_°¨tbyã
] |((0xf‡<< (
_°¨t
&0x7)) & \

104 (0xf‡>> (7 - (
_°›
&0x7)))); \

106 
_«me
[
_°¨tbyã
] |0xf‡<< ((
_°¨t
)&0x7); \

107 ++
_°¨tbyã
 < 
_°›byã
) \

108 
_«me
[
_°¨tbyã
] = 0xff; \

109 
_«me
[
_°›byã
] |0xf‡>> (7 - (
_°›
&0x7)); \

111 }

	)

114 
	#bô_ffc
(
«me
, 
nbôs
, 
vÆue
) { \

115 
bô°r_t
 *
_«me
 = 
«me
; \

116 
_byã
, 
_nbôs
 = 
nbôs
; \

117 
_°›byã
 = 
	`_bô_byã
(
_nbôs
), 
_vÆue
 = -1; \

118 
_byã
 = 0; _byã <
_°›byã
; ++_byte) \

119 i‡(
_«me
[
_byã
] != 0xff) { \

120 
_vÆue
 = 
_byã
 << 3; \

121 
_°›byã
 = 
_«me
[
_byã
]; (_stopbyte&0x1); \

122 ++
_vÆue
, 
_°›byã
 >>= 1); \

125 *(
vÆue
Ë
_vÆue
; \

126 }

	)

129 
	#bô_ffs
(
«me
, 
nbôs
, 
vÆue
) { \

130 
bô°r_t
 *
_«me
 = 
«me
; \

131 
_byã
, 
_nbôs
 = 
nbôs
; \

132 
_°›byã
 = 
	`_bô_byã
(
_nbôs
), 
_vÆue
 = -1; \

133 
_byã
 = 0; _byã <
_°›byã
; ++_byte) \

134 i‡(
_«me
[
_byã
]) { \

135 
_vÆue
 = 
_byã
 << 3; \

136 
_°›byã
 = 
_«me
[
_byã
]; !(_stopbyte&0x1); \

137 ++
_vÆue
, 
_°›byã
 >>= 1); \

140 *(
vÆue
Ë
_vÆue
; \

141 }

	)

	@include/cl_extern.h

1 #i‚de‡
HAVE_CURSES_ADDNSTR


2 
addn°r
 
__P
((*, ));

4 #i‚de‡
HAVE_CURSES_BEEP


5 
bìp
 
__P
(());

7 #i‚de‡
HAVE_CURSES_FLASH


8 
Êash
 
__P
(());

10 #i‚de‡
HAVE_CURSES_IDLOK


11 
idlok
 
__P
((
WINDOW
 *, ));

13 #i‚de‡
HAVE_CURSES_KEYPAD


14 
key∑d
 
__P
((*, ));

16 #i‚de‡
HAVE_CURSES_NEWTERM


17 *
√wãrm
 
__P
((c⁄° *, 
FILE
 *, FILE *));

19 #i‚de‡
HAVE_CURSES_SETUPTERM


20 
£tu±îm
 
__P
((*, , *));

22 #ifde‡
HAVE_CURSES_TIGETSTR


23 *
tigë°r
();

25 *
tigë°r
 
__P
((*));

27 #i‚de‡
HAVE_CURSES_TIGETSTR


28 
tigënum
 
__P
((*));

30 
˛_add°r
 
__P
((
SCR
 *, c⁄° *, 
size_t
));

31 
˛_©å
 
__P
((
SCR
 *, 
s¸_©å_t
, ));

32 
˛_baud
 
__P
((
SCR
 *, 
u_l⁄g
 *));

33 
˛_bñl
 
__P
((
SCR
 *));

34 
˛_˛π€ﬁ
 
__P
((
SCR
 *));

35 
˛_curs‹
 
__P
((
SCR
 *, 
size_t
 *, size_t *));

36 
˛_dñëñn
 
__P
((
SCR
 *));

37 
˛_ex_adju°
 
__P
((
SCR
 *, 
exadj_t
));

38 
˛_ö£π 
 
__P
((
SCR
 *));

39 
˛_keyvÆ
 
__P
((
SCR
 *, 
s¸_keyvÆ_t
, 
CHAR_T
 *, *));

40 
˛_move
 
__P
((
SCR
 *, 
size_t
, size_t));

41 
˛_ª‰esh
 
__P
((
SCR
 *, ));

42 
˛_ª«me
 
__P
((
SCR
 *, *, ));

43 
˛_su•íd
 
__P
((
SCR
 *, *));

44 
˛_ußge
 
__P
(());

45 
sig_öô
 
__P
((
GS
 *, 
SCR
 *));

46 
˛_evít
 
__P
((
SCR
 *, 
EVENT
 *, 
u_öt32_t
, ));

47 
˛_s¸ìn
 
__P
((
SCR
 *, 
u_öt32_t
));

48 
˛_quô
 
__P
((
GS
 *));

49 
˛_gëˇp
 
__P
((
SCR
 *, *, **));

50 
˛_ãrm_öô
 
__P
((
SCR
 *));

51 
˛_ãrm_íd
 
__P
((
GS
 *));

52 
˛_fm≠
 
__P
((
SCR
 *, 
£q_t
, 
CHAR_T
 *, 
size_t
, CHAR_T *, size_t));

53 
˛_›tch™ge
 
__P
((
SCR
 *, , *, 
u_l⁄g
 *));

54 
˛_omesg
 
__P
((
SCR
 *, 
CL_PRIVATE
 *, ));

55 
˛_ssize
 
__P
((
SCR
 *, , 
size_t
 *, size_t *, *));

56 
˛_putch¨
 
__P
(());

	@include/com_extern.h

1 #i‚de‡
HAVE_BSEARCH


2 *
b£¨ch
 
__P
((c⁄° *, c⁄° *, 
size_t
,

3 
size_t
, (*)(const *, const *)));

5 #i‚de‡
HAVE_SETENV


6 
£ãnv
 
	`__P
((const *, const *, ));

8 #i‚de‡
HAVE_UNSETENV


9 
un£ãnv
 
	`__P
((const *));

11 #i‚de‡
HAVE_GETHOSTNAME


12 
gëho°«me
 
	`__P
((*, ));

14 #i‚de‡
HAVE_GETOPT


15 
gë›t
 
	`__P
((, * const *, const *));

17 #i‚de‡
HAVE_MEMCHR


18 *
memchr
 
	`__P
((c⁄° *, , 
size_t
));

20 #i‚de‡
HAVE_MEMCPY


21 *
mem˝y
 
	`__P
((*, c⁄° *, 
size_t
));

23 #i‚de‡
HAVE_MEMMOVE


24 *
memmove
 
	`__P
((*, c⁄° *, 
size_t
));

26 #i‚de‡
HAVE_MEMSET


27 *
mem£t
 
	`__P
((*, , 
size_t
));

29 #i‚de‡
HAVE_MKSTEMP


30 
mk°emp
 
	`__P
((*));

32 #i‚de‡
HAVE_MMAP


33 *
mm≠
 
	`__P
((*, 
size_t
, , , , 
off_t
));

35 #i‚de‡
HAVE_MMAP


36 
munm≠
 
	`__P
((*, 
size_t
));

38 #i‚de‡
HAVE_SNPRINTF


39 
¢¥ötf
 
	`__P
((*, 
size_t
, const *, ...));

41 #i‚de‡
HAVE_STRDUP


42 *
°rdup
 
	`__P
((const *));

44 #i‚de‡
HAVE_STRERROR


45 *
°ªº‹
 
	`__P
(());

47 #i‚de‡
HAVE_STRPBRK


48 *
°Ωbrk
 
	`__P
((const *, const *));

50 #i‚de‡
HAVE_STRSEP


51 *
°r£p
 
	`__P
((**, const *));

53 #i‚de‡
HAVE_STRTOL


54 
°πﬁ
 
	`__P
((const *, **, ));

56 #i‚de‡
HAVE_STRTOUL


57 
°πoul
 
	`__P
((const *, **, ));

59 #i‚de‡
HAVE_VSNPRINTF


60 
v¢¥ötf
 
	`__P
((*, 
size_t
, const *, ...));

62 
SCR
 *
≠i_fs¸ìn
 
	`__P
((, *));

63 
≠i_Æöe
 
	`__P
((
SCR
 *, 
ª˙o_t
, *, 
size_t
));

64 
≠i_dlöe
 
	`__P
((
SCR
 *, 
ª˙o_t
));

65 
≠i_glöe
 
	`__P
((
SCR
 *, 
ª˙o_t
, **, 
size_t
 *));

66 
≠i_ûöe
 
	`__P
((
SCR
 *, 
ª˙o_t
, *, 
size_t
));

67 
≠i_Œöe
 
	`__P
((
SCR
 *, 
ª˙o_t
 *));

68 
≠i_¶öe
 
	`__P
((
SCR
 *, 
ª˙o_t
, *, 
size_t
));

69 
≠i_gëm¨k
 
	`__P
((
SCR
 *, , 
MARK
 *));

70 
≠i_£tm¨k
 
	`__P
((
SCR
 *, , 
MARK
 *));

71 
≠i_√xtm¨k
 
	`__P
((
SCR
 *, , *));

72 
≠i_gëcurs‹
 
	`__P
((
SCR
 *, 
MARK
 *));

73 
≠i_£tcurs‹
 
	`__P
((
SCR
 *, 
MARK
 *));

74 
≠i_emesßge
 
	`__P
((
SCR
 *, *));

75 
≠i_imesßge
 
	`__P
((
SCR
 *, *));

76 
≠i_edô
 
	`__P
((
SCR
 *, *, SCR **, ));

77 
≠i_es¸ìn
 
	`__P
((
SCR
 *));

78 
≠i_sws¸ìn
 
	`__P
((
SCR
 *, SCR *));

79 
≠i_m≠
 
	`__P
((
SCR
 *, *, *, 
size_t
));

80 
≠i_unm≠
 
	`__P
((
SCR
 *, *));

81 
≠i_›ts_gë
 
	`__P
((
SCR
 *, *, **, *));

82 
≠i_›ts_£t
 
	`__P
((
SCR
 *, *, *, 
u_l⁄g
, ));

83 
≠i_run_°r
 
	`__P
((
SCR
 *, *));

84 
cut
 
	`__P
((
SCR
 *, 
CHAR_T
 *, 
MARK
 *, MARK *, ));

85 
cut_löe
 
	`__P
((
SCR
 *, 
ª˙o_t
, 
size_t
, size_t, 
CB
 *));

86 
cut_˛o£
 
	`__P
((
GS
 *));

87 
TEXT
 *
ãxt_öô
 
	`__P
((
SCR
 *, c⁄° *, 
size_t
, size_t));

88 
ãxt_l‰ì
 
	`__P
((
TEXTH
 *));

89 
ãxt_‰ì
 
	`__P
((
TEXT
 *));

90 
dñ
 
	`__P
((
SCR
 *, 
MARK
 *, MARK *, ));

91 
FREF
 *
fûe_add
 
	`__P
((
SCR
 *, 
CHAR_T
 *));

92 
fûe_öô
 
	`__P
((
SCR
 *, 
FREF
 *, *, ));

93 
fûe_íd
 
	`__P
((
SCR
 *, 
EXF
 *, ));

94 
fûe_wrôe
 
	`__P
((
SCR
 *, 
MARK
 *, MARK *, *, ));

95 
fûe_m1
 
	`__P
((
SCR
 *, , ));

96 
fûe_m2
 
	`__P
((
SCR
 *, ));

97 
fûe_m3
 
	`__P
((
SCR
 *, ));

98 
fûe_aw
 
	`__P
((
SCR
 *, ));

99 
£t_Æt_«me
 
	`__P
((
SCR
 *, *));

100 
lockr_t
 
fûe_lock
 
	`__P
((
SCR
 *, *, *, , ));

101 
v_key_öô
 
	`__P
((
SCR
 *));

102 
v_key_ûookup
 
	`__P
((
SCR
 *));

103 
size_t
 
v_key_Àn
 
	`__P
((
SCR
 *, 
ARG_CHAR_T
));

104 
CHAR_T
 *
v_key_«me
 
	`__P
((
SCR
 *, 
ARG_CHAR_T
));

105 
v_key_vÆ
 
	`__P
((
SCR
 *, 
ARG_CHAR_T
));

106 
v_evít_push
 
	`__P
((
SCR
 *, 
EVENT
 *, 
CHAR_T
 *, 
size_t
, 
u_öt
));

107 
v_evít_gë
 
	`__P
((
SCR
 *, 
EVENT
 *, , 
u_öt32_t
));

108 
v_evít_îr
 
	`__P
((
SCR
 *, 
EVENT
 *));

109 
v_evít_Êush
 
	`__P
((
SCR
 *, 
u_öt
));

110 
db_egë
 
	`__P
((
SCR
 *, 
ª˙o_t
, **, 
size_t
 *, *));

111 
db_gë
 
	`__P
((
SCR
 *, 
ª˙o_t
, 
u_öt32_t
, **, 
size_t
 *));

112 
db_dñëe
 
	`__P
((
SCR
 *, 
ª˙o_t
));

113 
db_≠≥nd
 
	`__P
((
SCR
 *, , 
ª˙o_t
, *, 
size_t
));

114 
db_ö£π
 
	`__P
((
SCR
 *, 
ª˙o_t
, *, 
size_t
));

115 
db_£t
 
	`__P
((
SCR
 *, 
ª˙o_t
, *, 
size_t
));

116 
db_exi°
 
	`__P
((
SCR
 *, 
ª˙o_t
));

117 
db_œ°
 
	`__P
((
SCR
 *, 
ª˙o_t
 *));

118 
db_îr
 
	`__P
((
SCR
 *, 
ª˙o_t
));

119 
log_öô
 
	`__P
((
SCR
 *, 
EXF
 *));

120 
log_íd
 
	`__P
((
SCR
 *, 
EXF
 *));

121 
log_curs‹
 
	`__P
((
SCR
 *));

122 
log_löe
 
	`__P
((
SCR
 *, 
ª˙o_t
, 
u_öt
));

123 
log_m¨k
 
	`__P
((
SCR
 *, 
LMARK
 *));

124 
log_backw¨d
 
	`__P
((
SCR
 *, 
MARK
 *));

125 
log_£éöe
 
	`__P
((
SCR
 *));

126 
log_f‹w¨d
 
	`__P
((
SCR
 *, 
MARK
 *));

127 
edô‹
 
	`__P
((
GS
 *, , *[]));

128 
v_íd
 
	`__P
((
GS
 *));

129 
m¨k_öô
 
	`__P
((
SCR
 *, 
EXF
 *));

130 
m¨k_íd
 
	`__P
((
SCR
 *, 
EXF
 *));

131 
m¨k_gë
 
	`__P
((
SCR
 *, 
ARG_CHAR_T
, 
MARK
 *, 
mty≥_t
));

132 
m¨k_£t
 
	`__P
((
SCR
 *, 
ARG_CHAR_T
, 
MARK
 *, ));

133 
m¨k_ösdñ
 
	`__P
((
SCR
 *, 
 ›_t
, 
ª˙o_t
));

134 
msgq
 
	`__P
((
SCR
 *, 
mty≥_t
, const *, ...));

135 
msgq_°r
 
	`__P
((
SCR
 *, 
mty≥_t
, *, *));

136 
mod_Ωt
 
	`__P
((
SCR
 *));

137 
msgq_°©us
 
	`__P
((
SCR
 *, 
ª˙o_t
, 
u_öt
));

138 
msg_›í
 
	`__P
((
SCR
 *, *));

139 
msg_˛o£
 
	`__P
((
GS
 *));

140 c⁄° *
msg_cmsg
 
	`__P
((
SCR
 *, 
cmsg_t
, 
size_t
 *));

141 c⁄° *
msg_ˇt
 
	`__P
((
SCR
 *, c⁄° *, 
size_t
 *));

142 *
msg_¥öt
 
	`__P
((
SCR
 *, const *, *));

143 
›ts_öô
 
	`__P
((
SCR
 *, *));

144 
›ts_£t
 
	`__P
((
SCR
 *, 
ARGS
 *[], *));

145 
o_£t
 
	`__P
((
SCR
 *, , 
u_öt
, *, 
u_l⁄g
));

146 
›ts_em±y
 
	`__P
((
SCR
 *, , ));

147 
›ts_dump
 
	`__P
((
SCR
 *, 
›tdi•
));

148 
›ts_ßve
 
	`__P
((
SCR
 *, 
FILE
 *));

149 
OPTLIST
 c⁄° *
›ts_£¨ch
 
	`__P
((*));

150 
›ts_nom©ch
 
	`__P
((
SCR
 *, *));

151 
›ts_c›y
 
	`__P
((
SCR
 *, SCR *));

152 
›ts_‰ì
 
	`__P
((
SCR
 *));

153 
f_Ætwîa£
 
	`__P
((
SCR
 *, 
OPTION
 *, *, 
u_l⁄g
 *));

154 
f_cﬁumns
 
	`__P
((
SCR
 *, 
OPTION
 *, *, 
u_l⁄g
 *));

155 
f_löes
 
	`__P
((
SCR
 *, 
OPTION
 *, *, 
u_l⁄g
 *));

156 
f_li•
 
	`__P
((
SCR
 *, 
OPTION
 *, *, 
u_l⁄g
 *));

157 
f_msgˇt
 
	`__P
((
SCR
 *, 
OPTION
 *, *, 
u_l⁄g
 *));

158 
f_∑øgøph
 
	`__P
((
SCR
 *, 
OPTION
 *, *, 
u_l⁄g
 *));

159 
f_¥öt
 
	`__P
((
SCR
 *, 
OPTION
 *, *, 
u_l⁄g
 *));

160 
f_ªad⁄ly
 
	`__P
((
SCR
 *, 
OPTION
 *, *, 
u_l⁄g
 *));

161 
f_ªcompûe
 
	`__P
((
SCR
 *, 
OPTION
 *, *, 
u_l⁄g
 *));

162 
f_ªf‹m©
 
	`__P
((
SCR
 *, 
OPTION
 *, *, 
u_l⁄g
 *));

163 
f_£˘i⁄
 
	`__P
((
SCR
 *, 
OPTION
 *, *, 
u_l⁄g
 *));

164 
f_âywîa£
 
	`__P
((
SCR
 *, 
OPTION
 *, *, 
u_l⁄g
 *));

165 
f_w300
 
	`__P
((
SCR
 *, 
OPTION
 *, *, 
u_l⁄g
 *));

166 
f_w1200
 
	`__P
((
SCR
 *, 
OPTION
 *, *, 
u_l⁄g
 *));

167 
f_w9600
 
	`__P
((
SCR
 *, 
OPTION
 *, *, 
u_l⁄g
 *));

168 
f_wödow
 
	`__P
((
SCR
 *, 
OPTION
 *, *, 
u_l⁄g
 *));

169 
put
 
	`__P
((
SCR
 *, 
CB
 *, 
CHAR_T
 *, 
MARK
 *, MARK *, ));

170 
rcv_tmp
 
	`__P
((
SCR
 *, 
EXF
 *, *));

171 
rcv_öô
 
	`__P
((
SCR
 *));

172 
rcv_sync
 
	`__P
((
SCR
 *, 
u_öt
));

173 
rcv_li°
 
	`__P
((
SCR
 *));

174 
rcv_ªad
 
	`__P
((
SCR
 *, 
FREF
 *));

175 
s¸ìn_öô
 
	`__P
((
GS
 *, 
SCR
 *, SCR **));

176 
s¸ìn_íd
 
	`__P
((
SCR
 *));

177 
SCR
 *
s¸ìn_√xt
 
	`__P
((SCR *));

178 
f_£¨ch
 
	`__P
((
SCR
 *,

179 
MARK
 *, MARK *, *, 
size_t
, **, 
u_öt
));

180 
b_£¨ch
 
	`__P
((
SCR
 *,

181 
MARK
 *, MARK *, *, 
size_t
, **, 
u_öt
));

182 
£¨ch_busy
 
	`__P
((
SCR
 *, 
busy_t
));

183 
£q_£t
 
	`__P
((
SCR
 *, 
CHAR_T
 *,

184 
size_t
, 
CHAR_T
 *, size_t, CHAR_T *, size_t, 
£q_t
, ));

185 
£q_dñëe
 
	`__P
((
SCR
 *, 
CHAR_T
 *, 
size_t
, 
£q_t
));

186 
£q_mdñ
 
	`__P
((
SEQ
 *));

187 
SEQ
 *
£q_föd


188 
	`__P
((
SCR
 *, 
SEQ
 **, 
EVENT
 *, 
CHAR_T
 *, 
size_t
, 
£q_t
, *));

189 
£q_˛o£
 
	`__P
((
GS
 *));

190 
£q_dump
 
	`__P
((
SCR
 *, 
£q_t
, ));

191 
£q_ßve
 
	`__P
((
SCR
 *, 
FILE
 *, *, 
£q_t
));

192 
e_memcmp
 
	`__P
((
CHAR_T
 *, 
EVENT
 *, 
size_t
));

193 *
böc
 
	`__P
((
SCR
 *, *, 
size_t
 *, size_t));

194 
n⁄bœnk
 
	`__P
((
SCR
 *, 
ª˙o_t
, 
size_t
 *));

195 *
èû
 
	`__P
((*));

196 
CHAR_T
 *
v_°rdup
 
	`__P
((
SCR
 *, c⁄° CHAR_T *, 
size_t
));

197 
ƒesu…
 
ngë_u¶⁄g
 
	`__P
((
u_l⁄g
 *, const *, **, ));

198 
ƒesu…
 
ngë_¶⁄g
 
	`__P
((*, const *, **, ));

199 
TRACE
 
	`__P
((
SCR
 *, const *, ...));

	@include/ex_def.h

1 
	#C_SCROLL
 0

	)

2 
	#C_BANG
 1

	)

3 
	#C_HASH
 2

	)

4 
	#C_SUBAGAIN
 3

	)

5 
	#C_STAR
 4

	)

6 
	#C_SHIFTL
 5

	)

7 
	#C_EQUAL
 6

	)

8 
	#C_SHIFTR
 7

	)

9 
	#C_AT
 8

	)

10 
	#C_APPEND
 9

	)

11 
	#C_ABBR
 10

	)

12 
	#C_ARGS
 11

	)

13 
	#C_BG
 12

	)

14 
	#C_CHANGE
 13

	)

15 
	#C_CD
 14

	)

16 
	#C_CHDIR
 15

	)

17 
	#C_COPY
 16

	)

18 
	#C_CSCOPE
 17

	)

19 
	#C_DELETE
 18

	)

20 
	#C_DISPLAY
 19

	)

21 
	#C_EDIT
 20

	)

22 
	#C_EX
 21

	)

23 
	#C_EXUSAGE
 22

	)

24 
	#C_FILE
 23

	)

25 
	#C_FG
 24

	)

26 
	#C_GLOBAL
 25

	)

27 
	#C_HELP
 26

	)

28 
	#C_INSERT
 27

	)

29 
	#C_JOIN
 28

	)

30 
	#C_K
 29

	)

31 
	#C_LIST
 30

	)

32 
	#C_MOVE
 31

	)

33 
	#C_MARK
 32

	)

34 
	#C_MAP
 33

	)

35 
	#C_MKEXRC
 34

	)

36 
	#C_NEXT
 35

	)

37 
	#C_NUMBER
 36

	)

38 
	#C_OPEN
 37

	)

39 
	#C_PRINT
 38

	)

40 
	#C_PERLCMD
 39

	)

41 
	#C_PERLDOCMD
 40

	)

42 
	#C_PRESERVE
 41

	)

43 
	#C_PREVIOUS
 42

	)

44 
	#C_PUT
 43

	)

45 
	#C_QUIT
 44

	)

46 
	#C_READ
 45

	)

47 
	#C_RECOVER
 46

	)

48 
	#C_RESIZE
 47

	)

49 
	#C_REWIND
 48

	)

50 
	#C_SUBSTITUTE
 49

	)

51 
	#C_SCRIPT
 50

	)

52 
	#C_SET
 51

	)

53 
	#C_SHELL
 52

	)

54 
	#C_SOURCE
 53

	)

55 
	#C_STOP
 54

	)

56 
	#C_SUSPEND
 55

	)

57 
	#C_T
 56

	)

58 
	#C_TAG
 57

	)

59 
	#C_TAGNEXT
 58

	)

60 
	#C_TAGPOP
 59

	)

61 
	#C_TAGPREV
 60

	)

62 
	#C_TAGTOP
 61

	)

63 
	#C_TCLCMD
 62

	)

64 
	#C_UNDO
 63

	)

65 
	#C_UNABBREVIATE
 64

	)

66 
	#C_UNMAP
 65

	)

67 
	#C_V
 66

	)

68 
	#C_VERSION
 67

	)

69 
	#C_VISUAL_EX
 68

	)

70 
	#C_VISUAL_VI
 69

	)

71 
	#C_VIUSAGE
 70

	)

72 
	#C_WRITE
 71

	)

73 
	#C_WN
 72

	)

74 
	#C_WQ
 73

	)

75 
	#C_XIT
 74

	)

76 
	#C_YANK
 75

	)

77 
	#C_Z
 76

	)

78 
	#C_SUBTILDE
 77

	)

	@include/ex_extern.h

1 
ex
 
__P
((
SCR
 **));

2 
ex_cmd
 
__P
((
SCR
 *));

3 
ex_ønge
 
__P
((
SCR
 *, 
EXCMD
 *, *));

4 
ex_is_abbªv
 
__P
((*, 
size_t
));

5 
ex_is_unm≠
 
__P
((*, 
size_t
));

6 
ex_badaddr


7 
__P
((
SCR
 *, 
EXCMDLIST
 c⁄° *, 
badaddr
, 
ƒesu…
));

8 
ex_abbr
 
__P
((
SCR
 *, 
EXCMD
 *));

9 
ex_u«bbr
 
__P
((
SCR
 *, 
EXCMD
 *));

10 
ex_≠≥nd
 
__P
((
SCR
 *, 
EXCMD
 *));

11 
ex_ch™ge
 
__P
((
SCR
 *, 
EXCMD
 *));

12 
ex_ö£π
 
__P
((
SCR
 *, 
EXCMD
 *));

13 
ex_√xt
 
__P
((
SCR
 *, 
EXCMD
 *));

14 
ex_¥ev
 
__P
((
SCR
 *, 
EXCMD
 *));

15 
ex_ªw
 
__P
((
SCR
 *, 
EXCMD
 *));

16 
ex_¨gs
 
__P
((
SCR
 *, 
EXCMD
 *));

17 **
ex_buûd¨gv
 
__P
((
SCR
 *, 
EXCMD
 *, *));

18 
¨gv_öô
 
__P
((
SCR
 *, 
EXCMD
 *));

19 
¨gv_exp0
 
__P
((
SCR
 *, 
EXCMD
 *, *, 
size_t
));

20 
¨gv_exp1
 
__P
((
SCR
 *, 
EXCMD
 *, *, 
size_t
, ));

21 
¨gv_exp2
 
__P
((
SCR
 *, 
EXCMD
 *, *, 
size_t
));

22 
¨gv_exp3
 
__P
((
SCR
 *, 
EXCMD
 *, *, 
size_t
));

23 
¨gv_‰ì
 
__P
((
SCR
 *));

24 
ex_©
 
__P
((
SCR
 *, 
EXCMD
 *));

25 
ex_b™g
 
__P
((
SCR
 *, 
EXCMD
 *));

26 
ex_cd
 
__P
((
SCR
 *, 
EXCMD
 *));

27 
ex_csc›e
 
__P
((
SCR
 *, 
EXCMD
 *));

28 
csc›e_di•œy
 
__P
((
SCR
 *));

29 
csc›e_£¨ch
 
__P
((
SCR
 *, 
TAGQ
 *, 
TAG
 *));

30 
ex_dñëe
 
__P
((
SCR
 *, 
EXCMD
 *));

31 
ex_di•œy
 
__P
((
SCR
 *, 
EXCMD
 *));

32 
ex_edô
 
__P
((
SCR
 *, 
EXCMD
 *));

33 
ex_equÆ
 
__P
((
SCR
 *, 
EXCMD
 *));

34 
ex_fûe
 
__P
((
SCR
 *, 
EXCMD
 *));

35 
ex_fûãr
 
__P
((
SCR
 *,

36 
EXCMD
 *, 
MARK
 *, MARK *, MARK *, *, 
fûãπy≥
));

37 
ex_globÆ
 
__P
((
SCR
 *, 
EXCMD
 *));

38 
ex_v
 
__P
((
SCR
 *, 
EXCMD
 *));

39 
ex_g_ösdñ
 
__P
((
SCR
 *, 
 ›_t
, 
ª˙o_t
));

40 
ex_s¸ìn_c›y
 
__P
((
SCR
 *, SCR *));

41 
ex_s¸ìn_íd
 
__P
((
SCR
 *));

42 
ex_›tch™ge
 
__P
((
SCR
 *, , *, 
u_l⁄g
 *));

43 
ex_exrc
 
__P
((
SCR
 *));

44 
ex_run_°r
 
__P
((
SCR
 *, *, *, 
size_t
, , ));

45 
ex_joö
 
__P
((
SCR
 *, 
EXCMD
 *));

46 
ex_m≠
 
__P
((
SCR
 *, 
EXCMD
 *));

47 
ex_unm≠
 
__P
((
SCR
 *, 
EXCMD
 *));

48 
ex_m¨k
 
__P
((
SCR
 *, 
EXCMD
 *));

49 
ex_mkexrc
 
__P
((
SCR
 *, 
EXCMD
 *));

50 
ex_c›y
 
__P
((
SCR
 *, 
EXCMD
 *));

51 
ex_move
 
__P
((
SCR
 *, 
EXCMD
 *));

52 
ex_›í
 
__P
((
SCR
 *, 
EXCMD
 *));

53 
ex_≥æ
 
__P
((
SCR
*, 
EXCMD
 *));

54 
ex_¥e£rve
 
__P
((
SCR
 *, 
EXCMD
 *));

55 
ex_ªcovî
 
__P
((
SCR
 *, 
EXCMD
 *));

56 
ex_li°
 
__P
((
SCR
 *, 
EXCMD
 *));

57 
ex_numbî
 
__P
((
SCR
 *, 
EXCMD
 *));

58 
ex_¥
 
__P
((
SCR
 *, 
EXCMD
 *));

59 
ex_¥öt
 
__P
((
SCR
 *, 
EXCMD
 *, 
MARK
 *, MARK *, 
u_öt32_t
));

60 
ex_ldi•œy
 
__P
((
SCR
 *, c⁄° *, 
size_t
, size_t, 
u_öt
));

61 
ex_s˝röt
 
__P
((
SCR
 *, 
MARK
 *, MARK *));

62 
ex_¥ötf
 
__P
((
SCR
 *, const *, ...));

63 
ex_puts
 
__P
((
SCR
 *, const *));

64 
ex_fÊush
 
__P
((
SCR
 *
•
));

65 
ex_put
 
__P
((
SCR
 *, 
EXCMD
 *));

66 
ex_quô
 
__P
((
SCR
 *, 
EXCMD
 *));

67 
ex_ªad
 
__P
((
SCR
 *, 
EXCMD
 *));

68 
ex_ªadÂ
 
__P
((
SCR
 *, *, 
FILE
 *, 
MARK
 *, 
ª˙o_t
 *, ));

69 
ex_bg
 
__P
((
SCR
 *, 
EXCMD
 *));

70 
ex_fg
 
__P
((
SCR
 *, 
EXCMD
 *));

71 
ex_ªsize
 
__P
((
SCR
 *, 
EXCMD
 *));

72 
ex_sdi•œy
 
__P
((
SCR
 *));

73 
ex_s¸ùt
 
__P
((
SCR
 *, 
EXCMD
 *));

74 
ss¸_exec
 
__P
((
SCR
 *, 
ª˙o_t
));

75 
ss¸_öput
 
__P
((
SCR
 *));

76 
ss¸_íd
 
__P
((
SCR
 *));

77 
ex_£t
 
__P
((
SCR
 *, 
EXCMD
 *));

78 
ex_shñl
 
__P
((
SCR
 *, 
EXCMD
 *));

79 
ex_exec_¥oc
 
__P
((
SCR
 *, 
EXCMD
 *, *, const *, ));

80 
¥oc_waô
 
__P
((
SCR
 *, , const *, , ));

81 
ex_shi·l
 
__P
((
SCR
 *, 
EXCMD
 *));

82 
ex_shi·r
 
__P
((
SCR
 *, 
EXCMD
 *));

83 
ex_sour˚
 
__P
((
SCR
 *, 
EXCMD
 *));

84 
ex_°›
 
__P
((
SCR
 *, 
EXCMD
 *));

85 
ex_s
 
__P
((
SCR
 *, 
EXCMD
 *));

86 
ex_subagaö
 
__P
((
SCR
 *, 
EXCMD
 *));

87 
ex_subtûde
 
__P
((
SCR
 *, 
EXCMD
 *));

88 
ª_compûe
 
__P
((
SCR
 *,

89 *, 
size_t
, **, size_à*, 
ªgex_t
 *, 
u_öt
));

90 
ª_îr‹
 
__P
((
SCR
 *, , 
ªgex_t
 *));

91 
ex_èg_fú°
 
__P
((
SCR
 *, *));

92 
ex_èg_push
 
__P
((
SCR
 *, 
EXCMD
 *));

93 
ex_èg_√xt
 
__P
((
SCR
 *, 
EXCMD
 *));

94 
ex_èg_¥ev
 
__P
((
SCR
 *, 
EXCMD
 *));

95 
ex_èg_nswôch
 
__P
((
SCR
 *, 
TAG
 *, ));

96 
ex_èg_Nswôch
 
__P
((
SCR
 *, 
TAG
 *, ));

97 
ex_èg_p›
 
__P
((
SCR
 *, 
EXCMD
 *));

98 
ex_èg_t›
 
__P
((
SCR
 *, 
EXCMD
 *));

99 
ex_èg_di•œy
 
__P
((
SCR
 *));

100 
ex_èg_c›y
 
__P
((
SCR
 *, SCR *));

101 
ègq_‰ì
 
__P
((
SCR
 *, 
TAGQ
 *));

102 
èg_msg
 
__P
((
SCR
 *, 
ègmsg_t
, *));

103 
ex_ègf_Æloc
 
__P
((
SCR
 *, *));

104 
ex_èg_‰ì
 
__P
((
SCR
 *));

105 
ex_t˛
 
__P
((
SCR
*, 
EXCMD
 *));

106 
ex_txt
 
__P
((
SCR
 *, 
TEXTH
 *, 
ARG_CHAR_T
, 
u_öt32_t
));

107 
ex_undo
 
__P
((
SCR
 *, 
EXCMD
 *));

108 
ex_hñp
 
__P
((
SCR
 *, 
EXCMD
 *));

109 
ex_ußge
 
__P
((
SCR
 *, 
EXCMD
 *));

110 
ex_viußge
 
__P
((
SCR
 *, 
EXCMD
 *));

111 
ex_cöô
 
__P
((
EXCMD
 *,

112 , , 
ª˙o_t
,Ñe˙o_t, , 
ARGS
 **));

113 
ex_ˇdd
 
__P
((
EXCMD
 *, 
ARGS
 *, *, 
size_t
));

114 
ex_gëlöe
 
__P
((
SCR
 *, 
FILE
 *, 
size_t
 *));

115 
ex_ncheck
 
__P
((
SCR
 *, ));

116 
ex_öô
 
__P
((
SCR
 *));

117 
ex_emsg
 
__P
((
SCR
 *, *, 
exm_t
));

118 
ex_vîsi⁄
 
__P
((
SCR
 *, 
EXCMD
 *));

119 
ex_visuÆ
 
__P
((
SCR
 *, 
EXCMD
 *));

120 
ex_wn
 
__P
((
SCR
 *, 
EXCMD
 *));

121 
ex_wq
 
__P
((
SCR
 *, 
EXCMD
 *));

122 
ex_wrôe
 
__P
((
SCR
 *, 
EXCMD
 *));

123 
ex_xô
 
__P
((
SCR
 *, 
EXCMD
 *));

124 
ex_wrôeÂ
 
__P
((
SCR
 *,

125 *, 
FILE
 *, 
MARK
 *, MARK *, 
u_l⁄g
 *, u_long *, ));

126 
ex_y™k
 
__P
((
SCR
 *, 
EXCMD
 *));

127 
ex_z
 
__P
((
SCR
 *, 
EXCMD
 *));

	@include/ip_extern.h

1 
ù_add°r
 
__P
((
SCR
 *, c⁄° *, 
size_t
));

2 
ù_©å
 
__P
((
SCR
 *, 
s¸_©å_t
, ));

3 
ù_baud
 
__P
((
SCR
 *, 
u_l⁄g
 *));

4 
ù_bñl
 
__P
((
SCR
 *));

5 
ù_busy
 
__P
((
SCR
 *, c⁄° *, 
busy_t
));

6 
ù_˛π€ﬁ
 
__P
((
SCR
 *));

7 
ù_curs‹
 
__P
((
SCR
 *, 
size_t
 *, size_t *));

8 
ù_dñëñn
 
__P
((
SCR
 *));

9 
ù_ex_adju°
 
__P
((
SCR
 *, 
exadj_t
));

10 
ù_ö£π 
 
__P
((
SCR
 *));

11 
ù_keyvÆ
 
__P
((
SCR
 *, 
s¸_keyvÆ_t
, 
CHAR_T
 *, *));

12 
ù_move
 
__P
((
SCR
 *, 
size_t
, size_t));

13 
ù_ª‰esh
 
__P
((
SCR
 *, ));

14 
ù_ª«me
 
__P
((
SCR
 *));

15 
ù_su•íd
 
__P
((
SCR
 *, *));

16 
ù_ußge
 
__P
(());

17 
ù_evít
 
__P
((
SCR
 *, 
EVENT
 *, 
u_öt32_t
, ));

18 
ù_s¸ìn
 
__P
((
SCR
 *, 
u_öt32_t
));

19 
ù_quô
 
__P
((
GS
 *));

20 
ù_ãrm_öô
 
__P
((
SCR
 *));

21 
ù_ãrm_íd
 
__P
((
GS
 *));

22 
ù_fm≠
 
__P
((
SCR
 *, 
£q_t
, 
CHAR_T
 *, 
size_t
, CHAR_T *, size_t));

23 
ù_›tch™ge
 
__P
((
SCR
 *, , *, 
u_l⁄g
 *));

	@include/options_def.h

1 
	#O_ALTWERASE
 0

	)

2 
	#O_AUTOINDENT
 1

	)

3 
	#O_AUTOPRINT
 2

	)

4 
	#O_AUTOWRITE
 3

	)

5 
	#O_BACKUP
 4

	)

6 
	#O_BEAUTIFY
 5

	)

7 
	#O_CDPATH
 6

	)

8 
	#O_CEDIT
 7

	)

9 
	#O_COLUMNS
 8

	)

10 
	#O_COMMENT
 9

	)

11 
	#O_DIRECTORY
 10

	)

12 
	#O_EDCOMPATIBLE
 11

	)

13 
	#O_ESCAPETIME
 12

	)

14 
	#O_ERRORBELLS
 13

	)

15 
	#O_EXRC
 14

	)

16 
	#O_EXTENDED
 15

	)

17 
	#O_FILEC
 16

	)

18 
	#O_FLASH
 17

	)

19 
	#O_HARDTABS
 18

	)

20 
	#O_ICLOWER
 19

	)

21 
	#O_IGNORECASE
 20

	)

22 
	#O_KEYTIME
 21

	)

23 
	#O_LEFTRIGHT
 22

	)

24 
	#O_LINES
 23

	)

25 
	#O_LISP
 24

	)

26 
	#O_LIST
 25

	)

27 
	#O_LOCKFILES
 26

	)

28 
	#O_MAGIC
 27

	)

29 
	#O_MATCHTIME
 28

	)

30 
	#O_MESG
 29

	)

31 
	#O_MODELINE
 30

	)

32 
	#O_MSGCAT
 31

	)

33 
	#O_NOPRINT
 32

	)

34 
	#O_NUMBER
 33

	)

35 
	#O_OCTAL
 34

	)

36 
	#O_OPEN
 35

	)

37 
	#O_OPTIMIZE
 36

	)

38 
	#O_PARAGRAPHS
 37

	)

39 
	#O_PATH
 38

	)

40 
	#O_PRINT
 39

	)

41 
	#O_PROMPT
 40

	)

42 
	#O_READONLY
 41

	)

43 
	#O_RECDIR
 42

	)

44 
	#O_REDRAW
 43

	)

45 
	#O_REMAP
 44

	)

46 
	#O_REPORT
 45

	)

47 
	#O_RULER
 46

	)

48 
	#O_SCROLL
 47

	)

49 
	#O_SEARCHINCR
 48

	)

50 
	#O_SECTIONS
 49

	)

51 
	#O_SECURE
 50

	)

52 
	#O_SHELL
 51

	)

53 
	#O_SHELLMETA
 52

	)

54 
	#O_SHIFTWIDTH
 53

	)

55 
	#O_SHOWMATCH
 54

	)

56 
	#O_SHOWMODE
 55

	)

57 
	#O_SIDESCROLL
 56

	)

58 
	#O_SLOWOPEN
 57

	)

59 
	#O_SOURCEANY
 58

	)

60 
	#O_TABSTOP
 59

	)

61 
	#O_TAGLENGTH
 60

	)

62 
	#O_TAGS
 61

	)

63 
	#O_TERM
 62

	)

64 
	#O_TERSE
 63

	)

65 
	#O_TILDEOP
 64

	)

66 
	#O_TIMEOUT
 65

	)

67 
	#O_TTYWERASE
 66

	)

68 
	#O_VERBOSE
 67

	)

69 
	#O_W1200
 68

	)

70 
	#O_W300
 69

	)

71 
	#O_W9600
 70

	)

72 
	#O_WARN
 71

	)

73 
	#O_WINDOW
 72

	)

74 
	#O_WINDOWNAME
 73

	)

75 
	#O_WRAPLEN
 74

	)

76 
	#O_WRAPMARGIN
 75

	)

77 
	#O_WRAPSCAN
 76

	)

78 
	#O_WRITEANY
 77

	)

79 
	#O_OPTIONCOUNT
 78

	)

	@include/perl_extern.h

1 
≥æ_íd
 
__P
((
GS
 *));

2 
≥æ_öô
 
__P
((
SCR
 *));

3 
≥æ_s¸ìn_íd
 
__P
((
SCR
*));

4 
≥æ_ex_≥æ
 
__P
((
SCR
*, 
CHAR_T
 *, 
size_t
, 
ª˙o_t
,Ñecno_t));

5 
≥æ_ex_≥ædo
 
__P
((
SCR
*, 
CHAR_T
 *, 
size_t
, 
ª˙o_t
,Ñecno_t));

6 #ifde‡
USE_SFIO


7 
Sfdisc_t
* 
sfd˙ewnvi
 
__P
((
SCR
*));

	@include/sys/queue.h

36 #i‚def 
_SYS_QUEUE_H_


37 
	#_SYS_QUEUE_H_


	)

71 
	#LIST_HEAD
(
«me
, 
ty≥
) \

72 
	s«me
 { \

73 
ty≥
 *
lh_fú°
; \

74 }

	)

76 
	#LIST_ENTRY
(
ty≥
) \

78 
ty≥
 *
À_√xt
; \

79 
ty≥
 **
À_¥ev
; \

80 }

	)

85 
	#LIST_INIT
(
hód
) { \

86 (
hód
)->
lh_fú°
 = 
NULL
; \

87 }

	)

89 
	#LIST_INSERT_AFTER
(
li°ñm
, 
ñm
, 
fõld
) { \

90 i‡(((
ñm
)->
fõld
.
À_√xt
 = (
li°ñm
)->fõld.À_√xtË!
NULL
) \

91 (
li°ñm
)->
fõld
.
À_√xt
->fõld.
À_¥ev
 = \

92 &(
ñm
)->
fõld
.
À_√xt
; \

93 (
li°ñm
)->
fõld
.
À_√xt
 = (
ñm
); \

94 (
ñm
)->
fõld
.
À_¥ev
 = &(
li°ñm
)->fõld.
À_√xt
; \

95 }

	)

97 
	#LIST_INSERT_BEFORE
(
li°ñm
, 
ñm
, 
fõld
) { \

98 (
ñm
)->
fõld
.
À_¥ev
 = (
li°ñm
)->field.le_prev; \

99 (
ñm
)->
fõld
.
À_√xt
 = (
li°ñm
); \

100 *(
li°ñm
)->
fõld
.
À_¥ev
 = (
ñm
); \

101 (
li°ñm
)->
fõld
.
À_¥ev
 = &(
ñm
)->fõld.
À_√xt
; \

102 }

	)

104 
	#LIST_INSERT_HEAD
(
hód
, 
ñm
, 
fõld
) { \

105 i‡(((
ñm
)->
fõld
.
À_√xt
 = (
hód
)->
lh_fú°
Ë!
NULL
) \

106 (
hód
)->
lh_fú°
->
fõld
.
À_¥ev
 = &(
ñm
)->fõld.
À_√xt
;\

107 (
hód
)->
lh_fú°
 = (
ñm
); \

108 (
ñm
)->
fõld
.
À_¥ev
 = &(
hód
)->
lh_fú°
; \

109 }

	)

111 
	#LIST_REMOVE
(
ñm
, 
fõld
) { \

112 i‡((
ñm
)->
fõld
.
À_√xt
 !
NULL
) \

113 (
ñm
)->
fõld
.
À_√xt
->fõld.
À_¥ev
 = \

114 (
ñm
)->
fõld
.
À_¥ev
; \

115 *(
ñm
)->
fõld
.
À_¥ev
 = (ñm)->fõld.
À_√xt
; \

116 }

	)

121 
	#TAILQ_HEAD
(
«me
, 
ty≥
) \

122 
	s«me
 { \

123 
ty≥
 *
tqh_fú°
; \

124 
ty≥
 **
tqh_œ°
; \

125 }

	)

127 
	#TAILQ_ENTRY
(
ty≥
) \

129 
ty≥
 *
tqe_√xt
; \

130 
ty≥
 **
tqe_¥ev
; \

131 }

	)

136 
	#TAILQ_INIT
(
hód
) { \

137 (
hód
)->
tqh_fú°
 = 
NULL
; \

138 (
hód
)->
tqh_œ°
 = &(hód)->
tqh_fú°
; \

139 }

	)

141 
	#TAILQ_INSERT_HEAD
(
hód
, 
ñm
, 
fõld
) { \

142 i‡(((
ñm
)->
fõld
.
tqe_√xt
 = (
hód
)->
tqh_fú°
Ë!
NULL
) \

143 (
hód
)->
tqh_fú°
->
fõld
.
tqe_¥ev
 = \

144 &(
ñm
)->
fõld
.
tqe_√xt
; \

146 (
hód
)->
tqh_œ°
 = &(
ñm
)->
fõld
.
tqe_√xt
; \

147 (
hód
)->
tqh_fú°
 = (
ñm
); \

148 (
ñm
)->
fõld
.
tqe_¥ev
 = &(
hód
)->
tqh_fú°
; \

149 }

	)

151 
	#TAILQ_INSERT_TAIL
(
hód
, 
ñm
, 
fõld
) { \

152 (
ñm
)->
fõld
.
tqe_√xt
 = 
NULL
; \

153 (
ñm
)->
fõld
.
tqe_¥ev
 = (
hód
)->
tqh_œ°
; \

154 *(
hód
)->
tqh_œ°
 = (
ñm
); \

155 (
hód
)->
tqh_œ°
 = &(
ñm
)->
fõld
.
tqe_√xt
; \

156 }

	)

158 
	#TAILQ_INSERT_AFTER
(
hód
, 
li°ñm
, 
ñm
, 
fõld
) { \

159 i‡(((
ñm
)->
fõld
.
tqe_√xt
 = (
li°ñm
)->fõld.tqe_√xtË!
NULL
)\

160 (
ñm
)->
fõld
.
tqe_√xt
->fõld.
tqe_¥ev
 = \

161 &(
ñm
)->
fõld
.
tqe_√xt
; \

163 (
hód
)->
tqh_œ°
 = &(
ñm
)->
fõld
.
tqe_√xt
; \

164 (
li°ñm
)->
fõld
.
tqe_√xt
 = (
ñm
); \

165 (
ñm
)->
fõld
.
tqe_¥ev
 = &(
li°ñm
)->fõld.
tqe_√xt
; \

166 }

	)

168 
	#TAILQ_INSERT_BEFORE
(
li°ñm
, 
ñm
, 
fõld
) { \

169 (
ñm
)->
fõld
.
tqe_¥ev
 = (
li°ñm
)->field.tqe_prev; \

170 (
ñm
)->
fõld
.
tqe_√xt
 = (
li°ñm
); \

171 *(
li°ñm
)->
fõld
.
tqe_¥ev
 = (
ñm
); \

172 (
li°ñm
)->
fõld
.
tqe_¥ev
 = &(
ñm
)->fõld.
tqe_√xt
; \

173 }

	)

175 
	#TAILQ_REMOVE
(
hód
, 
ñm
, 
fõld
) { \

176 i‡(((
ñm
)->
fõld
.
tqe_√xt
Ë!
NULL
) \

177 (
ñm
)->
fõld
.
tqe_√xt
->fõld.
tqe_¥ev
 = \

178 (
ñm
)->
fõld
.
tqe_¥ev
; \

180 (
hód
)->
tqh_œ°
 = (
ñm
)->
fõld
.
tqe_¥ev
; \

181 *(
ñm
)->
fõld
.
tqe_¥ev
 = (ñm)->fõld.
tqe_√xt
; \

182 }

	)

187 
	#CIRCLEQ_HEAD
(
«me
, 
ty≥
) \

188 
	s«me
 { \

189 
ty≥
 *
cqh_fú°
; \

190 
ty≥
 *
cqh_œ°
; \

191 }

	)

193 
	#CIRCLEQ_ENTRY
(
ty≥
) \

195 
ty≥
 *
cqe_√xt
; \

196 
ty≥
 *
cqe_¥ev
; \

197 }

	)

202 
	#CIRCLEQ_INIT
(
hód
) { \

203 (
hód
)->
cqh_fú°
 = (*)(head); \

204 (
hód
)->
cqh_œ°
 = (*)(head); \

205 }

	)

207 
	#CIRCLEQ_INSERT_AFTER
(
hód
, 
li°ñm
, 
ñm
, 
fõld
) { \

208 (
ñm
)->
fõld
.
cqe_√xt
 = (
li°ñm
)->field.cqe_next; \

209 (
ñm
)->
fõld
.
cqe_¥ev
 = (
li°ñm
); \

210 i‡((
li°ñm
)->
fõld
.
cqe_√xt
 =(*)(
hód
)) \

211 (
hód
)->
cqh_œ°
 = (
ñm
); \

213 (
li°ñm
)->
fõld
.
cqe_√xt
->fõld.
cqe_¥ev
 = (
ñm
); \

214 (
li°ñm
)->
fõld
.
cqe_√xt
 = (
ñm
); \

215 }

	)

217 
	#CIRCLEQ_INSERT_BEFORE
(
hód
, 
li°ñm
, 
ñm
, 
fõld
) { \

218 (
ñm
)->
fõld
.
cqe_√xt
 = (
li°ñm
); \

219 (
ñm
)->
fõld
.
cqe_¥ev
 = (
li°ñm
)->field.cqe_prev; \

220 i‡((
li°ñm
)->
fõld
.
cqe_¥ev
 =(*)(
hód
)) \

221 (
hód
)->
cqh_fú°
 = (
ñm
); \

223 (
li°ñm
)->
fõld
.
cqe_¥ev
->fõld.
cqe_√xt
 = (
ñm
); \

224 (
li°ñm
)->
fõld
.
cqe_¥ev
 = (
ñm
); \

225 }

	)

227 
	#CIRCLEQ_INSERT_HEAD
(
hód
, 
ñm
, 
fõld
) { \

228 (
ñm
)->
fõld
.
cqe_√xt
 = (
hód
)->
cqh_fú°
; \

229 (
ñm
)->
fõld
.
cqe_¥ev
 = (*)(
hód
); \

230 i‡((
hód
)->
cqh_œ°
 == (*)(head)) \

231 (
hód
)->
cqh_œ°
 = (
ñm
); \

233 (
hód
)->
cqh_fú°
->
fõld
.
cqe_¥ev
 = (
ñm
); \

234 (
hód
)->
cqh_fú°
 = (
ñm
); \

235 }

	)

237 
	#CIRCLEQ_INSERT_TAIL
(
hód
, 
ñm
, 
fõld
) { \

238 (
ñm
)->
fõld
.
cqe_√xt
 = (*)(
hód
); \

239 (
ñm
)->
fõld
.
cqe_¥ev
 = (
hód
)->
cqh_œ°
; \

240 i‡((
hód
)->
cqh_fú°
 == (*)(head)) \

241 (
hód
)->
cqh_fú°
 = (
ñm
); \

243 (
hód
)->
cqh_œ°
->
fõld
.
cqe_√xt
 = (
ñm
); \

244 (
hód
)->
cqh_œ°
 = (
ñm
); \

245 }

	)

247 
	#CIRCLEQ_REMOVE
(
hód
, 
ñm
, 
fõld
) { \

248 i‡((
ñm
)->
fõld
.
cqe_√xt
 =(*)(
hód
)) \

249 (
hód
)->
cqh_œ°
 = (
ñm
)->
fõld
.
cqe_¥ev
; \

251 (
ñm
)->
fõld
.
cqe_√xt
->fõld.
cqe_¥ev
 = \

252 (
ñm
)->
fõld
.
cqe_¥ev
; \

253 i‡((
ñm
)->
fõld
.
cqe_¥ev
 =(*)(
hód
)) \

254 (
hód
)->
cqh_fú°
 = (
ñm
)->
fõld
.
cqe_√xt
; \

256 (
ñm
)->
fõld
.
cqe_¥ev
->fõld.
cqe_√xt
 = \

257 (
ñm
)->
fõld
.
cqe_√xt
; \

258 }

	)

	@include/tcl_extern.h

1 
t˛_öô
 
__P
((
GS
 *));

	@include/tk_extern.h

1 
tk_add°r
 
__P
((
SCR
 *, c⁄° *, 
size_t
));

2 
tk_©å
 
__P
((
SCR
 *, 
s¸_©å_t
, ));

3 
tk_baud
 
__P
((
SCR
 *, 
u_l⁄g
 *));

4 
tk_bñl
 
__P
((
SCR
 *));

5 
tk_˛π€ﬁ
 
__P
((
SCR
 *));

6 
tk_curs‹
 
__P
((
SCR
 *, 
size_t
 *, size_t *));

7 
tk_dñëñn
 
__P
((
SCR
 *));

8 
tk_ex_adju°
 
__P
((
SCR
 *, 
exadj_t
));

9 
tk_ö£π 
 
__P
((
SCR
 *));

10 
tk_keyvÆ
 
__P
((
SCR
 *, 
s¸_keyvÆ_t
, 
CHAR_T
 *, *));

11 
tk_move
 
__P
((
SCR
 *, 
size_t
, size_t));

12 
tk_ª‰esh
 
__P
((
SCR
 *, ));

13 
tk_ª«me
 
__P
((
SCR
 *));

14 
tk_su•íd
 
__P
((
SCR
 *, *));

15 
tk_ußge
 
__P
(());

16 
tk_evít
 
__P
((
SCR
 *, 
EVENT
 *, 
u_öt32_t
, ));

17 
tk_key
 
__P
((
Clõ¡D©a
, 
T˛_I¡îp
 *, , *[]));

18 
tk_s¸ìn
 
__P
((
SCR
 *, 
u_öt32_t
));

19 
tk_quô
 
__P
((
GS
 *));

20 
tk_ãrm_öô
 
__P
((
SCR
 *));

21 
tk_ãrm_íd
 
__P
((
GS
 *));

22 
tk_fm≠
 
__P
((
SCR
 *, 
£q_t
, 
CHAR_T
 *, 
size_t
, CHAR_T *, size_t));

23 
tk_›tch™ge
 
__P
((
SCR
 *, , *, 
u_l⁄g
 *));

24 
tk_ssize
 
__P
((
SCR
 *, , 
size_t
 *, size_t *, *));

25 
tk_›
 
__P
((
Clõ¡D©a
, 
T˛_I¡îp
 *, , *[]));

26 
tk_›t_öô
 
__P
((
Clõ¡D©a
, 
T˛_I¡îp
 *, , *[]));

27 
tk_›t_£t
 
__P
((
Clõ¡D©a
, 
T˛_I¡îp
 *, , *[]));

28 
tk_vîsi⁄
 
__P
((
Clõ¡D©a
, 
T˛_I¡îp
 *, , *[]));

29 
tk_msg
 
__P
((
SCR
 *, 
mty≥_t
, *, 
size_t
));

	@include/vi_extern.h

1 
cs_öô
 
__P
((
SCR
 *, 
VCS
 *));

2 
cs_√xt
 
__P
((
SCR
 *, 
VCS
 *));

3 
cs_f•a˚
 
__P
((
SCR
 *, 
VCS
 *));

4 
cs_fbœnk
 
__P
((
SCR
 *, 
VCS
 *));

5 
cs_¥ev
 
__P
((
SCR
 *, 
VCS
 *));

6 
cs_bbœnk
 
__P
((
SCR
 *, 
VCS
 *));

7 
v_©
 
__P
((
SCR
 *, 
VICMD
 *));

8 
v_chª≥©
 
__P
((
SCR
 *, 
VICMD
 *));

9 
v_chºïót
 
__P
((
SCR
 *, 
VICMD
 *));

10 
v_cht
 
__P
((
SCR
 *, 
VICMD
 *));

11 
v_chf
 
__P
((
SCR
 *, 
VICMD
 *));

12 
v_chT
 
__P
((
SCR
 *, 
VICMD
 *));

13 
v_chF
 
__P
((
SCR
 *, 
VICMD
 *));

14 
v_dñëe
 
__P
((
SCR
 *, 
VICMD
 *));

15 
v_agaö
 
__P
((
SCR
 *, 
VICMD
 *));

16 
v_exmode
 
__P
((
SCR
 *, 
VICMD
 *));

17 
v_joö
 
__P
((
SCR
 *, 
VICMD
 *));

18 
v_shi·l
 
__P
((
SCR
 *, 
VICMD
 *));

19 
v_shi·r
 
__P
((
SCR
 *, 
VICMD
 *));

20 
v_su•íd
 
__P
((
SCR
 *, 
VICMD
 *));

21 
v_swôch
 
__P
((
SCR
 *, 
VICMD
 *));

22 
v_ègpush
 
__P
((
SCR
 *, 
VICMD
 *));

23 
v_ègp›
 
__P
((
SCR
 *, 
VICMD
 *));

24 
v_fûãr
 
__P
((
SCR
 *, 
VICMD
 *));

25 
v_evít_exec
 
__P
((
SCR
 *, 
VICMD
 *));

26 
v_ex
 
__P
((
SCR
 *, 
VICMD
 *));

27 
v_e˛_exec
 
__P
((
SCR
 *));

28 
v_ö¸emít
 
__P
((
SCR
 *, 
VICMD
 *));

29 
v_s¸ìn_c›y
 
__P
((
SCR
 *, SCR *));

30 
v_s¸ìn_íd
 
__P
((
SCR
 *));

31 
v_›tch™ge
 
__P
((
SCR
 *, , *, 
u_l⁄g
 *));

32 
v_iA
 
__P
((
SCR
 *, 
VICMD
 *));

33 
v_ü
 
__P
((
SCR
 *, 
VICMD
 *));

34 
v_iI
 
__P
((
SCR
 *, 
VICMD
 *));

35 
v_ii
 
__P
((
SCR
 *, 
VICMD
 *));

36 
v_iO
 
__P
((
SCR
 *, 
VICMD
 *));

37 
v_io
 
__P
((
SCR
 *, 
VICMD
 *));

38 
v_ch™ge
 
__P
((
SCR
 *, 
VICMD
 *));

39 
v_Rïœ˚
 
__P
((
SCR
 *, 
VICMD
 *));

40 
v_sub°
 
__P
((
SCR
 *, 
VICMD
 *));

41 
v_À·
 
__P
((
SCR
 *, 
VICMD
 *));

42 
v_cfú°
 
__P
((
SCR
 *, 
VICMD
 *));

43 
v_fú°
 
__P
((
SCR
 *, 
VICMD
 *));

44 
v_ncﬁ
 
__P
((
SCR
 *, 
VICMD
 *));

45 
v_zîo
 
__P
((
SCR
 *, 
VICMD
 *));

46 
v_m¨k
 
__P
((
SCR
 *, 
VICMD
 *));

47 
v_bm¨k
 
__P
((
SCR
 *, 
VICMD
 *));

48 
v_fm¨k
 
__P
((
SCR
 *, 
VICMD
 *));

49 
v_m©ch
 
__P
((
SCR
 *, 
VICMD
 *));

50 
v_∑øgøphf
 
__P
((
SCR
 *, 
VICMD
 *));

51 
v_∑øgøphb
 
__P
((
SCR
 *, 
VICMD
 *));

52 
v_buûdps
 
__P
((
SCR
 *, *, *));

53 
v_Put
 
__P
((
SCR
 *, 
VICMD
 *));

54 
v_put
 
__P
((
SCR
 *, 
VICMD
 *));

55 
v_ªdøw
 
__P
((
SCR
 *, 
VICMD
 *));

56 
v_ª∂a˚
 
__P
((
SCR
 *, 
VICMD
 *));

57 
v_right
 
__P
((
SCR
 *, 
VICMD
 *));

58 
v_dﬁœr
 
__P
((
SCR
 *, 
VICMD
 *));

59 
v_s¸ìn
 
__P
((
SCR
 *, 
VICMD
 *));

60 
v_lgŸo
 
__P
((
SCR
 *, 
VICMD
 *));

61 
v_home
 
__P
((
SCR
 *, 
VICMD
 *));

62 
v_middÀ
 
__P
((
SCR
 *, 
VICMD
 *));

63 
v_bŸtom
 
__P
((
SCR
 *, 
VICMD
 *));

64 
v_up
 
__P
((
SCR
 *, 
VICMD
 *));

65 
v_¸
 
__P
((
SCR
 *, 
VICMD
 *));

66 
v_down
 
__P
((
SCR
 *, 
VICMD
 *));

67 
v_h∑geup
 
__P
((
SCR
 *, 
VICMD
 *));

68 
v_h∑gedown
 
__P
((
SCR
 *, 
VICMD
 *));

69 
v_∑gedown
 
__P
((
SCR
 *, 
VICMD
 *));

70 
v_∑geup
 
__P
((
SCR
 *, 
VICMD
 *));

71 
v_löeup
 
__P
((
SCR
 *, 
VICMD
 *));

72 
v_löedown
 
__P
((
SCR
 *, 
VICMD
 *));

73 
v_£¨chb
 
__P
((
SCR
 *, 
VICMD
 *));

74 
v_£¨chf
 
__P
((
SCR
 *, 
VICMD
 *));

75 
v_£¨chN
 
__P
((
SCR
 *, 
VICMD
 *));

76 
v_£¨chn
 
__P
((
SCR
 *, 
VICMD
 *));

77 
v_£¨chw
 
__P
((
SCR
 *, 
VICMD
 *));

78 
v_c‹ª˘
 
__P
((
SCR
 *, 
VICMD
 *, ));

79 
v_£˘i⁄f
 
__P
((
SCR
 *, 
VICMD
 *));

80 
v_£˘i⁄b
 
__P
((
SCR
 *, 
VICMD
 *));

81 
v_£¡í˚f
 
__P
((
SCR
 *, 
VICMD
 *));

82 
v_£¡í˚b
 
__P
((
SCR
 *, 
VICMD
 *));

83 
v_°©us
 
__P
((
SCR
 *, 
VICMD
 *));

84 
v_tcmd
 
__P
((
SCR
 *, 
VICMD
 *, 
ARG_CHAR_T
, 
u_öt
));

85 
v_txt
 
__P
((
SCR
 *, 
VICMD
 *, 
MARK
 *,

86 c⁄° *, 
size_t
, 
ARG_CHAR_T
, 
ª˙o_t
, 
u_l⁄g
, 
u_öt32_t
));

87 
v_txt_auto
 
__P
((
SCR
 *, 
ª˙o_t
, 
TEXT
 *, 
size_t
, TEXT *));

88 
v_ulˇ£
 
__P
((
SCR
 *, 
VICMD
 *));

89 
v_mulˇ£
 
__P
((
SCR
 *, 
VICMD
 *));

90 
v_Undo
 
__P
((
SCR
 *, 
VICMD
 *));

91 
v_undo
 
__P
((
SCR
 *, 
VICMD
 *));

92 
v_eof
 
__P
((
SCR
 *, 
MARK
 *));

93 
v_eﬁ
 
__P
((
SCR
 *, 
MARK
 *));

94 
v_nomove
 
__P
((
SCR
 *));

95 
v_sof
 
__P
((
SCR
 *, 
MARK
 *));

96 
v_sﬁ
 
__P
((
SCR
 *));

97 
v_i£m±y
 
__P
((*, 
size_t
));

98 
v_emsg
 
__P
((
SCR
 *, *, 
vim_t
));

99 
v_w‹dW
 
__P
((
SCR
 *, 
VICMD
 *));

100 
v_w‹dw
 
__P
((
SCR
 *, 
VICMD
 *));

101 
v_w‹dE
 
__P
((
SCR
 *, 
VICMD
 *));

102 
v_w‹de
 
__P
((
SCR
 *, 
VICMD
 *));

103 
v_w‹dB
 
__P
((
SCR
 *, 
VICMD
 *));

104 
v_w‹db
 
__P
((
SCR
 *, 
VICMD
 *));

105 
v_xch¨
 
__P
((
SCR
 *, 
VICMD
 *));

106 
v_Xch¨
 
__P
((
SCR
 *, 
VICMD
 *));

107 
v_y™k
 
__P
((
SCR
 *, 
VICMD
 *));

108 
v_z
 
__P
((
SCR
 *, 
VICMD
 *));

109 
vs_¸ñ
 
__P
((
SCR
 *, ));

110 
v_zexô
 
__P
((
SCR
 *, 
VICMD
 *));

111 
vi
 
__P
((
SCR
 **));

112 
vs_löe
 
__P
((
SCR
 *, 
SMAP
 *, 
size_t
 *, size_t *));

113 
vs_numbî
 
__P
((
SCR
 *));

114 
vs_busy
 
__P
((
SCR
 *, c⁄° *, 
busy_t
));

115 
vs_home
 
__P
((
SCR
 *));

116 
vs_upd©e
 
__P
((
SCR
 *, const *, const *));

117 
vs_msg
 
__P
((
SCR
 *, 
mty≥_t
, *, 
size_t
));

118 
vs_ex_ªsﬁve
 
__P
((
SCR
 *, *));

119 
vs_ªsﬁve
 
__P
((
SCR
 *, SCR *, ));

120 
vs_ª∑öt
 
__P
((
SCR
 *, 
EVENT
 *));

121 
vs_ª‰esh
 
__P
((
SCR
 *, ));

122 
vs_cﬁumn
 
__P
((
SCR
 *, 
size_t
 *));

123 
size_t
 
vs_s¸ìns
 
__P
((
SCR
 *, 
ª˙o_t
, size_t *));

124 
size_t
 
vs_cﬁumns
 
__P
((
SCR
 *, *, 
ª˙o_t
, size_t *, size_t *));

125 
size_t
 
vs_rcm
 
__P
((
SCR
 *, 
ª˙o_t
, ));

126 
size_t
 
vs_cﬁpos
 
__P
((
SCR
 *, 
ª˙o_t
, size_t));

127 
vs_ch™ge
 
__P
((
SCR
 *, 
ª˙o_t
, 
 ›_t
));

128 
vs_sm_fûl
 
__P
((
SCR
 *, 
ª˙o_t
, 
pos_t
));

129 
vs_sm_s¸ﬁl
 
__P
((
SCR
 *, 
MARK
 *, 
ª˙o_t
, 
s¸ﬁl_t
));

130 
vs_sm_1up
 
__P
((
SCR
 *));

131 
vs_sm_1down
 
__P
((
SCR
 *));

132 
vs_sm_√xt
 
__P
((
SCR
 *, 
SMAP
 *, SMAP *));

133 
vs_sm_¥ev
 
__P
((
SCR
 *, 
SMAP
 *, SMAP *));

134 
vs_sm_curs‹
 
__P
((
SCR
 *, 
SMAP
 **));

135 
vs_sm_posôi⁄
 
__P
((
SCR
 *, 
MARK
 *, 
u_l⁄g
, 
pos_t
));

136 
ª˙o_t
 
vs_sm_∆öes
 
__P
((
SCR
 *, 
SMAP
 *,Ñe˙o_t, 
size_t
));

137 
vs_•lô
 
__P
((
SCR
 *, SCR *, ));

138 
vs_disˇrd
 
__P
((
SCR
 *, SCR **));

139 
vs_fg
 
__P
((
SCR
 *, SCR **, 
CHAR_T
 *, ));

140 
vs_bg
 
__P
((
SCR
 *));

141 
vs_sw≠
 
__P
((
SCR
 *, SCR **, *));

142 
vs_ªsize
 
__P
((
SCR
 *, , 
adj_t
));

	@ip/ip.h

10 
	s_ù_¥iv©e
 {

11 
	mi_fd
;

12 
	mo_fd
;

14 
size_t
 
	mrow
;

15 
size_t
 
	mcﬁ
;

17 
size_t
 
	mibÀn
;

18 
size_t
 
	miskù
;

19 
	mibuf
[256];

21 
	#IP_SCR_VI_INIT
 0x0001

	)

22 
u_öt32_t
 
	mÊags
;

23 } 
	tIP_PRIVATE
;

25 
	#IPP
(
•
Ë((
IP_PRIVATE
 *)((•)->
gp
->
ù_¥iv©e
))

	)

26 
	#GIPP
(
gp
Ë((
IP_PRIVATE
 *)((gp)->
ù_¥iv©e
))

	)

29 
	#RLNO
(
•
, 
 o
Ë(•)->
woff
 + ( o)

	)

40 
	#IPO_CODE
 1

	)

41 
	#IPO_INT
 2

	)

42 
	#IPO_STR
 3

	)

44 
	#IPO_CODE_LEN
 1

	)

45 
	#IPO_INT_LEN
 4

	)

48 
	s_ù_buf
 {

49 
	mcode
;

50 c⁄° *
	m°r
;

51 
size_t
 
	mÀn
;

52 
u_öt32_t
 
	mvÆ1
;

53 
u_öt32_t
 
	mvÆ2
;

54 } 
	tIP_BUF
;

66 
	#IPO_EOF
 1

	)

67 
	#IPO_ERR
 2

	)

68 
	#IPO_INTERRUPT
 3

	)

69 
	#IPO_QUIT
 4

	)

70 
	#IPO_RESIZE
 5

	)

71 
	#IPO_SIGHUP
 6

	)

72 
	#IPO_SIGTERM
 7

	)

73 
	#IPO_STRING
 8

	)

74 
	#IPO_WRITE
 9

	)

79 
	#IPO_ADDSTR
 1

	)

80 
	#IPO_ATTRIBUTE
 2

	)

81 
	#IPO_BELL
 3

	)

82 
	#IPO_BUSY
 4

	)

83 
	#IPO_CLRTOEOL
 5

	)

84 
	#IPO_DELETELN
 6

	)

85 
	#IPO_INSERTLN
 7

	)

86 
	#IPO_MOVE
 8

	)

87 
	#IPO_REDRAW
 9

	)

88 
	#IPO_REFRESH
 10

	)

89 
	#IPO_RENAME
 11

	)

90 
	#IPO_REWRITE
 12

	)

92 
	~"ù_exã∫.h
"

	@ip/ip_funcs.c

8 
	~"c⁄fig.h
"

10 #i‚de‡
löt


11 c⁄° 
	gsccsid
[] = "@(#)ip_funcs.c 8.4 (Berkeley) 10/13/96";

14 
	~<sys/ty≥s.h
>

15 
	~<sys/queue.h
>

16 
	~<sys/time.h
>

18 
	~<bô°rög.h
>

19 
	~<°dio.h
>

21 
	~"../comm⁄/comm⁄.h
"

22 
	~"../vi/vi.h
"

23 
	~"ù.h
"

25 
ù_£nd
 
__P
((
SCR
 *, *, 
IP_BUF
 *));

34 
	$ù_add°r
(
•
, 
°r
, 
Àn
)

35 
SCR
 *
•
;

36 c⁄° *
°r
;

37 
size_t
 
Àn
;

39 
IP_BUF
 
ùb
;

40 
IP_PRIVATE
 *
ùp
;

41 
iv
, 
rvÆ
;

43 
ùp
 = 
	`IPP
(
•
);

49 
iv
 = 0;

50 i‡(!
	`F_ISSET
(
•
, 
SC_SCR_EXWROTE
) &&

51 
ùp
->
row
 =
	`LASTLINE
(
•
Ë&& 
	`IS_SPLIT
(sp)) {

52 
iv
 = 1;

53 
	`ù_©å
(
•
, 
SA_INVERSE
, 1);

55 
ùb
.
code
 = 
IPO_ADDSTR
;

56 
ùb
.
Àn
 =Üen;

57 
ùb
.
°r
 = str;

58 
rvÆ
 = 
	`ù_£nd
(
•
, "s", &
ùb
);

60 i‡(
iv
)

61 
	`ù_©å
(
•
, 
SA_INVERSE
, 0);

62  (
rvÆ
);

63 
	}
}

72 
	$ù_©å
(
•
, 
©åibuã
, 
⁄
)

73 
SCR
 *
•
;

74 
s¸_©å_t
 
©åibuã
;

75 
⁄
;

77 
IP_BUF
 
ùb
;

79 
ùb
.
code
 = 
IPO_ATTRIBUTE
;

80 
ùb
.
vÆ1
 = 
©åibuã
;

81 
ùb
.
vÆ2
 = 
⁄
;

83  (
	`ù_£nd
(
•
, "12", &
ùb
));

84 
	}
}

93 
	$ù_baud
(
•
, 
øãp
)

94 
SCR
 *
•
;

95 
u_l⁄g
 *
øãp
;

97 *
øãp
 = 9600;

99 
	}
}

108 
	$ù_bñl
(
•
)

109 
SCR
 *
•
;

111 
IP_BUF
 
ùb
;

113 
ùb
.
code
 = 
IPO_BELL
;

115  (
	`ù_£nd
(
•
, 
NULL
, &
ùb
));

116 
	}
}

125 
	$ù_busy
(
•
, 
°r
, 
bvÆ
)

126 
SCR
 *
•
;

127 c⁄° *
°r
;

128 
busy_t
 
bvÆ
;

130 
IP_BUF
 
ùb
;

132 
ùb
.
code
 = 
IPO_BUSY
;

133 i‡(
°r
 =
NULL
) {

134 
ùb
.
Àn
 = 0;

135 
ùb
.
°r
 = "";

137 
ùb
.
Àn
 = 
	`°æí
(
°r
);

138 
ùb
.
°r
 = str;

140 
ùb
.
vÆ1
 = 
bvÆ
;

142 ()
	`ù_£nd
(
•
, "s1", &
ùb
);

143 
	}
}

152 
	$ù_˛π€ﬁ
(
•
)

153 
SCR
 *
•
;

155 
IP_BUF
 
ùb
;

157 
ùb
.
code
 = 
IPO_CLRTOEOL
;

159  (
	`ù_£nd
(
•
, 
NULL
, &
ùb
));

160 
	}
}

169 
	$ù_curs‹
(
•
, 
yp
, 
xp
)

170 
SCR
 *
•
;

171 
size_t
 *
yp
, *
xp
;

173 
IP_PRIVATE
 *
ùp
;

175 
ùp
 = 
	`IPP
(
•
);

176 *
yp
 = 
ùp
->
row
;

177 *
xp
 = 
ùp
->
cﬁ
;

179 
	}
}

188 
	$ù_dñëñn
(
•
)

189 
SCR
 *
•
;

191 
IP_BUF
 
ùb
;

201 i‡(!
	`F_ISSET
(
•
, 
SC_SCR_EXWROTE
Ë&& 
	`IS_SPLIT
(sp)) {

202 
ùb
.
code
 = 
IPO_REWRITE
;

203 
ùb
.
vÆ1
 = 
	`RLNO
(
•
, 
	`LASTLINE
(sp));

204 i‡(
	`ù_£nd
(
•
, "1", &
ùb
))

212 
ùb
.
code
 = 
IPO_DELETELN
;

213  (
	`ù_£nd
(
•
, 
NULL
, &
ùb
));

214 
	}
}

223 
	$ù_ex_adju°
(
•
, 
a˘i⁄
)

224 
SCR
 *
•
;

225 
exadj_t
 
a˘i⁄
;

227 
	`ab‹t
();

229 
	}
}

238 
	$ù_ö£π 
(
•
)

239 
SCR
 *
•
;

241 
IP_BUF
 
ùb
;

243 
ùb
.
code
 = 
IPO_INSERTLN
;

245  (
	`ù_£nd
(
•
, 
NULL
, &
ùb
));

246 
	}
}

255 
	$ù_keyvÆ
(
•
, 
vÆ
, 
chp
, 
d√p
)

256 
SCR
 *
•
;

257 
s¸_keyvÆ_t
 
vÆ
;

258 
CHAR_T
 *
chp
;

259 *
d√p
;

265 
vÆ
) {

266 
KEY_VEOF
:

267 *
d√p
 = '\004';

269 
KEY_VERASE
:

270 *
d√p
 = '\b';

272 
KEY_VKILL
:

273 *
d√p
 = '\025';

275 #ifde‡
VWERASE


276 
KEY_VWERASE
:

277 *
d√p
 = '\027';

281 *
d√p
 = 1;

285 
	}
}

294 
	$ù_move
(
•
, 
 o
, 
˙o
)

295 
SCR
 *
•
;

296 
size_t
 
 o
, 
˙o
;

298 
IP_PRIVATE
 *
ùp
;

299 
IP_BUF
 
ùb
;

301 
ùp
 = 
	`IPP
(
•
);

302 
ùp
->
row
 = 
 o
;

303 
ùp
->
cﬁ
 = 
˙o
;

305 
ùb
.
code
 = 
IPO_MOVE
;

306 
ùb
.
vÆ1
 = 
	`RLNO
(
•
, 
 o
);

307 
ùb
.
vÆ2
 = 
˙o
;

308  (
	`ù_£nd
(
•
, "12", &
ùb
));

309 
	}
}

318 
	$ù_ª‰esh
(
•
, 
ª∑öt
)

319 
SCR
 *
•
;

320 
ª∑öt
;

322 
IP_BUF
 
ùb
;

324 
ùb
.
code
 = 
ª∑öt
 ? 
IPO_REDRAW
 : 
IPO_REFRESH
;

326  (
	`ù_£nd
(
•
, 
NULL
, &
ùb
));

327 
	}
}

336 
	$ù_ª«me
(
•
)

337 
SCR
 *
•
;

339 
IP_BUF
 
ùb
;

341 
ùb
.
code
 = 
IPO_RENAME
;

342 
ùb
.
Àn
 = 
	`°æí
(
•
->
‰p
->
«me
);

343 
ùb
.
°r
 = 
•
->
‰p
->
«me
;

345  (
	`ù_£nd
(
•
, "s", &
ùb
));

346 
	}
}

355 
	$ù_su•íd
(
•
, 
Ælowedp
)

356 
SCR
 *
•
;

357 *
Ælowedp
;

359 *
Ælowedp
 = 0;

361 
	}
}

370 
	$ù_ußge
()

372 
	#USAGE
 "\
: vò[-eFlRrSv] [-¯comm™d] [-I ifd.ofd] [-àèg] [-w size] [fûê...]\n"

	)

374 ()
	`Ârötf
(
°dîr
, "%s", 
USAGE
);

375 #unde‡
USAGE


376 
	}
}

383 
	$ù_£nd
(
•
, 
fmt
, 
ùbp
)

384 
SCR
 *
•
;

385 *
fmt
;

386 
IP_BUF
 *
ùbp
;

388 
IP_PRIVATE
 *
ùp
;

389 
size_t
 
bÀn
, 
off
;

390 
u_öt32_t
 
ûí
;

391 
∆í
, 
n
, 
nw
, 
rvÆ
;

392 *
bp
, *
p
;

394 
ùp
 = 
	`IPP
(
•
);

396 
	`GET_SPACE_RET
(
•
, 
bp
, 
bÀn
, 128);

398 
p
 = 
bp
;

399 
∆í
 = 0;

400 *
p
++ = 
ùbp
->
code
;

401 
∆í
 +
IPO_CODE_LEN
;

403 i‡(
fmt
 !
NULL
)

404 ; *
fmt
 != '\0'; ++fmt)

405 *
fmt
) {

407 
ûí
 = 
	`ht⁄l
(
ùbp
->
vÆ1
);

408 
vÆue
;

410 
ûí
 = 
	`ht⁄l
(
ùbp
->
vÆ2
);

411 
vÆue
: 
∆í
 +
IPO_INT_LEN
;

412 
off
 = 
p
 - 
bp
;

413 
	`ADD_SPACE_RET
(
•
, 
bp
, 
bÀn
, 
∆í
);

414 
p
 = 
bp
 + 
off
;

415 
	`memmove
(
p
, &
ûí
, 
IPO_INT_LEN
);

416 
p
 +
IPO_INT_LEN
;

419 
ûí
 = 
ùbp
->
Àn
;

420 
ûí
 = 
	`ht⁄l
(ilen);

421 
∆í
 +
IPO_INT_LEN
 + 
ùbp
->
Àn
;

422 
off
 = 
p
 - 
bp
;

423 
	`ADD_SPACE_RET
(
•
, 
bp
, 
bÀn
, 
∆í
);

424 
p
 = 
bp
 + 
off
;

425 
	`memmove
(
p
, &
ûí
, 
IPO_INT_LEN
);

426 
p
 +
IPO_INT_LEN
;

427 
	`memmove
(
p
, 
ùbp
->
°r
, ipbp->
Àn
);

428 
p
 +
ùbp
->
Àn
;

433 
rvÆ
 = 0;

434 
n
 = 
p
 - 
bp
,Ö = bp;Ç > 0;Ç -
nw
,Ö +=Çw)

435 i‡((
nw
 = 
	`wrôe
(
ùp
->
o_fd
, 
p
, 
n
)) < 0) {

436 
rvÆ
 = 1;

440 
	`FREE_SPACE
(
•
, 
bp
, 
bÀn
);

442  (
rvÆ
);

443 
	}
}

	@ip/ip_main.c

8 
	~"c⁄fig.h
"

10 #i‚de‡
löt


11 c⁄° 
	gsccsid
[] = "@(#)ip_main.c 8.3 (Berkeley) 10/13/96";

14 
	~<sys/ty≥s.h
>

15 
	~<sys/queue.h
>

17 
	~<bô°rög.h
>

18 
	~<˘y≥.h
>

19 
	~<î∫o.h
>

20 
	~<°dio.h
>

22 
	~"../comm⁄/comm⁄.h
"

23 
	~"ù.h
"

25 
ù_func_°d
 
__P
((
GS
 *));

26 
IP_PRIVATE
 *
ù_öô
 
__P
((
GS
 *, *));

27 
≥º
 
__P
((*, *));

34 
	$ù_maö
(
¨gc
, 
¨gv
, 
gp
, 
ù_¨g
)

35 
¨gc
;

36 *
¨gv
[], *
ù_¨g
;

37 
GS
 *
gp
;

39 
EVENT
 
ev
;

40 
IP_PRIVATE
 *
ùp
;

41 
IP_BUF
 
ùb
;

42 
rvÆ
;

45 i‡((
ùp
 = 
	`ù_öô
(
gp
, 
ù_¨g
)Ë=
NULL
)

49 i‡((
	`OG_D_STR
(
gp
, 
GO_TERM
) =

50 
	`OG_STR
(
gp
, 
GO_TERM
Ë
	`°rdup
("ù_cur£s")Ë=
NULL
)

51 
	`≥º
(
gp
->
¥og«me
, 
NULL
);

58 i‡(
	`ù_evít
(
NULL
, &
ev
, 0, 0))

60 } 
ev
.
e_evít
 !
E_EOF
 &&Év.e_evíà!
E_ERR
 &&

61 
ev
.
e_evít
 !
E_QUIT
 &&Év.e_evíà!
E_WRESIZE
 &&

62 
ev
.
e_evít
 !
E_SIGHUP
 &&Év.e_evíà!
E_SIGTERM
);

63 i‡(
ev
.
e_evít
 !
E_WRESIZE
)

67 
rvÆ
 = 
	`edô‹
(
gp
, 
¨gc
, 
¨gv
);

70 ()
	`ù_quô
(
gp
);

73 #i‡
	`deföed
(
DEBUG
Ë|| deföed(
PURIFY
Ë|| deföed(
LIBRARY
)

74 
	`‰ì
(
ùp
);

75 
	`‰ì
(
gp
);

78  (
rvÆ
);

79 
	}
}

85 
IP_PRIVATE
 *

86 
	$ù_öô
(
gp
, 
ù_¨g
)

87 
GS
 *
gp
;

88 *
ù_¨g
;

90 
IP_PRIVATE
 *
ùp
;

91 *
ï
;

94 
	`CALLOC_NOMSG
(
NULL
, 
ùp
, 
IP_PRIVATE
 *, 1, (IP_PRIVATE));

95 i‡(
ùp
 =
NULL
)

96 
	`≥º
(
gp
->
¥og«me
, 
NULL
);

97 
gp
->
ù_¥iv©e
 = 
ùp
;

104 i‡(!
	`isdigô
(
ù_¨g
[0]))

105 
ußge
;

106 
ùp
->
i_fd
 = 
	`°πﬁ
(
ù_¨g
, &
ï
, 10);

107 i‡(
ï
[0] !'.' || !
	`isdigô
(ep[1]))

108 
ußge
;

109 
ùp
->
o_fd
 = 
	`°πﬁ
(++
ï
, &ep, 10);

110 i‡(
ï
[0] != '\0') {

111 
ußge
: 
	`ù_ußge
();

112  (
NULL
);

116 
	`ù_func_°d
(
gp
);

118  (
ùp
);

119 
	}
}

126 
	$ù_func_°d
(
gp
)

127 
GS
 *
gp
;

129 
gp
->
s¸_add°r
 = 
ù_add°r
;

130 
gp
->
s¸_©å
 = 
ù_©å
;

131 
gp
->
s¸_baud
 = 
ù_baud
;

132 
gp
->
s¸_bñl
 = 
ù_bñl
;

133 
gp
->
s¸_busy
 = 
ù_busy
;

134 
gp
->
s¸_˛π€ﬁ
 = 
ù_˛π€ﬁ
;

135 
gp
->
s¸_curs‹
 = 
ù_curs‹
;

136 
gp
->
s¸_dñëñn
 = 
ù_dñëñn
;

137 
gp
->
s¸_evít
 = 
ù_evít
;

138 
gp
->
s¸_ex_adju°
 = 
ù_ex_adju°
;

139 
gp
->
s¸_fm≠
 = 
ù_fm≠
;

140 
gp
->
s¸_ö£π 
 = 
ù_ö£π 
;

141 
gp
->
s¸_keyvÆ
 = 
ù_keyvÆ
;

142 
gp
->
s¸_move
 = 
ù_move
;

143 
gp
->
s¸_msg
 = 
NULL
;

144 
gp
->
s¸_›tch™ge
 = 
ù_›tch™ge
;

145 
gp
->
s¸_ª‰esh
 = 
ù_ª‰esh
;

146 
gp
->
s¸_ª«me
 = 
ù_ª«me
;

147 
gp
->
s¸_s¸ìn
 = 
ù_s¸ìn
;

148 
gp
->
s¸_su•íd
 = 
ù_su•íd
;

149 
gp
->
s¸_ußge
 = 
ù_ußge
;

150 
	}
}

157 
	$≥º
(
«me
, 
msg
)

158 *
«me
, *
msg
;

160 ()
	`Ârötf
(
°dîr
, "%s:", 
«me
);

161 i‡(
msg
 !
NULL
)

162 ()
	`Ârötf
(
°dîr
, "%s:", 
msg
);

163 ()
	`Ârötf
(
°dîr
, "%s\n", 
	`°ªº‹
(
î∫o
));

164 
	`exô
(1);

165 
	}
}

	@ip/ip_read.c

8 
	~"c⁄fig.h
"

10 #i‚de‡
löt


11 c⁄° 
	gsccsid
[] = "@(#)ip_read.c 8.3 (Berkeley) 9/24/96";

14 
	~<sys/ty≥s.h
>

15 
	~<sys/queue.h
>

17 
	~<bô°rög.h
>

18 
	~<°dio.h
>

19 
	~<ãrmios.h
>

20 
	~<time.h
>

22 
	~"../comm⁄/comm⁄.h
"

23 
	~"../ex/s¸ùt.h
"

24 
	~"ù.h
"

26 
GS
 *
__globÆ_li°
;

28 íum { 
	mINP_OK
=0, 
	mINP_EOF
, 
	mINP_ERR
, 
	mINP_TIMEOUT
 } 
	töput_t
;

30 
öput_t
 
ù_ªad
 
__P
((
SCR
 *, 
IP_PRIVATE
 *, 
timevÆ
 *));

31 
ù_ªsize
 
__P
((
SCR
 *, 
size_t
, size_t));

32 
ù_å™s
 
__P
((
SCR
 *, 
IP_PRIVATE
 *, 
EVENT
 *));

41 
	$ù_evít
(
•
, 
evp
, 
Êags
, 
ms
)

42 
SCR
 *
•
;

43 
EVENT
 *
evp
;

44 
u_öt32_t
 
Êags
;

45 
ms
;

47 
IP_PRIVATE
 *
ùp
;

48 
timevÆ
 
t
, *
ç
;

50 i‡(
	`LF_ISSET
(
EC_INTERRUPT
)) {

51 
evp
->
e_evít
 = 
E_TIMEOUT
;

55 
ùp
 = 
•
 =
NULL
 ? 
	`GIPP
(
__globÆ_li°
Ë: 
	`IPP
(sp);

58 i‡(
ùp
->
iskù
 != 0) {

59 
ùp
->
ibÀn
 -ùp->
iskù
;

60 
	`memmove
(
ùp
->
ibuf
, iµ->ibu‡+ iµ->
iskù
, iµ->
ibÀn
);

61 
ùp
->
iskù
 = 0;

65 i‡(
ms
 == 0)

66 
ç
 = 
NULL
;

68 
t
.
tv_£c
 = 
ms
 / 1000;

69 
t
.
tv_u£c
 = (
ms
 % 1000) * 1000;

70 
ç
 = &
t
;

75 
	`ù_ªad
(
•
, 
ùp
, 
ç
)) {

76 
INP_OK
:

77 i‡(!
	`ù_å™s
(
•
, 
ùp
, 
evp
))

80 
INP_EOF
:

81 
evp
->
e_evít
 = 
E_EOF
;

83 
INP_ERR
:

84 
evp
->
e_evít
 = 
E_ERR
;

86 
INP_TIMEOUT
:

87 
evp
->
e_evít
 = 
E_TIMEOUT
;

90 
	`ab‹t
();

95 
	}
}

101 
öput_t


102 
	$ù_ªad
(
•
, 
ùp
, 
ç
)

103 
SCR
 *
•
;

104 
IP_PRIVATE
 *
ùp
;

105 
timevÆ
 *
ç
;

107 
timevÆ
 
pﬁl
;

108 
GS
 *
gp
;

109 
SCR
 *
t•
;

110 
fd_£t
 
rdfd
;

111 
öput_t
 
rvÆ
;

112 
size_t
 
bÀn
;

113 
maxfd
, 
ƒ
;

114 *
bp
;

116 
gp
 = 
•
 =
NULL
 ? 
__globÆ_li°
 : sp->gp;

117 
bp
 = 
ùp
->
ibuf
 + iµ->
ibÀn
;

118 
bÀn
 = (
ùp
->
ibuf
Ë- iµ->
ibÀn
;

124 
	`FD_ZERO
(&
rdfd
);

125 
pﬁl
.
tv_£c
 = 0;

126 
pﬁl
.
tv_u£c
 = 0;

127 i‡(
ç
 !
NULL
) {

128 
	`FD_SET
(
ùp
->
i_fd
, &
rdfd
);

129 
	`£À˘
(
ùp
->
i_fd
 + 1,

130 &
rdfd
, 
NULL
, NULL, 
ç
 =NULL ? &
pﬁl
 :Åp)) {

132  (
INP_TIMEOUT
);

134 
îr
;

147 i‡(
•
 !
NULL
 && 
	`F_ISSET
(
gp
, 
G_SCRWIN
)) {

148 
lo›
: 
	`FD_ZERO
(&
rdfd
);

149 
	`FD_SET
(
ùp
->
i_fd
, &
rdfd
);

150 
maxfd
 = 
ùp
->
i_fd
;

151 
t•
 = 
gp
->
dq
.
cqh_fú°
;

152 
t•
 !(*)&
gp
->
dq
;Å• =Å•->
q
.
cqe_√xt
)

153 i‡(
	`F_ISSET
(
•
, 
SC_SCRIPT
)) {

154 
	`FD_SET
(
•
->
s¸ùt
->
sh_ma°î
, &
rdfd
);

155 i‡(
•
->
s¸ùt
->
sh_ma°î
 > 
maxfd
)

156 
maxfd
 = 
•
->
s¸ùt
->
sh_ma°î
;

158 
	`£À˘
(
maxfd
 + 1, &
rdfd
, 
NULL
, NULL, NULL)) {

160 
	`ab‹t
();

162 
îr
;

166 i‡(!
	`FD_ISSET
(
ùp
->
i_fd
, &
rdfd
)) {

167 i‡(
	`ss¸_öput
(
•
))

168  (
INP_ERR
);

169 
lo›
;

176 
ƒ
 = 
	`ªad
(
ùp
->
i_fd
, 
bp
, 
bÀn
)) {

178 
rvÆ
 = 
INP_EOF
;

181 
îr
: 
rvÆ
 = 
INP_ERR
;

182 
	`msgq
(
•
, 
M_SYSERR
, "input");

185 
ùp
->
ibÀn
 +
ƒ
;

186 
rvÆ
 = 
INP_OK
;

189  (
rvÆ
);

190 
	}
}

197 
	$ù_å™s
(
•
, 
ùp
, 
evp
)

198 
SCR
 *
•
;

199 
IP_PRIVATE
 *
ùp
;

200 
EVENT
 *
evp
;

202 
u_öt32_t
 
vÆ1
, 
vÆ2
;

204 
ùp
->
ibuf
[0]) {

205 
IPO_EOF
:

206 
evp
->
e_evít
 = 
E_EOF
;

207 
ùp
->
iskù
 = 
IPO_CODE_LEN
;

209 
IPO_ERR
:

210 
evp
->
e_evít
 = 
E_ERR
;

211 
ùp
->
iskù
 = 
IPO_CODE_LEN
;

213 
IPO_INTERRUPT
:

214 
evp
->
e_evít
 = 
E_INTERRUPT
;

215 
ùp
->
iskù
 = 
IPO_CODE_LEN
;

217 
IPO_QUIT
:

218 
evp
->
e_evít
 = 
E_QUIT
;

219 
ùp
->
iskù
 = 
IPO_CODE_LEN
;

221 
IPO_RESIZE
:

222 i‡(
ùp
->
ibÀn
 < 
IPO_CODE_LEN
 + 
IPO_INT_LEN
 * 2)

224 
evp
->
e_evít
 = 
E_WRESIZE
;

225 
	`mem˝y
(&
vÆ1
, 
ùp
->
ibuf
 + 
IPO_CODE_LEN
, 
IPO_INT_LEN
);

226 
vÆ1
 = 
	`¡ohl
(val1);

227 
	`mem˝y
(&
vÆ2
,

228 
ùp
->
ibuf
 + 
IPO_CODE_LEN
 + 
IPO_INT_LEN
, IPO_INT_LEN);

229 
vÆ2
 = 
	`¡ohl
(val2);

230 
	`ù_ªsize
(
•
, 
vÆ1
, 
vÆ2
);

231 
ùp
->
iskù
 = 
IPO_CODE_LEN
 + 
IPO_INT_LEN
 * 2;

233 
IPO_SIGHUP
:

234 
evp
->
e_evít
 = 
E_SIGHUP
;

235 
ùp
->
iskù
 = 
IPO_CODE_LEN
;

237 
IPO_SIGTERM
:

238 
evp
->
e_evít
 = 
E_SIGTERM
;

239 
ùp
->
iskù
 = 
IPO_CODE_LEN
;

241 
IPO_STRING
:

242 
evp
->
e_evít
 = 
E_STRING
;

243 
°rög
: i‡(
ùp
->
ibÀn
 < 
IPO_CODE_LEN
 + 
IPO_INT_LEN
)

245 
	`mem˝y
(&
vÆ1
, 
ùp
->
ibuf
 + 
IPO_CODE_LEN
, 
IPO_INT_LEN
);

246 
vÆ1
 = 
	`¡ohl
(val1);

247 i‡(
ùp
->
ibÀn
 < 
IPO_CODE_LEN
 + 
IPO_INT_LEN
 + 
vÆ1
)

249 
ùp
->
iskù
 = 
IPO_CODE_LEN
 + 
IPO_INT_LEN
 + 
vÆ1
;

250 
evp
->
e_c•
 = 
ùp
->
ibuf
 + 
IPO_CODE_LEN
 + 
IPO_INT_LEN
;

251 
evp
->
e_Àn
 = 
vÆ1
;

253 
IPO_WRITE
:

254 
evp
->
e_evít
 = 
E_WRITE
;

255 
ùp
->
iskù
 = 
IPO_CODE_LEN
;

261 
	`ab‹t
();

264 
	}
}

271 
	$ù_ªsize
(
•
, 
löes
, 
cﬁumns
)

272 
SCR
 *
•
;

273 
size_t
 
löes
, 
cﬁumns
;

275 
GS
 *
gp
;

276 
ARGS
 *
¨gv
[2], 
a
, 
b
;

277 
b1
[1024];

285 i‡(
•
 =
NULL
) {

286 
gp
 = 
__globÆ_li°
;

287 
	`OG_VAL
(
gp
, 
GO_LINES
Ë
	`OG_D_VAL
(gp, GO_LINESË
löes
;

288 
	`OG_VAL
(
gp
, 
GO_COLUMNS
Ë
	`OG_D_VAL
(gp, GO_COLUMNSË
cﬁumns
;

292 
a
.
bp
 = 
b1
;

293 
b
.
bp
 = 
NULL
;

294 
a
.
Àn
 = 
b
.len = 0;

295 
¨gv
[0] = &
a
;

296 
¨gv
[1] = &
b
;

298 ()
	`¢¥ötf
(
b1
, (b1), "löes=%lu", (
u_l⁄g
)
löes
);

299 
a
.
Àn
 = 
	`°æí
(
b1
);

300 i‡(
	`›ts_£t
(
•
, 
¨gv
, 
NULL
))

302 ()
	`¢¥ötf
(
b1
, (b1), "cﬁumns=%lu", (
u_l⁄g
)
cﬁumns
);

303 
a
.
Àn
 = 
	`°æí
(
b1
);

304 i‡(
	`›ts_£t
(
•
, 
¨gv
, 
NULL
))

307 
	}
}

	@ip/ip_screen.c

8 
	~"c⁄fig.h
"

10 #i‚de‡
löt


11 c⁄° 
	gsccsid
[] = "@(#)ip_screen.c 8.2 (Berkeley) 10/13/96";

14 
	~<sys/ty≥s.h
>

15 
	~<sys/queue.h
>

17 
	~<bô°rög.h
>

18 
	~<°dio.h
>

20 
	~"../comm⁄/comm⁄.h
"

21 
	~"ù.h
"

30 
	$ù_s¸ìn
(
•
, 
Êags
)

31 
SCR
 *
•
;

32 
u_öt32_t
 
Êags
;

34 
GS
 *
gp
;

35 
IP_PRIVATE
 *
ùp
;

37 
gp
 = 
•
->gp;

38 
ùp
 = 
	`IPP
(
•
);

41 i‡(
	`F_ISSET
(
gp
, 
G_SRESTART
)) {

42 i‡(
	`ù_quô
(
gp
))

44 
	`F_CLR
(
gp
, 
G_SRESTART
);

48 i‡(
	`LF_ISSET
(
SC_VI
Ë&& 
	`F_ISSET
(
ùp
, 
IP_SCR_VI_INIT
))

52 i‡(
	`LF_ISSET
(
SC_EX
))

56 i‡(
	`ù_ãrm_öô
(
•
))

60 i‡(
	`ù_ª«me
(
•
))

63 
	`F_SET
(
ùp
, 
IP_SCR_VI_INIT
);

65 
	}
}

74 
	$ù_quô
(
gp
)

75 
GS
 *
gp
;

77 
IP_PRIVATE
 *
ùp
;

78 
rvÆ
;

81 
rvÆ
 = 
	`ù_ãrm_íd
(
gp
);

83 
ùp
 = 
	`GIPP
(
gp
);

84 
	`F_CLR
(
ùp
, 
IP_SCR_VI_INIT
);

86  (
rvÆ
);

87 
	}
}

	@ip/ip_term.c

8 
	~"c⁄fig.h
"

10 #i‚de‡
löt


11 c⁄° 
	gsccsid
[] = "@(#)ip_term.c 8.2 (Berkeley) 10/13/96";

14 
	~<sys/ty≥s.h
>

15 
	~<sys/queue.h
>

17 
	~<bô°rög.h
>

18 
	~<°dio.h
>

20 
	~"../comm⁄/comm⁄.h
"

21 
	~"ù.h
"

30 
	$ù_ãrm_öô
(
•
)

31 
SCR
 *
•
;

33 
SEQ
 *
qp
;

39 
qp
 = 
•
->
gp
->
£qq
.
lh_fú°
; q∞!
NULL
; q∞qp->
q
.
À_√xt
)

40 i‡(
	`F_ISSET
(
qp
, 
SEQ_FUNCMAP
))

41 ()
	`ù_fm≠
(
•
, 
qp
->
°y≥
,

42 
qp
->
öput
, qp->
ûí
, qp->
ouçut
, qp->
ﬁí
);

44 
	}
}

53 
	$ù_ãrm_íd
(
gp
)

54 
GS
 *
gp
;

56 
SEQ
 *
qp
, *
nqp
;

59 
qp
 = 
gp
->
£qq
.
lh_fú°
; q∞!
NULL
; q∞
nqp
) {

60 
nqp
 = 
qp
->
q
.
À_√xt
;

61 i‡(
	`F_ISSET
(
qp
, 
SEQ_SCREEN
))

62 ()
	`£q_mdñ
(
qp
);

65 
	}
}

74 
	$ù_fm≠
(
•
, 
°y≥
, 
‰om
, 
Êí
, 
to
, 
éí
)

75 
SCR
 *
•
;

76 
£q_t
 
°y≥
;

77 
CHAR_T
 *
‰om
, *
to
;

78 
size_t
 
Êí
, 
éí
;

82 
	}
}

91 
	$ù_›tch™ge
(
•
, 
›t
, 
°r
, 
vÆp
)

92 
SCR
 *
•
;

93 
›t
;

94 *
°r
;

95 
u_l⁄g
 *
vÆp
;

97 
›t
) {

98 
O_COLUMNS
:

99 
O_LINES
:

100 
	`F_SET
(
•
->
gp
, 
G_SRESTART
);

101 
	`F_CLR
(
•
, 
SC_SCR_EX
 | 
SC_SCR_VI
);

103 
O_TERM
:

104 
	`msgq
(
•
, 
M_ERR
, "The screenÅype mayÇot be changed");

108 
	}
}

	@ip_cl/ip_cl.c

8 
	~"c⁄fig.h
"

10 #i‚de‡
löt


11 c⁄° 
	gsccsid
[] = "@(#)ip_cl.c 8.4 (Berkeley) 10/13/96";

14 
	~<sys/ty≥s.h
>

15 
	~<sys/io˘l.h
>

16 
	~<sys/queue.h
>

17 
	~<sys/£À˘.h
>

19 
	~<bô°rög.h
>

20 
	~<˘y≥.h
>

21 
	~<cur£s.h
>

22 
	~<î∫o.h
>

23 
	~<f˙é.h
>

24 
	~<sig«l.h
>

25 
	~<°dio.h
>

26 
	~<°dlib.h
>

27 
	~<°rög.h
>

28 
	~<uni°d.h
>

30 
	~"../comm⁄/comm⁄.h
"

31 
	~"../ù/ù.h
"

32 
	~"∑th«mes.h
"

34 
size_t
 
	gcﬁs
, 
	grows
;

35 
	gdõ
;

36 
	gi_fd
, 
	go_fd
;

37 
	gªsize
;

39 
¨g_f‹m©
 
__P
((*, **[], , ));

40 
©èch
 
__P
(());

41 
ù_cur_íd
 
__P
(());

42 
ù_cur_öô
 
__P
(());

43 
ù_ªad
 
__P
(());

44 
ù_ªsize
 
__P
(());

45 
ù_£nd
 
__P
((*, 
IP_BUF
 *));

46 
ù_sigöô
 
__P
(());

47 
ù_å™s
 
__P
((*, 
size_t
, size_t *));

48 
nomem
 
__P
(());

49 
⁄chld
 
__P
(());

50 
⁄öå
 
__P
(());

51 
⁄wöch
 
__P
(());

52 
åa˚
 
__P
((const *, ...));

53 
ußge
 
__P
(());

56 
	$maö
(
¨gc
, 
¨gv
)

57 
¨gc
;

58 *
¨gv
[];

60 
fd_£t
 
fd£t
;

61 
pid_t
 
pid
;

62 
size_t
 
bÀn
, 
Àn
, 
skù
;

63 
ch
, 
ƒ
, 
Ωùe
[2], 
wpùe
[2];

64 *
bp
;

66 (
ch
 = 
	`gë›t
(
¨gc
, 
¨gv
, "D")Ë!
EOF
)

67 
ch
) {

69 
	`©èch
();

73 
	`ußge
();

75 
¨gc
 -
›töd
;

76 
¨gv
 +
›töd
;

83 i‡(
	`pùe
(
Ωùe
Ë=-1 ||Öùe(
wpùe
) == -1) {

84 
	`≥º‹
("ip_cl:Öipe");

85 
	`exô
 (1);

87 
i_fd
 = 
Ωùe
[0];

88 
o_fd
 = 
wpùe
[1];

95 
	`¨g_f‹m©
(&
¨gc
, &
¨gv
, 
wpùe
[0], 
Ωùe
[1]);

98 
pid
 = 
	`f‹k
()) {

100 
	`≥º‹
("ip_cl: fork");

101 
	`exô
 (1);

103 
	`execv
(
VI
, 
¨gv
);

104 
	`≥º‹
("ip_cl:Éxecv ../build/nvi");

105 
	`exô
 (1);

116 
bÀn
 = 4 * 1024;

117 i‡((
bp
 = 
	`mÆloc
(
bÀn
)Ë=
NULL
)

118 
	`nomem
();

121 
	`FD_ZERO
(&
fd£t
);

124 
	`ù_sigöô
();

127 
	`ù_cur_öô
();

130 
	`ù_ªsize
();

133 
Àn
 = 0;;) {

134 i‡(
dõ
)

151 
ªsize
) {

152 
ªsize
 = 0;

153 
	`ù_ªsize
();

154 
	`ù_cur_íd
();

155 
	`ù_cur_öô
();

159 
	`FD_SET
(
i_fd
, &
fd£t
);

160 
	`FD_SET
(
STDIN_FILENO
, &
fd£t
);

161 
î∫o
 = 0;

162 
	`£À˘
(
i_fd
 + 1, &
fd£t
, 
NULL
, NULL, NULL)) {

164 
	`ab‹t
();

167 i‡(
î∫o
 =
EINTR
)

169 
	`≥º‹
("ip_cl: select");

170 
	`exô
 (1);

176 i‡(
	`FD_ISSET
(
STDIN_FILENO
, &
fd£t
)) {

177 
	`ù_ªad
();

182 
ƒ
 = 
	`ªad
(
i_fd
, 
bp
 + 
Àn
, 
bÀn
 -Üen)) {

186 
	`≥º‹
("ip_cl:Ñead");

187 
	`exô
 (1);

193 
Àn
 +
ƒ
, 
skù
 = 0;Üen > skip &&

194 
	`ù_å™s
(
bp
 + 
skù
, 
Àn
 - skip, &skip) == 1;);

197 
Àn
 -
skù
;

198 i‡(
Àn
 > 0)

199 
	`memmove
(
bp
, b∞+ 
skù
, 
Àn
);

203 
	`ù_cur_íd
();

205 
	`exô
 (0);

206 
	}
}

213 
	$ù_ªad
()

215 
IP_BUF
 
ùb
;

216 
ƒ
;

217 
bp
[1024];

220 
ƒ
 = 
	`ªad
(
STDIN_FILENO
, 
bp
, (bp))) {

224 
	`≥º‹
("ip_cl:Ñead");

225 
	`exô
 (1);

230 
ùb
.
code
 = 
IPO_STRING
;

231 
ùb
.
Àn
 = 
ƒ
;

232 
ùb
.
°r
 = 
bp
;

233 
	`ù_£nd
("s", &
ùb
);

234 
	}
}

241 
	$ù_å™s
(
bp
, 
Àn
, 
skùp
)

242 *
bp
;

243 
size_t
 
Àn
, *
skùp
;

245 
IP_BUF
 
ùb
;

246 
size_t
 
˙o
, 
 o
, 
∆í
, 
ﬁdy
, 
ﬁdx
, 
•˙t
;

247 
ch
;

248 *
fmt
, *
p
;

250 
bp
[0]) {

251 
IPO_ADDSTR
:

252 
IPO_RENAME
:

253 
fmt
 = "s";

255 
IPO_BUSY
:

256 
fmt
 = "s1";

258 
IPO_ATTRIBUTE
:

259 
IPO_MOVE
:

260 
fmt
 = "12";

262 
IPO_REWRITE
:

263 
fmt
 = "1";

266 
fmt
 = "";

269 
∆í
 = 
IPO_CODE_LEN
;

270 
p
 = 
bp
 + 
IPO_CODE_LEN
;

271 ; *
fmt
 != '\0'; ++fmt)

272 *
fmt
) {

274 
∆í
 +
IPO_INT_LEN
;

275 i‡(
Àn
 < 
∆í
)

277 
	`mem˝y
(&
ùb
.
vÆ1
, 
p
, 
IPO_INT_LEN
);

278 
ùb
.
vÆ1
 = 
	`¡ohl
(ipb.val1);

279 
p
 +
IPO_INT_LEN
;

282 
∆í
 +
IPO_INT_LEN
;

283 i‡(
Àn
 < 
∆í
)

285 
	`mem˝y
(&
ùb
.
vÆ2
, 
p
, 
IPO_INT_LEN
);

286 
ùb
.
vÆ2
 = 
	`¡ohl
(ipb.val2);

287 
p
 +
IPO_INT_LEN
;

290 
∆í
 +
IPO_INT_LEN
;

291 i‡(
Àn
 < 
∆í
)

293 
	`mem˝y
(&
ùb
.
Àn
, 
p
, 
IPO_INT_LEN
);

294 
ùb
.
Àn
 = 
	`¡ohl
(ipb.len);

295 
p
 +
IPO_INT_LEN
;

296 
∆í
 +
ùb
.
Àn
;

297 i‡(
Àn
 < 
∆í
)

299 
ùb
.
°r
 = 
p
;

300 
p
 +
ùb
.
Àn
;

303 *
skùp
 +
∆í
;

305 
bp
[0]) {

306 
IPO_ADDSTR
:

307 #ifde‡
TR


308 
	`åa˚
("addn°∏{%.*s}\n", ()
ùb
.
Àn
, ipb.
°r
);

310 ()
	`addn°r
(
ùb
.
°r
, ipb.
Àn
);

312 
IPO_ATTRIBUTE
:

313 
ùb
.
vÆ1
) {

314 
SA_ALTERNATE
:

315 #ifde‡
TR


316 
	`åa˚
("attr:álternate\n");

323 
SA_INVERSE
:

324 #ifde‡
TR


325 
	`åa˚
("attr: inverse\n");

327 i‡(
ùb
.
vÆ2
)

328 ()
	`°™dout
();

330 ()
	`°™díd
();

333 
	`ab‹t
();

337 
IPO_BELL
:

338 #ifde‡
TR


339 
	`åa˚
("bell\n");

341 ()
	`wrôe
(1, "\007", 1);

343 
IPO_BUSY
:

344 #ifde‡
TR


345 
	`åa˚
("busy {%.*s}\n", ()
ùb
.
Àn
, ipb.
°r
);

353 
IPO_CLRTOEOL
:

354 #ifde‡
TR


355 
	`åa˚
("clrtoeol\n");

357 
	`˛π€ﬁ
();

359 
IPO_DELETELN
:

360 #ifde‡
TR


361 
	`åa˚
("deleteln\n");

363 
	`dñëñn
();

365 
IPO_INSERTLN
:

366 #ifde‡
TR


367 
	`åa˚
("insertln\n");

369 
	`ö£π 
();

371 
IPO_MOVE
:

372 #ifde‡
TR


373 
	`åa˚
("move: %lu %lu\n", (
u_l⁄g
)
ùb
.
vÆ1
, (u_l⁄g)ùb.
vÆ2
);

375 ()
	`move
(
ùb
.
vÆ1
, ipb.
vÆ2
);

377 
IPO_REDRAW
:

378 #ifde‡
TR


379 
	`åa˚
("redraw\n");

381 
	`˛órok
(
curs¸
, 1);

382 
	`ª‰esh
();

384 
IPO_REFRESH
:

385 #ifde‡
TR


386 
	`åa˚
("refresh\n");

388 
	`ª‰esh
();

390 
IPO_RENAME
:

391 #ifde‡
TR


392 
	`åa˚
("ª«mê{%.*s}\n", ()
ùb
.
Àn
, ipb.
°r
);

400 
IPO_REWRITE
:

401 #ifde‡
TR


402 
	`åa˚
("ªwrôê{%lu}\n", (
u_l⁄g
)
ùb
.
vÆ1
);

404 
	`gëyx
(
°ds¸
, 
ﬁdy
, 
ﬁdx
);

405 
 o
 = 
ùb
.
vÆ1
, 
˙o
 = 
•˙t
 = 0;;) {

406 ()
	`move
(
 o
, 
˙o
);

407 
ch
 = 
	`wöch
(
°ds¸
);

408 i‡(
	`isbœnk
(
ch
))

409 ++
•˙t
;

411 ()
	`move
(
 o
, 
˙o
 - 
•˙t
);

412 ; 
•˙t
 > 0; --spcnt)

413 ()
	`addch
(' ');

414 ()
	`addch
(
ch
);

416 i‡(++
˙o
 >
cﬁs
)

419 ()
	`move
(
ﬁdy
, 
ﬁdx
);

425 
	`ab‹t
();

429 
	}
}

435 
	$¨g_f‹m©
(
¨g˝
, 
¨gvp
, 
i_fd
, 
o_fd
)

436 *
¨g˝
, 
i_fd
, 
o_fd
;

437 **
¨gvp
[];

439 **
œrgv
, *
ürg
, *
p
;

442 i‡((
ürg
 = 
	`mÆloc
(64)Ë=
NULL
 ||

443 (
œrgv
 = 
	`mÆloc
((*
¨g˝
 + 3Ë* (*))Ë=
NULL
) {

444 
	`≥º‹
("ip_cl");

445 
	`exô
 (1);

447 
	`mem˝y
(
œrgv
 + 2, *
¨gvp
, *
¨g˝
 * (*) + 1);

450 i‡((
p
 = 
	`°ºchr
(
VI
, '/')Ë=
NULL
)

451 
œrgv
[0] = 
VI
;

453 
œrgv
[0] = 
p
 + 1;

456 ()
	`•rötf
(
ürg
, "-I%d%s%d", 
i_fd
, ".", 
o_fd
);

457 
œrgv
[1] = 
ürg
;

460 *
¨gvp
 = 
œrgv
;

461 
	}
}

468 
	$ù_cur_öô
()

476 i‡(
	`öôs¸
(Ë=
ERR
) {

477 
	`≥º‹
("ip_cl: initscr");

478 
	`exô
 (1);

480 
	`n€cho
();

481 
	`n⁄l
();

482 
	`øw
();

483 
	`idlok
(
°ds¸
, 1);

484 
	}
}

491 
	$ù_cur_íd
()

493 ()
	`move
(0, 0);

494 ()
	`dñëñn
();

495 ()
	`move
(
rows
 - 1, 0);

496 ()
	`ª‰esh
();

497 ()
	`ídwö
();

498 
	}
}

505 
	$ù_sigöô
()

508 ()
	`sig«l
(
SIGCHLD
, 
⁄chld
);

511 ()
	`sig«l
(
SIGINT
, 
⁄öå
);

513 #ifde‡
SIGWINCH


515 ()
	`sig«l
(
SIGWINCH
, 
⁄wöch
);

517 
	}
}

524 
	$ù_ªsize
()

526 
wösize
 
wö
;

527 
IP_BUF
 
ùb
;

529 i‡(
	`io˘l
(
STDERR_FILENO
, 
TIOCGWINSZ
, &
wö
) == -1) {

530 
	`≥º‹
("ip_cl: TIOCGWINSZ");

531 
	`exô
(1);

534 i‡(
rows
 =
wö
.
ws_row
 && 
cﬁs
 =wö.
ws_cﬁ
)

537 
ùb
.
vÆ1
 = 
rows
 = 
wö
.
ws_row
;

538 
ùb
.
vÆ2
 = 
cﬁs
 = 
wö
.
ws_cﬁ
;

539 
ùb
.
code
 = 
IPO_RESIZE
;

540 
	`ù_£nd
("12", &
ùb
);

541 
	}
}

548 
	$ù_£nd
(
fmt
, 
ùbp
)

549 *
fmt
;

550 
IP_BUF
 *
ùbp
;

552 *
bp
;

553 
size_t
 
bÀn
;

554 
size_t
 
off
;

555 
u_öt32_t
 
ûí
;

556 
∆í
, 
n
, 
nw
;

557 *
p
;

559 i‡(
bÀn
 =0 && (
bp
 = 
	`mÆloc
(bÀ¿512)Ë=
NULL
)

560 
	`nomem
();

562 
p
 = 
bp
;

563 
∆í
 = 0;

564 *
p
++ = 
ùbp
->
code
;

565 
∆í
 +
IPO_CODE_LEN
;

567 i‡(
fmt
 !
NULL
)

568 ; *
fmt
 != '\0'; ++fmt)

569 *
fmt
) {

571 
ûí
 = 
	`ht⁄l
(
ùbp
->
vÆ1
);

572 
vÆue
;

574 
ûí
 = 
	`ht⁄l
(
ùbp
->
vÆ2
);

575 
vÆue
: 
∆í
 +
IPO_INT_LEN
;

576 i‡(
∆í
 >
bÀn
) {

577 
bÀn
 = bÀ¿* 2 + 
∆í
;

578 
off
 = 
p
 - 
bp
;

579 i‡((
bp
 = 
	`ªÆloc
(bp, 
bÀn
)Ë=
NULL
)

580 
	`nomem
();

581 
p
 = 
bp
 + 
off
;

583 
	`memmove
(
p
, &
ûí
, 
IPO_INT_LEN
);

584 
p
 +
IPO_INT_LEN
;

587 
ûí
 = 
ùbp
->
Àn
;

588 
ûí
 = 
	`ht⁄l
(ilen);

589 
∆í
 +
IPO_INT_LEN
 + 
ùbp
->
Àn
;

590 i‡(
∆í
 >
bÀn
) {

591 
bÀn
 = bÀ¿* 2 + 
∆í
;

592 
off
 = 
p
 - 
bp
;

593 i‡((
bp
 = 
	`ªÆloc
(bp, 
bÀn
)Ë=
NULL
)

594 
	`nomem
();

595 
p
 = 
bp
 + 
off
;

597 
	`memmove
(
p
, &
ûí
, 
IPO_INT_LEN
);

598 
p
 +
IPO_INT_LEN
;

599 
	`memmove
(
p
, 
ùbp
->
°r
, ipbp->
Àn
);

600 
p
 +
ùbp
->
Àn
;

603 #ifde‡
TR


604 
	`åa˚
("WROTE: ");

605 
n
 = 
p
 - 
bp
,Ö = bp;Ç > 0; --n, ++p)

606 i‡(
	`i•röt
(*
p
))

607 ()
	`åa˚
("%c", *
p
);

609 
	`åa˚
("<%x>", (
u_ch¨
)*
p
);

610 
	`åa˚
("\n");

613 
n
 = 
p
 - 
bp
,Ö = bp;Ç > 0;Ç -
nw
,Ö +=Çw)

614 i‡((
nw
 = 
	`wrôe
(
o_fd
, 
p
, 
n
)) < 0) {

615 
	`≥º‹
("ip_cl: write");

616 
	`exô
(1);

620 
	}
}

623 
	$nomem
()

625 
	`≥º‹
("ip_cl");

626 
	`exô
 (1);

627 
	}
}

634 
	$⁄chld
(
signo
)

635 
signo
;

637 
dõ
 = 1;

639 #ifde‡
TR


640 
	`åa˚
("SIGCHLD\n");

644 ()
	`kûl
(
	`gëpid
(), 
SIGINT
);

645 
	}
}

652 
	$⁄öå
(
signo
)

653 
signo
;

659 i‡(
dõ
)

661 ()
	`sig«l
(
SIGINT
, 
SIG_DFL
);

662 
	`kûl
(
	`gëpid
(), 
SIGINT
);

663 
	}
}

670 
	$⁄wöch
(
signo
)

671 
signo
;

673 
ªsize
 = 1;

674 
	}
}

677 
	$©èch
()

679 
fd
;

680 
ch
;

682 ()
	`¥ötf
("process %lu waiting,Énter <CR>Åo continue: ",

683 (
u_l⁄g
)
	`gëpid
());

684 ()
	`fÊush
(
°dout
);

686 i‡((
fd
 = 
	`›í
(
_PATH_TTY
, 
O_RDONLY
, 0)) < 0) {

687 
	`≥º‹
(
_PATH_TTY
);

688 
	`exô
 (1);;

691 i‡(
	`ªad
(
fd
, &
ch
, 1) != 1) {

692 ()
	`˛o£
(
fd
);

695 } 
ch
 != '\n' && ch != '\r');

696 ()
	`˛o£
(
fd
);

697 
	}
}

699 #ifde‡
TR


700 #ifde‡
__STDC__


701 
	~<°d¨g.h
>

703 
	~<v¨¨gs.h
>

711 #ifde‡
__STDC__


712 
	$åa˚
(c⁄° *
fmt
, ...)

714 
	$åa˚
(
fmt
, 
va_Æi°
)

715 *
fmt
;

716 
va_d˛


719 
FILE
 *
tÂ
;

720 
va_li°
 
≠
;

722 i‡(
tÂ
 =
NULL
 && (tÂ = 
	`f›í
(
TR
, "w")) == NULL)

723 
tÂ
 = 
°dîr
;

725 #ifde‡
__STDC__


726 
	`va_°¨t
(
≠
, 
fmt
);

728 
	`va_°¨t
(
≠
);

730 ()
	`vÂrötf
(
tÂ
, 
fmt
, 
≠
);

731 
	`va_íd
(
≠
);

733 ()
	`fÊush
(
tÂ
);

734 
	}
}

738 
	$ußge
()

740 ()
	`Ârötf
(
°dîr
, "usage: ip_cl [-D]\n");

741 
	`exô
(1);

742 
	}
}

	@perl_api/perlsfio.c

10 
	~"c⁄fig.h
"

12 #i‚de‡
löt


13 c⁄° 
	gsccsid
[] = "@(#)perlsfio.c 8.1 (Berkeley) 9/24/96";

16 
	~<sys/ty≥s.h
>

17 
	~<sys/queue.h
>

18 
	~<sys/time.h
>

20 
	~<bô°rög.h
>

21 
	~<˘y≥.h
>

22 
	~<limôs.h
>

23 
	~<sig«l.h
>

24 
	~<°dio.h
>

25 
	~<°dlib.h
>

26 
	~<°rög.h
>

27 
	~<ãrmios.h
>

28 
	~<uni°d.h
>

30 
	~"../comm⁄/comm⁄.h
"

32 
	~<EXTERN.h
>

33 
	~<≥æ.h
>

34 
	~<XSUB.h
>

36 
	~"≥æ_exã∫.h
"

41 #ifde‡
USE_SFIO


43 
	#NIL
(
ty≥
Ë(—y≥)0)

	)

46 
	$s‚viwrôe
(
f
, 
buf
, 
n
, 
disc
)

47 
Sfio_t
* 
f
;

48 * 
buf
;

49 
n
;

50 
Sfdisc_t
* 
disc
;

52 
SCR
 *
s¸p
;

54 
s¸p
 = (
SCR
 *)
	`SvIV
((
SV
*)
	`SvRV
(
	`≥æ_gë_sv
("curs¸", 
FALSE
)));

55 
	`msgq
(
s¸p
, 
M_INFO
, "%.*s", 
n
, 
buf
);

56  
n
;

57 
	}
}

66 
Sfdisc_t
 *

67 
	$sfd˙ewnvi
(
s¸p
)

68 
SCR
 *
s¸p
;

70 
Sfdisc_t
* 
disc
;

72 
	`MALLOC
(
s¸p
, 
disc
, 
Sfdisc_t
*, (Sfdisc_t));

73 i‡(!
disc
)  disc;

75 
disc
->
ªadf
 = (
S‰ód_f
)
NULL
;

76 
disc
->
wrôef
 = 
s‚viwrôe
;

77 
disc
->
£ekf
 = (
Sf£ek_f
)
NULL
;

78 
disc
->
ex˚±f
 = (
S„x˚±_f
)
NULL
;

79  
disc
;

80 
	}
}

	@regex/cclass.h

41 
	sc˛ass
 {

42 *
	m«me
;

43 *
	mch¨s
;

44 *
	mmu…is
;

45 } 
	gc˛as£s
[] = {

69 
NULL
, 0, ""

	@regex/cname.h

41 
	s˙ame
 {

42 *
	m«me
;

43 
	mcode
;

44 } 
	g˙ames
[] = {

140 
NULL
, 0,

	@regex/engine.c

47 #ifde‡
SNAMES


48 
	#m©chî
 
sm©chî


	)

49 
	#Á°
 
sÁ°


	)

50 
	#¶ow
 
s¶ow


	)

51 
	#dis£˘
 
sdis£˘


	)

52 
	#backªf
 
sbackªf


	)

53 
	#°ï
 
s°ï


	)

54 
	#¥öt
 
•röt


	)

55 
	#©
 
ßt


	)

56 
	#m©ch
 
sm©


	)

58 #ifde‡
LNAMES


59 
	#m©chî
 
lm©chî


	)

60 
	#Á°
 
lÁ°


	)

61 
	#¶ow
 
l¶ow


	)

62 
	#dis£˘
 
ldis£˘


	)

63 
	#backªf
 
lbackªf


	)

64 
	#°ï
 
l°ï


	)

65 
	#¥öt
 
Õröt


	)

66 
	#©
 
œt


	)

67 
	#m©ch
 
lm©


	)

71 
	sm©ch
 {

72 
ª_guts
 *
	mg
;

73 
	meÊags
;

74 
ªgm©ch_t
 *
	mpm©ch
;

75 *
	mofÂ
;

76 *
	mbegöp
;

77 *
	mídp
;

78 *
	mcﬁdp
;

79 **
	mœ°pos
;

80 
	mSTATEVARS
;

81 
°©es
 
	m°
;

82 
°©es
 
	m‰esh
;

83 
°©es
 
	mtmp
;

84 
°©es
 
	mem±y
;

88 #ifde‡
__˝lu•lus


93 
m©chî
 
__P
((
ª_guts
 *
g
, *
°rög
, 
size_t
 
nm©ch
, 
ªgm©ch_t
 
pm©ch
[], 
eÊags
));

94 *
dis£˘
 
__P
((
m©ch
 *
m
, *
°¨t
, *
°›
, 
s›no
 
°¨t°
, s›nÿ
°›°
));

95 *
backªf
 
__P
((
m©ch
 *
m
, *
°¨t
, *
°›
, 
s›no
 
°¨t°
, s›nÿ
°›°
, s›nÿ
Àv
));

96 *
Á°
 
__P
((
m©ch
 *
m
, *
°¨t
, *
°›
, 
s›no
 
°¨t°
, s›nÿ
°›°
));

97 *
¶ow
 
__P
((
m©ch
 *
m
, *
°¨t
, *
°›
, 
s›no
 
°¨t°
, s›nÿ
°›°
));

98 
°©es
 
°ï
 
__P
((
ª_guts
 *
g
, 
s›no
 
°¨t
, s›nÿ
°›
, sèã†
bef
, 
ch
, sèã†
a·
));

99 
	#BOL
 (
OUT
+1)

	)

100 
	#EOL
 (
BOL
+1)

	)

101 
	#BOLEOL
 (
BOL
+2)

	)

102 
	#NOTHING
 (
BOL
+3)

	)

103 
	#BOW
 (
BOL
+4)

	)

104 
	#EOW
 (
BOL
+5)

	)

105 
	#CODEMAX
 (
BOL
+5Ë

	)

106 
	#NONCHAR
(
c
Ë((cË> 
CHAR_MAX
)

	)

107 
	#NNONCHAR
 (
CODEMAX
-
CHAR_MAX
)

	)

108 #ifde‡
REDEBUG


109 
¥öt
 
__P
((
m©ch
 *
m
, *
ˇ±i⁄
, 
°©es
 
°
, 
ch
, 
FILE
 *
d
));

111 #ifde‡
REDEBUG


112 
©
 
__P
((
m©ch
 *
m
, *
tôÀ
, *
°¨t
, *
°›
, 
s›no
 
°¨t°
, s›nÿ
°›°
));

114 #ifde‡
REDEBUG


115 *
pch¨
 
__P
((
ch
));

118 #ifde‡
__˝lu•lus


123 #ifde‡
REDEBUG


124 
	#SP
(
t
, 
s
, 
c
Ë
	`¥öt
(
m
,Å, s, c, 
°dout
)

	)

125 
	#AT
(
t
, 
p1
, 
p2
, 
s1
, 
s2
Ë
	`©
(
m
,Å,Ö1,Ö2, s1, s2)

	)

126 
	#NOTE
(
°r
Ë{ i‡(
m
->
eÊags
&
REG_TRACE
Ë
	`¥ötf
("=%s\n", (°r)); }

	)

128 
	#SP
(
t
, 
s
, 
c
Ë

	)

129 
	#AT
(
t
, 
p1
, 
p2
, 
s1
, 
s2
Ë

	)

130 
	#NOTE
(
s
Ë

	)

139 
m©chî
(
g
, 
°rög
, 
nm©ch
, 
pm©ch
, 
eÊags
)

140 
ª_guts
 *
g
;

141 *
°rög
;

142 
size_t
 
nm©ch
;

143 
ªgm©ch_t
 
pm©ch
[];

144 
eÊags
;

146 *
ídp
;

147 
i
;

148 
m©ch
 
mv
;

149 
m©ch
 *
m
 = &
mv
;

150 *
dp
;

151 c⁄° 
s›no
 
gf
 = 
g
->
fú°°©e
+1;

152 c⁄° 
s›no
 
gl
 = 
g
->
œ°°©e
;

153 *
°¨t
;

154 *
°›
;

157 i‡(
g
->
cÊags
&
REG_NOSUB
)

158 
nm©ch
 = 0;

159 i‡(
eÊags
&
REG_STARTEND
) {

160 
°¨t
 = 
°rög
 + 
pm©ch
[0].
rm_so
;

161 
°›
 = 
°rög
 + 
pm©ch
[0].
rm_eo
;

163 
°¨t
 = 
°rög
;

164 
°›
 = 
°¨t
 + 
°æí
(start);

166 i‡(
°›
 < 
°¨t
)

167 (
REG_INVARG
);

170 i‡(
g
->
mu°
 !
NULL
) {

171 
dp
 = 
°¨t
; d∞< 
°›
; dp++)

172 i‡(*
dp
 =
g
->
mu°
[0] && 
°›
 - d∞>g->
mÀn
 &&

173 
memcmp
(
dp
, 
g
->
mu°
, (
size_t
)g->
mÀn
) == 0)

175 i‡(
dp
 =
°›
)

176 (
REG_NOMATCH
);

180 
m
->
g
 = g;

181 
m
->
eÊags
 =Éflags;

182 
m
->
pm©ch
 = 
NULL
;

183 
m
->
œ°pos
 = 
NULL
;

184 
m
->
ofÂ
 = 
°rög
;

185 
m
->
begöp
 = 
°¨t
;

186 
m
->
ídp
 = 
°›
;

187 
STATESETUP
(
m
, 4);

188 
SETUP
(
m
->
°
);

189 
SETUP
(
m
->
‰esh
);

190 
SETUP
(
m
->
tmp
);

191 
SETUP
(
m
->
em±y
);

192 
CLEAR
(
m
->
em±y
);

196 
ídp
 = 
Á°
(
m
, 
°¨t
, 
°›
, 
gf
, 
gl
);

197 i‡(
ídp
 =
NULL
) {

198 
STATETEARDOWN
(
m
);

199 (
REG_NOMATCH
);

201 i‡(
nm©ch
 =0 && !
g
->
backªfs
)

205 
as£π
(
m
->
cﬁdp
 !
NULL
);

207 
NOTE
("finding start");

208 
ídp
 = 
¶ow
(
m
, m->
cﬁdp
, 
°›
, 
gf
, 
gl
);

209 i‡(
ídp
 !
NULL
)

211 
as£π
(
m
->
cﬁdp
 < m->
ídp
);

212 
m
->
cﬁdp
++;

214 i‡(
nm©ch
 =1 && !
g
->
backªfs
)

218 i‡(
m
->
pm©ch
 =
NULL
)

219 
m
->
pm©ch
 = (
ªgm©ch_t
 *)
mÆloc
((m->
g
->
nsub
 + 1) *

220 (
ªgm©ch_t
));

221 i‡(
m
->
pm©ch
 =
NULL
) {

222 
STATETEARDOWN
(
m
);

223 (
REG_ESPACE
);

225 
i
 = 1; i <
m
->
g
->
nsub
; i++)

226 
m
->
pm©ch
[
i
].
rm_so
 = m->pm©ch[i].
rm_eo
 = -1;

227 i‡(!
g
->
backªfs
 && !(
m
->
eÊags
&
REG_BACKR
)) {

228 
NOTE
("dissecting");

229 
dp
 = 
dis£˘
(
m
, m->
cﬁdp
, 
ídp
, 
gf
, 
gl
);

231 i‡(
g
->
≈lus
 > 0 && 
m
->
œ°pos
 =
NULL
)

232 
m
->
œ°pos
 = (**)
mÆloc
((
g
->
≈lus
+1) *

234 i‡(
g
->
≈lus
 > 0 && 
m
->
œ°pos
 =
NULL
) {

235 
‰ì
(
m
->
pm©ch
);

236 
STATETEARDOWN
(
m
);

237 (
REG_ESPACE
);

239 
NOTE
("backref dissect");

240 
dp
 = 
backªf
(
m
, m->
cﬁdp
, 
ídp
, 
gf
, 
gl
, (
s›no
)0);

242 i‡(
dp
 !
NULL
)

246 
as£π
(
g
->
backªfs
);

247 
as£π
(
g
->
≈lus
 =0 || 
m
->
œ°pos
 !
NULL
);

249 i‡(
dp
 !
NULL
 || 
ídp
 <
m
->
cﬁdp
)

251 
NOTE
("backoff");

252 
ídp
 = 
¶ow
(
m
, m->
cﬁdp
,Éndp-1, 
gf
, 
gl
);

253 i‡(
ídp
 =
NULL
)

256 #i‚de‡
NDEBUG


257 
i
 = 1; i <
m
->
g
->
nsub
; i++) {

258 
as£π
(
m
->
pm©ch
[
i
].
rm_so
 == -1);

259 
as£π
(
m
->
pm©ch
[
i
].
rm_eo
 == -1);

262 
NOTE
("backoff dissect");

263 
dp
 = 
backªf
(
m
, m->
cﬁdp
, 
ídp
, 
gf
, 
gl
, (
s›no
)0);

265 
as£π
(
dp
 =
NULL
 || d∞=
ídp
);

266 i‡(
dp
 !
NULL
)

270 
NOTE
("falseálarm");

271 
°¨t
 = 
m
->
cﬁdp
 + 1;

272 
as£π
(
°¨t
 <
°›
);

276 i‡(
nm©ch
 > 0) {

277 
pm©ch
[0].
rm_so
 = 
m
->
cﬁdp
 - m->
ofÂ
;

278 
pm©ch
[0].
rm_eo
 = 
ídp
 - 
m
->
ofÂ
;

280 i‡(
nm©ch
 > 1) {

281 
as£π
(
m
->
pm©ch
 !
NULL
);

282 
i
 = 1; i < 
nm©ch
; i++)

283 i‡(
i
 <
m
->
g
->
nsub
)

284 
pm©ch
[
i
] = 
m
->pmatch[i];

286 
pm©ch
[
i
].
rm_so
 = -1;

287 
pm©ch
[
i
].
rm_eo
 = -1;

291 i‡(
m
->
pm©ch
 !
NULL
)

292 
‰ì
((*)
m
->
pm©ch
);

293 i‡(
m
->
œ°pos
 !
NULL
)

294 
‰ì
((*)
m
->
œ°pos
);

295 
STATETEARDOWN
(
m
);

305 
dis£˘
(
m
, 
°¨t
, 
°›
, 
°¨t°
, 
°›°
)

306 
m©ch
 *
m
;

307 *
°¨t
;

308 *
°›
;

309 
s›no
 
°¨t°
;

310 
s›no
 
°›°
;

312 
i
;

313 
s›no
 
ss
;

314 
s›no
 
es
;

315 *
•
;

316 *
°p
;

317 *
ª°
;

318 *
èû
;

319 
s›no
 
ssub
;

320 
s›no
 
esub
;

321 *
s•
;

322 *
£p
;

323 *
ﬁds•
;

324 *
dp
;

326 
AT
("diss", 
°¨t
, 
°›
, 
°¨t°
, 
°›°
);

327 
•
 = 
°¨t
;

328 
ss
 = 
°¨t°
; s†< 
°›°
; s†
es
) {

330 
es
 = 
ss
;

331 
OP
(
m
->
g
->
°rù
[
es
])) {

332 
OPLUS_
:

333 
OQUEST_
:

334 
es
 +
OPND
(
m
->
g
->
°rù
[es]);

336 
OCH_
:

337 
OP
(
m
->
g
->
°rù
[
es
]Ë!
O_CH
)

338 
es
 +
OPND
(
m
->
g
->
°rù
[es]);

341 
es
++;

344 
OP
(
m
->
g
->
°rù
[
ss
])) {

345 
OEND
:

346 
as£π
(
n›e
);

348 
OCHAR
:

349 
•
++;

351 
OBOL
:

352 
OEOL
:

353 
OBOW
:

354 
OEOW
:

356 
OANY
:

357 
OANYOF
:

358 
•
++;

360 
OBACK_
:

361 
O_BACK
:

362 
as£π
(
n›e
);

365 
OQUEST_
:

366 
°p
 = 
°›
;

369 
ª°
 = 
¶ow
(
m
, 
•
, 
°p
, 
ss
, 
es
);

370 
as£π
(
ª°
 !
NULL
);

372 
èû
 = 
¶ow
(
m
, 
ª°
, 
°›
, 
es
, 
°›°
);

373 i‡(
èû
 =
°›
)

376 
°p
 = 
ª°
 - 1;

377 
as£π
(
°p
 >
•
);

379 
ssub
 = 
ss
 + 1;

380 
esub
 = 
es
 - 1;

382 i‡(
¶ow
(
m
, 
•
, 
ª°
, 
ssub
, 
esub
Ë!
NULL
) {

383 
dp
 = 
dis£˘
(
m
, 
•
, 
ª°
, 
ssub
, 
esub
);

384 
as£π
(
dp
 =
ª°
);

386 
as£π
(
•
 =
ª°
);

387 
•
 = 
ª°
;

389 
OPLUS_
:

390 
°p
 = 
°›
;

393 
ª°
 = 
¶ow
(
m
, 
•
, 
°p
, 
ss
, 
es
);

394 
as£π
(
ª°
 !
NULL
);

396 
èû
 = 
¶ow
(
m
, 
ª°
, 
°›
, 
es
, 
°›°
);

397 i‡(
èû
 =
°›
)

400 
°p
 = 
ª°
 - 1;

401 
as£π
(
°p
 >
•
);

403 
ssub
 = 
ss
 + 1;

404 
esub
 = 
es
 - 1;

405 
s•
 = 
•
;

406 
ﬁds•
 = 
s•
;

408 
£p
 = 
¶ow
(
m
, 
s•
, 
ª°
, 
ssub
, 
esub
);

409 i‡(
£p
 =
NULL
 || sï =
s•
)

411 
ﬁds•
 = 
s•
;

412 
s•
 = 
£p
;

414 i‡(
£p
 =
NULL
) {

416 
£p
 = 
s•
;

417 
s•
 = 
ﬁds•
;

419 
as£π
(
£p
 =
ª°
);

420 
as£π
(
¶ow
(
m
, 
s•
, 
£p
, 
ssub
, 
esub
Ë=
ª°
);

421 
dp
 = 
dis£˘
(
m
, 
s•
, 
£p
, 
ssub
, 
esub
);

422 
as£π
(
dp
 =
£p
);

423 
•
 = 
ª°
;

425 
OCH_
:

426 
°p
 = 
°›
;

429 
ª°
 = 
¶ow
(
m
, 
•
, 
°p
, 
ss
, 
es
);

430 
as£π
(
ª°
 !
NULL
);

432 
èû
 = 
¶ow
(
m
, 
ª°
, 
°›
, 
es
, 
°›°
);

433 i‡(
èû
 =
°›
)

436 
°p
 = 
ª°
 - 1;

437 
as£π
(
°p
 >
•
);

439 
ssub
 = 
ss
 + 1;

440 
esub
 = 
ss
 + 
OPND
(
m
->
g
->
°rù
[ss]) - 1;

441 
as£π
(
OP
(
m
->
g
->
°rù
[
esub
]Ë=
OOR1
);

443 i‡(
¶ow
(
m
, 
•
, 
ª°
, 
ssub
, 
esub
) ==Ñest)

446 
as£π
(
OP
(
m
->
g
->
°rù
[
esub
]Ë=
OOR1
);

447 
esub
++;

448 
as£π
(
OP
(
m
->
g
->
°rù
[
esub
]Ë=
OOR2
);

449 
ssub
 = 
esub
 + 1;

450 
esub
 +
OPND
(
m
->
g
->
°rù
[esub]);

451 i‡(
OP
(
m
->
g
->
°rù
[
esub
]Ë=
OOR2
)

452 
esub
--;

454 
as£π
(
OP
(
m
->
g
->
°rù
[
esub
]Ë=
O_CH
);

456 
dp
 = 
dis£˘
(
m
, 
•
, 
ª°
, 
ssub
, 
esub
);

457 
as£π
(
dp
 =
ª°
);

458 
•
 = 
ª°
;

460 
O_PLUS
:

461 
O_QUEST
:

462 
OOR1
:

463 
OOR2
:

464 
O_CH
:

465 
as£π
(
n›e
);

467 
OLPAREN
:

468 
i
 = 
OPND
(
m
->
g
->
°rù
[
ss
]);

469 
as£π
(0 < 
i
 && i <
m
->
g
->
nsub
);

470 
m
->
pm©ch
[
i
].
rm_so
 = 
•
 - m->
ofÂ
;

472 
ORPAREN
:

473 
i
 = 
OPND
(
m
->
g
->
°rù
[
ss
]);

474 
as£π
(0 < 
i
 && i <
m
->
g
->
nsub
);

475 
m
->
pm©ch
[
i
].
rm_eo
 = 
•
 - m->
ofÂ
;

478 
as£π
(
n›e
);

483 
as£π
(
•
 =
°›
);

484 (
•
);

493 
backªf
(
m
, 
°¨t
, 
°›
, 
°¨t°
, 
°›°
, 
Àv
)

494 
m©ch
 *
m
;

495 *
°¨t
;

496 *
°›
;

497 
s›no
 
°¨t°
;

498 
s›no
 
°›°
;

499 
s›no
 
Àv
;

501 
i
;

502 
s›no
 
ss
;

503 *
•
;

504 
s›no
 
ssub
;

505 
s›no
 
esub
;

506 *
s•
;

507 *
dp
;

508 
size_t
 
Àn
;

509 
h¨d
;

510 
s›
 
s
;

511 
ªgoff_t
 
offßve
;

512 
c£t
 *
cs
;

514 
AT
("back", 
°¨t
, 
°›
, 
°¨t°
, 
°›°
);

515 
•
 = 
°¨t
;

518 
h¨d
 = 0;

519 
ss
 = 
°¨t°
; !
h¨d
 && s†< 
°›°
; ss++)

520 
OP
(
s
 = 
m
->
g
->
°rù
[
ss
])) {

521 
OCHAR
:

522 i‡(
•
 =
°›
 || *•++ !()
OPND
(
s
))

523 (
NULL
);

525 
OANY
:

526 i‡(
•
 =
°›
)

527 (
NULL
);

528 
•
++;

530 
OANYOF
:

531 
cs
 = &
m
->
g
->
£ts
[
OPND
(
s
)];

532 i‡(
•
 =
°›
 || !
CHIN
(
cs
, *sp++))

533 (
NULL
);

535 
OBOL
:

536 i‡–(
•
 =
m
->
begöp
 && !(m->
eÊags
&
REG_NOTBOL
)) ||

537 (
•
 < 
m
->
ídp
 && *(sp-1) == '\n' &&

538 (
m
->
g
->
cÊags
&
REG_NEWLINE
)) )

541 (
NULL
);

543 
OEOL
:

544 i‡–(
•
 =
m
->
ídp
 && !(m->
eÊags
&
REG_NOTEOL
)) ||

545 (
•
 < 
m
->
ídp
 && *sp == '\n' &&

546 (
m
->
g
->
cÊags
&
REG_NEWLINE
)) )

549 (
NULL
);

551 
OBOW
:

552 i‡(–(
•
 =
m
->
begöp
 && !(m->
eÊags
&
REG_NOTBOL
)) ||

553 (
•
 < 
m
->
ídp
 && *(sp-1) == '\n' &&

554 (
m
->
g
->
cÊags
&
REG_NEWLINE
)) ||

555 (
•
 > 
m
->
begöp
 &&

556 !
ISWORD
(*(
•
-1))) ) &&

557 (
•
 < 
m
->
ídp
 && 
ISWORD
(*sp)) )

560 (
NULL
);

562 
OEOW
:

563 i‡(–(
•
 =
m
->
ídp
 && !(m->
eÊags
&
REG_NOTEOL
)) ||

564 (
•
 < 
m
->
ídp
 && *sp == '\n' &&

565 (
m
->
g
->
cÊags
&
REG_NEWLINE
)) ||

566 (
•
 < 
m
->
ídp
 && !
ISWORD
(*sp)) ) &&

567 (
•
 > 
m
->
begöp
 && 
ISWORD
(*(sp-1))) )

570 (
NULL
);

572 
O_QUEST
:

574 
OOR1
:

575 
ss
++;

576 
s
 = 
m
->
g
->
°rù
[
ss
];

578 
as£π
(
OP
(
s
Ë=
OOR2
);

579 
ss
 +
OPND
(
s
);

580 } 
OP
(
s
 = 
m
->
g
->
°rù
[
ss
]Ë!
O_CH
);

584 
h¨d
 = 1;

587 i‡(!
h¨d
) {

588 i‡(
•
 !
°›
)

589 (
NULL
);

590 (
•
);

592 
ss
--;

595 
AT
("h¨d", 
•
, 
°›
, 
ss
, 
°›°
);

596 
s
 = 
m
->
g
->
°rù
[
ss
];

597 
OP
(
s
)) {

598 
OBACK_
:

599 
i
 = 
OPND
(
s
);

600 
as£π
(0 < 
i
 && i <
m
->
g
->
nsub
);

601 i‡(
m
->
pm©ch
[
i
].
rm_eo
 == -1)

602 (
NULL
);

603 
as£π
(
m
->
pm©ch
[
i
].
rm_so
 != -1);

604 
Àn
 = 
m
->
pm©ch
[
i
].
rm_eo
 - m->pm©ch[i].
rm_so
;

605 
as£π
(
°›
 - 
m
->
begöp
 >
Àn
);

606 i‡(
•
 > 
°›
 - 
Àn
)

607 (
NULL
);

608 
s•
 = 
m
->
ofÂ
 + m->
pm©ch
[
i
].
rm_so
;

609 i‡(
memcmp
(
•
, 
s•
, 
Àn
) != 0)

610 (
NULL
);

611 
m
->
g
->
°rù
[
ss
] !
SOP
(
O_BACK
, 
i
))

612 
ss
++;

613 (
backªf
(
m
, 
•
+
Àn
, 
°›
, 
ss
+1, 
°›°
, 
Àv
));

615 
OQUEST_
:

616 
dp
 = 
backªf
(
m
, 
•
, 
°›
, 
ss
+1, 
°›°
, 
Àv
);

617 i‡(
dp
 !
NULL
)

618 (
dp
);

619 (
backªf
(
m
, 
•
, 
°›
, 
ss
+
OPND
(
s
)+1, 
°›°
, 
Àv
));

621 
OPLUS_
:

622 
as£π
(
m
->
œ°pos
 !
NULL
);

623 
as£π
(
Àv
+1 <
m
->
g
->
≈lus
);

624 
m
->
œ°pos
[
Àv
+1] = 
•
;

625 (
backªf
(
m
, 
•
, 
°›
, 
ss
+1, 
°›°
, 
Àv
+1));

627 
O_PLUS
:

628 i‡(
•
 =
m
->
œ°pos
[
Àv
])

629 (
backªf
(
m
, 
•
, 
°›
, 
ss
+1, 
°›°
, 
Àv
-1));

631 
m
->
œ°pos
[
Àv
] = 
•
;

632 
dp
 = 
backªf
(
m
, 
•
, 
°›
, 
ss
-
OPND
(
s
)+1, 
°›°
, 
Àv
);

633 i‡(
dp
 =
NULL
)

634 (
backªf
(
m
, 
•
, 
°›
, 
ss
+1, 
°›°
, 
Àv
-1));

636 (
dp
);

638 
OCH_
:

639 
ssub
 = 
ss
 + 1;

640 
esub
 = 
ss
 + 
OPND
(
s
) - 1;

641 
as£π
(
OP
(
m
->
g
->
°rù
[
esub
]Ë=
OOR1
);

643 
dp
 = 
backªf
(
m
, 
•
, 
°›
, 
ssub
, 
esub
, 
Àv
);

644 i‡(
dp
 !
NULL
)

645 (
dp
);

647 i‡(
OP
(
m
->
g
->
°rù
[
esub
]Ë=
O_CH
)

648 (
NULL
);

649 
esub
++;

650 
as£π
(
OP
(
m
->
g
->
°rù
[
esub
]Ë=
OOR2
);

651 
ssub
 = 
esub
 + 1;

652 
esub
 +
OPND
(
m
->
g
->
°rù
[esub]);

653 i‡(
OP
(
m
->
g
->
°rù
[
esub
]Ë=
OOR2
)

654 
esub
--;

656 
as£π
(
OP
(
m
->
g
->
°rù
[
esub
]Ë=
O_CH
);

659 
OLPAREN
:

660 
i
 = 
OPND
(
s
);

661 
as£π
(0 < 
i
 && i <
m
->
g
->
nsub
);

662 
offßve
 = 
m
->
pm©ch
[
i
].
rm_so
;

663 
m
->
pm©ch
[
i
].
rm_so
 = 
•
 - m->
ofÂ
;

664 
dp
 = 
backªf
(
m
, 
•
, 
°›
, 
ss
+1, 
°›°
, 
Àv
);

665 i‡(
dp
 !
NULL
)

666 (
dp
);

667 
m
->
pm©ch
[
i
].
rm_so
 = 
offßve
;

668 (
NULL
);

670 
ORPAREN
:

671 
i
 = 
OPND
(
s
);

672 
as£π
(0 < 
i
 && i <
m
->
g
->
nsub
);

673 
offßve
 = 
m
->
pm©ch
[
i
].
rm_eo
;

674 
m
->
pm©ch
[
i
].
rm_eo
 = 
•
 - m->
ofÂ
;

675 
dp
 = 
backªf
(
m
, 
•
, 
°›
, 
ss
+1, 
°›°
, 
Àv
);

676 i‡(
dp
 !
NULL
)

677 (
dp
);

678 
m
->
pm©ch
[
i
].
rm_eo
 = 
offßve
;

679 (
NULL
);

682 
as£π
(
n›e
);

687 
as£π
(
n›e
);

697 
Á°
(
m
, 
°¨t
, 
°›
, 
°¨t°
, 
°›°
)

698 
m©ch
 *
m
;

699 *
°¨t
;

700 *
°›
;

701 
s›no
 
°¨t°
;

702 
s›no
 
°›°
;

704 
°©es
 
°
 = 
m
->st;

705 
°©es
 
‰esh
 = 
m
->fresh;

706 
°©es
 
tmp
 = 
m
->tmp;

707 *
p
 = 
°¨t
;

708 
c
 = (
°¨t
 =
m
->
begöp
Ë? 
OUT
 : *(start-1);

709 
œ°c
;

710 
Êagch
;

711 
i
;

712 *
cﬁdp
;

714 
CLEAR
(
°
);

715 
SET1
(
°
, 
°¨t°
);

716 
°
 = 
°ï
(
m
->
g
, 
°¨t°
, 
°›°
, st, 
NOTHING
, st);

717 
ASSIGN
(
‰esh
, 
°
);

718 
SP
("°¨t", 
°
, *
p
);

719 
cﬁdp
 = 
NULL
;

722 
œ°c
 = 
c
;

723 
c
 = (
p
 =
m
->
ídp
Ë? 
OUT
 : *p;

724 i‡(
EQ
(
°
, 
‰esh
))

725 
cﬁdp
 = 
p
;

728 
Êagch
 = '\0';

729 
i
 = 0;

730 i‡–(
œ°c
 ='\n' && 
m
->
g
->
cÊags
&
REG_NEWLINE
) ||

731 (
œ°c
 =
OUT
 && !(
m
->
eÊags
&
REG_NOTBOL
)) ) {

732 
Êagch
 = 
BOL
;

733 
i
 = 
m
->
g
->
nbﬁ
;

735 i‡–(
c
 ='\n' && 
m
->
g
->
cÊags
&
REG_NEWLINE
) ||

736 (
c
 =
OUT
 && !(
m
->
eÊags
&
REG_NOTEOL
)) ) {

737 
Êagch
 = (Êagch =
BOL
Ë? 
BOLEOL
 : 
EOL
;

738 
i
 +
m
->
g
->
√ﬁ
;

740 i‡(
i
 != 0) {

741 ; 
i
 > 0; i--)

742 
°
 = 
°ï
(
m
->
g
, 
°¨t°
, 
°›°
, st, 
Êagch
, st);

743 
SP
("bﬁeﬁ", 
°
, 
c
);

747 i‡–(
Êagch
 =
BOL
 || (
œ°c
 !
OUT
 && !
ISWORD
(lastc))) &&

748 (
c
 !
OUT
 && 
ISWORD
(c)) ) {

749 
Êagch
 = 
BOW
;

751 i‡–(
œ°c
 !
OUT
 && 
ISWORD
(lastc)) &&

752 (
Êagch
 =
EOL
 || (
c
 !
OUT
 && !
ISWORD
(c))) ) {

753 
Êagch
 = 
EOW
;

755 i‡(
Êagch
 =
BOW
 || fœgch =
EOW
) {

756 
°
 = 
°ï
(
m
->
g
, 
°¨t°
, 
°›°
, st, 
Êagch
, st);

757 
SP
("boweow", 
°
, 
c
);

761 i‡(
ISSET
(
°
, 
°›°
Ë|| 
p
 =
°›
)

765 
ASSIGN
(
tmp
, 
°
);

766 
ASSIGN
(
°
, 
‰esh
);

767 
as£π
(
c
 !
OUT
);

768 
°
 = 
°ï
(
m
->
g
, 
°¨t°
, 
°›°
, 
tmp
, 
c
, st);

769 
SP
("a·", 
°
, 
c
);

770 
as£π
(
EQ
(
°ï
(
m
->
g
, 
°¨t°
, 
°›°
, 
°
, 
NOTHING
, st), st));

771 
p
++;

774 
as£π
(
cﬁdp
 !
NULL
);

775 
m
->
cﬁdp
 = coldp;

776 i‡(
ISSET
(
°
, 
°›°
))

777 (
p
+1);

779 (
NULL
);

788 
¶ow
(
m
, 
°¨t
, 
°›
, 
°¨t°
, 
°›°
)

789 
m©ch
 *
m
;

790 *
°¨t
;

791 *
°›
;

792 
s›no
 
°¨t°
;

793 
s›no
 
°›°
;

795 
°©es
 
°
 = 
m
->st;

796 
°©es
 
em±y
 = 
m
->empty;

797 
°©es
 
tmp
 = 
m
->tmp;

798 *
p
 = 
°¨t
;

799 
c
 = (
°¨t
 =
m
->
begöp
Ë? 
OUT
 : *(start-1);

800 
œ°c
;

801 
Êagch
;

802 
i
;

803 *
m©chp
;

805 
AT
("¶ow", 
°¨t
, 
°›
, 
°¨t°
, 
°›°
);

806 
CLEAR
(
°
);

807 
SET1
(
°
, 
°¨t°
);

808 
SP
("s°¨t", 
°
, *
p
);

809 
°
 = 
°ï
(
m
->
g
, 
°¨t°
, 
°›°
, st, 
NOTHING
, st);

810 
m©chp
 = 
NULL
;

813 
œ°c
 = 
c
;

814 
c
 = (
p
 =
m
->
ídp
Ë? 
OUT
 : *p;

817 
Êagch
 = '\0';

818 
i
 = 0;

819 i‡–(
œ°c
 ='\n' && 
m
->
g
->
cÊags
&
REG_NEWLINE
) ||

820 (
œ°c
 =
OUT
 && !(
m
->
eÊags
&
REG_NOTBOL
)) ) {

821 
Êagch
 = 
BOL
;

822 
i
 = 
m
->
g
->
nbﬁ
;

824 i‡–(
c
 ='\n' && 
m
->
g
->
cÊags
&
REG_NEWLINE
) ||

825 (
c
 =
OUT
 && !(
m
->
eÊags
&
REG_NOTEOL
)) ) {

826 
Êagch
 = (Êagch =
BOL
Ë? 
BOLEOL
 : 
EOL
;

827 
i
 +
m
->
g
->
√ﬁ
;

829 i‡(
i
 != 0) {

830 ; 
i
 > 0; i--)

831 
°
 = 
°ï
(
m
->
g
, 
°¨t°
, 
°›°
, st, 
Êagch
, st);

832 
SP
("sbﬁeﬁ", 
°
, 
c
);

836 i‡–(
Êagch
 =
BOL
 || (
œ°c
 !
OUT
 && !
ISWORD
(lastc))) &&

837 (
c
 !
OUT
 && 
ISWORD
(c)) ) {

838 
Êagch
 = 
BOW
;

840 i‡–(
œ°c
 !
OUT
 && 
ISWORD
(lastc)) &&

841 (
Êagch
 =
EOL
 || (
c
 !
OUT
 && !
ISWORD
(c))) ) {

842 
Êagch
 = 
EOW
;

844 i‡(
Êagch
 =
BOW
 || fœgch =
EOW
) {

845 
°
 = 
°ï
(
m
->
g
, 
°¨t°
, 
°›°
, st, 
Êagch
, st);

846 
SP
("sboweow", 
°
, 
c
);

850 i‡(
ISSET
(
°
, 
°›°
))

851 
m©chp
 = 
p
;

852 i‡(
EQ
(
°
, 
em±y
Ë|| 
p
 =
°›
)

856 
ASSIGN
(
tmp
, 
°
);

857 
ASSIGN
(
°
, 
em±y
);

858 
as£π
(
c
 !
OUT
);

859 
°
 = 
°ï
(
m
->
g
, 
°¨t°
, 
°›°
, 
tmp
, 
c
, st);

860 
SP
("ß·", 
°
, 
c
);

861 
as£π
(
EQ
(
°ï
(
m
->
g
, 
°¨t°
, 
°›°
, 
°
, 
NOTHING
, st), st));

862 
p
++;

865 (
m©chp
);

883 
°©es


884 
°ï
(
g
, 
°¨t
, 
°›
, 
bef
, 
ch
, 
a·
)

885 
ª_guts
 *
g
;

886 
s›no
 
°¨t
;

887 
s›no
 
°›
;

888 
°©es
 
bef
;

889 
ch
;

890 
°©es
 
a·
;

892 
c£t
 *
cs
;

893 
s›
 
s
;

894 
s›no
 
pc
;

895 
⁄e°©e
 
hîe
;

896 
s›no
 
look
;

897 
i
;

899 
pc
 = 
°¨t
, 
INIT
(
hîe
,Öc);Ö¯!
°›
;Öc++, 
INC
(here)) {

900 
s
 = 
g
->
°rù
[
pc
];

901 
OP
(
s
)) {

902 
OEND
:

903 
as£π
(
pc
 =
°›
-1);

905 
OCHAR
:

907 
as£π
(!
NONCHAR
(
ch
Ë|| ch !()
OPND
(
s
));

908 i‡(
ch
 =()
OPND
(
s
))

909 
FWD
(
a·
, 
bef
, 1);

911 
OBOL
:

912 i‡(
ch
 =
BOL
 || ch =
BOLEOL
)

913 
FWD
(
a·
, 
bef
, 1);

915 
OEOL
:

916 i‡(
ch
 =
EOL
 || ch =
BOLEOL
)

917 
FWD
(
a·
, 
bef
, 1);

919 
OBOW
:

920 i‡(
ch
 =
BOW
)

921 
FWD
(
a·
, 
bef
, 1);

923 
OEOW
:

924 i‡(
ch
 =
EOW
)

925 
FWD
(
a·
, 
bef
, 1);

927 
OANY
:

928 i‡(!
NONCHAR
(
ch
))

929 
FWD
(
a·
, 
bef
, 1);

931 
OANYOF
:

932 
cs
 = &
g
->
£ts
[
OPND
(
s
)];

933 i‡(!
NONCHAR
(
ch
Ë&& 
CHIN
(
cs
, ch))

934 
FWD
(
a·
, 
bef
, 1);

936 
OBACK_
:

937 
O_BACK
:

938 
FWD
(
a·
,áft, 1);

940 
OPLUS_
:

941 
FWD
(
a·
,áft, 1);

943 
O_PLUS
:

944 
FWD
(
a·
,áft, 1);

945 
i
 = 
ISSETBACK
(
a·
, 
OPND
(
s
));

946 
BACK
(
a·
,á·, 
OPND
(
s
));

947 i‡(!
i
 && 
ISSETBACK
(
a·
, 
OPND
(
s
))) {

949 
pc
 -
OPND
(
s
) + 1;

950 
INIT
(
hîe
, 
pc
);

953 
OQUEST_
:

954 
FWD
(
a·
,áft, 1);

955 
FWD
(
a·
,á·, 
OPND
(
s
));

957 
O_QUEST
:

958 
FWD
(
a·
,áft, 1);

960 
OLPAREN
:

961 
ORPAREN
:

962 
FWD
(
a·
,áft, 1);

964 
OCH_
:

965 
FWD
(
a·
,áft, 1);

966 
as£π
(
OP
(
g
->
°rù
[
pc
+
OPND
(
s
)]Ë=
OOR2
);

967 
FWD
(
a·
,á·, 
OPND
(
s
));

969 
OOR1
:

970 i‡(
ISSTATEIN
(
a·
, 
hîe
)) {

971 
look
 = 1;

972 
OP
(
s
 = 
g
->
°rù
[
pc
+
look
]Ë!
O_CH
;

973 
look
 +
OPND
(
s
))

974 
as£π
(
OP
(
s
Ë=
OOR2
);

975 
FWD
(
a·
,á·, 
look
);

978 
OOR2
:

979 
FWD
(
a·
,áft, 1);

980 i‡(
OP
(
g
->
°rù
[
pc
+
OPND
(
s
)]Ë!
O_CH
) {

981 
as£π
(
OP
(
g
->
°rù
[
pc
+
OPND
(
s
)]Ë=
OOR2
);

982 
FWD
(
a·
,á·, 
OPND
(
s
));

985 
O_CH
:

986 
FWD
(
a·
,áft, 1);

989 
as£π
(
n›e
);

994 (
a·
);

997 #ifde‡
REDEBUG


1006 
¥öt
(
m
, 
ˇ±i⁄
, 
°
, 
ch
, 
d
)

1007 
m©ch
 *
m
;

1008 *
ˇ±i⁄
;

1009 
°©es
 
°
;

1010 
ch
;

1011 
FILE
 *
d
;

1013 
ª_guts
 *
g
 = 
m
->g;

1014 
i
;

1015 
fú°
 = 1;

1017 i‡(!(
m
->
eÊags
&
REG_TRACE
))

1020 
Ârötf
(
d
, "%s", 
ˇ±i⁄
);

1021 i‡(
ch
 != '\0')

1022 
Ârötf
(
d
, " %s", 
pch¨
(
ch
));

1023 
i
 = 0; i < 
g
->
n°©es
; i++)

1024 i‡(
ISSET
(
°
, 
i
)) {

1025 
Ârötf
(
d
, "%s%d", (
fú°
Ë? "\t" : ", ", 
i
);

1026 
fú°
 = 0;

1028 
Ârötf
(
d
, "\n");

1039 
©
(
m
, 
tôÀ
, 
°¨t
, 
°›
, 
°¨t°
, 
°›°
)

1040 
m©ch
 *
m
;

1041 *
tôÀ
;

1042 *
°¨t
;

1043 *
°›
;

1044 
s›no
 
°¨t°
;

1045 
s›no
 
°›°
;

1047 i‡(!(
m
->
eÊags
&
REG_TRACE
))

1050 
¥ötf
("%†%s-", 
tôÀ
, 
pch¨
(*
°¨t
));

1051 
¥ötf
("%†", 
pch¨
(*
°›
));

1052 
¥ötf
("%ld-%ld\n", ()
°¨t°
, ()
°›°
);

1055 #i‚de‡
PCHARDONE


1056 
	#PCHARDONE


	)

1069 
pch¨
(
ch
)

1070 
ch
;

1072 
pbuf
[10];

1074 i‡(
i•röt
(
ch
) || ch == ' ')

1075 
•rötf
(
pbuf
, "%c", 
ch
);

1077 
•rötf
(
pbuf
, "\\%o", 
ch
);

1078 (
pbuf
);

1083 #unde‡
m©chî


1084 #unde‡
Á°


1085 #unde‡
¶ow


1086 #unde‡
dis£˘


1087 #unde‡
backªf


1088 #unde‡
°ï


1089 #unde‡
¥öt


1090 #unde‡
©


1091 #unde‡
m©ch


	@regex/regcomp.c

40 #i‡
deföed
(
LIBC_SCCS
Ë&& !deföed(
löt
)

41 
	gsccsid
[] = "@(#)regcomp.c 8.4 (Berkeley) 3/19/94";

44 
	~<sys/ty≥s.h
>

45 
	~<°dio.h
>

46 
	~<°rög.h
>

47 
	~<˘y≥.h
>

48 
	~<limôs.h
>

49 
	~<°dlib.h
>

50 
	~<ªgex.h
>

52 
	~"utûs.h
"

53 
	~"ªgex2.h
"

55 
	~"c˛ass.h
"

56 
	~"˙ame.h
"

62 
	s∑r£
 {

63 *
	m√xt
;

64 *
	míd
;

65 
	mîr‹
;

66 
s›
 *
	m°rù
;

67 
s›no
 
	mssize
;

68 
s›no
 
	m¶í
;

69 
	mncßŒoc
;

70 
ª_guts
 *
	mg
;

71 
	#NPAREN
 10

	)

72 
s›no
 
	mpbegö
[
NPAREN
];

73 
s›no
 
	m≥nd
[
NPAREN
];

77 #ifde‡
__˝lu•lus


82 
p_îe
 
__P
((
∑r£
 *
p
, 
°›
));

83 
p_îe_exp
 
__P
((
∑r£
 *
p
));

84 
p_°r
 
__P
((
∑r£
 *
p
));

85 
p_bª
 
__P
((
∑r£
 *
p
, 
íd1
, 
íd2
));

86 
p_simp_ª
 
__P
((
∑r£
 *
p
, 
°¨‹dö¨y
));

87 
p_cou¡
 
__P
((
∑r£
 *
p
));

88 
p_bøckë
 
__P
((
∑r£
 *
p
));

89 
p_b_ãrm
 
__P
((
∑r£
 *
p
, 
c£t
 *
cs
));

90 
p_b_c˛ass
 
__P
((
∑r£
 *
p
, 
c£t
 *
cs
));

91 
p_b_e˛ass
 
__P
((
∑r£
 *
p
, 
c£t
 *
cs
));

92 
p_b_symbﬁ
 
__P
((
∑r£
 *
p
));

93 
p_b_cﬁl_ñem
 
__P
((
∑r£
 *
p
, 
ídc
));

94 
Ÿhîˇ£
 
__P
((
ch
));

95 
bŸhˇ£s
 
__P
((
∑r£
 *
p
, 
ch
));

96 
‹dö¨y
 
__P
((
∑r£
 *
p
, 
ch
));

97 
n⁄√wlöe
 
__P
((
∑r£
 *
p
));

98 
ª≥©
 
__P
((
∑r£
 *
p
, 
s›no
 
°¨t
, 
‰om
, 
to
));

99 
£ãº
 
__P
((
∑r£
 *
p
, 
e
));

100 
c£t
 *
Æloc£t
 
__P
((
∑r£
 *
p
));

101 
‰ì£t
 
__P
((
∑r£
 *
p
, 
c£t
 *
cs
));

102 
‰ìze£t
 
__P
((
∑r£
 *
p
, 
c£t
 *
cs
));

103 
fú°ch
 
__P
((
∑r£
 *
p
, 
c£t
 *
cs
));

104 
nch
 
__P
((
∑r£
 *
p
, 
c£t
 *
cs
));

105 
mˇdd
 
__P
((
∑r£
 *
p
, 
c£t
 *
cs
, *
˝
));

106 
mcsub
 
__P
((
c£t
 *
cs
, *
˝
));

107 
mcö
 
__P
((
c£t
 *
cs
, *
˝
));

108 *
mcföd
 
__P
((
c£t
 *
cs
, *
˝
));

109 
mcövît
 
__P
((
∑r£
 *
p
, 
c£t
 *
cs
));

110 
mcˇ£
 
__P
((
∑r£
 *
p
, 
c£t
 *
cs
));

111 
isö£ts
 
__P
((
ª_guts
 *
g
, 
c
));

112 
ßme£ts
 
__P
((
ª_guts
 *
g
, 
c1
, 
c2
));

113 
ˇãg‹ize
 
__P
((
∑r£
 *
p
, 
ª_guts
 *
g
));

114 
s›no
 
du∂
 
__P
((
∑r£
 *
p
, s›nÿ
°¨t
, s›nÿ
föish
));

115 
d€mô
 
__P
((
∑r£
 *
p
, 
s›
 
›
, 
size_t
 
›nd
));

116 
doö£π
 
__P
((
∑r£
 *
p
, 
s›
 
›
, 
size_t
 
›nd
, 
s›no
 
pos
));

117 
dofwd
 
__P
((
∑r£
 *
p
, 
s›no
 
pos
, 
s›
 
vÆue
));

118 
íœrge
 
__P
((
∑r£
 *
p
, 
s›no
 
size
));

119 
°rù¢ug
 
__P
((
∑r£
 *
p
, 
ª_guts
 *
g
));

120 
födmu°
 
__P
((
∑r£
 *
p
, 
ª_guts
 *
g
));

121 
s›no
 
∂uscou¡
 
__P
((
∑r£
 *
p
, 
ª_guts
 *
g
));

123 #ifde‡
__˝lu•lus


128 
nuls
[10];

134 
	#PEEK
(Ë(*
p
->
√xt
)

	)

135 
	#PEEK2
(Ë(*(
p
->
√xt
+1))

	)

136 
	#MORE
(Ë(
p
->
√xt
 <Ö->
íd
)

	)

137 
	#MORE2
(Ë(
p
->
√xt
+1 <Ö->
íd
)

	)

138 
	#SEE
(
c
Ë(
	`MORE
(Ë&& 
	`PEEK
(Ë=(c))

	)

139 
	#SEETWO
(
a
, 
b
Ë(
	`MORE
(Ë&& 
	`MORE2
(Ë&& 
	`PEEK
(Ë=◊Ë&& 
	`PEEK2
(Ë=(b))

	)

140 
	#EAT
(
c
Ë((
	`SEE
(c)Ë? (
	`NEXT
(), 1Ë: 0)

	)

141 
	#EATTWO
(
a
, 
b
Ë((
	`SEETWO
◊, b)Ë? (
	`NEXT2
(), 1Ë: 0)

	)

142 
	#NEXT
(Ë(
p
->
√xt
++)

	)

143 
	#NEXT2
(Ë(
p
->
√xt
 +2)

	)

144 
	#NEXTn
(
n
Ë(
p
->
√xt
 +“))

	)

145 
	#GETNEXT
(Ë(*
p
->
√xt
++)

	)

146 
	#SETERROR
(
e
Ë
	`£ãº
(
p
, (e))

	)

147 
	#REQUIRE
(
co
, 
e
Ë((coË|| 
	`SETERROR
”))

	)

148 
	#MUSTSEE
(
c
, 
e
Ë(
	`REQUIRE
(
	`MORE
(Ë&& 
	`PEEK
(Ë=(c),É))

	)

149 
	#MUSTEAT
(
c
, 
e
Ë(
	`REQUIRE
(
	`MORE
(Ë&& 
	`GETNEXT
(Ë=(c),É))

	)

150 
	#MUSTNOTSEE
(
c
, 
e
Ë(
	`REQUIRE
(!
	`MORE
(Ë|| 
	`PEEK
(Ë!(c),É))

	)

151 
	#EMIT
(
›
, 
s›nd
Ë
	`d€mô
(
p
, (
s›
)(›), (
size_t
)(s›nd))

	)

152 
	#INSERT
(
›
, 
pos
Ë
	`doö£π
(
p
, (
s›
)(›), 
	`HERE
()-’os)+1,Öos)

	)

153 
	#AHEAD
(
pos
Ë
	`dofwd
(
p
,Öos, 
	`HERE
()-’os))

	)

154 
	#ASTERN
(
s›
, 
pos
Ë
	`EMIT
(s›, 
	`HERE
()-pos)

	)

155 
	#HERE
(Ë(
p
->
¶í
)

	)

156 
	#THERE
(Ë(
p
->
¶í
 - 1)

	)

157 
	#THERETHERE
(Ë(
p
->
¶í
 - 2)

	)

158 
	#DROP
(
n
Ë(
p
->
¶í
 -“))

	)

160 #i‚de‡
NDEBUG


161 
	g√vî
 = 0;

163 
	#√vî
 0

	)

179 
	$ªgcomp
(
¥eg
, 
∑âîn
, 
cÊags
)

180 
ªgex_t
 *
¥eg
;

181 c⁄° *
∑âîn
;

182 
cÊags
;

184 
∑r£
 
∑
;

185 
ª_guts
 *
g
;

186 
∑r£
 *
p
 = &
∑
;

187 
i
;

188 
size_t
 
Àn
;

189 #ifde‡
REDEBUG


190 
	#GOODFLAGS
(
f
Ë(f)

	)

192 
	#GOODFLAGS
(
f
Ë((f)&~
REG_DUMP
)

	)

195 
cÊags
 = 
	`GOODFLAGS
(cflags);

196 i‡((
cÊags
&
REG_EXTENDED
Ë&& (cÊags&
REG_NOSPEC
))

197 (
REG_INVARG
);

199 i‡(
cÊags
&
REG_PEND
) {

200 i‡(
¥eg
->
ª_ídp
 < 
∑âîn
)

201 (
REG_INVARG
);

202 
Àn
 = 
¥eg
->
ª_ídp
 - 
∑âîn
;

204 
Àn
 = 
	`°æí
((*)
∑âîn
);

207 
g
 = (
ª_guts
 *)
	`mÆloc
((re_guts) +

208 (
NC
-1)*(
ˇt_t
));

209 i‡(
g
 =
NULL
)

210 (
REG_ESPACE
);

211 
p
->
ssize
 = 
Àn
/(
size_t
)2*(size_t)3 + (size_t)1;

212 
p
->
°rù
 = (
s›
 *)
	`mÆloc
’->
ssize
 * (sop));

213 
p
->
¶í
 = 0;

214 i‡(
p
->
°rù
 =
NULL
) {

215 
	`‰ì
((*)
g
);

216 (
REG_ESPACE
);

220 
p
->
g
 = g;

221 
p
->
√xt
 = (*)
∑âîn
;

222 
p
->
íd
 =Ö->
√xt
 + 
Àn
;

223 
p
->
îr‹
 = 0;

224 
p
->
ncßŒoc
 = 0;

225 
i
 = 0; i < 
NPAREN
; i++) {

226 
p
->
pbegö
[
i
] = 0;

227 
p
->
≥nd
[
i
] = 0;

229 
g
->
c£tsize
 = 
NC
;

230 
g
->
£ts
 = 
NULL
;

231 
g
->
£tbôs
 = 
NULL
;

232 
g
->
nc£ts
 = 0;

233 
g
->
cÊags
 = cflags;

234 
g
->
iÊags
 = 0;

235 
g
->
nbﬁ
 = 0;

236 
g
->
√ﬁ
 = 0;

237 
g
->
mu°
 = 
NULL
;

238 
g
->
mÀn
 = 0;

239 
g
->
nsub
 = 0;

240 
g
->
nˇãg‹õs
 = 1;

241 
g
->
ˇãg‹õs
 = &g->
ˇt•a˚
[-(
CHAR_MIN
)];

242 (Ë
	`mem£t
((*)
g
->
ˇt•a˚
, 0, 
NC
*(
ˇt_t
));

243 
g
->
backªfs
 = 0;

246 
	`EMIT
(
OEND
, 0);

247 
g
->
fú°°©e
 = 
	`THERE
();

248 i‡(
cÊags
&
REG_EXTENDED
)

249 
	`p_îe
(
p
, 
OUT
);

250 i‡(
cÊags
&
REG_NOSPEC
)

251 
	`p_°r
(
p
);

253 
	`p_bª
(
p
, 
OUT
, OUT);

254 
	`EMIT
(
OEND
, 0);

255 
g
->
œ°°©e
 = 
	`THERE
();

258 
	`ˇãg‹ize
(
p
, 
g
);

259 
	`°rù¢ug
(
p
, 
g
);

260 
	`födmu°
(
p
, 
g
);

261 
g
->
≈lus
 = 
	`∂uscou¡
(
p
, g);

262 
g
->
magic
 = 
MAGIC2
;

263 
¥eg
->
ª_nsub
 = 
g
->
nsub
;

264 
¥eg
->
ª_g
 = 
g
;

265 
¥eg
->
ª_magic
 = 
MAGIC1
;

266 #i‚de‡
REDEBUG


268 i‡(
g
->
iÊags
&
BAD
)

269 
	`SETERROR
(
REG_ASSERT
);

273 i‡(
p
->
îr‹
 != 0)

274 
	`ªg‰ì
(
¥eg
);

275 (
p
->
îr‹
);

276 
	}
}

283 
	$p_îe
(
p
, 
°›
)

284 
∑r£
 *
p
;

285 
°›
;

287 
c
;

288 
s›no
 
¥evback
;

289 
s›no
 
¥evfwd
;

290 
s›no
 
c⁄c
;

291 
fú°
 = 1;

295 
c⁄c
 = 
	`HERE
();

296 
	`MORE
(Ë&& (
c
 = 
	`PEEK
()Ë!'|' && c !
°›
)

297 
	`p_îe_exp
(
p
);

298 
	`REQUIRE
(
	`HERE
(Ë!
c⁄c
, 
REG_EMPTY
);

300 i‡(!
	`EAT
('|'))

303 i‡(
fú°
) {

304 
	`INSERT
(
OCH_
, 
c⁄c
);

305 
¥evfwd
 = 
c⁄c
;

306 
¥evback
 = 
c⁄c
;

307 
fú°
 = 0;

309 
	`ASTERN
(
OOR1
, 
¥evback
);

310 
¥evback
 = 
	`THERE
();

311 
	`AHEAD
(
¥evfwd
);

312 
¥evfwd
 = 
	`HERE
();

313 
	`EMIT
(
OOR2
, 0);

316 i‡(!
fú°
) {

317 
	`AHEAD
(
¥evfwd
);

318 
	`ASTERN
(
O_CH
, 
¥evback
);

321 
	`as£π
(!
	`MORE
(Ë|| 
	`SEE
(
°›
));

322 
	}
}

329 
	$p_îe_exp
(
p
)

330 
∑r£
 *
p
;

332 
c
;

333 
s›no
 
pos
;

334 
cou¡
;

335 
cou¡2
;

336 
s›no
 
subno
;

337 
wasˇªt
 = 0;

339 
	`as£π
(
	`MORE
());

340 
c
 = 
	`GETNEXT
();

342 
pos
 = 
	`HERE
();

343 
c
) {

345 
	`REQUIRE
(
	`MORE
(), 
REG_EPAREN
);

346 
p
->
g
->
nsub
++;

347 
subno
 = 
p
->
g
->
nsub
;

348 i‡(
subno
 < 
NPAREN
)

349 
p
->
pbegö
[
subno
] = 
	`HERE
();

350 
	`EMIT
(
OLPAREN
, 
subno
);

351 i‡(!
	`SEE
(')'))

352 
	`p_îe
(
p
, ')');

353 i‡(
subno
 < 
NPAREN
) {

354 
p
->
≥nd
[
subno
] = 
	`HERE
();

355 
	`as£π
(
p
->
≥nd
[
subno
] != 0);

357 
	`EMIT
(
ORPAREN
, 
subno
);

358 
	`MUSTEAT
(')', 
REG_EPAREN
);

360 #i‚de‡
POSIX_MISTAKE


369 
	`SETERROR
(
REG_EPAREN
);

373 
	`EMIT
(
OBOL
, 0);

374 
p
->
g
->
iÊags
 |
USEBOL
;

375 
p
->
g
->
nbﬁ
++;

376 
wasˇªt
 = 1;

379 
	`EMIT
(
OEOL
, 0);

380 
p
->
g
->
iÊags
 |
USEEOL
;

381 
p
->
g
->
√ﬁ
++;

384 
	`SETERROR
(
REG_EMPTY
);

389 
	`SETERROR
(
REG_BADRPT
);

392 i‡(
p
->
g
->
cÊags
&
REG_NEWLINE
)

393 
	`n⁄√wlöe
(
p
);

395 
	`EMIT
(
OANY
, 0);

398 
	`p_bøckë
(
p
);

401 
	`REQUIRE
(
	`MORE
(), 
REG_EESCAPE
);

402 
c
 = 
	`GETNEXT
();

403 
	`‹dö¨y
(
p
, 
c
);

406 
	`REQUIRE
(!
	`MORE
(Ë|| !
	`isdigô
(
	`PEEK
()), 
REG_BADRPT
);

409 
	`‹dö¨y
(
p
, 
c
);

413 i‡(!
	`MORE
())

415 
c
 = 
	`PEEK
();

417 i‡(!–
c
 == '*' || c == '+' || c == '?' ||

418 (
c
 ='{' && 
	`MORE2
(Ë&& 
	`isdigô
(
	`PEEK2
())) ))

420 
	`NEXT
();

422 
	`REQUIRE
(!
wasˇªt
, 
REG_BADRPT
);

423 
c
) {

426 
	`INSERT
(
OPLUS_
, 
pos
);

427 
	`ASTERN
(
O_PLUS
, 
pos
);

428 
	`INSERT
(
OQUEST_
, 
pos
);

429 
	`ASTERN
(
O_QUEST
, 
pos
);

432 
	`INSERT
(
OPLUS_
, 
pos
);

433 
	`ASTERN
(
O_PLUS
, 
pos
);

437 
	`INSERT
(
OCH_
, 
pos
);

438 
	`ASTERN
(
OOR1
, 
pos
);

439 
	`AHEAD
(
pos
);

440 
	`EMIT
(
OOR2
, 0);

441 
	`AHEAD
(
	`THERE
());

442 
	`ASTERN
(
O_CH
, 
	`THERETHERE
());

445 
cou¡
 = 
	`p_cou¡
(
p
);

446 i‡(
	`EAT
(',')) {

447 i‡(
	`isdigô
(
	`PEEK
())) {

448 
cou¡2
 = 
	`p_cou¡
(
p
);

449 
	`REQUIRE
(
cou¡
 <
cou¡2
, 
REG_BADBR
);

451 
cou¡2
 = 
INFINITY
;

453 
cou¡2
 = 
cou¡
;

454 
	`ª≥©
(
p
, 
pos
, 
cou¡
, 
cou¡2
);

455 i‡(!
	`EAT
('}')) {

456 
	`MORE
(Ë&& 
	`PEEK
() != '}')

457 
	`NEXT
();

458 
	`REQUIRE
(
	`MORE
(), 
REG_EBRACE
);

459 
	`SETERROR
(
REG_BADBR
);

464 i‡(!
	`MORE
())

466 
c
 = 
	`PEEK
();

467 i‡(!–
c
 == '*' || c == '+' || c == '?' ||

468 (
c
 ='{' && 
	`MORE2
(Ë&& 
	`isdigô
(
	`PEEK2
())) ) )

470 
	`SETERROR
(
REG_BADRPT
);

471 
	}
}

478 
	$p_°r
(
p
)

479 
∑r£
 *
p
;

481 
	`REQUIRE
(
	`MORE
(), 
REG_EMPTY
);

482 
	`MORE
())

483 
	`‹dö¨y
(
p
, 
	`GETNEXT
());

484 
	}
}

499 
	$p_bª
(
p
, 
íd1
, 
íd2
)

500 
∑r£
 *
p
;

501 
íd1
;

502 
íd2
;

504 
s›no
 
°¨t
 = 
	`HERE
();

505 
fú°
 = 1;

506 
wasdﬁœr
 = 0;

508 i‡(
	`EAT
('^')) {

509 
	`EMIT
(
OBOL
, 0);

510 
p
->
g
->
iÊags
 |
USEBOL
;

511 
p
->
g
->
nbﬁ
++;

513 
	`MORE
(Ë&& !
	`SEETWO
(
íd1
, 
íd2
)) {

514 
wasdﬁœr
 = 
	`p_simp_ª
(
p
, 
fú°
);

515 
fú°
 = 0;

517 i‡(
wasdﬁœr
) {

518 
	`DROP
(1);

519 
	`EMIT
(
OEOL
, 0);

520 
p
->
g
->
iÊags
 |
USEEOL
;

521 
p
->
g
->
√ﬁ
++;

524 
	`REQUIRE
(
	`HERE
(Ë!
°¨t
, 
REG_EMPTY
);

525 
	}
}

532 
	$p_simp_ª
(
p
, 
°¨‹dö¨y
)

533 
∑r£
 *
p
;

534 
°¨‹dö¨y
;

536 
c
;

537 
cou¡
;

538 
cou¡2
;

539 
s›no
 
pos
;

540 
i
;

541 
s›no
 
subno
;

542 
	#BACKSL
 (1<<
CHAR_BIT
)

	)

544 
pos
 = 
	`HERE
();

546 
	`as£π
(
	`MORE
());

547 
c
 = 
	`GETNEXT
();

548 i‡(
c
 == '\\') {

549 
	`REQUIRE
(
	`MORE
(), 
REG_EESCAPE
);

550 
c
 = 
BACKSL
 | ()
	`GETNEXT
();

552 
c
) {

554 i‡(
p
->
g
->
cÊags
&
REG_NEWLINE
)

555 
	`n⁄√wlöe
(
p
);

557 
	`EMIT
(
OANY
, 0);

560 
	`p_bøckë
(
p
);

562 
BACKSL
|'{':

563 
	`SETERROR
(
REG_BADRPT
);

565 
BACKSL
|'(':

566 
p
->
g
->
nsub
++;

567 
subno
 = 
p
->
g
->
nsub
;

568 i‡(
subno
 < 
NPAREN
)

569 
p
->
pbegö
[
subno
] = 
	`HERE
();

570 
	`EMIT
(
OLPAREN
, 
subno
);

572 i‡(
	`MORE
(Ë&& !
	`SEETWO
('\\', ')'))

573 
	`p_bª
(
p
, '\\', ')');

574 i‡(
subno
 < 
NPAREN
) {

575 
p
->
≥nd
[
subno
] = 
	`HERE
();

576 
	`as£π
(
p
->
≥nd
[
subno
] != 0);

578 
	`EMIT
(
ORPAREN
, 
subno
);

579 
	`REQUIRE
(
	`EATTWO
('\\', ')'), 
REG_EPAREN
);

581 
BACKSL
|')':

582 
BACKSL
|'}':

583 
	`SETERROR
(
REG_EPAREN
);

585 
BACKSL
|'1':

586 
BACKSL
|'2':

587 
BACKSL
|'3':

588 
BACKSL
|'4':

589 
BACKSL
|'5':

590 
BACKSL
|'6':

591 
BACKSL
|'7':

592 
BACKSL
|'8':

593 
BACKSL
|'9':

594 
i
 = (
c
&~
BACKSL
) - '0';

595 
	`as£π
(
i
 < 
NPAREN
);

596 i‡(
p
->
≥nd
[
i
] != 0) {

597 
	`as£π
(
i
 <
p
->
g
->
nsub
);

598 
	`EMIT
(
OBACK_
, 
i
);

599 
	`as£π
(
p
->
pbegö
[
i
] != 0);

600 
	`as£π
(
	`OP
(
p
->
°rù
[p->
pbegö
[
i
]]Ë=
OLPAREN
);

601 
	`as£π
(
	`OP
(
p
->
°rù
[p->
≥nd
[
i
]]Ë=
ORPAREN
);

602 (Ë
	`du∂
(
p
,Ö->
pbegö
[
i
]+1,Ö->
≥nd
[i]);

603 
	`EMIT
(
O_BACK
, 
i
);

605 
	`SETERROR
(
REG_ESUBREG
);

606 
p
->
g
->
backªfs
 = 1;

609 
	`REQUIRE
(
°¨‹dö¨y
, 
REG_BADRPT
);

612 
	`‹dö¨y
(
p
, 
c
 &~ 
BACKSL
);

616 i‡(
	`EAT
('*')) {

618 
	`INSERT
(
OPLUS_
, 
pos
);

619 
	`ASTERN
(
O_PLUS
, 
pos
);

620 
	`INSERT
(
OQUEST_
, 
pos
);

621 
	`ASTERN
(
O_QUEST
, 
pos
);

622 } i‡(
	`EATTWO
('\\', '{')) {

623 
cou¡
 = 
	`p_cou¡
(
p
);

624 i‡(
	`EAT
(',')) {

625 i‡(
	`MORE
(Ë&& 
	`isdigô
(
	`PEEK
())) {

626 
cou¡2
 = 
	`p_cou¡
(
p
);

627 
	`REQUIRE
(
cou¡
 <
cou¡2
, 
REG_BADBR
);

629 
cou¡2
 = 
INFINITY
;

631 
cou¡2
 = 
cou¡
;

632 
	`ª≥©
(
p
, 
pos
, 
cou¡
, 
cou¡2
);

633 i‡(!
	`EATTWO
('\\', '}')) {

634 
	`MORE
(Ë&& !
	`SEETWO
('\\', '}'))

635 
	`NEXT
();

636 
	`REQUIRE
(
	`MORE
(), 
REG_EBRACE
);

637 
	`SETERROR
(
REG_BADBR
);

639 } i‡(
c
 == ()'$')

643 
	}
}

650 
	$p_cou¡
(
p
)

651 
∑r£
 *
p
;

653 
cou¡
 = 0;

654 
ndigôs
 = 0;

656 
	`MORE
(Ë&& 
	`isdigô
(
	`PEEK
()Ë&& 
cou¡
 <
DUPMAX
) {

657 
cou¡
 = cou¡*10 + (
	`GETNEXT
() - '0');

658 
ndigôs
++;

661 
	`REQUIRE
(
ndigôs
 > 0 && 
cou¡
 <
DUPMAX
, 
REG_BADBR
);

662 (
cou¡
);

663 
	}
}

673 
	$p_bøckë
(
p
)

674 
∑r£
 *
p
;

676 
c
;

677 
c£t
 *
cs
 = 
	`Æloc£t
(
p
);

678 
övît
 = 0;

681 i‡(
p
->
√xt
 + 5 <Ö->
íd
 && 
	`°∫cmp
(p->next, "[:<:]]", 6) == 0) {

682 
	`EMIT
(
OBOW
, 0);

683 
	`NEXTn
(6);

686 i‡(
p
->
√xt
 + 5 <Ö->
íd
 && 
	`°∫cmp
(p->next, "[:>:]]", 6) == 0) {

687 
	`EMIT
(
OEOW
, 0);

688 
	`NEXTn
(6);

692 i‡(
	`EAT
('^'))

693 
övît
++;

694 i‡(
	`EAT
(']'))

695 
	`CHadd
(
cs
, ']');

696 i‡(
	`EAT
('-'))

697 
	`CHadd
(
cs
, '-');

698 
	`MORE
(Ë&& 
	`PEEK
(Ë!']' && !
	`SEETWO
('-', ']'))

699 
	`p_b_ãrm
(
p
, 
cs
);

700 i‡(
	`EAT
('-'))

701 
	`CHadd
(
cs
, '-');

702 
	`MUSTEAT
(']', 
REG_EBRACK
);

704 i‡(
p
->
îr‹
 != 0)

707 i‡(
p
->
g
->
cÊags
&
REG_ICASE
) {

708 
i
;

709 
ci
;

711 
i
 = 
p
->
g
->
c£tsize
 - 1; i >= 0; i--)

712 i‡(
	`CHIN
(
cs
, 
i
Ë&& 
	`ißÕha
(i)) {

713 
ci
 = 
	`Ÿhîˇ£
(
i
);

714 i‡(
ci
 !
i
)

715 
	`CHadd
(
cs
, 
ci
);

717 i‡(
cs
->
mu…is
 !
NULL
)

718 
	`mcˇ£
(
p
, 
cs
);

720 i‡(
övît
) {

721 
i
;

723 
i
 = 
p
->
g
->
c£tsize
 - 1; i >= 0; i--)

724 i‡(
	`CHIN
(
cs
, 
i
))

725 
	`CHsub
(
cs
, 
i
);

727 
	`CHadd
(
cs
, 
i
);

728 i‡(
p
->
g
->
cÊags
&
REG_NEWLINE
)

729 
	`CHsub
(
cs
, '\n');

730 i‡(
cs
->
mu…is
 !
NULL
)

731 
	`mcövît
(
p
, 
cs
);

734 
	`as£π
(
cs
->
mu…is
 =
NULL
);

736 i‡(
	`nch
(
p
, 
cs
) == 1) {

737 
	`‹dö¨y
(
p
, 
	`fú°ch
’, 
cs
));

738 
	`‰ì£t
(
p
, 
cs
);

740 
	`EMIT
(
OANYOF
, 
	`‰ìze£t
(
p
, 
cs
));

741 
	}
}

748 
	$p_b_ãrm
(
p
, 
cs
)

749 
∑r£
 *
p
;

750 
c£t
 *
cs
;

752 
c
;

753 
°¨t
, 
föish
;

754 
i
;

757 (
	`MORE
()Ë? 
	`PEEK
() : '\0') {

759 
c
 = (
	`MORE2
()Ë? 
	`PEEK2
() : '\0';

762 
	`SETERROR
(
REG_ERANGE
);

766 
c
 = '\0';

770 
c
) {

772 
	`NEXT2
();

773 
	`REQUIRE
(
	`MORE
(), 
REG_EBRACK
);

774 
c
 = 
	`PEEK
();

775 
	`REQUIRE
(
c
 !'-' && c !']', 
REG_ECTYPE
);

776 
	`p_b_c˛ass
(
p
, 
cs
);

777 
	`REQUIRE
(
	`MORE
(), 
REG_EBRACK
);

778 
	`REQUIRE
(
	`EATTWO
(':', ']'), 
REG_ECTYPE
);

781 
	`NEXT2
();

782 
	`REQUIRE
(
	`MORE
(), 
REG_EBRACK
);

783 
c
 = 
	`PEEK
();

784 
	`REQUIRE
(
c
 !'-' && c !']', 
REG_ECOLLATE
);

785 
	`p_b_e˛ass
(
p
, 
cs
);

786 
	`REQUIRE
(
	`MORE
(), 
REG_EBRACK
);

787 
	`REQUIRE
(
	`EATTWO
('=', ']'), 
REG_ECOLLATE
);

791 
°¨t
 = 
	`p_b_symbﬁ
(
p
);

792 i‡(
	`SEE
('-'Ë&& 
	`MORE2
(Ë&& 
	`PEEK2
() != ']') {

794 
	`NEXT
();

795 i‡(
	`EAT
('-'))

796 
föish
 = '-';

798 
föish
 = 
	`p_b_symbﬁ
(
p
);

800 
föish
 = 
°¨t
;

802 
	`REQUIRE
(
°¨t
 <
föish
, 
REG_ERANGE
);

803 
i
 = 
°¨t
; i <
föish
; i++)

804 
	`CHadd
(
cs
, 
i
);

807 
	}
}

814 
	$p_b_c˛ass
(
p
, 
cs
)

815 
∑r£
 *
p
;

816 
c£t
 *
cs
;

818 *
•
 = 
p
->
√xt
;

819 
c˛ass
 *
˝
;

820 
size_t
 
Àn
;

821 *
u
;

822 
c
;

824 
	`MORE
(Ë&& 
	`ißÕha
(
	`PEEK
()))

825 
	`NEXT
();

826 
Àn
 = 
p
->
√xt
 - 
•
;

827 
˝
 = 
c˛as£s
; cp->
«me
 !
NULL
; cp++)

828 i‡(
	`°∫cmp
(
˝
->
«me
, 
•
, 
Àn
) == 0 && cp->name[len] == '\0')

830 i‡(
˝
->
«me
 =
NULL
) {

832 
	`SETERROR
(
REG_ECTYPE
);

836 
u
 = 
˝
->
ch¨s
;

837 (
c
 = *
u
++) != '\0')

838 
	`CHadd
(
cs
, 
c
);

839 
u
 = 
˝
->
mu…is
; *u !'\0'; u +
	`°æí
(u) + 1)

840 
	`MCadd
(
p
, 
cs
, 
u
);

841 
	}
}

850 
	$p_b_e˛ass
(
p
, 
cs
)

851 
∑r£
 *
p
;

852 
c£t
 *
cs
;

854 
c
;

856 
c
 = 
	`p_b_cﬁl_ñem
(
p
, '=');

857 
	`CHadd
(
cs
, 
c
);

858 
	}
}

865 
	$p_b_symbﬁ
(
p
)

866 
∑r£
 *
p
;

868 
vÆue
;

870 
	`REQUIRE
(
	`MORE
(), 
REG_EBRACK
);

871 i‡(!
	`EATTWO
('[', '.'))

872 (
	`GETNEXT
());

875 
vÆue
 = 
	`p_b_cﬁl_ñem
(
p
, '.');

876 
	`REQUIRE
(
	`EATTWO
('.', ']'), 
REG_ECOLLATE
);

877 (
vÆue
);

878 
	}
}

885 
	$p_b_cﬁl_ñem
(
p
, 
ídc
)

886 
∑r£
 *
p
;

887 
ídc
;

889 *
•
 = 
p
->
√xt
;

890 
˙ame
 *
˝
;

891 
Àn
;

892 
c
;

894 
	`MORE
(Ë&& !
	`SEETWO
(
ídc
, ']'))

895 
	`NEXT
();

896 i‡(!
	`MORE
()) {

897 
	`SETERROR
(
REG_EBRACK
);

900 
Àn
 = 
p
->
√xt
 - 
•
;

901 
˝
 = 
˙ames
; cp->
«me
 !
NULL
; cp++)

902 i‡(
	`°∫cmp
(
˝
->
«me
, 
•
, 
Àn
) == 0 && cp->name[len] == '\0')

903 (
˝
->
code
);

904 i‡(
Àn
 == 1)

905 (*
•
);

906 
	`SETERROR
(
REG_ECOLLATE
);

908 
	}
}

915 
	$Ÿhîˇ£
(
ch
)

916 
ch
;

918 
	`as£π
(
	`ißÕha
(
ch
));

919 i‡(
	`isuµî
(
ch
))

920 (
	`tﬁowî
(
ch
));

921 i‡(
	`i¶owî
(
ch
))

922 (
	`touµî
(
ch
));

924 (
ch
);

925 
	}
}

934 
	$bŸhˇ£s
(
p
, 
ch
)

935 
∑r£
 *
p
;

936 
ch
;

938 *
ﬁd√xt
 = 
p
->
√xt
;

939 *
ﬁdíd
 = 
p
->
íd
;

940 
bøckë
[3];

942 
	`as£π
(
	`Ÿhîˇ£
(
ch
) != ch);

943 
p
->
√xt
 = 
bøckë
;

944 
p
->
íd
 = 
bøckë
+2;

945 
bøckë
[0] = 
ch
;

946 
bøckë
[1] = ']';

947 
bøckë
[2] = '\0';

948 
	`p_bøckë
(
p
);

949 
	`as£π
(
p
->
√xt
 =
bøckë
+2);

950 
p
->
√xt
 = 
ﬁd√xt
;

951 
p
->
íd
 = 
ﬁdíd
;

952 
	}
}

959 
	$‹dö¨y
(
p
, 
ch
)

960 
∑r£
 *
p
;

961 
ch
;

963 
ˇt_t
 *
ˇp
 = 
p
->
g
->
ˇãg‹õs
;

965 i‡((
p
->
g
->
cÊags
&
REG_ICASE
Ë&& 
	`ißÕha
(
ch
Ë&& 
	`Ÿhîˇ£
(ch) != ch)

966 
	`bŸhˇ£s
(
p
, 
ch
);

968 
	`EMIT
(
OCHAR
, ()
ch
);

969 i‡(
ˇp
[
ch
] == 0)

970 
ˇp
[
ch
] = 
p
->
g
->
nˇãg‹õs
++;

972 
	}
}

981 
	$n⁄√wlöe
(
p
)

982 
∑r£
 *
p
;

984 *
ﬁd√xt
 = 
p
->
√xt
;

985 *
ﬁdíd
 = 
p
->
íd
;

986 
bøckë
[4];

988 
p
->
√xt
 = 
bøckë
;

989 
p
->
íd
 = 
bøckë
+3;

990 
bøckë
[0] = '^';

991 
bøckë
[1] = '\n';

992 
bøckë
[2] = ']';

993 
bøckë
[3] = '\0';

994 
	`p_bøckë
(
p
);

995 
	`as£π
(
p
->
√xt
 =
bøckë
+3);

996 
p
->
√xt
 = 
ﬁd√xt
;

997 
p
->
íd
 = 
ﬁdíd
;

998 
	}
}

1005 
	$ª≥©
(
p
, 
°¨t
, 
‰om
, 
to
)

1006 
∑r£
 *
p
;

1007 
s›no
 
°¨t
;

1008 
‰om
;

1009 
to
;

1011 
s›no
 
föish
 = 
	`HERE
();

1012 
	#N
 2

	)

1013 
	#INF
 3

	)

1014 
	#REP
(
f
, 
t
Ë((f)*8 + (t))

	)

1015 
	#MAP
(
n
Ë((“Ë<1Ë? (nË: (“Ë=
INFINITY
Ë? 
INF
 : 
N
)

	)

1016 
s›no
 
c›y
;

1018 i‡(
p
->
îr‹
 != 0)

1021 
	`as£π
(
‰om
 <
to
);

1023 
	`REP
(
	`MAP
(
‰om
), MAP(
to
))) {

1024 
	`REP
(0, 0):

1025 
	`DROP
(
föish
-
°¨t
);

1027 
	`REP
(0, 1):

1028 
	`REP
(0, 
N
):

1029 
	`REP
(0, 
INF
):

1031 
	`INSERT
(
OCH_
, 
°¨t
);

1032 
	`ª≥©
(
p
, 
°¨t
+1, 1, 
to
);

1033 
	`ASTERN
(
OOR1
, 
°¨t
);

1034 
	`AHEAD
(
°¨t
);

1035 
	`EMIT
(
OOR2
, 0);

1036 
	`AHEAD
(
	`THERE
());

1037 
	`ASTERN
(
O_CH
, 
	`THERETHERE
());

1039 
	`REP
(1, 1):

1042 
	`REP
(1, 
N
):

1044 
	`INSERT
(
OCH_
, 
°¨t
);

1045 
	`ASTERN
(
OOR1
, 
°¨t
);

1046 
	`AHEAD
(
°¨t
);

1047 
	`EMIT
(
OOR2
, 0);

1048 
	`AHEAD
(
	`THERE
());

1049 
	`ASTERN
(
O_CH
, 
	`THERETHERE
());

1050 
c›y
 = 
	`du∂
(
p
, 
°¨t
+1, 
föish
+1);

1051 
	`as£π
(
c›y
 =
föish
+4);

1052 
	`ª≥©
(
p
, 
c›y
, 1, 
to
-1);

1054 
	`REP
(1, 
INF
):

1055 
	`INSERT
(
OPLUS_
, 
°¨t
);

1056 
	`ASTERN
(
O_PLUS
, 
°¨t
);

1058 
	`REP
(
N
, N):

1059 
c›y
 = 
	`du∂
(
p
, 
°¨t
, 
föish
);

1060 
	`ª≥©
(
p
, 
c›y
, 
‰om
-1, 
to
-1);

1062 
	`REP
(
N
, 
INF
):

1063 
c›y
 = 
	`du∂
(
p
, 
°¨t
, 
föish
);

1064 
	`ª≥©
(
p
, 
c›y
, 
‰om
-1, 
to
);

1067 
	`SETERROR
(
REG_ASSERT
);

1070 
	}
}

1077 
	$£ãº
(
p
, 
e
)

1078 
∑r£
 *
p
;

1079 
e
;

1081 i‡(
p
->
îr‹
 == 0)

1082 
p
->
îr‹
 = 
e
;

1083 
p
->
√xt
 = 
nuls
;

1084 
p
->
íd
 = 
nuls
;

1086 
	}
}

1092 
c£t
 *

1093 
	$Æloc£t
(
p
)

1094 
∑r£
 *
p
;

1096 
no
 = 
p
->
g
->
nc£ts
++;

1097 
size_t
 
nc
;

1098 
size_t
 
nbyãs
;

1099 
c£t
 *
cs
;

1100 
size_t
 
css
 = (size_t)
p
->
g
->
c£tsize
;

1101 
i
;

1103 i‡(
no
 >
p
->
ncßŒoc
) {

1104 
p
->
ncßŒoc
 +
CHAR_BIT
;

1105 
nc
 = 
p
->
ncßŒoc
;

1106 
	`as£π
(
nc
 % 
CHAR_BIT
 == 0);

1107 
nbyãs
 = 
nc
 / 
CHAR_BIT
 * 
css
;

1108 i‡(
p
->
g
->
£ts
 =
NULL
)

1109 
p
->
g
->
£ts
 = (
c£t
 *)
	`mÆloc
(
nc
 * (cset));

1111 
p
->
g
->
£ts
 = (
c£t
 *)
	`ªÆloc
((*)p->g->sets,

1112 
nc
 * (
c£t
));

1113 i‡(
p
->
g
->
£tbôs
 =
NULL
)

1114 
p
->
g
->
£tbôs
 = (
uch
 *)
	`mÆloc
(
nbyãs
);

1116 
p
->
g
->
£tbôs
 = (
uch
 *)
	`ªÆloc
((*)p->g->setbits,

1117 
nbyãs
);

1119 
i
 = 0; i < 
no
; i++)

1120 
p
->
g
->
£ts
[
i
].
±r
 =Ö->g->
£tbôs
 + 
css
*(i/
CHAR_BIT
);

1122 i‡(
p
->
g
->
£ts
 !
NULL
 &&Ö->g->
£tbôs
 != NULL)

1123 (Ë
	`mem£t
((*)
p
->
g
->
£tbôs
 + (
nbyãs
 - 
css
),

1124 0, 
css
);

1126 
no
 = 0;

1127 
	`SETERROR
(
REG_ESPACE
);

1132 
	`as£π
(
p
->
g
->
£ts
 !
NULL
);

1133 
cs
 = &
p
->
g
->
£ts
[
no
];

1134 
cs
->
±r
 = 
p
->
g
->
£tbôs
 + 
css
*((
no
)/
CHAR_BIT
);

1135 
cs
->
mask
 = 1 << ((
no
Ë% 
CHAR_BIT
);

1136 
cs
->
hash
 = 0;

1137 
cs
->
smu…is
 = 0;

1138 
cs
->
mu…is
 = 
NULL
;

1140 (
cs
);

1141 
	}
}

1148 
	$‰ì£t
(
p
, 
cs
)

1149 
∑r£
 *
p
;

1150 
c£t
 *
cs
;

1152 
i
;

1153 
c£t
 *
t›
 = &
p
->
g
->
£ts
[p->g->
nc£ts
];

1154 
size_t
 
css
 = (size_t)
p
->
g
->
c£tsize
;

1156 
i
 = 0; i < 
css
; i++)

1157 
	`CHsub
(
cs
, 
i
);

1158 i‡(
cs
 =
t›
-1)

1159 
p
->
g
->
nc£ts
--;

1160 
	}
}

1173 
	$‰ìze£t
(
p
, 
cs
)

1174 
∑r£
 *
p
;

1175 
c£t
 *
cs
;

1177 
uch
 
h
 = 
cs
->
hash
;

1178 
i
;

1179 
c£t
 *
t›
 = &
p
->
g
->
£ts
[p->g->
nc£ts
];

1180 
c£t
 *
cs2
;

1181 
size_t
 
css
 = (size_t)
p
->
g
->
c£tsize
;

1184 
cs2
 = &
p
->
g
->
£ts
[0]; cs2 < 
t›
; cs2++)

1185 i‡(
cs2
->
hash
 =
h
 && cs2 !
cs
) {

1187 
i
 = 0; i < 
css
; i++)

1188 i‡(!!
	`CHIN
(
cs2
, 
i
Ë!!!CHIN(
cs
, i))

1190 i‡(
i
 =
css
)

1194 i‡(
cs2
 < 
t›
) {

1195 
	`‰ì£t
(
p
, 
cs
);

1196 
cs
 = 
cs2
;

1199 (()(
cs
 - 
p
->
g
->
£ts
));

1200 
	}
}

1207 
	$fú°ch
(
p
, 
cs
)

1208 
∑r£
 *
p
;

1209 
c£t
 *
cs
;

1211 
i
;

1212 
size_t
 
css
 = (size_t)
p
->
g
->
c£tsize
;

1214 
i
 = 0; i < 
css
; i++)

1215 i‡(
	`CHIN
(
cs
, 
i
))

1216 (()
i
);

1217 
	`as£π
(
√vî
);

1219 
	}
}

1226 
	$nch
(
p
, 
cs
)

1227 
∑r£
 *
p
;

1228 
c£t
 *
cs
;

1230 
i
;

1231 
size_t
 
css
 = (size_t)
p
->
g
->
c£tsize
;

1232 
n
 = 0;

1234 
i
 = 0; i < 
css
; i++)

1235 i‡(
	`CHIN
(
cs
, 
i
))

1236 
n
++;

1237 (
n
);

1238 
	}
}

1246 
	$mˇdd
(
p
, 
cs
, 
˝
)

1247 
∑r£
 *
p
;

1248 
c£t
 *
cs
;

1249 *
˝
;

1251 
size_t
 
ﬁdíd
 = 
cs
->
smu…is
;

1253 
cs
->
smu…is
 +
	`°æí
(
˝
) + 1;

1254 i‡(
cs
->
mu…is
 =
NULL
)

1255 
cs
->
mu…is
 = 
	`mÆloc
(cs->
smu…is
);

1257 
cs
->
mu…is
 = 
	`ªÆloc
(cs->mu…is, cs->
smu…is
);

1258 i‡(
cs
->
mu…is
 =
NULL
) {

1259 
	`SETERROR
(
REG_ESPACE
);

1263 (Ë
	`°r˝y
(
cs
->
mu…is
 + 
ﬁdíd
 - 1, 
˝
);

1264 
cs
->
mu…is
[cs->
smu…is
 - 1] = '\0';

1265 
	}
}

1272 
	$mcsub
(
cs
, 
˝
)

1273 
c£t
 *
cs
;

1274 *
˝
;

1276 *
Â
 = 
	`mcföd
(
cs
, 
˝
);

1277 
size_t
 
Àn
 = 
	`°æí
(
Â
);

1279 
	`as£π
(
Â
 !
NULL
);

1280 (Ë
	`memmove
(
Â
, f∞+ 
Àn
 + 1,

1281 
cs
->
smu…is
 - (
Â
 + 
Àn
 + 1 - cs->
mu…is
));

1282 
cs
->
smu…is
 -
Àn
;

1284 i‡(
cs
->
smu…is
 == 0) {

1285 
	`‰ì
(
cs
->
mu…is
);

1286 
cs
->
mu…is
 = 
NULL
;

1290 
cs
->
mu…is
 = 
	`ªÆloc
(cs->mu…is, cs->
smu…is
);

1291 
	`as£π
(
cs
->
mu…is
 !
NULL
);

1292 
	}
}

1299 
	$mcö
(
cs
, 
˝
)

1300 
c£t
 *
cs
;

1301 *
˝
;

1303 (
	`mcföd
(
cs
, 
˝
Ë!
NULL
);

1304 
	}
}

1311 
	$mcföd
(
cs
, 
˝
)

1312 
c£t
 *
cs
;

1313 *
˝
;

1315 *
p
;

1317 i‡(
cs
->
mu…is
 =
NULL
)

1318 (
NULL
);

1319 
p
 = 
cs
->
mu…is
; *∞!'\0';Ö +
	`°æí
(p) + 1)

1320 i‡(
	`°rcmp
(
˝
, 
p
) == 0)

1321 (
p
);

1322 (
NULL
);

1323 
	}
}

1333 
	$mcövît
(
p
, 
cs
)

1334 
∑r£
 *
p
;

1335 
c£t
 *
cs
;

1337 
	`as£π
(
cs
->
mu…is
 =
NULL
);

1338 
	}
}

1348 
	$mcˇ£
(
p
, 
cs
)

1349 
∑r£
 *
p
;

1350 
c£t
 *
cs
;

1352 
	`as£π
(
cs
->
mu…is
 =
NULL
);

1353 
	}
}

1360 
	$isö£ts
(
g
, 
c
)

1361 
ª_guts
 *
g
;

1362 
c
;

1364 
uch
 *
cﬁ
;

1365 
i
;

1366 
ncﬁs
 = (
g
->
nc£ts
+(
CHAR_BIT
-1)) / CHAR_BIT;

1367 
uc
 = ()
c
;

1369 
i
 = 0, 
cﬁ
 = 
g
->
£tbôs
; i < 
ncﬁs
; i++, cﬁ +g->
c£tsize
)

1370 i‡(
cﬁ
[
uc
] != 0)

1373 
	}
}

1380 
	$ßme£ts
(
g
, 
c1
, 
c2
)

1381 
ª_guts
 *
g
;

1382 
c1
;

1383 
c2
;

1385 
uch
 *
cﬁ
;

1386 
i
;

1387 
ncﬁs
 = (
g
->
nc£ts
+(
CHAR_BIT
-1)) / CHAR_BIT;

1388 
uc1
 = ()
c1
;

1389 
uc2
 = ()
c2
;

1391 
i
 = 0, 
cﬁ
 = 
g
->
£tbôs
; i < 
ncﬁs
; i++, cﬁ +g->
c£tsize
)

1392 i‡(
cﬁ
[
uc1
] !cﬁ[
uc2
])

1395 
	}
}

1402 
	$ˇãg‹ize
(
p
, 
g
)

1403 
∑r£
 *
p
;

1404 
ª_guts
 *
g
;

1406 
ˇt_t
 *
ˇts
 = 
g
->
ˇãg‹õs
;

1407 
c
;

1408 
c2
;

1409 
ˇt_t
 
ˇt
;

1412 i‡(
p
->
îr‹
 != 0)

1415 
c
 = 
CHAR_MIN
; c <
CHAR_MAX
; c++)

1416 i‡(
ˇts
[
c
] =0 && 
	`isö£ts
(
g
, c)) {

1417 
ˇt
 = 
g
->
nˇãg‹õs
++;

1418 
ˇts
[
c
] = 
ˇt
;

1419 
c2
 = 
c
+1; c2 <
CHAR_MAX
; c2++)

1420 i‡(
ˇts
[
c2
] =0 && 
	`ßme£ts
(
g
, 
c
, c2))

1421 
ˇts
[
c2
] = 
ˇt
;

1423 
	}
}

1429 
s›no


1430 
	$du∂
(
p
, 
°¨t
, 
föish
)

1431 
∑r£
 *
p
;

1432 
s›no
 
°¨t
;

1433 
s›no
 
föish
;

1435 
s›no
 
ªt
 = 
	`HERE
();

1436 
s›no
 
Àn
 = 
föish
 - 
°¨t
;

1438 
	`as£π
(
föish
 >
°¨t
);

1439 i‡(
Àn
 == 0)

1440 (
ªt
);

1441 
	`íœrge
(
p
,Ö->
ssize
 + 
Àn
);

1442 
	`as£π
(
p
->
ssize
 >p->
¶í
 + 
Àn
);

1443 (Ë
	`mem˝y
((*)(
p
->
°rù
 +Ö->
¶í
),

1444 (*)(
p
->
°rù
 + 
°¨t
), (
size_t
)
Àn
*(
s›
));

1445 
p
->
¶í
 +
Àn
;

1446 (
ªt
);

1447 
	}
}

1458 
	$d€mô
(
p
, 
›
, 
›nd
)

1459 
∑r£
 *
p
;

1460 
s›
 
›
;

1461 
size_t
 
›nd
;

1464 i‡(
p
->
îr‹
 != 0)

1468 
	`as£π
(
›nd
 < 1<<
OPSHIFT
);

1471 i‡(
p
->
¶í
 >p->
ssize
)

1472 
	`íœrge
(
p
, (p->
ssize
+1) / 2 * 3);

1473 
	`as£π
(
p
->
¶í
 <Ö->
ssize
);

1476 
p
->
°rù
[p->
¶í
++] = 
	`SOP
(
›
, 
›nd
);

1477 
	}
}

1484 
	$doö£π
(
p
, 
›
, 
›nd
, 
pos
)

1485 
∑r£
 *
p
;

1486 
s›
 
›
;

1487 
size_t
 
›nd
;

1488 
s›no
 
pos
;

1490 
s›no
 
¢
;

1491 
s›
 
s
;

1492 
i
;

1495 i‡(
p
->
îr‹
 != 0)

1498 
¢
 = 
	`HERE
();

1499 
	`EMIT
(
›
, 
›nd
);

1500 
	`as£π
(
	`HERE
(Ë=
¢
+1);

1501 
s
 = 
p
->
°rù
[
¢
];

1504 
	`as£π
(
pos
 > 0);

1505 
i
 = 1; i < 
NPAREN
; i++) {

1506 i‡(
p
->
pbegö
[
i
] >
pos
) {

1507 
p
->
pbegö
[
i
]++;

1509 i‡(
p
->
≥nd
[
i
] >
pos
) {

1510 
p
->
≥nd
[
i
]++;

1514 
	`memmove
((*)&
p
->
°rù
[
pos
+1], (*)&p->strip[pos],

1515 (
	`HERE
()-
pos
-1)*(
s›
));

1516 
p
->
°rù
[
pos
] = 
s
;

1517 
	}
}

1524 
	$dofwd
(
p
, 
pos
, 
vÆue
)

1525 
∑r£
 *
p
;

1526 
s›no
 
pos
;

1527 
s›
 
vÆue
;

1530 i‡(
p
->
îr‹
 != 0)

1533 
	`as£π
(
vÆue
 < 1<<
OPSHIFT
);

1534 
p
->
°rù
[
pos
] = 
	`OP
’->°rù[pos]Ë| 
vÆue
;

1535 
	}
}

1542 
	$íœrge
(
p
, 
size
)

1543 
∑r£
 *
p
;

1544 
s›no
 
size
;

1546 
s›
 *
•
;

1548 i‡(
p
->
ssize
 >
size
)

1551 
•
 = (
s›
 *)
	`ªÆloc
(
p
->
°rù
, 
size
*(sop));

1552 i‡(
•
 =
NULL
) {

1553 
	`SETERROR
(
REG_ESPACE
);

1556 
p
->
°rù
 = 
•
;

1557 
p
->
ssize
 = 
size
;

1558 
	}
}

1565 
	$°rù¢ug
(
p
, 
g
)

1566 
∑r£
 *
p
;

1567 
ª_guts
 *
g
;

1569 
g
->
n°©es
 = 
p
->
¶í
;

1570 
g
->
°rù
 = (
s›
 *)
	`ªÆloc
((*)
p
->°rù,Ö->
¶í
 * (sop));

1571 i‡(
g
->
°rù
 =
NULL
) {

1572 
	`SETERROR
(
REG_ESPACE
);

1573 
g
->
°rù
 = 
p
->strip;

1575 
	}
}

1588 
	$födmu°
(
p
, 
g
)

1589 
∑r£
 *
p
;

1590 
ª_guts
 *
g
;

1592 
s›
 *
sˇn
;

1593 
s›
 *
°¨t
;

1594 
s›
 *
√w°¨t
;

1595 
s›no
 
√wÀn
;

1596 
s›
 
s
;

1597 *
˝
;

1598 
s›no
 
i
;

1601 i‡(
p
->
îr‹
 != 0)

1605 
√wÀn
 = 0;

1606 
sˇn
 = 
g
->
°rù
 + 1;

1608 
s
 = *
sˇn
++;

1609 
	`OP
(
s
)) {

1610 
OCHAR
:

1611 i‡(
√wÀn
 == 0)

1612 
√w°¨t
 = 
sˇn
 - 1;

1613 
√wÀn
++;

1615 
OPLUS_
:

1616 
OLPAREN
:

1617 
ORPAREN
:

1619 
OQUEST_
:

1620 
OCH_
:

1621 
sˇn
--;

1623 
sˇn
 +
	`OPND
(
s
);

1624 
s
 = *
sˇn
;

1626 i‡(
	`OP
(
s
Ë!
O_QUEST
 && OP(sË!
O_CH
 &&

1627 
	`OP
(
s
Ë!
OOR2
) {

1628 
g
->
iÊags
 |
BAD
;

1631 } 
	`OP
(
s
Ë!
O_QUEST
 && OP(sË!
O_CH
);

1634 i‡(
√wÀn
 > 
g
->
mÀn
) {

1635 
°¨t
 = 
√w°¨t
;

1636 
g
->
mÀn
 = 
√wÀn
;

1638 
√wÀn
 = 0;

1641 } 
	`OP
(
s
Ë!
OEND
);

1643 i‡(
g
->
mÀn
 == 0)

1647 
g
->
mu°
 = 
	`mÆloc
((
size_t
)g->
mÀn
 + 1);

1648 i‡(
g
->
mu°
 =
NULL
) {

1649 
g
->
mÀn
 = 0;

1652 
˝
 = 
g
->
mu°
;

1653 
sˇn
 = 
°¨t
;

1654 
i
 = 
g
->
mÀn
; i > 0; i--) {

1655 
	`OP
(
s
 = *
sˇn
++Ë!
OCHAR
)

1657 
	`as£π
(
˝
 < 
g
->
mu°
 + g->
mÀn
);

1658 *
˝
++ = ()
	`OPND
(
s
);

1660 
	`as£π
(
˝
 =
g
->
mu°
 + g->
mÀn
);

1661 *
˝
++ = '\0';

1662 
	}
}

1668 
s›no


1669 
	$∂uscou¡
(
p
, 
g
)

1670 
∑r£
 *
p
;

1671 
ª_guts
 *
g
;

1673 
s›
 *
sˇn
;

1674 
s›
 
s
;

1675 
s›no
 
∂u¢e°
 = 0;

1676 
s›no
 
max√°
 = 0;

1678 i‡(
p
->
îr‹
 != 0)

1681 
sˇn
 = 
g
->
°rù
 + 1;

1683 
s
 = *
sˇn
++;

1684 
	`OP
(
s
)) {

1685 
OPLUS_
:

1686 
∂u¢e°
++;

1688 
O_PLUS
:

1689 i‡(
∂u¢e°
 > 
max√°
)

1690 
max√°
 = 
∂u¢e°
;

1691 
∂u¢e°
--;

1694 } 
	`OP
(
s
Ë!
OEND
);

1695 i‡(
∂u¢e°
 != 0)

1696 
g
->
iÊags
 |
BAD
;

1697 (
max√°
);

1698 
	}
}

	@regex/regerror.c

40 #i‡
deföed
(
LIBC_SCCS
Ë&& !deföed(
löt
)

41 
	gsccsid
[] = "@(#)regerror.c 8.3 (Berkeley) 3/19/94";

44 
	~<sys/ty≥s.h
>

45 
	~<°dio.h
>

46 
	~<°rög.h
>

47 
	~<˘y≥.h
>

48 
	~<limôs.h
>

49 
	~<°dlib.h
>

50 
	~<ªgex.h
>

52 
	~"utûs.h
"

55 #ifde‡
__˝lu•lus


60 *
ªg©oi
 
__P
((c⁄° 
ªgex_t
 *
¥eg
, *
loˇlbuf
));

62 #ifde‡
__˝lu•lus


86 
	sªº
 {

87 
code
;

88 *
«me
;

89 *
ex∂aö
;

90 } 
ªºs
[] = {

91 
REG_NOMATCH
, "REG_NOMATCH", "regexec() failedÅo match",

92 
REG_BADPAT
, "REG_BADPAT", "invalidÑegularÉxpression",

93 
REG_ECOLLATE
, "REG_ECOLLATE", "invalid collatingÉlement",

94 
REG_ECTYPE
, "REG_ECTYPE", "invalid character class",

95 
REG_EESCAPE
, "REG_EESCAPE", "trailing backslash (\\)",

96 
REG_ESUBREG
, "REG_ESUBREG", "invalid backreferenceÇumber",

97 
REG_EBRACK
, "REG_EBRACK", "brackets ([ ])Çot balanced",

98 
REG_EPAREN
, "REG_EPAREN", "parenthesesÇot balanced",

99 
REG_EBRACE
, "REG_EBRACE", "bracesÇot balanced",

100 
REG_BADBR
, "REG_BADBR", "invalidÑepetition count(s)",

101 
REG_ERANGE
, "REG_ERANGE", "invalid characterÑange",

102 
REG_ESPACE
, "REG_ESPACE", "out of memory",

103 
REG_BADRPT
, "REG_BADRPT", "repetition-operator operand invalid",

104 
REG_EMPTY
, "REG_EMPTY", "empty (sub)expression",

105 
REG_ASSERT
, "REG_ASSERT", "\"can't happen\" -- you foundá bug",

106 
REG_INVARG
, "REG_INVARG", "invalidárgumentÅoÑegexÑoutine",

115 
size_t


116 
	$ªgîr‹
(
îrcode
, 
¥eg
, 
îrbuf
, 
îrbuf_size
)

117 
îrcode
;

118 c⁄° 
ªgex_t
 *
¥eg
;

119 *
îrbuf
;

120 
size_t
 
îrbuf_size
;

122 
ªº
 *
r
;

123 
size_t
 
Àn
;

124 
èrgë
 = 
îrcode
 &~ 
REG_ITOA
;

125 *
s
;

126 
c⁄vbuf
[50];

128 i‡(
îrcode
 =
REG_ATOI
)

129 
s
 = 
	`ªg©oi
(
¥eg
, 
c⁄vbuf
);

131 
r
 = 
ªºs
;Ñ->
code
 != 0;Ñ++)

132 i‡(
r
->
code
 =
èrgë
)

135 i‡(
îrcode
&
REG_ITOA
) {

136 i‡(
r
->
code
 != 0)

137 (Ë
	`°r˝y
(
c⁄vbuf
, 
r
->
«me
);

139 
	`•rötf
(
c⁄vbuf
, "REG_0x%x", 
èrgë
);

140 
	`as£π
(
	`°æí
(
c⁄vbuf
) < (convbuf));

141 
s
 = 
c⁄vbuf
;

143 
s
 = 
r
->
ex∂aö
;

146 
Àn
 = 
	`°æí
(
s
) + 1;

147 i‡(
îrbuf_size
 > 0) {

148 i‡(
îrbuf_size
 > 
Àn
)

149 (Ë
	`°r˝y
(
îrbuf
, 
s
);

151 (Ë
	`°∫˝y
(
îrbuf
, 
s
, 
îrbuf_size
-1);

152 
îrbuf
[
îrbuf_size
-1] = '\0';

156 (
Àn
);

157 
	}
}

164 
	$ªg©oi
(
¥eg
, 
loˇlbuf
)

165 c⁄° 
ªgex_t
 *
¥eg
;

166 *
loˇlbuf
;

168 
ªº
 *
r
;

169 
size_t
 
siz
;

170 *
p
;

172 
r
 = 
ªºs
;Ñ->
code
 != 0;Ñ++)

173 i‡(
	`°rcmp
(
r
->
«me
, 
¥eg
->
ª_ídp
) == 0)

175 i‡(
r
->
code
 == 0)

178 
	`•rötf
(
loˇlbuf
, "%d", 
r
->
code
);

179 (
loˇlbuf
);

180 
	}
}

	@regex/regex.h

40 #i‚de‡
_REGEX_H_


41 
	#_REGEX_H_


	)

43 #ifde‡
__REGEX_PRIVATE


44 
	~"c⁄fig.h
"

45 
	~"p‹t.h
"

49 
off_t
 
	tªgoff_t
;

52 
	mª_magic
;

53 
size_t
 
	mª_nsub
;

54 c⁄° *
	mª_ídp
;

55 
ª_guts
 *
	mª_g
;

56 } 
	tªgex_t
;

59 
ªgoff_t
 
	mrm_so
;

60 
ªgoff_t
 
	mrm_eo
;

61 } 
	tªgm©ch_t
;

64 
	#REG_BASIC
 0000

	)

65 
	#REG_EXTENDED
 0001

	)

66 
	#REG_ICASE
 0002

	)

67 
	#REG_NOSUB
 0004

	)

68 
	#REG_NEWLINE
 0010

	)

69 
	#REG_NOSPEC
 0020

	)

70 
	#REG_PEND
 0040

	)

71 
	#REG_DUMP
 0200

	)

74 
	#REG_NOMATCH
 1

	)

75 
	#REG_BADPAT
 2

	)

76 
	#REG_ECOLLATE
 3

	)

77 
	#REG_ECTYPE
 4

	)

78 
	#REG_EESCAPE
 5

	)

79 
	#REG_ESUBREG
 6

	)

80 
	#REG_EBRACK
 7

	)

81 
	#REG_EPAREN
 8

	)

82 
	#REG_EBRACE
 9

	)

83 
	#REG_BADBR
 10

	)

84 
	#REG_ERANGE
 11

	)

85 
	#REG_ESPACE
 12

	)

86 
	#REG_BADRPT
 13

	)

87 
	#REG_EMPTY
 14

	)

88 
	#REG_ASSERT
 15

	)

89 
	#REG_INVARG
 16

	)

90 
	#REG_ATOI
 255

	)

91 
	#REG_ITOA
 0400

	)

94 
	#REG_NOTBOL
 00001

	)

95 
	#REG_NOTEOL
 00002

	)

96 
	#REG_STARTEND
 00004

	)

97 
	#REG_TRACE
 00400

	)

98 
	#REG_LARGE
 01000

	)

99 
	#REG_BACKR
 02000

	)

101 
ªgcomp
 
__P
((
ªgex_t
 *, const *, ));

102 
size_t
 
ªgîr‹
 
__P
((, c⁄° 
ªgex_t
 *, *, size_t));

103 
ªgexec
 
__P
((c⁄° 
ªgex_t
 *,

104 c⁄° *, 
size_t
, 
ªgm©ch_t
 [], ));

105 
ªg‰ì
 
__P
((
ªgex_t
 *));

	@regex/regex2.h

57 
	#MAGIC1
 ((('r'^0200)<<8Ë| 'e')

	)

78 
	ts›
;

79 
	ts›no
;

80 
	#OPRMASK
 0xf8000000

	)

81 
	#OPDMASK
 0x07ffffff

	)

82 
	#OPSHIFT
 (()27)

	)

83 
	#OP
(
n
Ë(“)&
OPRMASK
)

	)

84 
	#OPND
(
n
Ë(“)&
OPDMASK
)

	)

85 
	#SOP
(
›
, 
›nd
Ë((›)|(›nd))

	)

88 
	#OEND
 (1<<
OPSHIFT
Ë

	)

89 
	#OCHAR
 (2<<
OPSHIFT
Ë

	)

90 
	#OBOL
 (3<<
OPSHIFT
Ë

	)

91 
	#OEOL
 (4<<
OPSHIFT
Ë

	)

92 
	#OANY
 (5<<
OPSHIFT
Ë

	)

93 
	#OANYOF
 (6<<
OPSHIFT
Ë

	)

94 
	#OBACK_
 (7<<
OPSHIFT
Ë

	)

95 
	#O_BACK
 (8<<
OPSHIFT
Ë

	)

96 
	#OPLUS_
 (9<<
OPSHIFT
Ë

	)

97 
	#O_PLUS
 (10<<
OPSHIFT
Ë

	)

98 
	#OQUEST_
 (11<<
OPSHIFT
Ë

	)

99 
	#O_QUEST
 (12<<
OPSHIFT
Ë

	)

100 
	#OLPAREN
 (13<<
OPSHIFT
Ë

	)

101 
	#ORPAREN
 (14<<
OPSHIFT
Ë

	)

102 
	#OCH_
 (15<<
OPSHIFT
Ë

	)

103 
	#OOR1
 (16<<
OPSHIFT
Ë

	)

104 
	#OOR2
 (17<<
OPSHIFT
Ë

	)

105 
	#O_CH
 (18<<
OPSHIFT
Ë

	)

106 
	#OBOW
 (19<<
OPSHIFT
Ë

	)

107 
	#OEOW
 (20<<
OPSHIFT
Ë

	)

122 
uch
 *
	m±r
;

123 
uch
 
	mmask
;

124 
uch
 
	mhash
;

125 
size_t
 
	msmu…is
;

126 *
	mmu…is
;

127 } 
	tc£t
;

129 
	#CHadd
(
cs
, 
c
Ë((cs)->
±r
[(
uch
)(c)] |(cs)->
mask
, (cs)->
hash
 +(c))

	)

130 
	#CHsub
(
cs
, 
c
Ë((cs)->
±r
[(
uch
)(c)] &~(cs)->
mask
, (cs)->
hash
 -(c))

	)

131 
	#CHIN
(
cs
, 
c
Ë((cs)->
±r
[(
uch
)(c)] & (cs)->
mask
)

	)

132 
	#MCadd
(
p
, 
cs
, 
˝
Ë
	`mˇdd
’, cs, cpË

	)

133 
	#MCsub
(
p
, 
cs
, 
˝
Ë
	`mcsub
’, cs, cp)

	)

134 
	#MCö
(
p
, 
cs
, 
˝
Ë
	`mcö
’, cs, cp)

	)

137 
	tˇt_t
;

142 
	sª_guts
 {

143 
	mmagic
;

144 
	#MAGIC2
 ((('R'^0200)<<8)|'E')

	)

145 
s›
 *
	m°rù
;

146 
	mc£tsize
;

147 
	mnc£ts
;

148 
c£t
 *
	m£ts
;

149 
uch
 *
	m£tbôs
;

150 
	mcÊags
;

151 
s›no
 
	mn°©es
;

152 
s›no
 
	mfú°°©e
;

153 
s›no
 
	mœ°°©e
;

154 
	miÊags
;

155 
	#USEBOL
 01

	)

156 
	#USEEOL
 02

	)

157 
	#BAD
 04

	)

158 
	mnbﬁ
;

159 
	m√ﬁ
;

160 
	mnˇãg‹õs
;

161 
ˇt_t
 *
	mˇãg‹õs
;

162 *
	mmu°
;

163 
	mmÀn
;

164 
size_t
 
	mnsub
;

165 
	mbackªfs
;

166 
s›no
 
	m≈lus
;

168 
ˇt_t
 
	mˇt•a˚
[1];

172 
	#OUT
 (
CHAR_MAX
+1Ë

	)

173 
	#ISWORD
(
c
Ë(
	`iß um
(cË|| (cË='_')

	)

	@regex/regexec.c

40 #i‡
deföed
(
LIBC_SCCS
Ë&& !deföed(
löt
)

41 
	gsccsid
[] = "@(#)regexec.c 8.2 (Berkeley) 3/16/94";

51 
	~<sys/ty≥s.h
>

52 
	~<°dio.h
>

53 
	~<°dlib.h
>

54 
	~<°rög.h
>

55 
	~<limôs.h
>

56 
	~<˘y≥.h
>

57 
	~<ªgex.h
>

59 
	~"utûs.h
"

60 
	~"ªgex2.h
"

62 
	gn›e
 = 0;

65 
	#°©es
 

	)

66 
	#°©es1
 
°©es


	)

67 
	#CLEAR
(
v
Ë((vË0)

	)

68 
	#SET0
(
v
, 
n
Ë((vË&~(1 << (n)))

	)

69 
	#SET1
(
v
, 
n
Ë((vË|1 << (n))

	)

70 
	#ISSET
(
v
, 
n
Ë((vË& (1 << (n)))

	)

71 
	#ASSIGN
(
d
, 
s
Ë((dË(s))

	)

72 
	#EQ
(
a
, 
b
Ë(◊Ë=(b))

	)

73 
	#STATEVARS
 
dummy


	)

74 
	#STATESETUP
(
m
, 
n
Ë

	)

75 
	#STATETEARDOWN
(
m
Ë

	)

76 
	#SETUP
(
v
Ë((vË0)

	)

77 
	#⁄e°©e
 

	)

78 
	#INIT
(
o
, 
n
Ë((oË()1 << (n))

	)

79 
	#INC
(
o
Ë((oË<<1)

	)

80 
	#ISSTATEIN
(
v
, 
o
Ë((vË& (o))

	)

83 
	#FWD
(
d°
, 
§c
, 
n
Ë((d°Ë|(()(§c)&(
hîe
)Ë<< (n))

	)

84 
	#BACK
(
d°
, 
§c
, 
n
Ë((d°Ë|(()(§c)&(
hîe
)Ë>> (n))

	)

85 
	#ISSETBACK
(
v
, 
n
Ë((vË& (()
hîe
 >> (n)))

	)

87 
	#SNAMES


	)

89 
	~"ígöe.c
"

92 #unde‡
°©es


93 #unde‡
CLEAR


94 #unde‡
SET0


95 #unde‡
SET1


96 #unde‡
ISSET


97 #unde‡
ASSIGN


98 #unde‡
EQ


99 #unde‡
STATEVARS


100 #unde‡
STATESETUP


101 #unde‡
STATETEARDOWN


102 #unde‡
SETUP


103 #unde‡
⁄e°©e


104 #unde‡
INIT


105 #unde‡
INC


106 #unde‡
ISSTATEIN


107 #unde‡
FWD


108 #unde‡
BACK


109 #unde‡
ISSETBACK


110 #unde‡
SNAMES


113 
	#°©es
 *

	)

114 
	#CLEAR
(
v
Ë
	`mem£t
(v, 0, 
m
->
g
->
n°©es
)

	)

115 
	#SET0
(
v
, 
n
Ë((v)[n] = 0)

	)

116 
	#SET1
(
v
, 
n
Ë((v)[n] = 1)

	)

117 
	#ISSET
(
v
, 
n
Ë((v)[n])

	)

118 
	#ASSIGN
(
d
, 
s
Ë
	`mem˝y
(d, s, 
m
->
g
->
n°©es
)

	)

119 
	#EQ
(
a
, 
b
Ë(
	`memcmp
◊, b, 
m
->
g
->
n°©es
Ë=0)

	)

120 
	#STATEVARS
 
vn
; *
•a˚


	)

121 
	#STATESETUP
(
m
, 
nv
Ë{ (m)->
•a˚
 = 
	`mÆloc
(“v)*(m)->
g
->
n°©es
); \

122 i‡((
m
)->
•a˚
 =
NULL
Ë(
REG_ESPACE
); \

123 (
m
)->
vn
 = 0; }

	)

124 
	#STATETEARDOWN
(
m
Ë{ 
	`‰ì
((m)->
•a˚
); }

	)

125 
	#SETUP
(
v
Ë((vË&
m
->
•a˚
[m->
vn
++ * m->
g
->
n°©es
])

	)

126 
	#⁄e°©e
 

	)

127 
	#INIT
(
o
, 
n
Ë((oË“))

	)

128 
	#INC
(
o
Ë((o)++)

	)

129 
	#ISSTATEIN
(
v
, 
o
Ë((v)[o])

	)

132 
	#FWD
(
d°
, 
§c
, 
n
Ë((d°)[
hîe
+“)] |(§c)[hîe])

	)

133 
	#BACK
(
d°
, 
§c
, 
n
Ë((d°)[
hîe
-“)] |(§c)[hîe])

	)

134 
	#ISSETBACK
(
v
, 
n
Ë((v)[
hîe
 - (n)])

	)

136 
	#LNAMES


	)

138 
	~"ígöe.c
"

156 
	$ªgexec
(
¥eg
, 
°rög
, 
nm©ch
, 
pm©ch
, 
eÊags
)

157 c⁄° 
ªgex_t
 *
¥eg
;

158 c⁄° *
°rög
;

159 
size_t
 
nm©ch
;

160 
ªgm©ch_t
 
pm©ch
[];

161 
eÊags
;

163 
ª_guts
 *
g
 = 
¥eg
->
ª_g
;

164 #ifde‡
REDEBUG


165 
	#GOODFLAGS
(
f
Ë(f)

	)

167 
	#GOODFLAGS
(
f
Ë((f)&(
REG_NOTBOL
|
REG_NOTEOL
|
REG_STARTEND
))

	)

170 i‡(
¥eg
->
ª_magic
 !
MAGIC1
 || 
g
->
magic
 !
MAGIC2
)

171 (
REG_BADPAT
);

172 
	`as£π
(!(
g
->
iÊags
&
BAD
));

173 i‡(
g
->
iÊags
&
BAD
)

174 (
REG_BADPAT
);

175 
eÊags
 = 
	`GOODFLAGS
(eflags);

177 i‡(
g
->
n°©es
 <
CHAR_BIT
*(
°©es1
Ë&& !(
eÊags
&
REG_LARGE
))

178 (
	`sm©chî
(
g
, (*)
°rög
, 
nm©ch
, 
pm©ch
, 
eÊags
));

180 (
	`lm©chî
(
g
, (*)
°rög
, 
nm©ch
, 
pm©ch
, 
eÊags
));

181 
	}
}

	@regex/regfree.c

40 #i‡
deföed
(
LIBC_SCCS
Ë&& !deföed(
löt
)

41 
	gsccsid
[] = "@(#)regfree.c 8.2 (Berkeley) 3/16/94";

44 
	~<sys/ty≥s.h
>

45 
	~<°dio.h
>

46 
	~<°dlib.h
>

47 
	~<ªgex.h
>

49 
	~"utûs.h
"

50 
	~"ªgex2.h
"

57 
	$ªg‰ì
(
¥eg
)

58 
ªgex_t
 *
¥eg
;

60 
ª_guts
 *
g
;

62 i‡(
¥eg
->
ª_magic
 !
MAGIC1
)

65 
g
 = 
¥eg
->
ª_g
;

66 i‡(
g
 =
NULL
 || g->
magic
 !
MAGIC2
)

68 
¥eg
->
ª_magic
 = 0;

69 
g
->
magic
 = 0;

71 i‡(
g
->
°rù
 !
NULL
)

72 
	`‰ì
((*)
g
->
°rù
);

73 i‡(
g
->
£ts
 !
NULL
)

74 
	`‰ì
((*)
g
->
£ts
);

75 i‡(
g
->
£tbôs
 !
NULL
)

76 
	`‰ì
((*)
g
->
£tbôs
);

77 i‡(
g
->
mu°
 !
NULL
)

78 
	`‰ì
(
g
->
mu°
);

79 
	`‰ì
((*)
g
);

80 
	}
}

	@regex/utils.h

41 
	#DUPMAX
 
_POSIX2_RE_DUP_MAX


	)

42 
	#INFINITY
 (
DUPMAX
 + 1)

	)

43 
	#NC
 (
CHAR_MAX
 - 
CHAR_MIN
 + 1)

	)

44 
	tuch
;

47 #i‚de‡
REDEBUG


48 #i‚de‡
NDEBUG


49 
	#NDEBUG


	)

52 
	~<as£π.h
>

55 #ifde‡
USEBCOPY


56 
	#memmove
(
d
, 
s
, 
c
Ë
	`bc›y
(s, d, c)

	)

	@tcl_api/tcl.c

12 
	~"c⁄fig.h
"

14 #i‚de‡
löt


15 c⁄° 
	gsccsid
[] = "@(#)tcl.c 8.16 (Berkeley) 10/16/96";

18 
	~<sys/ty≥s.h
>

19 
	~<sys/queue.h
>

20 
	~<sys/time.h
>

22 
	~<bô°rög.h
>

23 
	~<î∫o.h
>

24 
	~<limôs.h
>

25 
	~<sig«l.h
>

26 
	~<°dio.h
>

27 
	~<°dlib.h
>

28 
	~<°rög.h
>

29 
	~<t˛.h
>

30 
	~<ãrmios.h
>

31 
	~<uni°d.h
>

33 
	~"../comm⁄/comm⁄.h
"

34 
	~"t˛_exã∫.h
"

36 
gëöt
 
__P
((
T˛_I¡îp
 *, *, *, *));

37 
gës¸ìnid
 
__P
((
T˛_I¡îp
 *, 
SCR
 **, *, *));

38 
msgh™dÀr
 
__P
((
SCR
 *, 
mty≥_t
, *, 
size_t
));

40 
GS
 *
__globÆ_li°
;

46 
	#INITMESSAGE
 \

47 
s¸_msg
 = 
__globÆ_li°
->scr_msg; \

48 
__globÆ_li°
->
s¸_msg
 = 
msgh™dÀr
;

	)

49 
	#ENDMESSAGE
 \

50 
__globÆ_li°
->
s¸_msg
 = s¸_msg;

	)

60 
	$t˛_fs¸ìn
(
˛õ¡D©a
, 
öãΩ
, 
¨gc
, 
¨gv
)

61 
Clõ¡D©a
 
˛õ¡D©a
;

62 
T˛_I¡îp
 *
öãΩ
;

63 
¨gc
;

64 **
¨gv
;

66 
SCR
 *
•
;

68 i‡(
¨gc
 != 2) {

69 
	`T˛_SëResu…
(
öãΩ
, "Ußge: viFödS¸ì¿fûe", 
TCL_STATIC
);

70  (
TCL_ERROR
);

73 i‡(
	`gës¸ìnid
(
öãΩ
, &
•
, 
NULL
, 
¨gv
[1]))

74  (
TCL_ERROR
);

76 ()
	`•rötf
(
öãΩ
->
ªsu…
, "%d", 
•
->
id
);

77  (
TCL_OK
);

78 
	}
}

88 
	$t˛_Æöe
(
˛õ¡D©a
, 
öãΩ
, 
¨gc
, 
¨gv
)

89 
Clõ¡D©a
 
˛õ¡D©a
;

90 
T˛_I¡îp
 *
öãΩ
;

91 
¨gc
;

92 **
¨gv
;

94 
SCR
 *
•
;

95 (*
s¸_msg
Ë
	`__P
((
SCR
 *, 
mty≥_t
, *, 
size_t
));

96 
 o
, 
rvÆ
;

98 i‡(
¨gc
 != 4) {

99 
	`T˛_SëResu…
(
öãΩ
,

100 "Ußge: viAµídLöês¸ìnIdÜöeNumbîÅext", 
TCL_STATIC
);

101  (
TCL_ERROR
);

104 i‡(
	`gës¸ìnid
(
öãΩ
, &
•
, 
¨gv
[1], 
NULL
) ||

105 
	`gëöt
(
öãΩ
, "löênumbî", 
¨gv
[2], &
 o
))

106  (
TCL_ERROR
);

107 
INITMESSAGE
;

108 
rvÆ
 = 
	`≠i_Æöe
(
•
, (
ª˙o_t
)
 o
, 
¨gv
[3], 
	`°æí
(argv[3]));

109 
ENDMESSAGE
;

111  (
rvÆ
 ? 
TCL_ERROR
 : 
TCL_OK
);

112 
	}
}

122 
	$t˛_dlöe
(
˛õ¡D©a
, 
öãΩ
, 
¨gc
, 
¨gv
)

123 
Clõ¡D©a
 
˛õ¡D©a
;

124 
T˛_I¡îp
 *
öãΩ
;

125 
¨gc
;

126 **
¨gv
;

128 
SCR
 *
•
;

129 (*
s¸_msg
Ë
	`__P
((
SCR
 *, 
mty≥_t
, *, 
size_t
));

130 
 o
, 
rvÆ
;

132 i‡(
¨gc
 != 3) {

133 
	`T˛_SëResu…
(
öãΩ
,

134 "Ußge: viDñLöês¸ìnIdÜöeNumbî", 
TCL_STATIC
);

135  (
TCL_ERROR
);

138 i‡(
	`gës¸ìnid
(
öãΩ
, &
•
, 
¨gv
[1], 
NULL
) ||

139 
	`gëöt
(
öãΩ
, "löênumbî", 
¨gv
[2], &
 o
))

140  (
TCL_ERROR
);

141 
INITMESSAGE
;

142 
rvÆ
 = 
	`≠i_dlöe
(
•
, (
ª˙o_t
)
 o
);

143 
ENDMESSAGE
;

145  (
rvÆ
 ? 
TCL_ERROR
 : 
TCL_OK
);

146 
	}
}

156 
	$t˛_glöe
(
˛õ¡D©a
, 
öãΩ
, 
¨gc
, 
¨gv
)

157 
Clõ¡D©a
 
˛õ¡D©a
;

158 
T˛_I¡îp
 *
öãΩ
;

159 
¨gc
;

160 **
¨gv
;

162 
SCR
 *
•
;

163 
size_t
 
Àn
;

164 (*
s¸_msg
Ë
	`__P
((
SCR
 *, 
mty≥_t
, *, 
size_t
));

165 
 o
, 
rvÆ
;

166 *
löe
, *
p
;

168 i‡(
¨gc
 != 3) {

169 
	`T˛_SëResu…
(
öãΩ
,

170 "Ußge: viGëLöês¸ìnIdÜöeNumbî", 
TCL_STATIC
);

171  (
TCL_ERROR
);

173 i‡(
	`gës¸ìnid
(
öãΩ
, &
•
, 
¨gv
[1], 
NULL
) ||

174 
	`gëöt
(
öãΩ
, "löênumbî", 
¨gv
[2], &
 o
))

175  (
TCL_ERROR
);

176 
INITMESSAGE
;

177 
rvÆ
 = 
	`≠i_glöe
(
•
, (
ª˙o_t
)
 o
, &
p
, &
Àn
);

178 
ENDMESSAGE
;

180 i‡(
rvÆ
)

181  (
TCL_ERROR
);

183 i‡((
löe
 = 
	`mÆloc
(
Àn
 + 1)Ë=
NULL
)

184 
	`exô
(1);

185 
	`memmove
(
löe
, 
p
, 
Àn
);

186 
löe
[
Àn
] = '\0';

187 
	`T˛_SëResu…
(
öãΩ
, 
löe
, 
TCL_DYNAMIC
);

188  (
TCL_OK
);

189 
	}
}

199 
	$t˛_ûöe
(
˛õ¡D©a
, 
öãΩ
, 
¨gc
, 
¨gv
)

200 
Clõ¡D©a
 
˛õ¡D©a
;

201 
T˛_I¡îp
 *
öãΩ
;

202 
¨gc
;

203 **
¨gv
;

205 
SCR
 *
•
;

206 (*
s¸_msg
Ë
	`__P
((
SCR
 *, 
mty≥_t
, *, 
size_t
));

207 
 o
, 
rvÆ
;

209 i‡(
¨gc
 != 4) {

210 
	`T˛_SëResu…
(
öãΩ
,

211 "Ußge: viIn£πLöês¸ìnIdÜöeNumbîÅext", 
TCL_STATIC
);

212  (
TCL_ERROR
);

215 i‡(
	`gës¸ìnid
(
öãΩ
, &
•
, 
¨gv
[1], 
NULL
) ||

216 
	`gëöt
(
öãΩ
, "löênumbî", 
¨gv
[2], &
 o
))

217  (
TCL_ERROR
);

218 
INITMESSAGE
;

219 
rvÆ
 = 
	`≠i_ûöe
(
•
, (
ª˙o_t
)
 o
, 
¨gv
[3], 
	`°æí
(argv[3]));

220 
ENDMESSAGE
;

222  (
rvÆ
 ? 
TCL_ERROR
 : 
TCL_OK
);

223 
	}
}

233 
	$t˛_Œöe
(
˛õ¡D©a
, 
öãΩ
, 
¨gc
, 
¨gv
)

234 
Clõ¡D©a
 
˛õ¡D©a
;

235 
T˛_I¡îp
 *
öãΩ
;

236 
¨gc
;

237 **
¨gv
;

239 
SCR
 *
•
;

240 
ª˙o_t
 
œ°
;

241 (*
s¸_msg
Ë
	`__P
((
SCR
 *, 
mty≥_t
, *, 
size_t
));

242 
rvÆ
;

244 i‡(
¨gc
 != 2) {

245 
	`T˛_SëResu…
(
öãΩ
, "Ußge: viLa°Löês¸ìnId", 
TCL_STATIC
);

246  (
TCL_ERROR
);

249 i‡(
	`gës¸ìnid
(
öãΩ
, &
•
, 
¨gv
[1], 
NULL
))

250  (
TCL_ERROR
);

251 
INITMESSAGE
;

252 
rvÆ
 = 
	`≠i_Œöe
(
•
, &
œ°
);

253 
ENDMESSAGE
;

254 i‡(
rvÆ
)

255  (
TCL_ERROR
);

257 ()
	`•rötf
(
öãΩ
->
ªsu…
, "%lu", ()
œ°
);

258  (
TCL_OK
);

259 
	}
}

269 
	$t˛_¶öe
(
˛õ¡D©a
, 
öãΩ
, 
¨gc
, 
¨gv
)

270 
Clõ¡D©a
 
˛õ¡D©a
;

271 
T˛_I¡îp
 *
öãΩ
;

272 
¨gc
;

273 **
¨gv
;

275 
SCR
 *
•
;

276 (*
s¸_msg
Ë
	`__P
((
SCR
 *, 
mty≥_t
, *, 
size_t
));

277 
 o
, 
rvÆ
;

279 i‡(
¨gc
 != 4) {

280 
	`T˛_SëResu…
(
öãΩ
,

281 "Ußge: viSëLöês¸ìnIdÜöeNumbîÅext", 
TCL_STATIC
);

282  (
TCL_ERROR
);

285 i‡(
	`gës¸ìnid
(
öãΩ
, &
•
, 
¨gv
[1], 
NULL
) ||

286 
	`gëöt
(
öãΩ
, "löênumbî", 
¨gv
[2], &
 o
))

287  (
TCL_ERROR
);

288 
INITMESSAGE
;

289 
rvÆ
 = 
	`≠i_¶öe
(
•
, (
ª˙o_t
)
 o
, 
¨gv
[3], 
	`°æí
(argv[3]));

290 
ENDMESSAGE
;

292  (
rvÆ
 ? 
TCL_ERROR
 : 
TCL_OK
);

293 
	}
}

304 
	$t˛_gëm¨k
(
˛õ¡D©a
, 
öãΩ
, 
¨gc
, 
¨gv
)

305 
Clõ¡D©a
 
˛õ¡D©a
;

306 
T˛_I¡îp
 *
öãΩ
;

307 
¨gc
;

308 **
¨gv
;

310 
MARK
 
curs‹
;

311 
SCR
 *
•
;

312 (*
s¸_msg
Ë
	`__P
((
SCR
 *, 
mty≥_t
, *, 
size_t
));

313 
rvÆ
;

314 
buf
[20];

316 i‡(
¨gc
 != 3) {

317 
	`T˛_SëResu…
(
öãΩ
,

318 "Ußge: viGëM¨k s¸ìnId m¨k", 
TCL_STATIC
);

319  (
TCL_ERROR
);

322 i‡(
	`gës¸ìnid
(
öãΩ
, &
•
, 
¨gv
[1], 
NULL
))

323  (
TCL_ERROR
);

324 
INITMESSAGE
;

325 
rvÆ
 = 
	`≠i_gëm¨k
(
•
, ()
¨gv
[2][0], &
curs‹
);

326 
ENDMESSAGE
;

328 i‡(
rvÆ
)

329  (
TCL_ERROR
);

331 ()
	`¢¥ötf
(
buf
, (buf), "%lu", (
u_l⁄g
)
curs‹
.
 o
);

332 
	`T˛_AµídEÀmít
(
öãΩ
, 
buf
);

333 ()
	`¢¥ötf
(
buf
, (buf), "%lu", (
u_l⁄g
)
curs‹
.
˙o
);

334 
	`T˛_AµídEÀmít
(
öãΩ
, 
buf
);

335  (
TCL_OK
);

336 
	}
}

346 
	$t˛_£tm¨k
(
˛õ¡D©a
, 
öãΩ
, 
¨gc
, 
¨gv
)

347 
Clõ¡D©a
 
˛õ¡D©a
;

348 
T˛_I¡îp
 *
öãΩ
;

349 
¨gc
;

350 **
¨gv
;

352 
MARK
 
curs‹
;

353 
SCR
 *
•
;

354 (*
s¸_msg
Ë
	`__P
((
SCR
 *, 
mty≥_t
, *, 
size_t
));

355 
i
, 
rvÆ
;

357 i‡(
¨gc
 != 5) {

358 
	`T˛_SëResu…
(
öãΩ
,

359 "Ußge: viSëM¨k s¸ìnId m¨kÜöêcﬁumn", 
TCL_STATIC
);

360  (
TCL_ERROR
);

363 i‡(
	`gës¸ìnid
(
öãΩ
, &
•
, 
¨gv
[1], 
NULL
))

364  (
TCL_ERROR
);

365 i‡(
	`gëöt
(
öãΩ
, "löênumbî", 
¨gv
[3], &
i
))

366  (
TCL_ERROR
);

367 
curs‹
.
 o
 = 
i
;

368 i‡(
	`gëöt
(
öãΩ
, "cﬁum¿numbî", 
¨gv
[4], &
i
))

369  (
TCL_ERROR
);

370 
curs‹
.
˙o
 = 
i
;

371 
INITMESSAGE
;

372 
rvÆ
 = 
	`≠i_£tm¨k
(
•
, ()
¨gv
[2][0], &
curs‹
);

373 
ENDMESSAGE
;

375  (
rvÆ
 ? 
TCL_ERROR
 : 
TCL_OK
);

376 
	}
}

387 
	$t˛_gëcurs‹
(
˛õ¡D©a
, 
öãΩ
, 
¨gc
, 
¨gv
)

388 
Clõ¡D©a
 
˛õ¡D©a
;

389 
T˛_I¡îp
 *
öãΩ
;

390 
¨gc
;

391 **
¨gv
;

393 
MARK
 
curs‹
;

394 
SCR
 *
•
;

395 (*
s¸_msg
Ë
	`__P
((
SCR
 *, 
mty≥_t
, *, 
size_t
));

396 
rvÆ
;

397 
buf
[20];

399 i‡(
¨gc
 != 2) {

400 
	`T˛_SëResu…
(
öãΩ
,

401 "Ußge: viGëCurs‹ s¸ìnId", 
TCL_STATIC
);

402  (
TCL_ERROR
);

405 i‡(
	`gës¸ìnid
(
öãΩ
, &
•
, 
¨gv
[1], 
NULL
))

406  (
TCL_ERROR
);

407 
INITMESSAGE
;

408 
rvÆ
 = 
	`≠i_gëcurs‹
(
•
, &
curs‹
);

409 
ENDMESSAGE
;

411 i‡(
rvÆ
)

412  (
TCL_ERROR
);

414 ()
	`¢¥ötf
(
buf
, (buf), "%lu", (
u_l⁄g
)
curs‹
.
 o
);

415 
	`T˛_AµídEÀmít
(
öãΩ
, 
buf
);

416 ()
	`¢¥ötf
(
buf
, (buf), "%lu", (
u_l⁄g
)
curs‹
.
˙o
);

417 
	`T˛_AµídEÀmít
(
öãΩ
, 
buf
);

418  (
TCL_OK
);

419 
	}
}

429 
	$t˛_£tcurs‹
(
˛õ¡D©a
, 
öãΩ
, 
¨gc
, 
¨gv
)

430 
Clõ¡D©a
 
˛õ¡D©a
;

431 
T˛_I¡îp
 *
öãΩ
;

432 
¨gc
;

433 **
¨gv
;

435 
MARK
 
curs‹
;

436 
SCR
 *
•
;

437 (*
s¸_msg
Ë
	`__P
((
SCR
 *, 
mty≥_t
, *, 
size_t
));

438 
i
, 
rvÆ
;

440 i‡(
¨gc
 != 4) {

441 
	`T˛_SëResu…
(
öãΩ
,

442 "Ußge: viSëCurs‹ s¸ìnIdÜöêcﬁumn", 
TCL_STATIC
);

443  (
TCL_ERROR
);

446 i‡(
	`gës¸ìnid
(
öãΩ
, &
•
, 
¨gv
[1], 
NULL
))

447  (
TCL_ERROR
);

448 i‡(
	`gëöt
(
öãΩ
, "s¸ì¿id", 
¨gv
[2], &
i
))

449  (
TCL_ERROR
);

450 
curs‹
.
 o
 = 
i
;

451 i‡(
	`gëöt
(
öãΩ
, "s¸ì¿id", 
¨gv
[3], &
i
))

452  (
TCL_ERROR
);

453 
curs‹
.
˙o
 = 
i
;

454 
INITMESSAGE
;

455 
rvÆ
 = 
	`≠i_£tcurs‹
(
•
, &
curs‹
);

456 
ENDMESSAGE
;

458  (
rvÆ
 ? 
TCL_ERROR
 : 
TCL_OK
);

459 
	}
}

469 
	$t˛_msg
(
˛õ¡D©a
, 
öãΩ
, 
¨gc
, 
¨gv
)

470 
Clõ¡D©a
 
˛õ¡D©a
;

471 
T˛_I¡îp
 *
öãΩ
;

472 
¨gc
;

473 **
¨gv
;

475 
SCR
 *
•
;

477 i‡(
¨gc
 != 3) {

478 
	`T˛_SëResu…
(
öãΩ
, "Ußge: viMsg s¸ìnIdÅext", 
TCL_STATIC
);

479  (
TCL_ERROR
);

482 i‡(
	`gës¸ìnid
(
öãΩ
, &
•
, 
¨gv
[1], 
NULL
))

483  (
TCL_ERROR
);

484 
	`≠i_imesßge
(
•
, 
¨gv
[2]);

486  (
TCL_OK
);

487 
	}
}

498 
	$t˛_is¸ìn
(
˛õ¡D©a
, 
öãΩ
, 
¨gc
, 
¨gv
)

499 
Clõ¡D©a
 
˛õ¡D©a
;

500 
T˛_I¡îp
 *
öãΩ
;

501 
¨gc
;

502 **
¨gv
;

504 
SCR
 *
•
, *
n•
;

505 (*
s¸_msg
Ë
	`__P
((
SCR
 *, 
mty≥_t
, *, 
size_t
));

506 
rvÆ
;

508 i‡(
¨gc
 != 2 &&árgc != 3) {

509 
	`T˛_SëResu…
(
öãΩ
,

510 "Ußge: viNewS¸ì¿s¸ìnId [fûe]", 
TCL_STATIC
);

511  (
TCL_ERROR
);

514 i‡(
	`gës¸ìnid
(
öãΩ
, &
•
, 
¨gv
[1], 
NULL
))

515  (
TCL_ERROR
);

516 
INITMESSAGE
;

517 
rvÆ
 = 
	`≠i_edô
(
•
, 
¨gv
[2], &
n•
, 1);

518 
ENDMESSAGE
;

520 i‡(
rvÆ
)

521  (
TCL_ERROR
);

523 ()
	`•rötf
(
öãΩ
->
ªsu…
, "%d", 
n•
->
id
);

524  (
TCL_OK
);

525 
	}
}

535 
	$t˛_es¸ìn
(
˛õ¡D©a
, 
öãΩ
, 
¨gc
, 
¨gv
)

536 
Clõ¡D©a
 
˛õ¡D©a
;

537 
T˛_I¡îp
 *
öãΩ
;

538 
¨gc
;

539 **
¨gv
;

541 
SCR
 *
•
;

542 (*
s¸_msg
Ë
	`__P
((
SCR
 *, 
mty≥_t
, *, 
size_t
));

543 
rvÆ
;

545 i‡(
¨gc
 != 2) {

546 
	`T˛_SëResu…
(
öãΩ
,

547 "Ußge: viEndS¸ì¿s¸ìnId", 
TCL_STATIC
);

548  (
TCL_ERROR
);

551 i‡(
	`gës¸ìnid
(
öãΩ
, &
•
, 
¨gv
[1], 
NULL
))

552  (
TCL_ERROR
);

553 
INITMESSAGE
;

554 
rvÆ
 = 
	`≠i_es¸ìn
(
•
);

555 
ENDMESSAGE
;

557  (
rvÆ
 ? 
TCL_ERROR
 : 
TCL_OK
);

558 
	}
}

568 
	$t˛_sws¸ìn
(
˛õ¡D©a
, 
öãΩ
, 
¨gc
, 
¨gv
)

569 
Clõ¡D©a
 
˛õ¡D©a
;

570 
T˛_I¡îp
 *
öãΩ
;

571 
¨gc
;

572 **
¨gv
;

574 
SCR
 *
•
, *
√w
;

575 (*
s¸_msg
Ë
	`__P
((
SCR
 *, 
mty≥_t
, *, 
size_t
));

576 
rvÆ
;

578 i‡(
¨gc
 != 3) {

579 
	`T˛_SëResu…
(
öãΩ
,

581 
TCL_STATIC
);

582  (
TCL_ERROR
);

585 i‡(
	`gës¸ìnid
(
öãΩ
, &
•
, 
¨gv
[1], 
NULL
))

586  (
TCL_ERROR
);

587 i‡(
	`gës¸ìnid
(
öãΩ
, &
√w
, 
¨gv
[2], 
NULL
))

588  (
TCL_ERROR
);

589 
INITMESSAGE
;

590 
rvÆ
 = 
	`≠i_sws¸ìn
(
•
, 
√w
);

591 
ENDMESSAGE
;

593  (
rvÆ
 ? 
TCL_ERROR
 : 
TCL_OK
);

594 
	}
}

604 
	$t˛_m≠
(
˛õ¡D©a
, 
öãΩ
, 
¨gc
, 
¨gv
)

605 
Clõ¡D©a
 
˛õ¡D©a
;

606 
T˛_I¡îp
 *
öãΩ
;

607 
¨gc
;

608 **
¨gv
;

610 
SCR
 *
•
;

611 (*
s¸_msg
Ë
	`__P
((
SCR
 *, 
mty≥_t
, *, 
size_t
));

612 
rvÆ
;

613 
comm™d
[256];

615 i‡(
¨gc
 != 4) {

616 
	`T˛_SëResu…
(
öãΩ
,

617 "Ußge: viM≠Key s¸ìnId keyÅ˛¥oc", 
TCL_STATIC
);

618  (
TCL_ERROR
);

621 i‡(
	`gës¸ìnid
(
öãΩ
, &
•
, 
¨gv
[1], 
NULL
))

622  (
TCL_ERROR
);

623 
INITMESSAGE
;

624 ()
	`¢¥ötf
(
comm™d
, (comm™d), ":t˛ %s\n", 
¨gv
[3]);

625 
rvÆ
 = 
	`≠i_m≠
(
•
, 
¨gv
[2], 
comm™d
, 
	`°æí
(command));

626 
ENDMESSAGE
;

628  (
rvÆ
 ? 
TCL_ERROR
 : 
TCL_OK
);

629 
	}
}

639 
	$t˛_unm≠
(
˛õ¡D©a
, 
öãΩ
, 
¨gc
, 
¨gv
)

640 
Clõ¡D©a
 
˛õ¡D©a
;

641 
T˛_I¡îp
 *
öãΩ
;

642 
¨gc
;

643 **
¨gv
;

645 
SCR
 *
•
;

646 (*
s¸_msg
Ë
	`__P
((
SCR
 *, 
mty≥_t
, *, 
size_t
));

647 
rvÆ
;

649 i‡(
¨gc
 != 3) {

650 
	`T˛_SëResu…
(
öãΩ
,

651 "Ußge: viUnm≠Key s¸ìnId key", 
TCL_STATIC
);

652  (
TCL_ERROR
);

655 i‡(
	`gës¸ìnid
(
öãΩ
, &
•
, 
¨gv
[1], 
NULL
))

656  (
TCL_ERROR
);

657 
INITMESSAGE
;

658 
rvÆ
 = 
	`≠i_unm≠
(
•
, 
¨gv
[2]);

659 
ENDMESSAGE
;

661  (
rvÆ
 ? 
TCL_ERROR
 : 
TCL_OK
);

662 
	}
}

672 
	$t˛_›ts_£t
(
˛õ¡D©a
, 
öãΩ
, 
¨gc
, 
¨gv
)

673 
Clõ¡D©a
 
˛õ¡D©a
;

674 
T˛_I¡îp
 *
öãΩ
;

675 
¨gc
;

676 **
¨gv
;

678 
SCR
 *
•
;

679 (*
s¸_msg
Ë
	`__P
((
SCR
 *, 
mty≥_t
, *, 
size_t
));

680 
rvÆ
;

681 *
£âög
;

683 i‡(
¨gc
 != 3) {

684 
	`T˛_SëResu…
(
öãΩ
,

685 "Ußge: viSëO± s¸ìnId comm™d", 
TCL_STATIC
);

686  (
TCL_ERROR
);

689 i‡(
	`gës¸ìnid
(
öãΩ
, &
•
, 
¨gv
[1], 
NULL
))

690  (
TCL_ERROR
);

691 
INITMESSAGE
;

693 
	`MALLOC
(
•
, 
£âög
, *, 
	`°æí
(
¨gv
[2])+6);

694 
	`°r˝y
(
£âög
, ":set ");

695 
	`°r˝y
(
£âög
+5, 
¨gv
[2]);

696 
rvÆ
=
	`≠i_run_°r
(
•
, 
£âög
);

697 
	`‰ì
(
£âög
);

698 
ENDMESSAGE
;

700  (
rvÆ
 ? 
TCL_ERROR
 : 
TCL_OK
);

701 
	}
}

711 
	$t˛_›ts_gë
(
˛õ¡D©a
, 
öãΩ
, 
¨gc
, 
¨gv
)

712 
Clõ¡D©a
 
˛õ¡D©a
;

713 
T˛_I¡îp
 *
öãΩ
;

714 
¨gc
;

715 **
¨gv
;

717 
SCR
 *
•
;

718 (*
s¸_msg
Ë
	`__P
((
SCR
 *, 
mty≥_t
, *, 
size_t
));

719 
rvÆ
;

720 *
vÆue
;

722 i‡(
¨gc
 != 3) {

723 
	`T˛_SëResu…
(
öãΩ
,

724 "Ußge: viGëO± s¸ìnId o±i⁄", 
TCL_STATIC
);

725  (
TCL_ERROR
);

728 i‡(
	`gës¸ìnid
(
öãΩ
, &
•
, 
¨gv
[1], 
NULL
))

729  (
TCL_ERROR
);

730 
INITMESSAGE
;

731 
rvÆ
 = 
	`≠i_›ts_gë
(
•
, 
¨gv
[2], &
vÆue
, 
NULL
);

732 
ENDMESSAGE
;

733 i‡(
rvÆ
)

734  (
TCL_ERROR
);

736 
	`T˛_SëResu…
(
öãΩ
, 
vÆue
, 
TCL_DYNAMIC
);

737  (
TCL_OK
);

738 
	}
}

747 
	$t˛_öô
(
gp
)

748 
GS
 *
gp
;

750 
gp
->
t˛_öãΩ
 = 
	`T˛_Cª©eI¡îp
();

751 i‡(
	`T˛_Inô
(
gp
->
t˛_öãΩ
Ë=
TCL_ERROR
)

754 
	#TCC
(
«me
, 
fun˘i⁄
) { \

755 
	`T˛_Cª©eComm™d
(
gp
->
t˛_öãΩ
, 
«me
, 
fun˘i⁄
, \

756 (
Clõ¡D©a
)
NULL
, (
T˛_CmdDñëeProc
 *)NULL); \

757 }

	)

758 
	`TCC
("viAµídLöe", 
t˛_Æöe
);

759 
	`TCC
("viDñLöe", 
t˛_dlöe
);

760 
	`TCC
("viEndS¸ìn", 
t˛_es¸ìn
);

761 
	`TCC
("viFödS¸ìn", 
t˛_fs¸ìn
);

762 
	`TCC
("viGëCurs‹", 
t˛_gëcurs‹
);

763 
	`TCC
("viGëLöe", 
t˛_glöe
);

764 
	`TCC
("viGëM¨k", 
t˛_gëm¨k
);

765 
	`TCC
("viGëO±", 
t˛_›ts_gë
);

766 
	`TCC
("viIn£πLöe", 
t˛_ûöe
);

767 
	`TCC
("viLa°Löe", 
t˛_Œöe
);

768 
	`TCC
("viM≠Key", 
t˛_m≠
);

769 
	`TCC
("viMsg", 
t˛_msg
);

770 
	`TCC
("viNewS¸ìn", 
t˛_is¸ìn
);

771 
	`TCC
("viSëCurs‹", 
t˛_£tcurs‹
);

772 
	`TCC
("viSëLöe", 
t˛_¶öe
);

773 
	`TCC
("viSëM¨k", 
t˛_£tm¨k
);

774 
	`TCC
("viSëO±", 
t˛_›ts_£t
);

775 
	`TCC
("viSwôchS¸ìn", 
t˛_sws¸ìn
);

776 
	`TCC
("viUnm≠Key", 
t˛_unm≠
);

779 
	}
}

791 
	$gës¸ìnid
(
öãΩ
, 
•p
, 
id
, 
«me
)

792 
T˛_I¡îp
 *
öãΩ
;

793 
SCR
 **
•p
;

794 *
id
, *
«me
;

796 
s¸_no
;

797 
buf
[64];

799 i‡(
id
 !
NULL
 && 
	`gëöt
(
öãΩ
, "s¸ì¿id", id, &
s¸_no
))

801 i‡((*
•p
 = 
	`≠i_fs¸ìn
(
s¸_no
, 
«me
)Ë=
NULL
) {

802 ()
	`¢¥ötf
(
buf
, (buf),

803 "unknow¿s¸ì¿id: %s", 
«me
 =
NULL
 ? 
id
 :Çame);

804 
	`T˛_SëResu…
(
öãΩ
, 
buf
, 
TCL_VOLATILE
);

808 
	}
}

818 
	$gëöt
(
öãΩ
, 
msg
, 
s
, 
öç
)

819 
T˛_I¡îp
 *
öãΩ
;

820 *
msg
, *
s
;

821 *
öç
;

823 
buf
[64];

825 i‡(
	`T˛_GëI¡
(
öãΩ
, 
s
, 
öç
Ë=
TCL_ERROR
)

827 i‡(*
öç
 < 0) {

828 ()
	`¢¥ötf
(
buf
, (buf),

829 "ûÀgÆ %†%s: mayÇŸ bê√g©ive", 
msg
, 
s
);

830 
	`T˛_SëResu…
(
öãΩ
, 
buf
, 
TCL_VOLATILE
);

834 
	}
}

842 
	$msgh™dÀr
(
•
, 
mty≥
, 
msg
, 
Àn
)

843 
SCR
 *
•
;

844 
mty≥_t
 
mty≥
;

845 *
msg
;

846 
size_t
 
Àn
;

849 
msg
[
Àn
 - 1] = '\0';

851 
	`T˛_SëResu…
(
•
->
gp
->
t˛_öãΩ
, 
msg
, 
TCL_VOLATILE
);

852 
	}
}

	@tk/tk_funcs.c

10 
	~"c⁄fig.h
"

12 #i‚de‡
löt


13 c⁄° 
	gsccsid
[] = "@(#)tk_funcs.c 8.11 (Berkeley) 9/23/96";

16 
	~<sys/ty≥s.h
>

17 
	~<sys/queue.h
>

18 
	~<sys/time.h
>

20 
	~<bô°rög.h
>

21 
	~<˘y≥.h
>

22 
	~<sig«l.h
>

23 
	~<°dio.h
>

24 
	~<°dlib.h
>

25 
	~<°rög.h
>

26 
	~<ãrmios.h
>

27 
	~<uni°d.h
>

29 
	~"../comm⁄/comm⁄.h
"

30 
	~"../vi/vi.h
"

31 
	~"tki.h
"

40 
	$tk_add°r
(
•
, 
°r
, 
Àn
)

41 
SCR
 *
•
;

42 c⁄° *
°r
;

43 
size_t
 
Àn
;

45 
TK_PRIVATE
 *
tkp
;

46 
iv
;

47 
buf
[20];

49 
iv
 = 0;

51 
tkp
 = 
	`TKP
(
•
);

52 i‡(
iv
)

53 ()
	`T˛_EvÆ
(
tkp
->
öãΩ
, "tk_standout");

55 ()
	`¢¥ötf
(
buf
, (buf), "%d ", ()
Àn
);

56 i‡((
	`T˛_V¨EvÆ
(
tkp
->
öãΩ
,

57 "tk_add°∏", 
buf
, "{", 
°r
, "}", 
NULL
Ë!
TCL_OK
))

60 i‡(
iv
)

61 ()
	`T˛_EvÆ
(
tkp
->
öãΩ
, "tk_standend");

63 
	}
}

72 
	$tk_©å
(
•
, 
©åibuã
, 
⁄
)

73 
SCR
 *
•
;

74 
s¸_©å_t
 
©åibuã
;

75 
⁄
;

77 
TK_PRIVATE
 *
tkp
;

79 
tkp
 = 
	`TKP
(
•
);

80 
©åibuã
) {

81 
SA_ALTERNATE
:

83 
SA_INVERSE
:

84 i‡(
⁄
)

85 ()
	`T˛_EvÆ
(
tkp
->
öãΩ
, "tk_standout");

87 ()
	`T˛_EvÆ
(
tkp
->
öãΩ
, "tk_standend");

90 
	`ab‹t
();

93 
	}
}

102 
	$tk_baud
(
•
, 
øãp
)

103 
SCR
 *
•
;

104 
u_l⁄g
 *
øãp
;

106 *
øãp
 = 9600;

108 
	}
}

117 
	$tk_bñl
(
•
)

118 
SCR
 *
•
;

120 
TK_PRIVATE
 *
tkp
;

122 
tkp
 = 
	`TKP
(
•
);

123  (
	`T˛_EvÆ
(
tkp
->
öãΩ
, "tk_Êash"Ë!
TCL_OK
);

124 
	}
}

133 
	$tk_˛π€ﬁ
(
•
)

134 
SCR
 *
•
;

136 
TK_PRIVATE
 *
tkp
;

138 
tkp
 = 
	`TKP
(
•
);

139  (
	`T˛_EvÆ
(
tkp
->
öãΩ
, "tk_˛π€ﬁ"Ë!
TCL_OK
);

140 
	}
}

149 
	$tk_curs‹
(
•
, 
yp
, 
xp
)

150 
SCR
 *
•
;

151 
size_t
 *
yp
, *
xp
;

153 
TK_PRIVATE
 *
tkp
;

155 
tkp
 = 
	`TKP
(
•
);

156 *
yp
 = (
tkp
->
tk_curs‹_row
 - 1Ë- 
•
->
woff
;

157 *
xp
 = 
tkp
->
tk_curs‹_cﬁ
;

159 
	}
}

168 
	$tk_dñëñn
(
•
)

169 
SCR
 *
•
;

171 
TK_PRIVATE
 *
tkp
;

173 
tkp
 = 
	`TKP
(
•
);

174  (
	`T˛_EvÆ
(
tkp
->
öãΩ
, "tk_dñëñn"Ë!
TCL_OK
);

175 
	}
}

184 
	$tk_ex_adju°
(
•
, 
a˘i⁄
)

185 
SCR
 *
•
;

186 
exadj_t
 
a˘i⁄
;

188 
	`ab‹t
();

190 
	}
}

199 
	$tk_ö£π 
(
•
)

200 
SCR
 *
•
;

202 
TK_PRIVATE
 *
tkp
;

204 
tkp
 = 
	`TKP
(
•
);

205  (
	`T˛_EvÆ
(
tkp
->
öãΩ
, "tk_ö£π "Ë!
TCL_OK
);

206 
	}
}

215 
	$tk_keyvÆ
(
•
, 
vÆ
, 
chp
, 
d√p
)

216 
SCR
 *
•
;

217 
s¸_keyvÆ_t
 
vÆ
;

218 
CHAR_T
 *
chp
;

219 *
d√p
;

221 
TK_PRIVATE
 *
tkp
;

227 
tkp
 = 
	`TKP
(
•
);

228 
vÆ
) {

229 
KEY_VEOF
:

230 *
d√p
 = (*
chp
 = 
tkp
->
‹ig
.
c_cc
[
VEOF
]Ë=
_POSIX_VDISABLE
;

232 
KEY_VERASE
:

233 *
d√p
 = (*
chp
 = 
tkp
->
‹ig
.
c_cc
[
VERASE
]Ë=
_POSIX_VDISABLE
;

235 
KEY_VKILL
:

236 *
d√p
 = (*
chp
 = 
tkp
->
‹ig
.
c_cc
[
VKILL
]Ë=
_POSIX_VDISABLE
;

238 #ifde‡
VWERASE


239 
KEY_VWERASE
:

240 *
d√p
 = (*
chp
 = 
tkp
->
‹ig
.
c_cc
[
VWERASE
]Ë=
_POSIX_VDISABLE
;

244 *
d√p
 = 1;

248 
	}
}

257 
	$tk_move
(
•
, 
 o
, 
˙o
)

258 
SCR
 *
•
;

259 
size_t
 
 o
, 
˙o
;

261 
TK_PRIVATE
 *
tkp
;

262 
buf
[40];

264 ()
	`¢¥ötf
(
buf
, (buf), "%d %d", 
	`RLNO
(
•
, 
 o
), 
˙o
);

266 
tkp
 = 
	`TKP
(
•
);

267  (
	`T˛_V¨EvÆ
(
tkp
->
öãΩ
, "tk_movê", 
buf
, 
NULL
Ë!
TCL_OK
);

268 
	}
}

277 
	$tk_ª‰esh
(
•
, 
ª∑öt
)

278 
SCR
 *
•
;

279 
ª∑öt
;

281 
TK_PRIVATE
 *
tkp
;

292 i‡(
ª∑öt
) {

295 
tkp
 = 
	`TKP
(
•
);

296  (
	`T˛_EvÆ
(
tkp
->
öãΩ
, "upd©êidÀèsks"Ë!
TCL_OK
);

297 
	}
}

306 
	$tk_ª«me
(
•
)

307 
SCR
 *
•
;

309 
TK_PRIVATE
 *
tkp
;

311 
tkp
 = 
	`TKP
(
•
);

312  (
	`T˛_V¨EvÆ
(
tkp
->
öãΩ
,

313 "tk_ª«mê", 
•
->
‰p
->
«me
, 
NULL
Ë!
TCL_OK
);

314 
	}
}

323 
	$tk_su•íd
(
•
, 
Ælowedp
)

324 
SCR
 *
•
;

325 *
Ælowedp
;

327 *
Ælowedp
 = 0;

329 
	}
}

338 
	$tk_ußge
()

340 
	#USAGE
 "\
:Åkvò[-eFlRrSv] [-¯comm™d] [-bg cﬁ‹] [-fg cﬁ‹]\n\
[-geomëry widthxheight+x+y] [-òs¸ùt] [-àèg] [-w size]\n\
[fûê...]\n"

	)

344 ()
	`Ârötf
(
°dîr
, "%s", 
USAGE
);

345 #unde‡
USAGE


346 
	}
}

	@tk/tk_main.c

10 
	~"c⁄fig.h
"

12 #i‚de‡
löt


13 c⁄° 
	gsccsid
[] = "@(#)tk_main.c 8.18 (Berkeley) 9/24/96";

16 
	~<sys/ty≥s.h
>

17 
	~<sys/queue.h
>

19 
	~<bô°rög.h
>

20 
	~<î∫o.h
>

21 
	~<f˙é.h
>

22 
	~<sig«l.h
>

23 
	~<°dio.h
>

24 
	~<°dlib.h
>

25 
	~<°rög.h
>

26 
	~<ãrmios.h
>

27 
	~<uni°d.h
>

29 
	~"../comm⁄/comm⁄.h
"

30 
	~"tki.h
"

31 
	~"∑th«mes.h
"

33 
GS
 *
	g__globÆ_li°
;

34 
sig£t_t
 
	g__sigblock£t
;

36 
GS
 *
gs_öô
 
__P
((*));

37 
kûlsig
 
__P
((
SCR
 *));

38 
≥º
 
__P
((*, *));

39 
sig_íd
 
__P
((
GS
 *));

40 
sig_öô
 
__P
((
GS
 *));

41 
t˛_öô
 
__P
((
GS
 *));

42 
t˛_îr
 
__P
((
TK_PRIVATE
 *));

49 
	$maö
(
¨gc
, 
¨gv
)

50 
¨gc
;

51 *
¨gv
[];

53 
ªíãr
;

54 
GS
 *
gp
;

55 
TK_PRIVATE
 *
tkp
;

56 
size_t
 
rows
, 
cﬁs
;

57 
rvÆ
;

58 **
p_av
, **
t_av
, *
s¸ùt
;

61 i‡(
ªíãr
++)

62 
	`ab‹t
();

65 
__globÆ_li°
 = 
gp
 = 
	`gs_öô
(
¨gv
[0]);

68 i‡(
	`t˛_öô
(
gp
))

69 
	`exô
 (1);

79 
s¸ùt
 = "init.tcl";

80 
p_av
 = 
t_av
 = 
¨gv
;;) {

81 i‡(*
t_av
 =
NULL
) {

82 *
p_av
 = 
NULL
;

85 i‡(!
	`°rcmp
(*
t_av
, "--")) {

86 (*
p_av
++ = *
t_av
++Ë!
NULL
);

89 i‡(!
	`memcmp
(*
t_av
, "-i", ("-i") - 1)) {

90 i‡(
t_av
[0][2] != '\0') {

91 
s¸ùt
 = 
t_av
[0] + 2;

92 ++
t_av
;

93 --
¨gc
;

96 i‡(
t_av
[1] !
NULL
) {

97 
s¸ùt
 = 
t_av
[1];

98 
t_av
 += 2;

99 
¨gc
 -= 2;

103 *
p_av
++ = *
t_av
++;

105 
p_av
 = 
t_av
 = 
¨gv
;;) {

106 i‡(*
t_av
 =
NULL
) {

107 *
p_av
 = 
NULL
;

110 i‡(!
	`°rcmp
(*
t_av
, "--")) {

111 (*
p_av
++ = *
t_av
++Ë!
NULL
);

114 i‡(
t_av
[1] !
NULL
 &&

115 (!
	`memcmp
(*
t_av
, "-background", ("-background") - 1) ||

116 !
	`memcmp
(*
t_av
, "-bg", ("-bg") - 1) ||

117 !
	`memcmp
(*
t_av
, "-borderwidth", ("-borderwidth") - 1)||

118 !
	`memcmp
(*
t_av
, "-bd", ("-bd") - 1) ||

119 !
	`memcmp
(*
t_av
, "-foreground", ("-foreground") - 1) ||

120 !
	`memcmp
(*
t_av
, "-fg", ("-fg") - 1) ||

121 !
	`memcmp
(*
t_av
, "-font", ("-font") - 1))) {

122 i‡(
	`T˛_V¨EvÆ
(
tkp
->
öãΩ
, ".t configure ",

123 
t_av
[0], " ",Å_av[1], 
NULL
Ë=
TCL_ERROR
)

124 
	`t˛_îr
(
tkp
);

125 
t_av
 += 2;

126 
¨gc
 -= 2;

129 i‡(!
	`memcmp
(*
t_av
, "-geometry", ("-geometry") - 1)) {

130 i‡(
	`T˛_V¨EvÆ
(
tkp
->
öãΩ
, "wm geometry . ",

131 *
t_av
 + ("-geomëry"Ë- 1, 
NULL
Ë=
TCL_ERROR
)

132 
	`t˛_îr
(
tkp
);

133 ++
t_av
;

134 --
¨gc
;

137 *
p_av
++ = *
t_av
++;

141 
tkp
 = 
	`GTKP
(
gp
);

142 i‡(
	`T˛_EvÆFûe
(
tkp
->
öãΩ
, 
s¸ùt
Ë=
TCL_ERROR
)

143 
	`t˛_îr
(
tkp
);

146 i‡((
	`OG_D_STR
(
gp
, 
GO_TERM
) =

147 
	`OG_STR
(
gp
, 
GO_TERM
Ë
	`°rdup
("tkãrm")Ë=
NULL
)

148 
	`≥º
(
gp
->
¥og«me
, 
NULL
);

151 i‡(
	`tk_ssize
(
NULL
, 0, &
rows
, &
cﬁs
, NULL))

152 
	`exô
 (1);

155 
	`OG_VAL
(
gp
, 
GO_LINES
Ë
	`OG_D_VAL
(gp, GO_LINESË
rows
;

156 
	`OG_VAL
(
gp
, 
GO_COLUMNS
Ë
	`OG_D_VAL
(gp, GO_COLUMNSË
cﬁs
;

159 i‡(
	`sig_öô
(
gp
))

160 
	`exô
 (1);

163 
rvÆ
 = 
	`edô‹
(
gp
, 
¨gc
, 
¨gv
);

166 
	`sig_íd
(
gp
);

169 ()
	`tk_quô
(
gp
);

172 i‡(
tkp
->
kûÀrsig
) {

173 ()
	`sig«l
(
tkp
->
kûÀrsig
, 
SIG_DFL
);

174 ()
	`kûl
(
	`gëpid
(), 
tkp
->
kûÀrsig
);

179 #i‡
	`deföed
(
DEBUG
Ë|| deföed(
PURIFY
Ë|| deföed(
LIBRARY
)

180 
	`‰ì
(
tkp
);

181 
	`‰ì
(
gp
);

184 
	`exô
 (
rvÆ
);

185 
	}
}

191 
GS
 *

192 
	$gs_öô
(
«me
)

193 *
«me
;

195 
TK_PRIVATE
 *
tkp
;

196 
GS
 *
gp
;

197 
fd
;

198 *
p
;

201 i‡((
p
 = 
	`°ºchr
(
«me
, '/')Ë!
NULL
)

202 
«me
 = 
p
 + 1;

205 
	`CALLOC_NOMSG
(
NULL
, 
gp
, 
GS
 *, 1, (GS));

208 i‡(
gp
 !
NULL
)

209 
	`CALLOC_NOMSG
(
NULL
, 
tkp
, 
TK_PRIVATE
 *, 1, (TK_PRIVATE));

210 i‡(
gp
 =
NULL
 || 
tkp
 == NULL)

211 
	`≥º
(
«me
, 
NULL
);

212 
gp
->
tk_¥iv©e
 = 
tkp
;

213 
	`TAILQ_INIT
(&
tkp
->
evq
);

216 
gp
->
s¸_add°r
 = 
tk_add°r
;

217 
gp
->
s¸_©å
 = 
tk_©å
;

218 
gp
->
s¸_baud
 = 
tk_baud
;

219 
gp
->
s¸_bñl
 = 
tk_bñl
;

220 
gp
->
s¸_busy
 = 
NULL
;

221 
gp
->
s¸_˛π€ﬁ
 = 
tk_˛π€ﬁ
;

222 
gp
->
s¸_curs‹
 = 
tk_curs‹
;

223 
gp
->
s¸_dñëñn
 = 
tk_dñëñn
;

224 
gp
->
s¸_evít
 = 
tk_evít
;

225 
gp
->
s¸_ex_adju°
 = 
tk_ex_adju°
;

226 
gp
->
s¸_fm≠
 = 
tk_fm≠
;

227 
gp
->
s¸_ö£π 
 = 
tk_ö£π 
;

228 
gp
->
s¸_keyvÆ
 = 
tk_keyvÆ
;

229 
gp
->
s¸_move
 = 
tk_move
;

230 
gp
->
s¸_msg
 = 
NULL
;

231 
gp
->
s¸_›tch™ge
 = 
tk_›tch™ge
;

232 
gp
->
s¸_ª‰esh
 = 
tk_ª‰esh
;

233 
gp
->
s¸_ª«me
 = 
tk_ª«me
;

234 
gp
->
s¸_s¸ìn
 = 
tk_s¸ìn
;

235 
gp
->
s¸_su•íd
 = 
tk_su•íd
;

236 
gp
->
s¸_ußge
 = 
tk_ußge
;

242 i‡(
	`ißây
(
STDIN_FILENO
)) {

243 i‡(
	`tcgë©å
(
STDIN_FILENO
, &
tkp
->
‹ig
) == -1)

244 
tcÁû
;

245 } i‡((
fd
 = 
	`›í
(
_PATH_TTY
, 
O_RDONLY
, 0)) != -1) {

246 i‡(
	`tcgë©å
(
fd
, &
tkp
->
‹ig
) == -1)

247 
tcÁû
: 
	`≥º
(
«me
, "tcgetattr");

248 ()
	`˛o£
(
fd
);

251 
gp
->
¥og«me
 = 
«me
;

252  (
gp
);

253 
	}
}

260 
	$t˛_öô
(
gp
)

261 
GS
 *
gp
;

263 
TK_PRIVATE
 *
tkp
;

265 
tkp
 = 
	`GTKP
(
gp
);

266 i‡((
tkp
->
öãΩ
 = 
	`T˛_Cª©eI¡îp
()Ë=
NULL
)

267 
	`t˛_îr
(
tkp
);

269 #i‡(
TK_MAJOR_VERSION
 =4Ë&& (
TK_MINOR_VERSION
 == 0)

270 i‡(
	`Tk_Cª©eMaöWödow
(
tkp
->
öãΩ
, 
NULL
, "vi", "Vi") == NULL)

271 
	`t˛_îr
(
tkp
);

273 i‡(
	`T˛_Inô
(
tkp
->
öãΩ
Ë=
TCL_ERROR
)

274 
	`t˛_îr
(
tkp
);

275 i‡(
	`Tk_Inô
(
tkp
->
öãΩ
Ë=
TCL_ERROR
)

276 
	`t˛_îr
(
tkp
);

279 ()
	`T˛_LökV¨
(
tkp
->
öãΩ
,

280 "tk_curs‹_row", (*)&
tkp
->
tk_curs‹_row
, 
TCL_LINK_INT
);

281 ()
	`T˛_LökV¨
(
tkp
->
öãΩ
,

282 "tk_curs‹_cﬁ", (*)&
tkp
->
tk_curs‹_cﬁ
, 
TCL_LINK_INT
);

283 ()
	`T˛_LökV¨
(
tkp
->
öãΩ
,

284 "tk_ssize_row", (*)&
tkp
->
tk_ssize_row
, 
TCL_LINK_INT
);

285 ()
	`T˛_LökV¨
(
tkp
->
öãΩ
,

286 "tk_ssize_cﬁ", (*)&
tkp
->
tk_ssize_cﬁ
, 
TCL_LINK_INT
);

289 
	`T˛_Cª©eComm™d
(
tkp
->
öãΩ
, "tk_key", 
tk_key
,Åkp, 
NULL
);

290 
	`T˛_Cª©eComm™d
(
tkp
->
öãΩ
, "tk_›", 
tk_›
,Åkp, 
NULL
);

291 
	`T˛_Cª©eComm™d
(
tkp
->
öãΩ
, "tk_›t_öô", 
tk_›t_öô
,Åkp, 
NULL
);

292 
	`T˛_Cª©eComm™d
(
tkp
->
öãΩ
, "tk_›t_£t", 
tk_›t_£t
,Åkp, 
NULL
);

293 
	`T˛_Cª©eComm™d
(
tkp
->
öãΩ
, "tk_vîsi⁄", 
tk_vîsi⁄
,Åkp, 
NULL
);

296 i‡(
	`T˛_EvÆ
(
tkp
->
öãΩ
, "wm geomëry . =80x28+0+0"Ë=
TCL_ERROR
)

297 
	`t˛_îr
(
tkp
);

299 
	}
}

306 
	$t˛_îr
(
tkp
)

307 
TK_PRIVATE
 *
tkp
;

309 ()
	`Ârötf
(
°dîr
, "%s\n", 
tkp
->
öãΩ
->
ªsu…
 !
NULL
 ?

310 
tkp
->
öãΩ
->
ªsu…
 : "Tcl/Tk: initializationÉrror");

311 ()
	`tk_ußge
();

312 
	`exô
 (1);

313 
	}
}

315 
	#GLOBAL_TKP
 \

316 
TK_PRIVATE
 *
tkp
 = 
	`GTKP
(
__globÆ_li°
);

	)

318 
	$h_hup
(
signo
)

319 
signo
;

321 
GLOBAL_TKP
;

323 
	`F_SET
(
tkp
, 
TK_SIGHUP
);

324 
tkp
->
kûÀrsig
 = 
SIGHUP
;

325 
	}
}

328 
	$h_öt
(
signo
)

329 
signo
;

331 
GLOBAL_TKP
;

333 
	`F_SET
(
tkp
, 
TK_SIGINT
);

334 
	}
}

337 
	$h_ãrm
(
signo
)

338 
signo
;

340 
GLOBAL_TKP
;

342 
	`F_SET
(
tkp
, 
TK_SIGTERM
);

343 
tkp
->
kûÀrsig
 = 
SIGTERM
;

344 
	}
}

347 
	$h_wöch
(
signo
)

348 
signo
;

350 
GLOBAL_TKP
;

352 
	`F_SET
(
tkp
, 
TK_SIGWINCH
);

353 
	}
}

354 #unde‡
GLOBAL_TKP


361 
	$sig_öô
(
gp
)

362 
GS
 *
gp
;

364 
TK_PRIVATE
 *
tkp
;

365 
siga˘i⁄
 
a˘
;

367 
tkp
 = 
	`GTKP
(
gp
);

369 ()
	`sigem±y£t
(&
__sigblock£t
);

377 
	#SETSIG
(
sig«l
, 
h™dÀr
, 
off
) { \

378 i‡(
	`sigadd£t
(&
__sigblock£t
, 
sig«l
)) \

379 
îr
; \

380 
a˘
.
ß_h™dÀr
 = 
h™dÀr
; \

381 
	`sigem±y£t
(&
a˘
.
ß_mask
); \

382 
a˘
.
ß_Êags
 = 0; \

383 i‡(
	`siga˘i⁄
(
sig«l
, &
a˘
, &
tkp
->
ﬂ˘
[
off
])) \

384 
îr
; \

385 }

	)

386 #unde‡
SETSIG


389 
îr
: 
	`≥º
(
gp
->
¥og«me
, 
NULL
);

391 
	}
}

398 
	$sig_íd
(
gp
)

399 
GS
 *
gp
;

401 
TK_PRIVATE
 *
tkp
;

403 
tkp
 = 
	`GTKP
(
gp
);

404 ()
	`siga˘i⁄
(
SIGHUP
, 
NULL
, &
tkp
->
ﬂ˘
[
INDX_HUP
]);

405 ()
	`siga˘i⁄
(
SIGINT
, 
NULL
, &
tkp
->
ﬂ˘
[
INDX_INT
]);

406 ()
	`siga˘i⁄
(
SIGTERM
, 
NULL
, &
tkp
->
ﬂ˘
[
INDX_TERM
]);

407 ()
	`siga˘i⁄
(
SIGWINCH
, 
NULL
, &
tkp
->
ﬂ˘
[
INDX_WINCH
]);

408 
	}
}

415 
	$≥º
(
«me
, 
msg
)

416 *
«me
, *
msg
;

418 ()
	`Ârötf
(
°dîr
, "%s:", 
«me
);

419 i‡(
msg
 !
NULL
)

420 ()
	`Ârötf
(
°dîr
, "%s:", 
msg
);

421 ()
	`Ârötf
(
°dîr
, "%s\n", 
	`°ªº‹
(
î∫o
));

422 
	`exô
(1);

423 
	}
}

	@tk/tk_read.c

10 
	~"c⁄fig.h
"

12 #i‚de‡
löt


13 c⁄° 
	gsccsid
[] = "@(#)tk_read.c 8.12 (Berkeley) 9/24/96";

16 
	~<sys/ty≥s.h
>

17 
	~<sys/queue.h
>

19 
	~<bô°rög.h
>

20 
	~<î∫o.h
>

21 
	~<f˙é.h
>

22 
	~<sig«l.h
>

23 
	~<°dio.h
>

24 
	~<°dlib.h
>

25 
	~<°rög.h
>

26 
	~<ãrmios.h
>

27 
	~<uni°d.h
>

29 
	~"../comm⁄/comm⁄.h
"

30 
	~"../ex/s¸ùt.h
"

31 
	~"tki.h
"

33 
öput_t
 
tk_ªad
 
__P
((
SCR
 *, ));

34 
tk_ªsize
 
__P
((
SCR
 *, 
size_t
, size_t));

44 
	$tk_evít
(
•
, 
evp
, 
Êags
, 
timeout
)

45 
SCR
 *
•
;

46 
EVENT
 *
evp
;

47 
u_öt32_t
 
Êags
;

48 
timeout
;

50 
EVENT
 *
ãvp
;

51 
TK_PRIVATE
 *
tkp
;

52 
size_t
 
löes
, 
cﬁumns
;

53 
ch™ged
;

59 
tkp
 = 
	`TKP
(
•
);

60 
sig
: i‡(
	`LF_ISSET
(
EC_INTERRUPT
Ë|| 
	`F_ISSET
(
tkp
, 
TK_SIGINT
)) {

61 i‡(
	`F_ISSET
(
tkp
, 
TK_SIGINT
)) {

62 
	`F_CLR
(
tkp
, 
TK_SIGINT
);

63 
evp
->
e_evít
 = 
E_INTERRUPT
;

65 
evp
->
e_evít
 = 
E_TIMEOUT
;

68 i‡(
	`F_ISSET
(
tkp
, 
TK_SIGHUP
 | 
TK_SIGTERM
 | 
TK_SIGWINCH
)) {

69 i‡(
	`F_ISSET
(
tkp
, 
TK_SIGHUP
)) {

70 
evp
->
e_evít
 = 
E_SIGHUP
;

73 i‡(
	`F_ISSET
(
tkp
, 
TK_SIGTERM
)) {

74 
evp
->
e_evít
 = 
E_SIGTERM
;

77 i‡(
	`F_ISSET
(
tkp
, 
TK_SIGWINCH
)) {

78 
	`F_CLR
(
tkp
, 
TK_SIGWINCH
);

79 ()
	`tk_ssize
(
•
, 1, &
löes
, &
cﬁumns
, &
ch™ged
);

80 i‡(
ch™ged
) {

81 ()
	`tk_ªsize
(
•
, 
löes
, 
cﬁumns
);

82 
evp
->
e_evít
 = 
E_WRESIZE
;

90 
›s
: i‡((
ãvp
 = 
tkp
->
evq
.
tqh_fú°
Ë!
NULL
) {

91 *
evp
 = *
ãvp
;

92 
	`TAILQ_REMOVE
(&
tkp
->
evq
, 
ãvp
, 
q
);

93 
	`‰ì
(
ãvp
);

98 
	`tk_ªad
(
•
, 
timeout
)) {

99 
INP_OK
:

100 
evp
->
e_c•
 = 
tkp
->
ibuf
;

101 
evp
->
e_Àn
 = 
tkp
->
ibuf_˙t
;

102 
evp
->
e_evít
 = 
E_STRING
;

103 
tkp
->
ibuf_˙t
 = 0;

105 
INP_EOF
:

106 
evp
->
e_evít
 = 
E_EOF
;

108 
INP_ERR
:

109 
evp
->
e_evít
 = 
E_ERR
;

111 
INP_INTR
:

112 
sig
;

114 
INP_TIMEOUT
:

116 i‡(
tkp
->
evq
.
tqh_fú°
 !
NULL
)

117 
›s
;

120 
evp
->
e_evít
 = 
E_TIMEOUT
;

123 
	`ab‹t
();

126 
	}
}

132 
öput_t


133 
	$tk_ªad
(
•
, 
timeout
)

134 
SCR
 *
•
;

135 
timeout
;

137 
TK_PRIVATE
 *
tkp
;

138 
buf
[20];

145 i‡(
	`F_ISSET
(
•
->
gp
, 
G_SCRWIN
Ë&& 
	`ss¸_öput
(sp))

146  (
INP_ERR
);

149 
tkp
 = 
	`TKP
(
•
);

150 ()
	`¢¥ötf
(
buf
, (buf), "%d", 
timeout
);

151 ()
	`T˛_V¨EvÆ
(
tkp
->
öãΩ
, "tk_key_waô ", 
buf
, 
NULL
);

153  (
tkp
->
ibuf_˙t
 =0 ? 
INP_TIMEOUT
 : 
INP_OK
);

154 
	}
}

163 
	$tk_key
(
˛õ¡D©a
, 
öãΩ
, 
¨gc
, 
¨gv
)

164 
Clõ¡D©a
 
˛õ¡D©a
;

165 
T˛_I¡îp
 *
öãΩ
;

166 
¨gc
;

167 *
¨gv
[];

169 
TK_PRIVATE
 *
tkp
;

170 
u_öt8_t
 *
p
, *
t
;

172 
tkp
 = (
TK_PRIVATE
 *)
˛õ¡D©a
;

173 
p
 =

174 
tkp
->
ibuf
 +Åkp->
ibuf_˙t
, 
t
 = 
¨gv
[1]; (*
p
++ = *t++) != '\0';

175 ++
tkp
->
ibuf_˙t
);

176  (
TCL_OK
);

177 
	}
}

184 
	$tk_ªsize
(
•
, 
löes
, 
cﬁumns
)

185 
SCR
 *
•
;

186 
size_t
 
löes
, 
cﬁumns
;

188 
ARGS
 *
¨gv
[2], 
a
, 
b
;

189 
rvÆ
;

190 
b1
[1024];

192 
a
.
bp
 = 
b1
;

193 
b
.
bp
 = 
NULL
;

194 
a
.
Àn
 = 
b
.len = 0;

195 
¨gv
[0] = &
a
;

196 
¨gv
[1] = &
b
;

198 ()
	`¢¥ötf
(
b1
, (b1), "löes=%lu", (
u_l⁄g
)
löes
);

199 
a
.
Àn
 = 
	`°æí
(
b1
);

200 i‡(
	`›ts_£t
(
•
, 
¨gv
, 
NULL
))

202 ()
	`¢¥ötf
(
b1
, (b1), "cﬁumns=%lu", (
u_l⁄g
)
cﬁumns
);

203 
a
.
Àn
 = 
	`°æí
(
b1
);

204 i‡(
	`›ts_£t
(
•
, 
¨gv
, 
NULL
))

207 
	}
}

	@tk/tk_screen.c

10 
	~"c⁄fig.h
"

12 #i‚de‡
löt


13 c⁄° 
	gsccsid
[] = "@(#)tk_screen.c 8.9 (Berkeley) 5/24/96";

16 
	~<sys/ty≥s.h
>

17 
	~<sys/queue.h
>

19 
	~<bô°rög.h
>

20 
	~<î∫o.h
>

21 
	~<sig«l.h
>

22 
	~<°dio.h
>

23 
	~<°dlib.h
>

24 
	~<°rög.h
>

25 
	~<ãrmios.h
>

26 
	~<uni°d.h
>

28 
	~"../comm⁄/comm⁄.h
"

29 
	~"tki.h
"

38 
	$tk_s¸ìn
(
•
, 
Êags
)

39 
SCR
 *
•
;

40 
u_öt32_t
 
Êags
;

42 
TK_PRIVATE
 *
tkp
;

44 
tkp
 = 
	`TKP
(
•
);

47 i‡(
	`LF_ISSET
(
SC_VI
Ë&& 
	`F_ISSET
(
•
, 
SC_SCR_VI
))

51 i‡(
	`LF_ISSET
(
SC_EX
))

55 i‡(
	`tk_ãrm_öô
(
•
))

59 i‡(
	`tk_ª«me
(
•
))

62 
	`F_SET
(
tkp
, 
TK_SCR_VI_INIT
);

64 
	}
}

73 
	$tk_quô
(
gp
)

74 
GS
 *
gp
;

76 
TK_PRIVATE
 *
tkp
;

77 
rvÆ
;

80 
rvÆ
 = 
	`tk_ãrm_íd
(
gp
);

82 
tkp
 = 
	`GTKP
(
gp
);

83 
	`F_CLR
(
tkp
, 
TK_SCR_VI_INIT
);

85  (
rvÆ
);

86 
	}
}

	@tk/tk_term.c

10 
	~"c⁄fig.h
"

12 #i‚de‡
löt


13 c⁄° 
	gsccsid
[] = "@(#)tk_term.c 8.12 (Berkeley) 10/13/96";

16 
	~<sys/ty≥s.h
>

17 
	~<sys/queue.h
>

19 
	~<bô°rög.h
>

20 
	~<î∫o.h
>

21 
	~<limôs.h
>

22 
	~<sig«l.h
>

23 
	~<°dio.h
>

24 
	~<°dlib.h
>

25 
	~<°rög.h
>

26 
	~<ãrmios.h
>

27 
	~<uni°d.h
>

29 
	~"../comm⁄/comm⁄.h
"

30 
	~"tki.h
"

39 
	$tk_ãrm_öô
(
•
)

40 
SCR
 *
•
;

42 
SEQ
 *
qp
;

48 
qp
 = 
•
->
gp
->
£qq
.
lh_fú°
; q∞!
NULL
; q∞qp->
q
.
À_√xt
)

49 i‡(
	`F_ISSET
(
qp
, 
SEQ_FUNCMAP
))

50 ()
	`tk_fm≠
(
•
, 
qp
->
°y≥
,

51 
qp
->
öput
, qp->
ûí
, qp->
ouçut
, qp->
ﬁí
);

53 
	}
}

62 
	$tk_ãrm_íd
(
gp
)

63 
GS
 *
gp
;

65 
SEQ
 *
qp
, *
nqp
;

68 
qp
 = 
gp
->
£qq
.
lh_fú°
; q∞!
NULL
; q∞
nqp
) {

69 
nqp
 = 
qp
->
q
.
À_√xt
;

70 i‡(
	`F_ISSET
(
qp
, 
SEQ_SCREEN
))

71 ()
	`£q_mdñ
(
qp
);

74 
	}
}

83 
	$tk_fm≠
(
•
, 
°y≥
, 
‰om
, 
Êí
, 
to
, 
éí
)

84 
SCR
 *
•
;

85 
£q_t
 
°y≥
;

86 
CHAR_T
 *
‰om
, *
to
;

87 
size_t
 
Êí
, 
éí
;

89 
	`VI_INIT_IGNORE
(
•
);

93 
	}
}

102 
	$tk_›tch™ge
(
•
, 
›t
, 
°r
, 
vÆp
)

103 
SCR
 *
•
;

104 
›t
;

105 *
°r
;

106 
u_l⁄g
 *
vÆp
;

108 
›t
) {

109 
O_COLUMNS
:

110 
O_LINES
:

115 
	`F_SET
(
•
->
gp
, 
G_SRESTART
);

116 
	`F_CLR
(
•
, 
SC_SCR_EX
 | 
SC_SCR_VI
);

118 
O_TERM
:

119 
	`msgq
(
•
, 
M_ERR
, "The screenÅype mayÇot be changed");

123 
	}
}

132 
	$tk_ssize
(
•
, 
sigwöch
, 
rowp
, 
cﬁp
, 
ch™gedp
)

133 
SCR
 *
•
;

134 
sigwöch
;

135 
size_t
 *
rowp
, *
cﬁp
;

136 *
ch™gedp
;

138 
TK_PRIVATE
 *
tkp
;

140 
tkp
 = 
	`GTKP
(
__globÆ_li°
);

141 ()
	`T˛_EvÆ
(
tkp
->
öãΩ
, "tk_ssize");

154 i‡(
sigwöch
 && 
•
 !
NULL
 &&

155 
tkp
->
tk_ssize_row
 =
	`O_VAL
(
•
, 
O_LINES
) &&

156 
tkp
->
tk_ssize_cﬁ
 =
	`O_VAL
(
•
, 
O_COLUMNS
)) {

157 i‡(
ch™gedp
 !
NULL
)

158 *
ch™gedp
 = 0;

162 i‡(
rowp
 !
NULL
)

163 *
rowp
 = 
tkp
->
tk_ssize_row
;

164 i‡(
cﬁp
 !
NULL
)

165 *
cﬁp
 = 
tkp
->
tk_ssize_cﬁ
;

166 i‡(
ch™gedp
 !
NULL
)

167 *
ch™gedp
 = 1;

169 
	}
}

	@tk/tk_util.c

10 
	~"c⁄fig.h
"

12 #i‚de‡
löt


13 c⁄° 
	gsccsid
[] = "@(#)tk_util.c 8.14 (Berkeley) 7/19/96";

16 
	~<sys/ty≥s.h
>

17 
	~<sys/queue.h
>

19 
	~<bô°rög.h
>

20 
	~<î∫o.h
>

21 
	~<limôs.h
>

22 
	~<sig«l.h
>

23 
	~<°dio.h
>

24 
	~<°dlib.h
>

25 
	~<°rög.h
>

26 
	~<ãrmios.h
>

27 
	~<uni°d.h
>

29 
	~"../comm⁄/comm⁄.h
"

30 
	~"tki.h
"

32 
tk_›_push
 
__P
((
SCR
 *, 
TK_PRIVATE
 *, 
e_evít_t
));

41 
	$tk_›
(
˛õ¡D©a
, 
öãΩ
, 
¨gc
, 
¨gv
)

42 
Clõ¡D©a
 
˛õ¡D©a
;

43 
T˛_I¡îp
 *
öãΩ
;

44 
¨gc
;

45 *
¨gv
[];

47 
SCR
 *
•
;

48 
TK_PRIVATE
 *
tkp
;

50 
•
 = 
__globÆ_li°
->
dq
.
cqh_fú°
;

51 
tkp
 = (
TK_PRIVATE
 *)
˛õ¡D©a
;

53 
¨gv
[1][0]) {

55 i‡(!
	`°rcmp
(
¨gv
[1], "quit"))

56  (
	`tk_›_push
(
•
, 
tkp
, 
E_QUIT
));

59 i‡(!
	`°rcmp
(
¨gv
[1], "write"))

60  (
	`tk_›_push
(
•
, 
tkp
, 
E_WRITE
));

61 i‡(!
	`°rcmp
(
¨gv
[1], "writequit")) {

62 i‡(
	`tk_›_push
(
•
, 
tkp
, 
E_WRITE
Ë!
TCL_OK
)

63  (
TCL_ERROR
);

64 i‡(
	`tk_›_push
(
•
, 
tkp
, 
E_QUIT
Ë!
TCL_OK
)

65  (
TCL_ERROR
);

66  (
TCL_OK
);

70 ()
	`T˛_V¨EvÆ
(
tkp
->
öãΩ
,

71 "tk_î∏{", 
¨gv
[1], ": unknow¿evít", "}", 
NULL
);

72  (
TCL_OK
);

73 
	}
}

80 
	$tk_›_push
(
•
, 
tkp
, 
ë
)

81 
SCR
 *
•
;

82 
TK_PRIVATE
 *
tkp
;

83 
e_evít_t
 
ë
;

85 
EVENT
 *
evp
;

87 
	`CALLOC
(
•
, 
evp
, 
EVENT
 *, 1, (EVENT));

88 i‡(
evp
 =
NULL
)

89  (
TCL_ERROR
);

91 
evp
->
e_evít
 = 
ë
;

92 
	`TAILQ_INSERT_TAIL
(&
tkp
->
evq
, 
evp
, 
q
);

93  (
TCL_OK
);

94 
	}
}

103 
	$tk_›t_öô
(
˛õ¡D©a
, 
öãΩ
, 
¨gc
, 
¨gv
)

104 
Clõ¡D©a
 
˛õ¡D©a
;

105 
T˛_I¡îp
 *
öãΩ
;

106 
¨gc
;

107 *
¨gv
[];

109 
OPTLIST
 c⁄° *
›
;

110 
SCR
 *
•
;

111 
TK_PRIVATE
 *
tkp
;

112 
off
;

113 
buf
[20];

115 
•
 = 
__globÆ_li°
->
dq
.
cqh_fú°
;

117 
tkp
 = (
TK_PRIVATE
 *)
˛õ¡D©a
;

118 
›
 = 
›éi°
, 
off
 = 0; op->
«me
 !
NULL
; ++op, ++off) {

119 i‡(
	`F_ISSET
(
›
, 
OPT_NDISP
))

121 
›
->
ty≥
) {

122 
OPT_0BOOL
:

123 
OPT_1BOOL
:

124 ()
	`T˛_V¨EvÆ
(
tkp
->
öãΩ
, "setÅko_",

125 
›
->
«me
, 
	`O_ISSET
(
•
, 
off
Ë? " 1" : " 0", 
NULL
);

127 
OPT_NUM
:

128 ()
	`¢¥ötf
(
buf
,

129 (
buf
), " %lu", 
	`O_VAL
(
•
, 
off
));

130 ()
	`T˛_V¨EvÆ
(
tkp
->
öãΩ
,

131 "£àtko_", 
›
->
«me
, 
buf
, 
NULL
);

133 
OPT_STR
:

134 ()
	`T˛_V¨EvÆ
(
tkp
->
öãΩ
,

135 "£àtko_", 
›
->
«me
, " {",

136 
	`O_STR
(
•
, 
off
Ë=
NULL
 ? "" : O_STR(sp, off),

137 "}", 
NULL
);

141  (
TCL_OK
);

142 
	}
}

151 
	$tk_›t_£t
(
˛õ¡D©a
, 
öãΩ
, 
¨gc
, 
¨gv
)

152 
Clõ¡D©a
 
˛õ¡D©a
;

153 
T˛_I¡îp
 *
öãΩ
;

154 
¨gc
;

155 *
¨gv
[];

157 
ARGS
 *
≠
[2], 
a
, 
b
;

158 
GS
 *
gp
;

159 
SCR
 *
•
;

160 
rvÆ
;

161 (*
msg
Ë
	`__P
((
SCR
 *, 
mty≥_t
, *, 
size_t
));

162 
buf
[64];

164 
gp
 = 
__globÆ_li°
;

165 
•
 = 
gp
->
dq
.
cqh_fú°
;

167 
¨gc
) {

169 
a
.
bp
 = 
¨gv
[1] + (("tko_") - 1);

170 
a
.
Àn
 = 
	`°æí
◊.
bp
);

173 
a
.
bp
 = 
buf
;

174 
a
.
Àn
 = 
	`¢¥ötf
(
buf
, (buf),

175 "%s%s", 
	`©oi
(
¨gv
[2]) ? "no" : "",árgv[1]);

178 
	`ab‹t
();

180 
b
.
bp
 = 
NULL
;

181 
b
.
Àn
 = 0;

182 
≠
[0] = &
a
;

183 
≠
[1] = &
b
;

186 
msg
 = 
gp
->
s¸_msg
;

187 
gp
->
s¸_msg
 = 
tk_msg
;

189 
rvÆ
 = 
	`›ts_£t
(
•
, 
≠
, 
NULL
);

191 
gp
->
s¸_msg
 = 
msg
;

192  (
rvÆ
 ? 
TCL_ERROR
 : 
TCL_OK
);

193 
	}
}

202 
	$tk_vîsi⁄
(
˛õ¡D©a
, 
öãΩ
, 
¨gc
, 
¨gv
)

203 
Clõ¡D©a
 
˛õ¡D©a
;

204 
T˛_I¡îp
 *
öãΩ
;

205 
¨gc
;

206 *
¨gv
[];

208 
EXCMD
 
cmd
;

209 
GS
 *
gp
;

210 
SCR
 *
•
;

211 
rvÆ
;

212 (*
msg
Ë
	`__P
((
SCR
 *, 
mty≥_t
, *, 
size_t
));

214 
gp
 = 
__globÆ_li°
;

215 
•
 = 
gp
->
dq
.
cqh_fú°
;

217 
msg
 = 
gp
->
s¸_msg
;

218 
gp
->
s¸_msg
 = 
tk_msg
;

220 
	`ex_cöô
(&
cmd
, 
C_VERSION
, 0, 
OOBLNO
, OOBLNO, 0, 
NULL
);

221 
rvÆ
 = 
cmd
.cmd->
	`‚
(
•
, &cmd);

222 ()
	`ex_fÊush
(
•
);

224 
gp
->
s¸_msg
 = 
msg
;

225  (
rvÆ
 ? 
TCL_ERROR
 : 
TCL_OK
);

226 
	}
}

235 
	$tk_msg
(
•
, 
mty≥
, 
löe
, 
æí
)

236 
SCR
 *
•
;

237 
mty≥_t
 
mty≥
;

238 *
löe
;

239 
size_t
 
æí
;

241 
TK_PRIVATE
 *
tkp
;

242 
buf
[2048];

244 i‡(
löe
 =
NULL
)

247 
tkp
 = 
	`TKP
(
•
);

248 ()
	`¢¥ötf
(
buf
, (buf), "%.*s", ()
æí
, 
löe
);

249 ()
	`T˛_V¨EvÆ
(
tkp
->
öãΩ
, "tk_î∏{", 
buf
, "}", 
NULL
);

250 
	}
}

	@tk/tki.h

12 
	~<t˛.h
>

13 
	~<tk.h
>

15 
	s_tk_¥iv©e
 {

16 
T˛_I¡îp
 *
	möãΩ
;

19 
	mtk_curs‹_row
;

20 
	mtk_curs‹_cﬁ
;

21 
	mtk_ssize_row
;

22 
	mtk_ssize_cﬁ
;

24 
ãrmios
 
	m‹ig
;

26 
CHAR_T
 
	mibuf
[64];

27 
	mibuf_˙t
;

30 
TAILQ_HEAD
(
_evíth
, 
_evít
Ë
	mevq
;

32 
	mkûÀrsig
;

33 
	#INDX_HUP
 0

	)

34 
	#INDX_INT
 1

	)

35 
	#INDX_TERM
 2

	)

36 
	#INDX_WINCH
 3

	)

37 
	#INDX_MAX
 4

	)

38 
siga˘i⁄
 
	mﬂ˘
[
INDX_MAX
];

40 
	#TK_LLINE_IV
 0x0001

	)

41 
	#TK_SCR_VI_INIT
 0x0002

	)

42 
	#TK_SIGHUP
 0x0004

	)

43 
	#TK_SIGINT
 0x0008

	)

44 
	#TK_SIGTERM
 0x0010

	)

45 
	#TK_SIGWINCH
 0x0020

	)

46 
u_öt16_t
 
	mÊags
;

47 } 
	tTK_PRIVATE
;

49 
GS
 *
__globÆ_li°
;

50 
	#TKP
(
•
Ë((
TK_PRIVATE
 *)((•)->
gp
->
tk_¥iv©e
))

	)

51 
	#GTKP
(
gp
Ë((
TK_PRIVATE
 *)gp->
tk_¥iv©e
)

	)

54 íum { 
	mINP_OK
=0, 
	mINP_EOF
, 
	mINP_ERR
, 
	mINP_INTR
, 
	mINP_TIMEOUT
 } 
	töput_t
;

57 
	#RLNO
(
•
, 
 o
Ë(•)->
woff
 + ( o)

	)

60 
	#VI_INIT_IGNORE
(
•
) \

61 i‡(
	`F_ISSET
(
•
, 
SC_VI
Ë&& !F_ISSET(
	`TKP
(•), 
TK_SCR_VI_INIT
)) \

62  (0);

	)

64 
	~"tk_exã∫.h
"

	@vi/getc.c

10 
	~"c⁄fig.h
"

12 #i‚de‡
löt


13 c⁄° 
	gsccsid
[] = "@(#)getc.c 10.10 (Berkeley) 3/6/96";

16 
	~<sys/ty≥s.h
>

17 
	~<sys/queue.h
>

18 
	~<sys/time.h
>

20 
	~<bô°rög.h
>

21 
	~<˘y≥.h
>

22 
	~<limôs.h
>

23 
	~<°dio.h
>

24 
	~<°dlib.h
>

26 
	~"../comm⁄/comm⁄.h
"

27 
	~"vi.h
"

46 
	$cs_öô
(
•
, 
c•
)

47 
SCR
 *
•
;

48 
VCS
 *
c•
;

50 
i£m±y
;

52 i‡(
	`db_egë
(
•
, 
c•
->
cs_ o
, &c•->
cs_bp
, &c•->
cs_Àn
, &
i£m±y
)) {

53 i‡(
i£m±y
)

54 
	`msgq
(
•
, 
M_BERR
, "177|Empty file");

57 i‡(
c•
->
cs_Àn
 =0 || 
	`v_i£m±y
(c•->
cs_bp
, csp->cs_len)) {

58 
c•
->
cs_˙o
 = 0;

59 
c•
->
cs_Êags
 = 
CS_EMP
;

61 
c•
->
cs_Êags
 = 0;

62 
c•
->
cs_ch
 = c•->
cs_bp
[c•->
cs_˙o
];

65 
	}
}

74 
	$cs_√xt
(
•
, 
c•
)

75 
SCR
 *
•
;

76 
VCS
 *
c•
;

78 *
p
;

80 
c•
->
cs_Êags
) {

81 
CS_EMP
:

82 
CS_EOL
:

83 i‡(
	`db_gë
(
•
, ++
c•
->
cs_ o
, 0, &
p
, &c•->
cs_Àn
)) {

84 --
c•
->
cs_ o
;

85 
c•
->
cs_Êags
 = 
CS_EOF
;

87 
c•
->
cs_bp
 = 
p
;

88 i‡(
c•
->
cs_Àn
 == 0 ||

89 
	`v_i£m±y
(
c•
->
cs_bp
, c•->
cs_Àn
)) {

90 
c•
->
cs_˙o
 = 0;

91 
c•
->
cs_Êags
 = 
CS_EMP
;

93 
c•
->
cs_Êags
 = 0;

94 
c•
->
cs_ch
 = c•->
cs_bp
[c•->
cs_˙o
 = 0];

99 i‡(
c•
->
cs_˙o
 =c•->
cs_Àn
 - 1)

100 
c•
->
cs_Êags
 = 
CS_EOL
;

102 
c•
->
cs_ch
 = c•->
cs_bp
[++c•->
cs_˙o
];

104 
CS_EOF
:

107 
	`ab‹t
();

111 
	}
}

126 
	$cs_f•a˚
(
•
, 
c•
)

127 
SCR
 *
•
;

128 
VCS
 *
c•
;

130 i‡(
c•
->
cs_Êags
 !0 || !
	`isbœnk
(c•->
cs_ch
))

133 i‡(
	`cs_√xt
(
•
, 
c•
))

135 i‡(
c•
->
cs_Êags
 !0 || !
	`isbœnk
(c•->
cs_ch
))

139 
	}
}

148 
	$cs_fbœnk
(
•
, 
c•
)

149 
SCR
 *
•
;

150 
VCS
 *
c•
;

153 i‡(
	`cs_√xt
(
•
, 
c•
))

155 i‡(
c•
->
cs_Êags
 =
CS_EOL
 || c•->cs_Êag†=
CS_EMP
 ||

156 
c•
->
cs_Êags
 =0 && 
	`isbœnk
(c•->
cs_ch
))

161 
	}
}

170 
	$cs_¥ev
(
•
, 
c•
)

171 
SCR
 *
•
;

172 
VCS
 *
c•
;

174 
c•
->
cs_Êags
) {

175 
CS_EMP
:

176 
CS_EOL
:

177 i‡(
c•
->
cs_ o
 == 1) {

178 
c•
->
cs_Êags
 = 
CS_SOF
;

181 i‡(
	`db_gë
(
•
,

182 --
c•
->
cs_ o
, 
DBG_FATAL
, &c•->
cs_bp
, &c•->
cs_Àn
)) {

183 ++
c•
->
cs_ o
;

186 i‡(
c•
->
cs_Àn
 =0 || 
	`v_i£m±y
(c•->
cs_bp
, csp->cs_len)) {

187 
c•
->
cs_˙o
 = 0;

188 
c•
->
cs_Êags
 = 
CS_EMP
;

190 
c•
->
cs_Êags
 = 0;

191 
c•
->
cs_˙o
 = c•->
cs_Àn
 - 1;

192 
c•
->
cs_ch
 = c•->
cs_bp
[c•->
cs_˙o
];

195 
CS_EOF
:

197 i‡(
c•
->
cs_˙o
 == 0)

198 i‡(
c•
->
cs_ o
 == 1)

199 
c•
->
cs_Êags
 = 
CS_SOF
;

201 
c•
->
cs_Êags
 = 
CS_EOL
;

203 
c•
->
cs_ch
 = c•->
cs_bp
[--c•->
cs_˙o
];

205 
CS_SOF
:

208 
	`ab‹t
();

212 
	}
}

221 
	$cs_bbœnk
(
•
, 
c•
)

222 
SCR
 *
•
;

223 
VCS
 *
c•
;

226 i‡(
	`cs_¥ev
(
•
, 
c•
))

228 i‡(
c•
->
cs_Êags
 =
CS_EOL
 || c•->cs_Êag†=
CS_EMP
 ||

229 
c•
->
cs_Êags
 =0 && 
	`isbœnk
(c•->
cs_ch
))

234 
	}
}

	@vi/v_at.c

10 
	~"c⁄fig.h
"

12 #i‚de‡
löt


13 c⁄° 
	gsccsid
[] = "@(#)v_at.c 10.8 (Berkeley) 4/27/96";

16 
	~<sys/ty≥s.h
>

17 
	~<sys/queue.h
>

18 
	~<sys/time.h
>

20 
	~<bô°rög.h
>

21 
	~<˘y≥.h
>

22 
	~<limôs.h
>

23 
	~<°dio.h
>

25 
	~"../comm⁄/comm⁄.h
"

26 
	~"vi.h
"

35 
	$v_©
(
•
, 
vp
)

36 
SCR
 *
•
;

37 
VICMD
 *
vp
;

39 
CB
 *
cbp
;

40 
CHAR_T
 
«me
;

41 
TEXT
 *
ç
;

42 
size_t
 
Àn
;

43 
nbuf
[20];

55 
«me
 = 
	`F_ISSET
(
vp
, 
VC_BUFFER
Ë? vp->
buf„r
 : '@';

56 i‡(
«me
 == '@' ||Çame == '*') {

57 i‡(!
	`F_ISSET
(
•
, 
SC_AT_SET
)) {

58 
	`ex_emsg
(
•
, 
NULL
, 
EXM_NOPREVBUF
);

61 
«me
 = 
•
->
©_lbuf
;

63 
	`F_SET
(
•
, 
SC_AT_SET
);

65 
	`CBNAME
(
•
, 
cbp
, 
«me
);

66 i‡(
cbp
 =
NULL
) {

67 
	`ex_emsg
(
•
, 
	`KEY_NAME
(•, 
«me
), 
EXM_EMPTYBUF
);

72 
•
->
©_lbuf
 = 
«me
;

90 
ç
 = 
cbp
->
ãxtq
.
cqh_œ°
;

91 
ç
 !(*)&
cbp
->
ãxtq
;Å∞ç->
q
.
cqe_¥ev
)

92 i‡((
	`F_ISSET
(
cbp
, 
CB_LMODE
) ||

93 
ç
->
q
.
cqe_√xt
 !(*)&
cbp
->
ãxtq
) &&

94 
	`v_evít_push
(
•
, 
NULL
, "\n", 1, 0) ||

95 
	`v_evít_push
(
•
, 
NULL
, 
ç
->
lb
,Åp->
Àn
, 0))

103 i‡(
	`F_ISSET
(
vp
, 
VC_C1SET
)) {

104 
Àn
 = 
	`¢¥ötf
(
nbuf
, “buf), "%lu", 
vp
->
cou¡
);

105 i‡(
	`v_evít_push
(
•
, 
NULL
, 
nbuf
, 
Àn
, 0))

109 
	}
}

	@vi/v_ch.c

10 
	~"c⁄fig.h
"

12 #i‚de‡
löt


13 c⁄° 
	gsccsid
[] = "@(#)v_ch.c 10.8 (Berkeley) 3/6/96";

16 
	~<sys/ty≥s.h
>

17 
	~<sys/queue.h
>

18 
	~<sys/time.h
>

20 
	~<bô°rög.h
>

21 
	~<limôs.h
>

22 
	~<°dio.h
>

23 
	~<°dlib.h
>

25 
	~"../comm⁄/comm⁄.h
"

26 
	~"vi.h
"

28 
nŸfound
 
__P
((
SCR
 *, 
ARG_CHAR_T
));

29 
n›ªv
 
__P
((
SCR
 *));

38 
	$v_chª≥©
(
•
, 
vp
)

39 
SCR
 *
•
;

40 
VICMD
 *
vp
;

42 
vp
->
ch¨a˘î
 = 
	`VIP
(
•
)->
œ°ckey
;

44 
	`VIP
(
•
)->
c£¨chdú
) {

45 
CNOTSET
:

46 
	`n›ªv
(
•
);

48 
FSEARCH
:

49  (
	`v_chF
(
•
, 
vp
));

50 
fSEARCH
:

51  (
	`v_chf
(
•
, 
vp
));

52 
TSEARCH
:

53  (
	`v_chT
(
•
, 
vp
));

54 
tSEARCH
:

55  (
	`v_cht
(
•
, 
vp
));

57 
	`ab‹t
();

60 
	}
}

69 
	$v_chºïót
(
•
, 
vp
)

70 
SCR
 *
•
;

71 
VICMD
 *
vp
;

73 
cdú_t
 
ßvedú
;

74 
rvÆ
;

76 
vp
->
ch¨a˘î
 = 
	`VIP
(
•
)->
œ°ckey
;

77 
ßvedú
 = 
	`VIP
(
•
)->
c£¨chdú
;

79 
	`VIP
(
•
)->
c£¨chdú
) {

80 
CNOTSET
:

81 
	`n›ªv
(
•
);

83 
FSEARCH
:

84 
rvÆ
 = 
	`v_chf
(
•
, 
vp
);

86 
fSEARCH
:

87 
rvÆ
 = 
	`v_chF
(
•
, 
vp
);

89 
TSEARCH
:

90 
rvÆ
 = 
	`v_cht
(
•
, 
vp
);

92 
tSEARCH
:

93 
rvÆ
 = 
	`v_chT
(
•
, 
vp
);

96 
	`ab‹t
();

98 
	`VIP
(
•
)->
c£¨chdú
 = 
ßvedú
;

99  (
rvÆ
);

100 
	}
}

110 
	$v_cht
(
•
, 
vp
)

111 
SCR
 *
•
;

112 
VICMD
 *
vp
;

114 i‡(
	`v_chf
(
•
, 
vp
))

122 --
vp
->
m_°›
.
˙o
;

128 i‡(!
	`ISMOTION
(
vp
))

129 
vp
->
m_föÆ
 = vp->
m_°›
;

131 
	`VIP
(
•
)->
c£¨chdú
 = 
tSEARCH
;

133 
	}
}

143 
	$v_chf
(
•
, 
vp
)

144 
SCR
 *
•
;

145 
VICMD
 *
vp
;

147 
size_t
 
Àn
;

148 
u_l⁄g
 
˙t
;

149 
i£m±y
, 
key
;

150 *
ídp
, *
p
, *
°¨ç
;

157 
key
 = 
vp
->
ch¨a˘î
;

158 i‡(!
	`F_ISSET
(
vp
, 
VC_ISDOT
))

159 
	`VIP
(
•
)->
œ°ckey
 = 
key
;

160 
	`VIP
(
•
)->
c£¨chdú
 = 
fSEARCH
;

162 i‡(
	`db_egë
(
•
, 
vp
->
m_°¨t
.
 o
, &
p
, &
Àn
, &
i£m±y
)) {

163 i‡(
i£m±y
)

164 
em±y
;

168 i‡(
Àn
 == 0) {

169 
em±y
: 
	`nŸfound
(
•
, 
key
);

173 
ídp
 = (
°¨ç
 = 
p
Ë+ 
Àn
;

174 
p
 +
vp
->
m_°¨t
.
˙o
;

175 
˙t
 = 
	`F_ISSET
(
vp
, 
VC_C1SET
Ë? vp->
cou¡
 : 1; cnt--;) {

176 ++
p
 < 
ídp
 && *∞!
key
);

177 i‡(
p
 =
ídp
) {

178 
	`nŸfound
(
•
, 
key
);

183 
vp
->
m_°›
.
˙o
 = 
p
 - 
°¨ç
;

189 
vp
->
m_föÆ
 = 
	`ISMOTION
(vpË? vp->
m_°¨t
 : vp->
m_°›
;

191 
	}
}

201 
	$v_chT
(
•
, 
vp
)

202 
SCR
 *
•
;

203 
VICMD
 *
vp
;

205 i‡(
	`v_chF
(
•
, 
vp
))

213 ++
vp
->
m_°›
.
˙o
;

214 
vp
->
m_föÆ
 = vp->
m_°›
;

216 
	`VIP
(
•
)->
c£¨chdú
 = 
TSEARCH
;

218 
	}
}

228 
	$v_chF
(
•
, 
vp
)

229 
SCR
 *
•
;

230 
VICMD
 *
vp
;

232 
size_t
 
Àn
;

233 
u_l⁄g
 
˙t
;

234 
i£m±y
, 
key
;

235 *
ídp
, *
p
;

243 
key
 = 
vp
->
ch¨a˘î
;

244 i‡(!
	`F_ISSET
(
vp
, 
VC_ISDOT
))

245 
	`VIP
(
•
)->
œ°ckey
 = 
key
;

246 
	`VIP
(
•
)->
c£¨chdú
 = 
FSEARCH
;

248 i‡(
	`db_egë
(
•
, 
vp
->
m_°¨t
.
 o
, &
p
, &
Àn
, &
i£m±y
)) {

249 i‡(
i£m±y
)

250 
em±y
;

254 i‡(
Àn
 == 0) {

255 
em±y
: 
	`nŸfound
(
•
, 
key
);

259 
ídp
 = 
p
 - 1;

260 
p
 +
vp
->
m_°¨t
.
˙o
;

261 
˙t
 = 
	`F_ISSET
(
vp
, 
VC_C1SET
Ë? vp->
cou¡
 : 1; cnt--;) {

262 --
p
 > 
ídp
 && *∞!
key
);

263 i‡(
p
 =
ídp
) {

264 
	`nŸfound
(
•
, 
key
);

269 
vp
->
m_°›
.
˙o
 = (
p
 - 
ídp
) - 1;

276 
vp
->
m_föÆ
 = vp->
m_°›
;

277 i‡(
	`ISMOTION
(
vp
))

278 --
vp
->
m_°¨t
.
˙o
;

280 
	}
}

283 
	$n›ªv
(
•
)

284 
SCR
 *
•
;

286 
	`msgq
(
•
, 
M_BERR
, "178|NoÖrevious F, f, T orÅ search");

287 
	}
}

290 
	$nŸfound
(
•
, 
ch
)

291 
SCR
 *
•
;

292 
ARG_CHAR_T
 
ch
;

294 
	`msgq
(
•
, 
M_BERR
, "179|%†nŸ found", 
	`KEY_NAME
(•, 
ch
));

295 
	}
}

	@vi/v_cmd.c

10 
	~"c⁄fig.h
"

12 #i‚de‡
löt


13 c⁄° 
	gsccsid
[] = "@(#)v_cmd.c 10.9 (Berkeley) 3/28/96";

16 
	~<sys/ty≥s.h
>

17 
	~<sys/queue.h
>

18 
	~<sys/time.h
>

20 
	~<bô°rög.h
>

21 
	~<limôs.h
>

22 
	~<°dio.h
>

24 
	~"../comm⁄/comm⁄.h
"

25 
	~"vi.h
"

31 
VIKEYS
 c⁄° 
	gvikeys
 [
MAXVIKEY
 + 1] = {

33 {
NULL
},

35 {
v_£¨chw
, 
V_ABS
|
V_CNT
|
V_MOVE
|
V_KEYW
|
VM_CUTREQ
|
VM_RCM_SET
,

39 {
v_∑geup
, 
V_CNT
|
VM_RCM_SET
,

43 {
NULL
, 0,

47 {
v_h∑gedown
, 
V_CNT
|
VM_RCM_SET
,

51 {
v_löedown
, 
V_CNT
,

55 {
v_∑gedown
, 
V_CNT
|
VM_RCM_SET
,

59 {
v_°©us
, 0,

63 {
v_À·
, 
V_CNT
|
V_MOVE
|
VM_RCM_SET
,

67 {
NULL
},

69 {
v_down
, 
V_CNT
|
V_MOVE
|
VM_LMODE
|
VM_RCM
,

73 {
NULL
},

75 {
v_ªdøw
, 0,

79 {
v_¸
, 
V_CNT
|
V_MOVE
|
VM_LMODE
|
VM_RCM_SETFNB
,

83 {
v_down
, 
V_CNT
|
V_MOVE
|
VM_LMODE
|
VM_RCM
,

87 {
NULL
},

89 {
v_up
, 
V_CNT
|
V_MOVE
|
VM_LMODE
|
VM_RCM
,

93 {
NULL
},

95 {
v_ªdøw
, 0,

99 {
NULL
},

101 {
v_ègp›
, 
V_ABS
|
VM_RCM_SET
,

105 {
v_h∑geup
, 
V_CNT
|
VM_RCM_SET
,

109 {
NULL
, 0,

113 {
v_s¸ìn
, 0,

117 {
NULL
},

119 {
v_löeup
, 
V_CNT
,

123 {
v_su•íd
, 
V_SECURE
,

127 {
NULL
, 0,

131 {
v_exmode
, 0,

135 {
v_ègpush
, 
V_ABS
|
V_KEYW
|
VM_RCM_SET
,

139 {
v_swôch
, 0,

143 {
NULL
},

145 {
v_right
, 
V_CNT
|
V_MOVE
|
VM_RCM_SET
,

149 {
v_fûãr
, 
V_CNT
|
V_DOT
|
V_MOTION
|
V_SECURE
|
VM_RCM_SET
,

153 {
NULL
},

155 {
v_ö¸emít
, 
V_CHAR
|
V_CNT
|
V_DOT
|
VM_RCM_SET
,

159 {
v_dﬁœr
, 
V_CNT
|
V_MOVE
|
VM_RCM_SETLAST
,

163 {
v_m©ch
, 
V_ABS
|
V_CNT
|
V_MOVE
|
VM_CUTREQ
|
VM_RCM_SET
,

167 {
v_agaö
, 0,

171 {
v_fm¨k
, 
V_ABS_L
|
V_CHAR
|
V_MOVE
|
VM_LMODE
|
VM_RCM_SET
,

175 {
v_£¡í˚b
, 
V_ABS
|
V_CNT
|
V_MOVE
|
VM_CUTREQ
|
VM_RCM_SET
,

179 {
v_£¡í˚f
, 
V_ABS
|
V_CNT
|
V_MOVE
|
VM_CUTREQ
|
VM_RCM_SET
,

183 {
NULL
},

185 {
v_down
, 
V_CNT
|
V_MOVE
|
VM_LMODE
|
VM_RCM_SETFNB
,

189 {
v_chºïót
, 
V_CNT
|
V_MOVE
|
VM_RCM_SET
,

193 {
v_up
, 
V_CNT
|
V_MOVE
|
VM_LMODE
|
VM_RCM_SETFNB
,

197 {
NULL
, 0,

201 {
v_£¨chf
, 
V_ABS_C
|
V_MOVE
|
VM_CUTREQ
|
VM_RCM_SET
,

205 {
v_zîo
, 
V_MOVE
|
VM_RCM_SET
,

209 {
NULL
},

211 {
NULL
},

213 {
NULL
},

215 {
NULL
},

217 {
NULL
},

219 {
NULL
},

221 {
NULL
},

223 {
NULL
},

225 {
NULL
},

227 {
v_ex
, 0,

231 {
v_chª≥©
, 
V_CNT
|
V_MOVE
|
VM_RCM_SET
,

235 {
v_shi·l
, 
V_CNT
|
V_DOT
|
V_MOTION
|
VM_RCM_SET
,

239 {
NULL
},

241 {
v_shi·r
, 
V_CNT
|
V_DOT
|
V_MOTION
|
VM_RCM_SET
,

245 {
v_£¨chb
, 
V_ABS_C
|
V_MOVE
|
VM_CUTREQ
|
VM_RCM_SET
,

249 {
v_©
, 
V_CNT
|
V_RBUF
|
VM_RCM_SET
,

253 {
v_iA
, 
V_CNT
|
V_DOT
|
VM_RCM_SET
,

257 {
v_w‹dB
, 
V_CNT
|
V_MOVE
|
VM_RCM_SET
,

261 {
NULL
, 0,

265 {
NULL
, 0,

269 {
v_w‹dE
, 
V_CNT
|
V_MOVE
|
VM_RCM_SET
,

273 {
v_chF
, 
V_CHAR
|
V_CNT
|
V_MOVE
|
VM_RCM_SET
,

277 {
v_lgŸo
, 
V_ABS_L
|
V_CNT
|
V_MOVE
|
VM_LMODE
|
VM_RCM_SETFNB
,

281 {
v_home
, 
V_ABS_L
|
V_CNT
|
V_MOVE
|
VM_LMODE
|
VM_RCM_SETNNB
,

285 {
v_iI
, 
V_CNT
|
V_DOT
|
VM_RCM_SET
,

289 {
v_joö
, 
V_CNT
|
V_DOT
|
VM_RCM_SET
,

293 {
NULL
},

295 {
v_bŸtom
, 
V_ABS_L
|
V_CNT
|
V_MOVE
|
VM_LMODE
|
VM_RCM_SETNNB
,

299 {
v_middÀ
, 
V_ABS_L
|
V_CNT
|
V_MOVE
|
VM_LMODE
|
VM_RCM_SETNNB
,

303 {
v_£¨chN
, 
V_ABS_C
|
V_MOVE
|
VM_CUTREQ
|
VM_RCM_SET
,

307 {
v_iO
, 
V_CNT
|
V_DOT
|
VM_RCM_SET
,

311 {
v_Put
, 
V_CNT
|
V_DOT
|
V_OBUF
|
VM_RCM_SET
,

315 {
v_exmode
, 0,

319 {
v_Rïœ˚
, 
V_CNT
|
V_DOT
|
VM_RCM_SET
,

323 {
NULL
, 0,

327 {
v_chT
, 
V_CHAR
|
V_CNT
|
V_MOVE
|
VM_RCM_SET
,

331 {
v_Undo
, 
VM_RCM_SET
,

335 {
NULL
},

337 {
v_w‹dW
, 
V_CNT
|
V_MOVE
|
VM_RCM_SET
,

341 {
v_Xch¨
, 
V_CNT
|
V_DOT
|
V_OBUF
|
VM_RCM_SET
,

345 {
NULL
, 0,

349 {
v_zexô
, 0,

353 {
v_£˘i⁄b
, 
V_ABS
|
V_CNT
|
V_MOVE
|
VM_RCM_SET
,

357 {
NULL
},

359 {
v_£˘i⁄f
, 
V_ABS
|
V_CNT
|
V_MOVE
|
VM_RCM_SET
,

368 {
v_fú°
, 
V_CNT
|
V_MOVE
|
VM_RCM_SET
,

376 {
v_cfú°
, 
V_CNT
|
V_MOVE
|
VM_RCM_SETFNB
,

380 {
v_bm¨k
, 
V_ABS_C
|
V_CHAR
|
V_MOVE
|
VM_CUTREQ
|
VM_RCM_SET
,

384 {
v_ü
, 
V_CNT
|
V_DOT
|
VM_RCM_SET
,

388 {
v_w‹db
, 
V_CNT
|
V_MOVE
|
VM_RCM_SET
,

392 {
v_ch™ge
, 
V_CNT
|
V_DOT
|
V_MOTION
|
V_OBUF
|
VM_RCM_SET
,

396 {
v_dñëe
, 
V_CNT
|
V_DOT
|
V_MOTION
|
V_OBUF
|
VM_RCM_SET
,

400 {
v_w‹de
, 
V_CNT
|
V_MOVE
|
VM_RCM_SET
,

404 {
v_chf
, 
V_CHAR
|
V_CNT
|
V_MOVE
|
VM_RCM_SET
,

408 {
NULL
},

410 {
v_À·
, 
V_CNT
|
V_MOVE
|
VM_RCM_SET
,

414 {
v_ii
, 
V_CNT
|
V_DOT
|
VM_RCM_SET
,

418 {
v_down
, 
V_CNT
|
V_MOVE
|
VM_LMODE
|
VM_RCM
,

422 {
v_up
, 
V_CNT
|
V_MOVE
|
VM_LMODE
|
VM_RCM
,

426 {
v_right
, 
V_CNT
|
V_MOVE
|
VM_RCM_SET
,

430 {
v_m¨k
, 
V_CHAR
,

434 {
v_£¨chn
, 
V_ABS_C
|
V_MOVE
|
VM_CUTREQ
|
VM_RCM_SET
,

438 {
v_io
, 
V_CNT
|
V_DOT
|
VM_RCM_SET
,

442 {
v_put
, 
V_CNT
|
V_DOT
|
V_OBUF
|
VM_RCM_SET
,

446 {
NULL
},

448 {
v_ª∂a˚
, 
V_CNT
|
V_DOT
|
VM_RCM_SET
,

452 {
v_sub°
, 
V_CNT
|
V_DOT
|
V_OBUF
|
VM_RCM_SET
,

456 {
v_cht
, 
V_CHAR
|
V_CNT
|
V_MOVE
|
VM_RCM_SET
,

464 {
v_undo
, 
VM_RCM_SET
,

468 {
NULL
},

470 {
v_w‹dw
, 
V_CNT
|
V_MOVE
|
VM_RCM_SET
,

474 {
v_xch¨
, 
V_CNT
|
V_DOT
|
V_OBUF
|
VM_RCM_SET
,

478 {
v_y™k
, 
V_CNT
|
V_DOT
|
V_MOTION
|
V_OBUF
|
VM_RCM_SET
,

486 {
v_z
, 
V_ABS_L
|
V_CNT
|
VM_RCM_SETFNB
,

490 {
v_∑øgøphb
, 
V_ABS
|
V_CNT
|
V_MOVE
|
VM_CUTREQ
|
VM_RCM_SET
,

494 {
v_ncﬁ
, 
V_CNT
|
V_MOVE
|
VM_RCM_SET
,

498 {
v_∑øgøphf
, 
V_ABS
|
V_CNT
|
V_MOVE
|
VM_CUTREQ
|
VM_RCM_SET
,

502 {
v_ulˇ£
, 
V_CNT
|
V_DOT
|
VM_RCM_SET
,

	@vi/v_delete.c

10 
	~"c⁄fig.h
"

12 #i‚de‡
löt


13 c⁄° 
	gsccsid
[] = "@(#)v_delete.c 10.9 (Berkeley) 10/23/96";

16 
	~<sys/ty≥s.h
>

17 
	~<sys/queue.h
>

18 
	~<sys/time.h
>

20 
	~<bô°rög.h
>

21 
	~<limôs.h
>

22 
	~<°dio.h
>

24 
	~"../comm⁄/comm⁄.h
"

25 
	~"vi.h
"

35 
	$v_dñëe
(
•
, 
vp
)

36 
SCR
 *
•
;

37 
VICMD
 *
vp
;

39 
ª˙o_t
 
∆öes
;

40 
size_t
 
Àn
;

41 
lmode
;

43 
lmode
 = 
	`F_ISSET
(
vp
, 
VM_LMODE
Ë? 
CUT_LINEMODE
 : 0;

46 i‡(
	`cut
(
•
, 
	`F_ISSET
(
vp
, 
VC_BUFFER
Ë? &vp->
buf„r
 : 
NULL
,

47 &
vp
->
m_°¨t
, &vp->
m_°›
,

48 
lmode
 | (
	`F_ISSET
(
vp
, 
VM_CUTREQ
Ë? 
CUT_NUMREQ
 : 
CUT_NUMOPT
)))

52 i‡(
	`dñ
(
•
, &
vp
->
m_°¨t
, &vp->
m_°›
, 
lmode
))

59 i‡(!
	`db_exi°
(
•
, 
vp
->
m_föÆ
.
 o
 + 1)) {

60 i‡(
	`db_œ°
(
•
, &
∆öes
))

62 i‡(
∆öes
 == 0) {

63 
vp
->
m_föÆ
.
 o
 = 1;

64 
vp
->
m_föÆ
.
˙o
 = 0;

74 i‡(
	`db_gë
(
•
, 
vp
->
m_föÆ
.
 o
, 0, 
NULL
, &
Àn
)) {

75 i‡(
	`db_gë
(
•
, 
∆öes
, 
DBG_FATAL
, 
NULL
, &
Àn
))

77 
vp
->
m_föÆ
.
 o
 = 
∆öes
;

88 i‡(!
	`F_ISSET
(
vp
, 
VM_LMODE
)) {

89 
	`F_CLR
(
vp
, 
VM_RCM_MASK
);

90 
	`F_SET
(
vp
, 
VM_RCM_SET
);

93 i‡(
vp
->
m_föÆ
.
˙o
 >
Àn
)

94 
vp
->
m_föÆ
.
˙o
 = 
Àn
 ?Üen - 1 : 0;

102 i‡(
	`F_ISSET
(
vp
, 
VM_LDOUBLE
)) {

103 
	`F_CLR
(
vp
, 
VM_RCM_MASK
);

104 
	`F_SET
(
vp
, 
VM_RCM_SETFNB
);

107 
	}
}

	@vi/v_ex.c

10 
	~"c⁄fig.h
"

12 #i‚de‡
löt


13 c⁄° 
	gsccsid
[] = "@(#)v_ex.c 10.42 (Berkeley) 6/28/96";

16 
	~<sys/ty≥s.h
>

17 
	~<sys/queue.h
>

18 
	~<sys/time.h
>

20 
	~<bô°rög.h
>

21 
	~<limôs.h
>

22 
	~<°dio.h
>

23 
	~<°dlib.h
>

24 
	~<°rög.h
>

25 
	~<uni°d.h
>

27 
	~"../comm⁄/comm⁄.h
"

28 
	~"vi.h
"

30 
v_e˛
 
__P
((
SCR
 *));

31 
v_e˛_öô
 
__P
((
SCR
 *));

32 
v_e˛_log
 
__P
((
SCR
 *, 
TEXT
 *));

33 
v_ex_d⁄e
 
__P
((
SCR
 *, 
VICMD
 *));

34 
v_exec_ex
 
__P
((
SCR
 *, 
VICMD
 *, 
EXCMD
 *));

43 
	$v_agaö
(
•
, 
vp
)

44 
SCR
 *
•
;

45 
VICMD
 *
vp
;

47 
ARGS
 *
≠
[2], 
a
;

48 
EXCMD
 
cmd
;

50 
	`ex_cöô
(&
cmd
, 
C_SUBAGAIN
, 2, 
vp
->
m_°¨t
.
 o
, vp->m_°¨t. o, 1, 
≠
);

51 
	`ex_ˇdd
(&
cmd
, &
a
, "", 1);

53  (
	`v_exec_ex
(
•
, 
vp
, &
cmd
));

54 
	}
}

63 
	$v_exmode
(
•
, 
vp
)

64 
SCR
 *
•
;

65 
VICMD
 *
vp
;

67 
GS
 *
gp
;

69 
gp
 = 
•
->gp;

72 i‡(
gp
->
	`s¸_s¸ìn
(
•
, 
SC_EX
)) {

73 
	`msgq
(
•
, 
M_ERR
,

77 ()
gp
->
	`s¸_©å
(
•
, 
SA_ALTERNATE
, 0);

80 
•
->
‰p
->
 o
 = sp->lno;

81 
•
->
‰p
->
˙o
 = sp->cno;

82 
	`F_SET
(
•
->
‰p
, 
FR_CURSORSET
);

85 
	`F_CLR
(
•
, 
SC_VI
 | 
SC_SCR_VI
);

86 
	`F_SET
(
•
, 
SC_EX
);

89 ()
	`ex_puts
(
•
, "\n");

92 
	}
}

101 
	$v_joö
(
•
, 
vp
)

102 
SCR
 *
•
;

103 
VICMD
 *
vp
;

105 
EXCMD
 
cmd
;

106 
 o
;

117 
 o
 = 
vp
->
m_°¨t
.lno + 1;

118 i‡(
	`F_ISSET
(
vp
, 
VC_C1SET
Ë&& vp->
cou¡
 > 2)

119 
 o
 = 
vp
->
m_°¨t
. ÿ+ (vp->
cou¡
 - 1);

121 
	`ex_cöô
(&
cmd
, 
C_JOIN
, 2, 
vp
->
m_°¨t
.
 o
,Üno, 0, 
NULL
);

122  (
	`v_exec_ex
(
•
, 
vp
, &
cmd
));

123 
	}
}

132 
	$v_shi·l
(
•
, 
vp
)

133 
SCR
 *
•
;

134 
VICMD
 *
vp
;

136 
ARGS
 *
≠
[2], 
a
;

137 
EXCMD
 
cmd
;

139 
	`ex_cöô
(&
cmd
, 
C_SHIFTL
, 2, 
vp
->
m_°¨t
.
 o
, vp->
m_°›
. o, 0, 
≠
);

140 
	`ex_ˇdd
(&
cmd
, &
a
, "<", 1);

141  (
	`v_exec_ex
(
•
, 
vp
, &
cmd
));

142 
	}
}

151 
	$v_shi·r
(
•
, 
vp
)

152 
SCR
 *
•
;

153 
VICMD
 *
vp
;

155 
ARGS
 *
≠
[2], 
a
;

156 
EXCMD
 
cmd
;

158 
	`ex_cöô
(&
cmd
, 
C_SHIFTR
, 2, 
vp
->
m_°¨t
.
 o
, vp->
m_°›
. o, 0, 
≠
);

159 
	`ex_ˇdd
(&
cmd
, &
a
, ">", 1);

160  (
	`v_exec_ex
(
•
, 
vp
, &
cmd
));

161 
	}
}

170 
	$v_su•íd
(
•
, 
vp
)

171 
SCR
 *
•
;

172 
VICMD
 *
vp
;

174 
ARGS
 *
≠
[2], 
a
;

175 
EXCMD
 
cmd
;

177 
	`ex_cöô
(&
cmd
, 
C_STOP
, 0, 
OOBLNO
, OOBLNO, 0, 
≠
);

178 
	`ex_ˇdd
(&
cmd
, &
a
, "suspend", ("suspend") - 1);

179  (
	`v_exec_ex
(
•
, 
vp
, &
cmd
));

180 
	}
}

189 
	$v_swôch
(
•
, 
vp
)

190 
SCR
 *
•
;

191 
VICMD
 *
vp
;

193 
ARGS
 *
≠
[2], 
a
;

194 
EXCMD
 
cmd
;

195 *
«me
;

201 i‡((
«me
 = 
•
->
Æt_«me
Ë=
NULL
) {

202 
	`msgq
(
•
, 
M_ERR
, "180|NoÖrevious fileÅoÉdit");

207 i‡(
	`fûe_m1
(
•
, 0, 
FS_ALL
))

210 
	`ex_cöô
(&
cmd
, 
C_EDIT
, 0, 
OOBLNO
, OOBLNO, 0, 
≠
);

211 
	`ex_ˇdd
(&
cmd
, &
a
, 
«me
, 
	`°æí
(name));

212  (
	`v_exec_ex
(
•
, 
vp
, &
cmd
));

213 
	}
}

222 
	$v_ègpush
(
•
, 
vp
)

223 
SCR
 *
•
;

224 
VICMD
 *
vp
;

226 
ARGS
 *
≠
[2], 
a
;

227 
EXCMD
 
cmd
;

229 
	`ex_cöô
(&
cmd
, 
C_TAG
, 0, 
OOBLNO
, 0, 0, 
≠
);

230 
	`ex_ˇdd
(&
cmd
, &
a
, 
	`VIP
(
•
)->
keyw
, 
	`°æí
(VIP(sp)->keyw));

231  (
	`v_exec_ex
(
•
, 
vp
, &
cmd
));

232 
	}
}

241 
	$v_ègp›
(
•
, 
vp
)

242 
SCR
 *
•
;

243 
VICMD
 *
vp
;

245 
EXCMD
 
cmd
;

247 
	`ex_cöô
(&
cmd
, 
C_TAGPOP
, 0, 
OOBLNO
, 0, 0, 
NULL
);

248  (
	`v_exec_ex
(
•
, 
vp
, &
cmd
));

249 
	}
}

258 
	$v_fûãr
(
•
, 
vp
)

259 
SCR
 *
•
;

260 
VICMD
 *
vp
;

262 
EXCMD
 
cmd
;

263 
TEXT
 *
ç
;

284 i‡(
	`F_ISSET
(
vp
, 
VC_ISDOT
) ||

285 
	`ISCMD
(
vp
->
rkp
, 'N') || ISCMD(vp->rkp, 'n')) {

286 
	`ex_cöô
(&
cmd
, 
C_BANG
,

287 2, 
vp
->
m_°¨t
.
 o
, vp->
m_°›
. o, 0, 
NULL
);

288 
	`EXP
(
•
)->
¨gsoff
 = 0;

290 i‡(
	`¨gv_exp1
(
•
, &
cmd
, "!", 1, 1))

292 
cmd
.
¨gc
 = 
	`EXP
(
•
)->
¨gsoff
;

293 
cmd
.
¨gv
 = 
	`EXP
(
•
)->
¨gs
;

294  (
	`v_exec_ex
(
•
, 
vp
, &
cmd
));

298 i‡(
	`v_tcmd
(
•
, 
vp
,

299 '!', 
TXT_BS
 | 
TXT_CR
 | 
TXT_ESCAPE
 | 
TXT_FILEC
 | 
TXT_PROMPT
))

309 
ç
 = 
•
->
tiq
.
cqh_fú°
;

310 i‡(
ç
->
ãrm
 !
TERM_OK
) {

311 
vp
->
m_föÆ
.
 o
 = 
•
->lno;

312 
vp
->
m_föÆ
.
˙o
 = 
•
->cno;

317 
	`vs_home
(
•
);

319 
	`ex_cöô
(&
cmd
, 
C_BANG
, 2, 
vp
->
m_°¨t
.
 o
, vp->
m_°›
. o, 0, 
NULL
);

320 
	`EXP
(
•
)->
¨gsoff
 = 0;

322 i‡(
	`¨gv_exp1
(
•
, &
cmd
, 
ç
->
lb
 + 1,Åp->
Àn
 - 1, 1))

324 
cmd
.
¨gc
 = 
	`EXP
(
•
)->
¨gsoff
;

325 
cmd
.
¨gv
 = 
	`EXP
(
•
)->
¨gs
;

326  (
	`v_exec_ex
(
•
, 
vp
, &
cmd
));

327 
	}
}

336 
	$v_evít_exec
(
•
, 
vp
)

337 
SCR
 *
•
;

338 
VICMD
 *
vp
;

340 
EXCMD
 
cmd
;

342 
vp
->
ev
.
e_evít
) {

343 
E_QUIT
:

344 
	`ex_cöô
(&
cmd
, 
C_QUIT
, 0, 
OOBLNO
, OOBLNO, 0, 
NULL
);

346 
E_WRITE
:

347 
	`ex_cöô
(&
cmd
, 
C_WRITE
, 0, 
OOBLNO
, OOBLNO, 0, 
NULL
);

350 
	`ab‹t
();

352  (
	`v_exec_ex
(
•
, 
vp
, &
cmd
));

353 
	}
}

360 
	$v_exec_ex
(
•
, 
vp
, 
exp
)

361 
SCR
 *
•
;

362 
VICMD
 *
vp
;

363 
EXCMD
 *
exp
;

365 
rvÆ
;

367 
rvÆ
 = 
exp
->
cmd
->
	`‚
(
•
,Éxp);

368  (
	`v_ex_d⁄e
(
•
, 
vp
Ë|| 
rvÆ
);

369 
	}
}

378 
	$v_ex
(
•
, 
vp
)

379 
SCR
 *
•
;

380 
VICMD
 *
vp
;

382 
GS
 *
gp
;

383 
TEXT
 *
ç
;

384 
do_˚dô
, 
do_ªsﬁuti⁄
, 
ifc⁄töue
;

386 
gp
 = 
•
->gp;

397 
do_˚dô
 = 
do_ªsﬁuti⁄
 = 0;;) {

403 i‡(!
	`EXCMD_RUNNING
(
gp
)) {

405 i‡(
	`v_tcmd
(
•
, 
vp
, ':',

406 
TXT_BS
 | 
TXT_CEDIT
 | 
TXT_FILEC
 | 
TXT_PROMPT
))

408 
ç
 = 
•
->
tiq
.
cqh_fú°
;

415 i‡(
ç
->
ãrm
 =
TERM_CEDIT
) {

416 i‡(
ç
->
Àn
 > 1 && 
	`v_e˛_log
(
•
,Åp))

418 
do_˚dô
 = 1;

423 i‡(
ç
->
ãrm
 =
TERM_BS
)

427 i‡(
	`O_STR
(
•
, 
O_CEDIT
Ë!
NULL
 && 
	`v_e˛_log
(•, 
ç
))

431 i‡(
	`ex_run_°r
(
•
, 
NULL
, 
ç
->
lb
,Åp->
Àn
, 0, 1))

436 
	`vs_home
(
•
);

452 i‡(
	`F_ISSET
(
•
, 
SC_SCR_EXWROTE
))

453 ()
	`putch¨
('\n');

456 ()
	`ex_cmd
(
•
);

459 ()
	`ex_fÊush
(
•
);

462 i‡(
	`vs_ex_ªsﬁve
(
•
, &
ifc⁄töue
))

469 i‡(!
ifc⁄töue
)

471 
do_ªsﬁuti⁄
 = 1;

474 ++
•
->
c˙t
;

482 i‡(
do_ªsﬁuti⁄
) {

483 
	`F_SET
(
•
, 
SC_EX_WAIT_NO
);

484 i‡(
	`vs_ex_ªsﬁve
(
•
, &
ifc⁄töue
))

489 i‡(
	`v_ex_d⁄e
(
•
, 
vp
))

493 i‡(
do_˚dô
)

494  (
	`v_e˛
(
•
));

497 
	}
}

504 
	$v_ex_d⁄e
(
•
, 
vp
)

505 
SCR
 *
•
;

506 
VICMD
 *
vp
;

508 
size_t
 
Àn
;

524 i‡(
	`db_egë
(
•
, sp->
 o
, 
NULL
, &
Àn
, NULL)) {

525 
•
->
 o
 = 1;

526 
•
->
˙o
 = 0;

527 } i‡(
•
->
˙o
 >
Àn
)

528 
•
->
˙o
 = 
Àn
 ?Üen - 1 : 0;

530 
vp
->
m_föÆ
.
 o
 = 
•
->lno;

531 
vp
->
m_föÆ
.
˙o
 = 
•
->cno;

537 
	`F_CLR
(
vp
, 
VM_RCM_MASK
);

538 
	`F_SET
(
vp
, 
VM_RCM_SET
);

541 
	}
}

548 
	$v_e˛
(
•
)

549 
SCR
 *
•
;

551 
GS
 *
gp
;

552 
SCR
 *
√w
;

555 
gp
 = 
•
->gp;

556 i‡(
gp
->
c˛_•
 =
NULL
 && 
	`v_e˛_öô
(
•
))

560 i‡(
	`s¸ìn_öô
(
gp
, 
•
, &
√w
))

562 i‡(
	`vs_•lô
(
•
, 
√w
, 1)) {

563 ()
	`s¸ìn_íd
(
√w
);

568 
√w
->
ï
 = 
gp
->
c˛_•
->ep;

569 ++
√w
->
ï
->
ªf˙t
;

571 
√w
->
‰p
 = 
gp
->
c˛_•
->frp;

572 
√w
->
‰p
->
Êags
 = 
•
->frp->flags;

575 ()
	`db_œ°
(
√w
, &√w->
 o
);

576 i‡(
√w
->
 o
 == 0)

577 
√w
->
 o
 = 1;

580 
•
->
c˛_∑ª¡
 = sp;

583 
	`F_SET
(
√w
, 
SC_COMEDIT
);

586 
•
->
√xtdi•
 = 
√w
;

587 
	`F_SET
(
•
, 
SC_SSWITCH
);

589 
	}
}

598 
	$v_e˛_exec
(
•
)

599 
SCR
 *
•
;

601 
size_t
 
Àn
;

602 *
p
;

604 i‡(
	`db_gë
(
•
, sp->
 o
, 0, &
p
, &
Àn
) && sp->lno == 1) {

605 
	`v_emsg
(
•
, 
NULL
, 
VIM_EMPTY
);

608 i‡(
Àn
 == 0) {

609 
	`msgq
(
•
, 
M_BERR
, "307|NoÉx commandÅoÉxecute");

614 i‡(
	`ex_run_°r
(
•
, 
NULL
, 
p
, 
Àn
, 0, 0))

618 
•
->
√xtdi•
 = sp->
c˛_∑ª¡
;

619 
	`F_SET
(
•
, 
SC_EXIT
);

621 
	}
}

628 
	$v_e˛_log
(
•
, 
ç
)

629 
SCR
 *
•
;

630 
TEXT
 *
ç
;

632 
EXF
 *
ßve_ï
;

633 
ª˙o_t
 
 o
;

634 
rvÆ
;

637 i‡(
•
->
gp
->
c˛_•
 =
NULL
 && 
	`v_e˛_öô
(sp))

644 i‡(
•
->
ï
 =•->
gp
->
c˛_•
->ep)

653 
ßve_ï
 = 
•
->
ï
;

654 
•
->
ï
 = sp->
gp
->
c˛_•
->ep;

655 i‡(
	`db_œ°
(
•
, &
 o
)) {

656 
•
->
ï
 = 
ßve_ï
;

659 
rvÆ
 = 
	`db_≠≥nd
(
•
, 0, 
 o
, 
ç
->
lb
,Åp->
Àn
);

660 
•
->
ï
 = 
ßve_ï
;

661  (
rvÆ
);

662 
	}
}

669 
	$v_e˛_öô
(
•
)

670 
SCR
 *
•
;

672 
FREF
 *
‰p
;

673 
GS
 *
gp
;

675 
gp
 = 
•
->gp;

678 i‡((
‰p
 = 
	`fûe_add
(
•
, 
NULL
)) == NULL)

685 i‡(
	`s¸ìn_öô
(
gp
, 
•
, &gp->
c˛_•
))

687 i‡(
	`fûe_öô
(
gp
->
c˛_•
, 
‰p
, 
NULL
, 0)) {

688 ()
	`s¸ìn_íd
(
gp
->
c˛_•
);

693 
	`F_CLR
(
gp
->
c˛_•
->
ï
, 
F_RCV_ON
);

696 
	}
}

	@vi/v_increment.c

10 
	~"c⁄fig.h
"

12 #i‚de‡
löt


13 c⁄° 
	gsccsid
[] = "@(#)v_increment.c 10.12 (Berkeley) 3/19/96";

16 
	~<sys/ty≥s.h
>

17 
	~<sys/queue.h
>

18 
	~<sys/time.h
>

20 
	~<bô°rög.h
>

21 
	~<˘y≥.h
>

22 
	~<î∫o.h
>

23 
	~<limôs.h
>

24 
	~<°dio.h
>

25 
	~<°dlib.h
>

26 
	~<°rög.h
>

28 
	~"../comm⁄/comm⁄.h
"

29 
	~"vi.h
"

31 * c⁄° 
	gfmt
[] = {

32 
	#DEC
 0

	)

34 
	#SDEC
 1

	)

36 
	#HEXC
 2

	)

38 
	#HEXL
 3

	)

40 
	#OCTAL
 4

	)

44 
öc_îr
 
__P
((
SCR
 *, 
ƒesu…
));

53 
	$v_ö¸emít
(
•
, 
vp
)

54 
SCR
 *
•
;

55 
VICMD
 *
vp
;

57 
ƒesu…
 
ƒë
;

58 
u_l⁄g
 
ulvÆ
;

59 
ch™ge
, 
…mp
, 
lvÆ
;

60 
size_t
 
beg
, 
bÀn
, 
íd
, 
Àn
, 
∆í
, 
wÀn
;

61 
ba£
, 
i£m±y
, 
rvÆ
;

62 *
bp
, *
¡y≥
, *
p
, *
t
, 
nbuf
[100];

65 i‡(
vp
->
ch¨a˘î
 == '#')

66 
vp
->
ch¨a˘î
 = '+';

67 i‡(
vp
->
ch¨a˘î
 != '+' && vp->character != '-') {

68 
	`v_emsg
(
•
, 
vp
->
kp
->
ußge
, 
VIM_USAGE
);

73 i‡(
	`F_ISSET
(
vp
, 
VC_C1SET
)) {

74 i‡(
vp
->
cou¡
 > 
LONG_MAX
) {

75 
	`öc_îr
(
•
, 
NUM_OVER
);

78 
ch™ge
 = 
vp
->
cou¡
;

80 
ch™ge
 = 1;

83 i‡(
	`db_egë
(
•
, 
vp
->
m_°¨t
.
 o
, &
p
, &
Àn
, &
i£m±y
)) {

84 i‡(
i£m±y
)

85 
n⁄um
;

94 
beg
 = 
vp
->
m_°¨t
.
˙o
; beg < 
Àn
 && 
	`is•a˚
(
p
[beg]); ++beg);

95 i‡(
beg
 >
Àn
)

96 
n⁄um
;

97 i‡(
beg
 !
vp
->
m_°¨t
.
˙o
) {

98 
•
->
˙o
 = 
beg
;

99 ()
	`vs_ª‰esh
(
•
, 0);

102 #unde‡
ishex


103 
	#ishex
(
c
Ë(
	`isdigô
(cË|| 
	`°rchr
("abcdefABCDEF", c))

	)

104 #unde‡
iso˘Æ


105 
	#iso˘Æ
(
c
Ë(
	`isdigô
(cË&& (cË!'8' && (cË!'9')

	)

113 
wÀn
 = 
Àn
 - 
beg
;

114 i‡(
p
[
beg
] ='0' && 
wÀn
 > 2 &&

115 (
p
[
beg
 + 1] == 'X' ||Ö[beg + 1] == 'x')) {

116 
ba£
 = 16;

117 
íd
 = 
beg
 + 2;

118 i‡(!
	`ishex
(
p
[
íd
]))

119 
decimÆ
;

120 
¡y≥
 = 
p
[
beg
 + 1] ='X' ? 
fmt
[
HEXC
] : fmt[
HEXL
];

121 } i‡(
p
[
beg
] ='0' && 
wÀn
 > 1) {

122 
ba£
 = 8;

123 
íd
 = 
beg
 + 1;

124 i‡(!
	`iso˘Æ
(
p
[
íd
]))

125 
decimÆ
;

126 
¡y≥
 = 
fmt
[
OCTAL
];

127 } i‡(
wÀn
 >1 && (
p
[
beg
] == '+' ||Ö[beg] == '-')) {

128 
ba£
 = 10;

129 
íd
 = 
beg
 + 1;

130 
¡y≥
 = 
fmt
[
SDEC
];

131 i‡(!
	`isdigô
(
p
[
íd
]))

132 
n⁄um
;

134 
decimÆ
: 
ba£
 = 10;

135 
íd
 = 
beg
;

136 
¡y≥
 = 
fmt
[
DEC
];

137 i‡(!
	`isdigô
(
p
[
íd
])) {

138 
n⁄um
: 
	`msgq
(
•
, 
M_ERR
, "181|CursorÇot ináÇumber");

144 ++
íd
 < 
Àn
) {

145 
ba£
) {

147 i‡(
	`iso˘Æ
(
p
[
íd
]))

149 i‡(
p
[
íd
] == '8' ||Ö[end] == '9') {

150 
ba£
 = 10;

151 
¡y≥
 = 
fmt
[
DEC
];

156 i‡(
	`isdigô
(
p
[
íd
]))

160 i‡(
	`ishex
(
p
[
íd
]))

164 
	`ab‹t
();

169 
wÀn
 = (
íd
 - 
beg
);

178 
	`GET_SPACE_RET
(
•
, 
bp
, 
bÀn
, 
Àn
 + 50);

179 i‡(
íd
 =
Àn
) {

180 
	`memmove
(
bp
, &
p
[
beg
], 
wÀn
);

181 
bp
[
wÀn
] = '\0';

182 
t
 = 
bp
;

184 
t
 = &
p
[
beg
];

190 i‡(
ba£
 == 10) {

191 i‡((
ƒë
 = 
	`ngë_¶⁄g
(&
lvÆ
, 
t
, 
NULL
, 10)Ë!
NUM_OK
)

192 
îr
;

193 
…mp
 = 
vp
->
ch¨a˘î
 ='-' ? -
ch™ge
 : change;

194 i‡(
lvÆ
 > 0 && 
…mp
 > 0 && !
	`NPFITS
(
LONG_MAX
,Üval,Ütmp)) {

195 
ƒë
 = 
NUM_OVER
;

196 
îr
;

198 i‡(
lvÆ
 < 0 && 
…mp
 < 0 && !
	`NNFITS
(
LONG_MIN
,Üval,Ütmp)) {

199 
ƒë
 = 
NUM_UNDER
;

200 
îr
;

202 
lvÆ
 +
…mp
;

204 i‡(
lvÆ
 =0 && 
¡y≥
 =
fmt
[
SDEC
])

205 
¡y≥
 = 
fmt
[
DEC
];

206 
∆í
 = 
	`¢¥ötf
(
nbuf
, “buf), 
¡y≥
, 
lvÆ
);

208 i‡((
ƒë
 = 
	`ngë_u¶⁄g
(&
ulvÆ
, 
t
, 
NULL
, 
ba£
)Ë!
NUM_OK
)

209 
îr
;

210 i‡(
vp
->
ch¨a˘î
 == '+') {

211 i‡(!
	`NPFITS
(
ULONG_MAX
, 
ulvÆ
, 
ch™ge
)) {

212 
ƒë
 = 
NUM_OVER
;

213 
îr
;

215 
ulvÆ
 +
ch™ge
;

217 i‡(
ulvÆ
 < 
ch™ge
) {

218 
ƒë
 = 
NUM_UNDER
;

219 
îr
;

221 
ulvÆ
 -
ch™ge
;

225 i‡(
ba£
 == 16)

226 
wÀn
 -= 2;

228 
∆í
 = 
	`¢¥ötf
(
nbuf
, “buf), 
¡y≥
, 
wÀn
, 
ulvÆ
);

232 
	`memmove
(
bp
, 
p
, 
beg
);

233 
	`memmove
(
bp
 + 
beg
, 
nbuf
, 
∆í
);

234 
	`memmove
(
bp
 + 
beg
 + 
∆í
, 
p
 + 
íd
, 
Àn
 - beg - (end - beg));

235 
Àn
 = 
beg
 + 
∆í
 + (À¿- beg - (
íd
 - beg));

237 
ƒë
 = 
NUM_OK
;

238 
rvÆ
 = 
	`db_£t
(
•
, 
vp
->
m_°¨t
.
 o
, 
bp
, 
Àn
);

241 
îr
: 
rvÆ
 = 1;

242 
	`öc_îr
(
•
, 
ƒë
);

244 i‡(
bp
 !
NULL
)

245 
	`FREE_SPACE
(
•
, 
bp
, 
bÀn
);

246  (
rvÆ
);

247 
	}
}

250 
	$öc_îr
(
•
, 
ƒë
)

251 
SCR
 *
•
;

252 
ƒesu…
 
ƒë
;

254 
ƒë
) {

255 
NUM_ERR
:

257 
NUM_OK
:

258 
	`ab‹t
();

260 
NUM_OVER
:

261 
	`msgq
(
•
, 
M_ERR
, "182|ResultingÇumberÅooÜarge");

263 
NUM_UNDER
:

264 
	`msgq
(
•
, 
M_ERR
, "183|ResultingÇumberÅoo small");

267 
	}
}

	@vi/v_init.c

10 
	~"c⁄fig.h
"

12 #i‚de‡
löt


13 c⁄° 
	gsccsid
[] = "@(#)v_init.c 10.8 (Berkeley) 3/30/96";

16 
	~<sys/ty≥s.h
>

17 
	~<sys/queue.h
>

18 
	~<sys/time.h
>

20 
	~<bô°rög.h
>

21 
	~<î∫o.h
>

22 
	~<limôs.h
>

23 
	~<°dio.h
>

24 
	~<°dlib.h
>

25 
	~<°rög.h
>

27 
	~"../comm⁄/comm⁄.h
"

28 
	~"vi.h
"

37 
	$v_s¸ìn_c›y
(
‹ig
, 
•
)

38 
SCR
 *
‹ig
, *
•
;

40 
VI_PRIVATE
 *
ovù
, *
nvù
;

43 
	`CALLOC_RET
(
‹ig
, 
nvù
, 
VI_PRIVATE
 *, 1, (VI_PRIVATE));

44 
•
->
vi_¥iv©e
 = 
nvù
;

47 
	`VI_SCR_CFLUSH
(
nvù
);

49 i‡(
‹ig
 =
NULL
) {

50 
nvù
->
c£¨chdú
 = 
CNOTSET
;

52 
ovù
 = 
	`VIP
(
‹ig
);

55 i‡(
ovù
->
ªp_Àn
 != 0) {

56 
	`MALLOC_RET
(
‹ig
, 
nvù
->
ªp
, 
EVENT
 *, 
ovù
->
ªp_Àn
);

57 
	`memmove
(
nvù
->
ªp
, 
ovù
->ªp, ovù->
ªp_Àn
);

58 
nvù
->
ªp_Àn
 = 
ovù
->rep_len;

62 i‡(
ovù
->
ps
 !
NULL
 && (
nvù
->ps =

63 
	`v_°rdup
(
•
, 
ovù
->
ps
, 
	`°æí
(ovù->ps))Ë=
NULL
)

66 
nvù
->
œ°ckey
 = 
ovù
->lastckey;

67 
nvù
->
c£¨chdú
 = 
ovù
->csearchdir;

69 
nvù
->
§ows
 = 
ovù
->srows;

72 
	}
}

81 
	$v_s¸ìn_íd
(
•
)

82 
SCR
 *
•
;

84 
VI_PRIVATE
 *
vù
;

86 i‡((
vù
 = 
	`VIP
(
•
)Ë=
NULL
)

88 i‡(
vù
->
keyw
 !
NULL
)

89 
	`‰ì
(
vù
->
keyw
);

90 i‡(
vù
->
ªp
 !
NULL
)

91 
	`‰ì
(
vù
->
ªp
);

92 i‡(
vù
->
ps
 !
NULL
)

93 
	`‰ì
(
vù
->
ps
);

95 i‡(
HMAP
 !
NULL
)

96 
	`‰ì
(
HMAP
);

98 
	`‰ì
(
vù
);

99 
•
->
vi_¥iv©e
 = 
NULL
;

102 
	}
}

111 
	$v_›tch™ge
(
•
, 
off£t
, 
°r
, 
vÆp
)

112 
SCR
 *
•
;

113 
off£t
;

114 *
°r
;

115 
u_l⁄g
 *
vÆp
;

117 
off£t
) {

118 
O_PARAGRAPHS
:

119  (
	`v_buûdps
(
•
, 
°r
, 
	`O_STR
(•, 
O_SECTIONS
)));

120 
O_SECTIONS
:

121  (
	`v_buûdps
(
•
, 
	`O_STR
(•, 
O_PARAGRAPHS
), 
°r
));

122 
O_WINDOW
:

123  (
	`vs_¸ñ
(
•
, *
vÆp
));

126 
	}
}

	@vi/v_itxt.c

10 
	~"c⁄fig.h
"

12 #i‚de‡
löt


13 c⁄° 
	gsccsid
[] = "@(#)v_itxt.c 10.16 (Berkeley) 10/23/96";

16 
	~<sys/ty≥s.h
>

17 
	~<sys/queue.h
>

18 
	~<sys/time.h
>

20 
	~<bô°rög.h
>

21 
	~<˘y≥.h
>

22 
	~<î∫o.h
>

23 
	~<limôs.h
>

24 
	~<°dio.h
>

25 
	~<°dlib.h
>

26 
	~<°rög.h
>

28 
	~"../comm⁄/comm⁄.h
"

29 
	~"vi.h
"

55 
	#LOG_CORRECT
 { \

56 i‡(!
	`MAPPED_KEYS_WAITING
(
•
)) \

57 ()
	`log_curs‹
(
•
); \

58 }

	)

60 
u_öt32_t
 
£t_txt_°d
 
__P
((
SCR
 *, 
VICMD
 *, u_int32_t));

69 
	$v_iA
(
•
, 
vp
)

70 
SCR
 *
•
;

71 
VICMD
 *
vp
;

73 
size_t
 
Àn
;

75 i‡(!
	`db_gë
(
•
, 
vp
->
m_°¨t
.
 o
, 0, 
NULL
, &
Àn
))

76 
•
->
˙o
 = 
Àn
 == 0 ? 0 :Üen - 1;

78 
LOG_CORRECT
;

80  (
	`v_ü
(
•
, 
vp
));

81 
	}
}

91 
	$v_ü
(
•
, 
vp
)

92 
SCR
 *
•
;

93 
VICMD
 *
vp
;

95 
size_t
 
Àn
;

96 
u_öt32_t
 
Êags
;

97 
i£m±y
;

98 *
p
;

100 
Êags
 = 
	`£t_txt_°d
(
•
, 
vp
, 0);

101 
•
->
showmode
 = 
SM_APPEND
;

102 
•
->
 o
 = 
vp
->
m_°¨t
.lno;

105 i‡(
	`db_egë
(
•
, sp->
 o
, &
p
, &
Àn
, &
i£m±y
)) {

106 i‡(!
i£m±y
)

108 
Àn
 = 0;

109 
	`LF_SET
(
TXT_APPENDEOL
);

110 } i‡(
Àn
) {

111 i‡(
Àn
 =
•
->
˙o
 + 1) {

112 
•
->
˙o
 = 
Àn
;

113 
	`LF_SET
(
TXT_APPENDEOL
);

115 ++
•
->
˙o
;

117 
	`LF_SET
(
TXT_APPENDEOL
);

119  (
	`v_txt
(
•
, 
vp
, 
NULL
, 
p
, 
Àn
,

120 0, 
OOBLNO
, 
	`F_ISSET
(
vp
, 
VC_C1SET
Ë? vp->
cou¡
 : 1, 
Êags
));

121 
	}
}

130 
	$v_iI
(
•
, 
vp
)

131 
SCR
 *
•
;

132 
VICMD
 *
vp
;

134 
•
->
˙o
 = 0;

135 i‡(
	`n⁄bœnk
(
•
, 
vp
->
m_°¨t
.
 o
, &•->
˙o
))

138 
LOG_CORRECT
;

140  (
	`v_ii
(
•
, 
vp
));

141 
	}
}

151 
	$v_ii
(
•
, 
vp
)

152 
SCR
 *
•
;

153 
VICMD
 *
vp
;

155 
size_t
 
Àn
;

156 
u_öt32_t
 
Êags
;

157 
i£m±y
;

158 *
p
;

160 
Êags
 = 
	`£t_txt_°d
(
•
, 
vp
, 0);

161 
•
->
showmode
 = 
SM_INSERT
;

162 
•
->
 o
 = 
vp
->
m_°¨t
.lno;

164 i‡(
	`db_egë
(
•
, sp->
 o
, &
p
, &
Àn
, &
i£m±y
)) {

165 i‡(!
i£m±y
)

167 
Àn
 = 0;

170 i‡(
Àn
 == 0)

171 
	`LF_SET
(
TXT_APPENDEOL
);

172  (
	`v_txt
(
•
, 
vp
, 
NULL
, 
p
, 
Àn
,

173 0, 
OOBLNO
, 
	`F_ISSET
(
vp
, 
VC_C1SET
Ë? vp->
cou¡
 : 1, 
Êags
));

174 
	}
}

176 
	ewhich
 { 
	mo_cmd
, 
	mO_cmd
 };

177 
io
 
__P
((
SCR
 *, 
VICMD
 *, 
which
));

186 
	$v_iO
(
•
, 
vp
)

187 
SCR
 *
•
;

188 
VICMD
 *
vp
;

190  (
	`io
(
•
, 
vp
, 
O_cmd
));

191 
	}
}

200 
	$v_io
(
•
, 
vp
)

201 
SCR
 *
•
;

202 
VICMD
 *
vp
;

204  (
	`io
(
•
, 
vp
, 
o_cmd
));

205 
	}
}

208 
	$io
(
•
, 
vp
, 
cmd
)

209 
SCR
 *
•
;

210 
VICMD
 *
vp
;

211 
which
 
cmd
;

213 
ª˙o_t
 
ai_löe
, 
 o
;

214 
size_t
 
Àn
;

215 
u_öt32_t
 
Êags
;

216 *
p
;

218 
Êags
 = 
	`£t_txt_°d
(
•
, 
vp
, 
TXT_ADDNEWLINE
 | 
TXT_APPENDEOL
);

219 
•
->
showmode
 = 
SM_INSERT
;

221 i‡(
•
->
 o
 == 1) {

222 i‡(
	`db_œ°
(
•
, &
 o
))

224 i‡(
 o
 != 0)

225 
ö£π
;

226 
p
 = 
NULL
;

227 
Àn
 = 0;

228 
ai_löe
 = 
OOBLNO
;

230 
ö£π
: 
p
 = "";

231 
•
->
˙o
 = 0;

232 
LOG_CORRECT
;

234 i‡(
cmd
 =
O_cmd
) {

235 i‡(
	`db_ö£π
(
•
, sp->
 o
, 
p
, 0))

237 i‡(
	`db_gë
(
•
, sp->
 o
, 
DBG_FATAL
, &
p
, &
Àn
))

239 
ai_löe
 = 
•
->
 o
 + 1;

241 i‡(
	`db_≠≥nd
(
•
, 1, sp->
 o
, 
p
, 0))

243 i‡(
	`db_gë
(
•
, ++•->
 o
, 
DBG_FATAL
, &
p
, &
Àn
))

245 
ai_löe
 = 
•
->
 o
 - 1;

248  (
	`v_txt
(
•
, 
vp
, 
NULL
, 
p
, 
Àn
,

249 0, 
ai_löe
, 
	`F_ISSET
(
vp
, 
VC_C1SET
Ë? vp->
cou¡
 : 1, 
Êags
));

250 
	}
}

261 
	$v_ch™ge
(
•
, 
vp
)

262 
SCR
 *
•
;

263 
VICMD
 *
vp
;

265 
size_t
 
bÀn
, 
Àn
;

266 
u_öt32_t
 
Êags
;

267 
i£m±y
, 
lmode
, 
rvÆ
;

268 *
bp
, *
p
;

276 
	`F_CLR
(
vp
, 
VM_RCM_MASK
);

277 
	`F_SET
(
vp
, 
VM_RCM_SET
);

283 i‡(
vp
->
m_°¨t
.
 o
 =vp->
m_°›
.lno &&

284 
	`db_egë
(
•
, 
vp
->
m_°¨t
.
 o
, &
p
, &
Àn
, &
i£m±y
)) {

285 i‡(!
i£m±y
)

287  (
	`v_ü
(
•
, 
vp
));

290 
Êags
 = 
	`£t_txt_°d
(
•
, 
vp
, 0);

291 
•
->
showmode
 = 
SM_CHANGE
;

300 
lmode
 = 
	`F_ISSET
(
vp
, 
VM_LMODE
Ë? 
CUT_LINEMODE
 : 0;

301 i‡(
lmode
) {

302 
vp
->
m_°¨t
.
˙o
 = 0;

303 i‡(
	`O_ISSET
(
•
, 
O_AUTOINDENT
)) {

304 i‡(
	`n⁄bœnk
(
•
, 
vp
->
m_°¨t
.
 o
, &vp->m_°¨t.
˙o
))

306 
	`LF_SET
(
TXT_AICHARS
);

309 
•
->
 o
 = 
vp
->
m_°¨t
.lno;

310 
•
->
˙o
 = 
vp
->
m_°¨t
.cno;

312 
LOG_CORRECT
;

318 i‡(!
lmode
 && 
vp
->
m_°¨t
.
 o
 =vp->
m_°›
.lno) {

324 i‡(
	`cut
(
•
,

325 
	`F_ISSET
(
vp
, 
VC_BUFFER
Ë? &vp->
buf„r
 : 
NULL
,

326 &
vp
->
m_°¨t
, &vp->
m_°›
, 
lmode
))

328 i‡(
Àn
 == 0)

329 
	`LF_SET
(
TXT_APPENDEOL
);

330 
	`LF_SET
(
TXT_EMARK
 | 
TXT_OVERWRITE
);

331  (
	`v_txt
(
•
, 
vp
, &vp->
m_°›
, 
p
, 
Àn
,

332 0, 
OOBLNO
, 
	`F_ISSET
(
vp
, 
VC_C1SET
Ë? vp->
cou¡
 : 1, 
Êags
));

346 i‡(
	`cut
(
•
,

347 
	`F_ISSET
(
vp
, 
VC_BUFFER
Ë? &vp->
buf„r
 : 
NULL
,

348 &
vp
->
m_°¨t
, &vp->
m_°›
, 
lmode
))

352 i‡(
lmode
 && 
vp
->
m_°¨t
.
˙o
) {

357 i‡(
	`db_gë
(
•
, 
vp
->
m_°¨t
.
 o
, 
DBG_FATAL
, &
p
, &
Àn
))

359 
	`GET_SPACE_RET
(
•
, 
bp
, 
bÀn
, 
vp
->
m_°¨t
.
˙o
);

360 
	`memmove
(
bp
, 
p
, 
vp
->
m_°¨t
.
˙o
);

362 
bp
 = 
NULL
;

365 i‡(
	`dñ
(
•
, &
vp
->
m_°¨t
, &vp->
m_°›
, 
lmode
))

369 i‡(
lmode
) {

370 i‡(
	`db_ö£π
(
•
, 
vp
->
m_°¨t
.
 o
, 
bp
, vp->m_°¨t.
˙o
))

372 
•
->
 o
 = 
vp
->
m_°¨t
.lno;

373 
Àn
 = 
•
->
˙o
 = 
vp
->
m_°¨t
.cno;

377 i‡(
	`db_egë
(
•
, 
vp
->
m_°¨t
.
 o
, &
p
, &
Àn
, &
i£m±y
)) {

378 i‡(!
i£m±y
)

380 
Àn
 = 0;

384 i‡(
vp
->
m_°¨t
.
˙o
 >
Àn
)

385 
	`LF_SET
(
TXT_APPENDEOL
);

387 
rvÆ
 = 
	`v_txt
(
•
, 
vp
, 
NULL
, 
p
, 
Àn
,

388 0, 
OOBLNO
, 
	`F_ISSET
(
vp
, 
VC_C1SET
Ë? vp->
cou¡
 : 1, 
Êags
);

390 i‡(
bp
 !
NULL
)

391 
	`FREE_SPACE
(
•
, 
bp
, 
bÀn
);

392  (
rvÆ
);

393 
	}
}

402 
	$v_Rïœ˚
(
•
, 
vp
)

403 
SCR
 *
•
;

404 
VICMD
 *
vp
;

406 
size_t
 
Àn
;

407 
u_öt32_t
 
Êags
;

408 
i£m±y
;

409 *
p
;

411 
Êags
 = 
	`£t_txt_°d
(
•
, 
vp
, 0);

412 
•
->
showmode
 = 
SM_REPLACE
;

414 i‡(
	`db_egë
(
•
, 
vp
->
m_°¨t
.
 o
, &
p
, &
Àn
, &
i£m±y
)) {

415 i‡(!
i£m±y
)

417 
Àn
 = 0;

418 
	`LF_SET
(
TXT_APPENDEOL
);

420 i‡(
Àn
 == 0)

421 
	`LF_SET
(
TXT_APPENDEOL
);

422 
	`LF_SET
(
TXT_OVERWRITE
 | 
TXT_REPLACE
);

424 
vp
->
m_°›
.
 o
 = vp->
m_°¨t
.lno;

425 
vp
->
m_°›
.
˙o
 = 
Àn
 ?Üen - 1 : 0;

427  (
	`v_txt
(
•
, 
vp
, &vp->
m_°›
, 
p
, 
Àn
,

428 0, 
OOBLNO
, 
	`F_ISSET
(
vp
, 
VC_C1SET
Ë? vp->
cou¡
 : 1, 
Êags
));

429 
	}
}

438 
	$v_sub°
(
•
, 
vp
)

439 
SCR
 *
•
;

440 
VICMD
 *
vp
;

442 
size_t
 
Àn
;

443 
u_öt32_t
 
Êags
;

444 
i£m±y
;

445 *
p
;

447 
Êags
 = 
	`£t_txt_°d
(
•
, 
vp
, 0);

448 
•
->
showmode
 = 
SM_CHANGE
;

450 i‡(
	`db_egë
(
•
, 
vp
->
m_°¨t
.
 o
, &
p
, &
Àn
, &
i£m±y
)) {

451 i‡(!
i£m±y
)

453 
Àn
 = 0;

454 
	`LF_SET
(
TXT_APPENDEOL
);

456 i‡(
Àn
 == 0)

457 
	`LF_SET
(
TXT_APPENDEOL
);

458 
	`LF_SET
(
TXT_EMARK
 | 
TXT_OVERWRITE
);

461 
vp
->
m_°›
.
 o
 = vp->
m_°¨t
.lno;

462 
vp
->
m_°›
.
˙o
 =

463 
vp
->
m_°¨t
.
˙o
 + (
	`F_ISSET
(vp, 
VC_C1SET
Ë? vp->
cou¡
 - 1 : 0);

464 i‡(
vp
->
m_°›
.
˙o
 > 
Àn
 - 1)

465 
vp
->
m_°›
.
˙o
 = 
Àn
 - 1;

467 i‡(
p
 !
NULL
 && 
	`cut
(
•
,

468 
	`F_ISSET
(
vp
, 
VC_BUFFER
Ë? &vp->
buf„r
 : 
NULL
,

469 &
vp
->
m_°¨t
, &vp->
m_°›
, 0))

472  (
	`v_txt
(
•
, 
vp
, &vp->
m_°›
, 
p
, 
Àn
, 0, 
OOBLNO
, 1, 
Êags
));

473 
	}
}

479 
u_öt32_t


480 
	$£t_txt_°d
(
•
, 
vp
, 
Êags
)

481 
SCR
 *
•
;

482 
VICMD
 *
vp
;

483 
u_öt32_t
 
Êags
;

485 
	`LF_SET
(
TXT_CNTRLT
 |

486 
TXT_ESCAPE
 | 
TXT_MAPINPUT
 | 
TXT_RECORD
 | 
TXT_RESOLVE
);

488 i‡(
	`F_ISSET
(
vp
, 
VC_ISDOT
))

489 
	`LF_SET
(
TXT_REPLAY
);

491 i‡(
	`O_ISSET
(
•
, 
O_ALTWERASE
))

492 
	`LF_SET
(
TXT_ALTWERASE
);

493 i‡(
	`O_ISSET
(
•
, 
O_AUTOINDENT
))

494 
	`LF_SET
(
TXT_AUTOINDENT
);

495 i‡(
	`O_ISSET
(
•
, 
O_BEAUTIFY
))

496 
	`LF_SET
(
TXT_BEAUTIFY
);

497 i‡(
	`O_ISSET
(
•
, 
O_SHOWMATCH
))

498 
	`LF_SET
(
TXT_SHOWMATCH
);

499 i‡(
	`F_ISSET
(
•
, 
SC_SCRIPT
))

500 
	`LF_SET
(
TXT_CR
);

501 i‡(
	`O_ISSET
(
•
, 
O_TTYWERASE
))

502 
	`LF_SET
(
TXT_TTYWERASE
);

533 i‡((
	`O_ISSET
(
•
, 
O_WRAPLEN
Ë|| O_ISSET(•, 
O_WRAPMARGIN
)) &&

534 (!
	`MAPPED_KEYS_WAITING
(
•
Ë|| !
	`F_ISSET
(
vp
, 
VC_C1SET
)))

535 
	`LF_SET
(
TXT_WRAPMARGIN
);

536  (
Êags
);

537 
	}
}

	@vi/v_left.c

10 
	~"c⁄fig.h
"

12 #i‚de‡
löt


13 c⁄° 
	gsccsid
[] = "@(#)v_left.c 10.7 (Berkeley) 3/6/96";

16 
	~<sys/ty≥s.h
>

17 
	~<sys/queue.h
>

18 
	~<sys/time.h
>

20 
	~<bô°rög.h
>

21 
	~<limôs.h
>

22 
	~<°dio.h
>

24 
	~"../comm⁄/comm⁄.h
"

25 
	~"vi.h
"

34 
	$v_À·
(
•
, 
vp
)

35 
SCR
 *
•
;

36 
VICMD
 *
vp
;

38 
ª˙o_t
 
˙t
;

44 i‡(
vp
->
m_°¨t
.
˙o
 == 0) {

45 
	`v_sﬁ
(
•
);

50 
˙t
 = 
	`F_ISSET
(
vp
, 
VC_C1SET
Ë? vp->
cou¡
 : 1;

51 i‡(
vp
->
m_°¨t
.
˙o
 > 
˙t
)

52 
vp
->
m_°›
.
˙o
 = vp->
m_°¨t
.˙ÿ- 
˙t
;

54 
vp
->
m_°›
.
˙o
 = 0;

61 i‡(
	`ISMOTION
(
vp
))

62 --
vp
->
m_°¨t
.
˙o
;

63 
vp
->
m_föÆ
 = vp->
m_°›
;

65 
	}
}

74 
	$v_cfú°
(
•
, 
vp
)

75 
SCR
 *
•
;

76 
VICMD
 *
vp
;

78 
ª˙o_t
 
˙t
, 
 o
;

88 i‡(
	`ISMOTION
(
vp
))

89 
	`F_SET
(
vp
, 
VM_LMODE
);

95 
˙t
 = 
	`F_ISSET
(
vp
, 
VC_C1SET
Ë? vp->
cou¡
 : 1;

96 i‡(
˙t
 != 1) {

97 --
vp
->
cou¡
;

98  (
	`v_down
(
•
, 
vp
));

107 
vp
->
m_°›
.
˙o
 = 0;

108 i‡(
	`n⁄bœnk
(
•
, 
vp
->
m_°›
.
 o
, &vp->m_°›.
˙o
))

117 i‡(
vp
->
m_°›
.
 o
 == 1 &&

118 
vp
->
m_°›
.
˙o
 =0 && 
	`ISCMD
(vp->
rkp
, 'd')) {

119 i‡(
	`db_œ°
(
•
, &
 o
))

121 i‡(
 o
 == 0) {

122 
	`v_sﬁ
(
•
);

131 
vp
->
m_föÆ
 =

132 
	`ISMOTION
(
vp
Ë&& 
	`ISCMD
(vp->
rkp
, 'y'Ë? vp->
m_°¨t
 : vp->
m_°›
;

134 
	}
}

143 
	$v_fú°
(
•
, 
vp
)

144 
SCR
 *
•
;

145 
VICMD
 *
vp
;

160 
vp
->
m_°›
.
˙o
 = 0;

161 i‡(
	`n⁄bœnk
(
•
, 
vp
->
m_°›
.
 o
, &vp->m_°›.
˙o
))

170 i‡(
	`ISMOTION
(
vp
Ë&& vp->
m_°¨t
.
˙o
 =vp->
m_°›
.cno) {

171 
	`v_sﬁ
(
•
);

184 i‡(
vp
->
m_°¨t
.
˙o
 < vp->
m_°›
.cno)

185 i‡(
	`ISMOTION
(
vp
)) {

186 --
vp
->
m_°›
.
˙o
;

187 
vp
->
m_föÆ
 = vp->
m_°¨t
;

189 
vp
->
m_föÆ
 = vp->
m_°›
;

191 i‡(
	`ISMOTION
(
vp
))

192 --
vp
->
m_°¨t
.
˙o
;

193 
vp
->
m_föÆ
 = vp->
m_°›
;

196 
	}
}

207 
	$v_ncﬁ
(
•
, 
vp
)

208 
SCR
 *
•
;

209 
VICMD
 *
vp
;

211 i‡(
	`F_ISSET
(
vp
, 
VC_C1SET
Ë&& vp->
cou¡
 > 1) {

212 --
vp
->
cou¡
;

213 
vp
->
m_°›
.
˙o
 =

214 
	`vs_cﬁpos
(
•
, 
vp
->
m_°¨t
.
 o
, (
size_t
)vp->
cou¡
);

221 i‡(
	`ISMOTION
(
vp
Ë&& vp->
m_°›
.
˙o
 =vp->
m_°¨t
.cno) {

222 
	`v_nomove
(
•
);

232 i‡(
	`ISMOTION
(
vp
Ë&& vp->
m_°¨t
.
˙o
 == 0) {

233 
	`v_sﬁ
(
•
);

236 
vp
->
m_°›
.
˙o
 = 0;

248 i‡(
vp
->
m_°¨t
.
˙o
 < vp->
m_°›
.cno)

249 i‡(
	`ISMOTION
(
vp
)) {

250 --
vp
->
m_°›
.
˙o
;

251 
vp
->
m_föÆ
 = vp->
m_°¨t
;

253 
vp
->
m_föÆ
 = vp->
m_°›
;

255 i‡(
	`ISMOTION
(
vp
))

256 --
vp
->
m_°¨t
.
˙o
;

257 
vp
->
m_föÆ
 = vp->
m_°›
;

260 
	}
}

269 
	$v_zîo
(
•
, 
vp
)

270 
SCR
 *
•
;

271 
VICMD
 *
vp
;

278 i‡(
	`ISMOTION
(
vp
Ë&& vp->
m_°¨t
.
˙o
 == 0) {

279 
	`v_sﬁ
(
•
);

288 
vp
->
m_°›
.
˙o
 = 0;

289 i‡(
	`ISMOTION
(
vp
))

290 --
vp
->
m_°¨t
.
˙o
;

291 
vp
->
m_föÆ
 = vp->
m_°›
;

293 
	}
}

	@vi/v_mark.c

10 
	~"c⁄fig.h
"

12 #i‚de‡
löt


13 c⁄° 
	gsccsid
[] = "@(#)v_mark.c 10.8 (Berkeley) 9/20/96";

16 
	~<sys/ty≥s.h
>

17 
	~<sys/queue.h
>

18 
	~<sys/time.h
>

20 
	~<bô°rög.h
>

21 
	~<limôs.h
>

22 
	~<°dlib.h
>

23 
	~<°dio.h
>

25 
	~"../comm⁄/comm⁄.h
"

26 
	~"vi.h
"

35 
	$v_m¨k
(
•
, 
vp
)

36 
SCR
 *
•
;

37 
VICMD
 *
vp
;

39  (
	`m¨k_£t
(
•
, 
vp
->
ch¨a˘î
, &vp->
m_°¨t
, 1));

40 
	}
}

42 
	ewhich
 {
	mBQMARK
, 
	mFQMARK
};

43 
m¨k
 
__P
((
SCR
 *, 
VICMD
 *, 
which
));

62 
	$v_bm¨k
(
•
, 
vp
)

63 
SCR
 *
•
;

64 
VICMD
 *
vp
;

66  (
	`m¨k
(
•
, 
vp
, 
BQMARK
));

67 
	}
}

78 
	$v_fm¨k
(
•
, 
vp
)

79 
SCR
 *
•
;

80 
VICMD
 *
vp
;

82  (
	`m¨k
(
•
, 
vp
, 
FQMARK
));

83 
	}
}

90 
	$m¨k
(
•
, 
vp
, 
cmd
)

91 
SCR
 *
•
;

92 
VICMD
 *
vp
;

93 
which
 
cmd
;

95 
dú_t
 
dú
;

96 
MARK
 
m
;

97 
size_t
 
Àn
;

99 i‡(
	`m¨k_gë
(
•
, 
vp
->
ch¨a˘î
, &vp->
m_°›
, 
M_BERR
))

109 
cmd
) {

110 
BQMARK
:

111 i‡(
	`db_gë
(
•
, 
vp
->
m_°›
.
 o
, 
DBG_FATAL
, 
NULL
, &
Àn
))

113 i‡(
vp
->
m_°›
.
˙o
 < 
Àn
 ||

114 
vp
->
m_°›
.
˙o
 =
Àn
 &&Üen == 0)

117 i‡(
	`ISMOTION
(
vp
))

118 
	`F_SET
(
vp
, 
VM_LMODE
);

119 
cmd
 = 
FQMARK
;

121 
FQMARK
:

122 
vp
->
m_°›
.
˙o
 = 0;

123 i‡(
	`n⁄bœnk
(
•
, 
vp
->
m_°›
.
 o
, &vp->m_°›.
˙o
))

127 
	`ab‹t
();

131 i‡(!
	`ISMOTION
(
vp
)) {

132 
vp
->
m_föÆ
 = vp->
m_°›
;

140 i‡(
cmd
 =
BQMARK
 &&

141 
vp
->
m_°›
.
 o
 =vp->
m_°¨t
.lno &&

142 
vp
->
m_°›
.
˙o
 =vp->
m_°¨t
.cno) {

143 
	`v_nomove
(
•
);

154 i‡(
vp
->
m_°¨t
.
 o
 > vp->
m_°›
.lno ||

155 
vp
->
m_°¨t
.
 o
 =vp->
m_°›
.lno &&

156 
vp
->
m_°¨t
.
˙o
 > vp->
m_°›
.cno) {

157 
m
 = 
vp
->
m_°¨t
;

158 
vp
->
m_°¨t
 = vp->
m_°›
;

159 
vp
->
m_°›
 = 
m
;

160 
dú
 = 
BACKWARD
;

162 
dú
 = 
FORWARD
;

187 #ifde‡
HISTORICAL_PRACTICE


188 i‡(
	`ISCMD
(
vp
->
rkp
, 'y')) {

189 i‡((
cmd
 =
BQMARK
 ||

190 
cmd
 =
FQMARK
 && 
vp
->
m_°¨t
.
 o
 !vp->
m_°›
.lno) &&

191 (
vp
->
m_°¨t
.
 o
 > vp->
m_°›
.lno ||

192 
vp
->
m_°¨t
.
 o
 =vp->
m_°›
.lno &&

193 
vp
->
m_°¨t
.
˙o
 > vp->
m_°›
.cno))

194 
vp
->
m_föÆ
 = vp->
m_°›
;

195 } i‡(
	`ISCMD
(
vp
->
rkp
, 'd'))

196 i‡(
vp
->
m_°¨t
.
 o
 > vp->
m_°›
.lno ||

197 
vp
->
m_°¨t
.
 o
 =vp->
m_°›
.lno &&

198 
vp
->
m_°¨t
.
˙o
 > vp->
m_°›
.cno)

199 
vp
->
m_föÆ
 = vp->
m_°›
;

201 
vp
->
m_föÆ
 = vp->
m_°¨t
;

208 i‡(
cmd
 =
FQMARK
)

221 i‡(
vp
->
m_°¨t
.
 o
 < vp->
m_°›
. ÿ&& vp->m_°›.
˙o
 == 0) {

222 i‡(
	`db_gë
(
•
, --
vp
->
m_°›
.
 o
, 
DBG_FATAL
, 
NULL
, &
Àn
))

224 
vp
->
m_°›
.
˙o
 = 
Àn
 ?Üen - 1 : 0;

225 
Àn
 = 0;

226 i‡(
	`n⁄bœnk
(
•
, 
vp
->
m_°¨t
.
 o
, &
Àn
))

228 i‡(
vp
->
m_°¨t
.
˙o
 <
Àn
)

229 
	`F_SET
(
vp
, 
VM_LMODE
);

231 --
vp
->
m_°›
.
˙o
;

234 
	}
}

	@vi/v_match.c

10 
	~"c⁄fig.h
"

12 #i‚de‡
löt


13 c⁄° 
	gsccsid
[] = "@(#)v_match.c 10.8 (Berkeley) 3/6/96";

16 
	~<sys/ty≥s.h
>

17 
	~<sys/queue.h
>

18 
	~<sys/time.h
>

20 
	~<bô°rög.h
>

21 
	~<limôs.h
>

22 
	~<°dio.h
>

23 
	~<°rög.h
>

25 
	~"../comm⁄/comm⁄.h
"

26 
	~"vi.h
"

35 
	$v_m©ch
(
•
, 
vp
)

36 
SCR
 *
•
;

37 
VICMD
 *
vp
;

39 
VCS
 
cs
;

40 
MARK
 *
mp
;

41 
size_t
 
˙o
, 
Àn
, 
off
;

42 
˙t
, 
i£m±y
, 
m©chc
, 
°¨tc
, (*
gc
)
	`__P
((
SCR
 *, 
VCS
 *));

43 *
p
;

53 i‡(
	`db_egë
(
•
, 
vp
->
m_°¨t
.
 o
, &
p
, &
Àn
, &
i£m±y
)) {

54 i‡(
i£m±y
)

55 
nom©ch
;

58 
off
 = 
vp
->
m_°¨t
.
˙o
;; ++off) {

59 i‡(
off
 >
Àn
) {

60 
nom©ch
: 
	`msgq
(
•
, 
M_BERR
, "184|No match character onÅhisÜine");

63 
°¨tc
 = 
p
[
off
]) {

65 
m©chc
 = ')';

66 
gc
 = 
cs_√xt
;

69 
m©chc
 = '(';

70 
gc
 = 
cs_¥ev
;

73 
m©chc
 = ']';

74 
gc
 = 
cs_√xt
;

77 
m©chc
 = '[';

78 
gc
 = 
cs_¥ev
;

81 
m©chc
 = '}';

82 
gc
 = 
cs_√xt
;

85 
m©chc
 = '{';

86 
gc
 = 
cs_¥ev
;

89 
m©chc
 = '>';

90 
gc
 = 
cs_√xt
;

93 
m©chc
 = '<';

94 
gc
 = 
cs_¥ev
;

102 
cs
.
cs_ o
 = 
vp
->
m_°¨t
.
 o
;

103 
cs
.
cs_˙o
 = 
off
;

104 i‡(
	`cs_öô
(
•
, &
cs
))

106 
˙t
 = 1;;) {

107 i‡(
	`gc
(
•
, &
cs
))

109 i‡(
cs
.
cs_Êags
 != 0) {

110 i‡(
cs
.
cs_Êags
 =
CS_EOF
 || cs.cs_Êag†=
CS_SOF
)

114 i‡(
cs
.
cs_ch
 =
°¨tc
)

115 ++
˙t
;

116 i‡(
cs
.
cs_ch
 =
m©chc
 && --
˙t
 == 0)

119 i‡(
˙t
) {

120 
	`msgq
(
•
, 
M_BERR
, "185|Matching characterÇot found");

124 
vp
->
m_°›
.
 o
 = 
cs
.
cs_ o
;

125 
vp
->
m_°›
.
˙o
 = 
cs
.
cs_˙o
;

137 i‡(
vp
->
m_°¨t
.
 o
 < vp->
m_°›
.lno ||

138 
vp
->
m_°¨t
.
 o
 =vp->
m_°›
.lno &&

139 
vp
->
m_°¨t
.
˙o
 < vp->
m_°›
.cno)

140 
vp
->
m_föÆ
 = 
	`ISMOTION
(vpË? vp->
m_°¨t
 : vp->
m_°›
;

142 
vp
->
m_föÆ
 = vp->
m_°›
;

152 i‡(!
	`ISMOTION
(
vp
Ë|| vp->
m_°¨t
.
 o
 =vp->
m_°›
.lno)

154 
mp
 = 
vp
->
m_°¨t
.
 o
 < vp->
m_°›
.lno ? &vp->m_start : &vp->m_stop;

155 i‡(
mp
->
˙o
 != 0) {

156 
˙o
 = 0;

157 i‡(
	`n⁄bœnk
(
•
, 
mp
->
 o
, &
˙o
))

159 i‡(
˙o
 < 
mp
->cno)

162 
mp
 = 
vp
->
m_°¨t
.
 o
 < vp->
m_°›
.lno ? &vp->m_stop : &vp->m_start;

163 i‡(
	`db_gë
(
•
, 
mp
->
 o
, 
DBG_FATAL
, &
p
, &
Àn
))

165 
p
 +
mp
->
˙o
 + 1, 
Àn
 -= mp->cno; --len; ++p)

166 i‡(!
	`isbœnk
(*
p
))

168 
	`F_SET
(
vp
, 
VM_LMODE
);

170 
	}
}

	@vi/v_paragraph.c

10 
	~"c⁄fig.h
"

12 #i‚de‡
löt


13 c⁄° 
	gsccsid
[] = "@(#)v_paragraph.c 10.7 (Berkeley) 3/6/96";

16 
	~<sys/ty≥s.h
>

17 
	~<sys/queue.h
>

18 
	~<sys/time.h
>

20 
	~<bô°rög.h
>

21 
	~<î∫o.h
>

22 
	~<limôs.h
>

23 
	~<°dio.h
>

24 
	~<°dlib.h
>

25 
	~<°rög.h
>

27 
	~"../comm⁄/comm⁄.h
"

28 
	~"vi.h
"

30 
	#INTEXT_CHECK
 { \

31 i‡(
Àn
 =0 || 
	`v_i£m±y
(
p
,Üen)) { \

32 i‡(!--
˙t
) \

33 
found
; \

34 
p°©e
 = 
P_INBLANK
; \

43 i‡(
p
[0] == '\014') { \

44 i‡(!--
˙t
) \

45 
found
; \

48 i‡(
p
[0] !'.' || 
Àn
 < 2) \

50 
Õ
 = 
	`VIP
(
•
)->
ps
; *lp != '\0';Üp += 2) \

51 i‡(
Õ
[0] =
p
[1] && \

52 (
Õ
[1] =' ' && 
Àn
 =2 ||Üp[1] =
p
[2]) && \

53 !--
˙t
) \

54 
found
; \

55 }

	)

67 
	$v_∑øgøphf
(
•
, 
vp
)

68 
SCR
 *
•
;

69 
VICMD
 *
vp
;

71 íum { 
P_INTEXT
, 
P_INBLANK
 } 
p°©e
;

72 
size_t
 
œ°Àn
, 
Àn
;

73 
ª˙o_t
 
˙t
, 
œ° o
, 
 o
;

74 
i£m±y
;

75 *
p
, *
Õ
;

91 i‡(
	`ISMOTION
(
vp
))

92 i‡(
vp
->
m_°¨t
.
˙o
 == 0)

93 
	`F_SET
(
vp
, 
VM_LMODE
);

95 
vp
->
m_°›
 = vp->
m_°¨t
;

96 
vp
->
m_°›
.
˙o
 = 0;

97 i‡(
	`n⁄bœnk
(
•
, 
vp
->
m_°›
.
 o
, &vp->m_°›.
˙o
))

99 i‡(
vp
->
m_°¨t
.
˙o
 <vp->
m_°›
.cno)

100 
	`F_SET
(
vp
, 
VM_LMODE
);

104 
 o
 = 
vp
->
m_°¨t
.lno;

105 i‡(
	`db_gë
(
•
, 
 o
, 0, &
p
, &
Àn
))

106 
eof
;

112 
˙t
 = 
	`F_ISSET
(
vp
, 
VC_C1SET
Ë? vp->
cou¡
 : 1;

113 
˙t
 *= 2;

114 i‡(
Àn
 =0 || 
	`v_i£m±y
(
p
,Üen))

115 
p°©e
 = 
P_INBLANK
;

117 --
˙t
;

118 
p°©e
 = 
P_INTEXT
;

122 
œ° o
 = 
 o
;

123 
œ°Àn
 = 
Àn
;

124 i‡(
	`db_gë
(
•
, ++
 o
, 0, &
p
, &
Àn
))

125 
eof
;

126 
p°©e
) {

127 
P_INTEXT
:

128 
INTEXT_CHECK
;

130 
P_INBLANK
:

131 i‡(
Àn
 =0 || 
	`v_i£m±y
(
p
,Üen))

133 i‡(--
˙t
) {

134 
p°©e
 = 
P_INTEXT
;

146 
found
: i‡(
	`ISMOTION
(
vp
)) {

147 
vp
->
m_°›
.
 o
 = 
œ° o
;

148 
vp
->
m_°›
.
˙o
 = 
œ°Àn
 ?Üastlen - 1 : 0;

149 
vp
->
m_föÆ
 = vp->
m_°¨t
;

151 
vp
->
m_°›
.
 o
 =Üno;

152 
vp
->
m_°›
.
˙o
 = 0;

153 
vp
->
m_föÆ
 = vp->
m_°›
;

157 
	`ab‹t
();

169 
eof
: i‡(
vp
->
m_°¨t
.
 o
 ==Üno || vp->m_start.lno ==Üno - 1) {

170 i‡(
	`db_egë
(
•
, 
vp
->
m_°¨t
.
 o
, &
p
, &
Àn
, &
i£m±y
)) {

171 i‡(!
i£m±y
)

173 
vp
->
m_°¨t
.
˙o
 = 0;

176 i‡(
vp
->
m_°¨t
.
˙o
 =(
Àn
 ?Üen - 1 : 0)) {

177 
	`v_eof
(
•
, 
NULL
);

189 i‡(
	`ISMOTION
(
vp
Ë&& 
	`ISCMD
(vp->
rkp
, 'd')) {

190 
	`F_CLR
(
vp
, 
VM_RCM_MASK
);

191 
	`F_SET
(
vp
, 
VM_RCM_SETFNB
);

193 
vp
->
m_°›
.
 o
 =Üno - 1;

194 
vp
->
m_°›
.
˙o
 = 
Àn
 ?Üen - 1 : 0;

195 
vp
->
m_föÆ
 = 
	`ISMOTION
(vpË? vp->
m_°¨t
 : vp->
m_°›
;

197 
	}
}

206 
	$v_∑øgøphb
(
•
, 
vp
)

207 
SCR
 *
•
;

208 
VICMD
 *
vp
;

210 íum { 
P_INTEXT
, 
P_INBLANK
 } 
p°©e
;

211 
size_t
 
Àn
;

212 
ª˙o_t
 
˙t
, 
 o
;

213 *
p
, *
Õ
;

233 
 o
 = 
vp
->
m_°¨t
.lno;

235 i‡(
	`ISMOTION
(
vp
))

236 i‡(
vp
->
m_°¨t
.
˙o
 == 0) {

237 i‡(
vp
->
m_°¨t
.
 o
 == 1) {

238 
	`v_sof
(
•
, &
vp
->
m_°¨t
);

241 --
vp
->
m_°¨t
.
 o
;

242 
	`F_SET
(
vp
, 
VM_LMODE
);

244 --
vp
->
m_°¨t
.
˙o
;

246 i‡(
vp
->
m_°¨t
.
 o
 <= 1)

247 
sof
;

250 i‡(
	`db_gë
(
•
, 
 o
, 0, &
p
, &
Àn
))

251 
sof
;

257 
˙t
 = 
	`F_ISSET
(
vp
, 
VC_C1SET
Ë? vp->
cou¡
 : 1;

258 
˙t
 *= 2;

259 i‡(
Àn
 =0 || 
	`v_i£m±y
(
p
,Üen))

260 
p°©e
 = 
P_INBLANK
;

262 --
˙t
;

263 
p°©e
 = 
P_INTEXT
;

270 i‡(
vp
->
m_°¨t
.
˙o
 > 0)

271 ++
 o
;

275 i‡(
	`db_gë
(
•
, --
 o
, 0, &
p
, &
Àn
))

276 
sof
;

277 
p°©e
) {

278 
P_INTEXT
:

279 
INTEXT_CHECK
;

281 
P_INBLANK
:

282 i‡(
Àn
 !0 && !
	`v_i£m±y
(
p
,Üen)) {

283 i‡(!--
˙t
)

284 
found
;

285 
p°©e
 = 
P_INTEXT
;

289 
	`ab‹t
();

294 
sof
: 
 o
 = 1;

296 
found
: 
vp
->
m_°›
.
 o
 =Üno;

297 
vp
->
m_°›
.
˙o
 = 0;

303 
vp
->
m_föÆ
 = vp->
m_°›
;

305 
	}
}

314 
	$v_buûdps
(
•
, 
p_p
, 
s_p
)

315 
SCR
 *
•
;

316 *
p_p
, *
s_p
;

318 
VI_PRIVATE
 *
vù
;

319 
size_t
 
p_Àn
, 
s_Àn
;

320 *
p
;

326 
p_Àn
 = 
p_p
 =
NULL
 ? 0 : 
	`°æí
(p_p);

327 
s_Àn
 = 
s_p
 =
NULL
 ? 0 : 
	`°æí
(s_p);

329 i‡(
p_Àn
 =0 && 
s_Àn
 == 0)

332 
	`MALLOC_RET
(
•
, 
p
, *, 
p_Àn
 + 
s_Àn
 + 1);

334 
vù
 = 
	`VIP
(
•
);

335 i‡(
vù
->
ps
 !
NULL
)

336 
	`‰ì
(
vù
->
ps
);

338 i‡(
p_p
 !
NULL
)

339 
	`memmove
(
p
, 
p_p
, 
p_Àn
 + 1);

340 i‡(
s_p
 !
NULL
)

341 
	`memmove
(
p
 + 
p_Àn
, 
s_p
, 
s_Àn
 + 1);

342 
vù
->
ps
 = 
p
;

344 
	}
}

	@vi/v_put.c

10 
	~"c⁄fig.h
"

12 #i‚de‡
löt


13 c⁄° 
	gsccsid
[] = "@(#)v_put.c 10.5 (Berkeley) 3/6/96";

16 
	~<sys/ty≥s.h
>

17 
	~<sys/queue.h
>

18 
	~<sys/time.h
>

20 
	~<bô°rög.h
>

21 
	~<limôs.h
>

22 
	~<°dio.h
>

24 
	~"../comm⁄/comm⁄.h
"

25 
	~"vi.h
"

27 
öc_buf
 
__P
((
SCR
 *, 
VICMD
 *));

36 
	$v_Put
(
•
, 
vp
)

37 
SCR
 *
•
;

38 
VICMD
 *
vp
;

40 
u_l⁄g
 
˙t
;

42 i‡(
	`F_ISSET
(
vp
, 
VC_ISDOT
))

43 
	`öc_buf
(
•
, 
vp
);

50 
˙t
 = 
	`F_ISSET
(
vp
, 
VC_C1SET
Ë? vp->
cou¡
 : 1; cnt--;) {

51 i‡(
	`put
(
•
, 
NULL
,

52 
	`F_ISSET
(
vp
, 
VC_BUFFER
Ë? &vp->
buf„r
 : 
NULL
,

53 &
vp
->
m_°¨t
, &vp->
m_föÆ
, 0))

55 
vp
->
m_°¨t
 = vp->
m_föÆ
;

56 i‡(
	`INTERRUPTED
(
•
))

60 
	}
}

69 
	$v_put
(
•
, 
vp
)

70 
SCR
 *
•
;

71 
VICMD
 *
vp
;

73 
u_l⁄g
 
˙t
;

75 i‡(
	`F_ISSET
(
vp
, 
VC_ISDOT
))

76 
	`öc_buf
(
•
, 
vp
);

83 
˙t
 = 
	`F_ISSET
(
vp
, 
VC_C1SET
Ë? vp->
cou¡
 : 1; cnt--;) {

84 i‡(
	`put
(
•
, 
NULL
,

85 
	`F_ISSET
(
vp
, 
VC_BUFFER
Ë? &vp->
buf„r
 : 
NULL
,

86 &
vp
->
m_°¨t
, &vp->
m_föÆ
, 1))

88 
vp
->
m_°¨t
 = vp->
m_föÆ
;

89 i‡(
	`INTERRUPTED
(
•
))

93 
	}
}

111 
	$öc_buf
(
•
, 
vp
)

112 
SCR
 *
•
;

113 
VICMD
 *
vp
;

115 
CHAR_T
 
v
;

117 
vp
->
buf„r
) {

119 
v
 = '2';

122 
v
 = '3';

125 
v
 = '4';

128 
v
 = '5';

131 
v
 = '6';

134 
v
 = '7';

137 
v
 = '8';

140 
v
 = '9';

145 
	`VIP
(
•
)->
sdŸ
.
buf„r
 = 
vp
->buf„∏
v
;

146 
	}
}

	@vi/v_redraw.c

10 
	~"c⁄fig.h
"

12 #i‚de‡
löt


13 c⁄° 
	gsccsid
[] = "@(#)v_redraw.c 10.6 (Berkeley) 3/6/96";

16 
	~<sys/ty≥s.h
>

17 
	~<sys/queue.h
>

18 
	~<sys/time.h
>

20 
	~<bô°rög.h
>

21 
	~<limôs.h
>

22 
	~<°dio.h
>

24 
	~"../comm⁄/comm⁄.h
"

25 
	~"vi.h
"

34 
	$v_ªdøw
(
•
, 
vp
)

35 
SCR
 *
•
;

36 
VICMD
 *
vp
;

38  (
•
->
gp
->
	`s¸_ª‰esh
(sp, 1));

39 
	}
}

	@vi/v_replace.c

10 
	~"c⁄fig.h
"

12 #i‚de‡
löt


13 c⁄° 
	gsccsid
[] = "@(#)v_replace.c 10.17 (Berkeley) 6/30/96";

16 
	~<sys/ty≥s.h
>

17 
	~<sys/queue.h
>

18 
	~<sys/time.h
>

20 
	~<bô°rög.h
>

21 
	~<˘y≥.h
>

22 
	~<î∫o.h
>

23 
	~<limôs.h
>

24 
	~<°dio.h
>

25 
	~<°dlib.h
>

26 
	~<°rög.h
>

28 
	~"../comm⁄/comm⁄.h
"

29 
	~"vi.h
"

46 
	$v_ª∂a˚
(
•
, 
vp
)

47 
SCR
 *
•
;

48 
VICMD
 *
vp
;

50 
EVENT
 
ev
;

51 
VI_PRIVATE
 *
vù
;

52 
TEXT
 *
ç
;

53 
size_t
 
bÀn
, 
Àn
;

54 
u_l⁄g
 
˙t
;

55 
quŸe
, 
rvÆ
;

56 *
bp
, *
p
;

58 
vù
 = 
	`VIP
(
•
);

71 i‡(
	`db_gë
(
•
, 
vp
->
m_°¨t
.
 o
, 
DBG_FATAL
, &
p
, &
Àn
))

73 i‡(
Àn
 == 0) {

74 
	`msgq
(
•
, 
M_BERR
, "186|No charactersÅoÑeplace");

88 
˙t
 = 
	`F_ISSET
(
vp
, 
VC_C1SET
Ë? vp->
cou¡
 : 1;

89 
vp
->
m_°›
.
 o
 = vp->
m_°¨t
.lno;

90 
vp
->
m_°›
.
˙o
 = vp->
m_°¨t
.˙ÿ+ 
˙t
 - 1;

91 i‡(
vp
->
m_°›
.
˙o
 > 
Àn
 - 1) {

92 
	`v_eﬁ
(
•
, &
vp
->
m_°¨t
);

100 
quŸe
 = 0;

101 i‡(!
	`F_ISSET
(
vp
, 
VC_ISDOT
)) {

102 
•
->
showmode
 = 
SM_REPLACE
;

103 i‡(
	`vs_ª‰esh
(
•
, 0))

105 
√xt
: i‡(
	`v_evít_gë
(
•
, &
ev
, 0, 0))

108 
ev
.
e_evít
) {

109 
E_CHARACTER
:

114 i‡(!
quŸe
) {

115 i‡(
ev
.
e_vÆue
 =
K_VLNEXT
) {

116 
quŸe
 = 1;

117 
√xt
;

119 i‡(
ev
.
e_vÆue
 =
K_ESCAPE
)

122 
vù
->
æa°
 = 
ev
.
e_c
;

123 
vù
->
rvÆue
 = 
ev
.
e_vÆue
;

125 
E_ERR
:

126 
E_EOF
:

127 
	`F_SET
(
•
, 
SC_EXIT_FORCE
);

129 
E_INTERRUPT
:

132 
E_WRESIZE
:

134 
	`v_emsg
(
•
, 
NULL
, 
VIM_WRESIZE
);

136 
E_REPAINT
:

137 i‡(
	`vs_ª∑öt
(
•
, &
ev
))

139 
√xt
;

141 
	`v_evít_îr
(
•
, &
ev
);

147 
	`GET_SPACE_RET
(
•
, 
bp
, 
bÀn
, 
Àn
);

148 
	`memmove
(
bp
, 
p
, 
Àn
);

149 
p
 = 
bp
;

157 i‡(!
quŸe
 && 
vù
->
rvÆue
 =
K_CR
 || vù->rvÆuê=
K_NL
) {

159 
vp
->
m_°›
.
 o
 = vp->
m_°¨t
.lno + 1;

160 
vp
->
m_°›
.
˙o
 = 0;

163 i‡(
	`db_£t
(
•
, 
vp
->
m_°¨t
.
 o
, 
p
, vp->m_°¨t.
˙o
))

164 
îr_ªt
;

173 
p
 +
vp
->
m_°¨t
.
˙o
 + 
˙t
;

174 
Àn
 -
vp
->
m_°¨t
.
˙o
 + 
˙t
;

175 i‡(
Àn
 !0 && 
	`O_ISSET
(
•
, 
O_AUTOINDENT
))

176 ; 
Àn
 && 
	`isbœnk
(*
p
); --len, ++p);

178 i‡((
ç
 = 
	`ãxt_öô
(
•
, 
p
, 
Àn
,Üí)Ë=
NULL
)

179 
îr_ªt
;

181 i‡(
Àn
 !0 && 
	`O_ISSET
(
•
, 
O_AUTOINDENT
)) {

182 i‡(
	`v_txt_auto
(
•
, 
vp
->
m_°¨t
.
 o
, 
NULL
, 0, 
ç
))

183 
îr_ªt
;

184 
vp
->
m_°›
.
˙o
 = 
ç
->
ai
 ?Åp->ai - 1 : 0;

186 
vp
->
m_°›
.
˙o
 = 0;

188 
vp
->
m_°›
.
˙o
 = 
ç
->
ai
 ?Åp->ai - 1 : 0;

189 i‡(
	`db_≠≥nd
(
•
, 1, 
vp
->
m_°¨t
.
 o
, 
ç
->
lb
,Åp->
Àn
))

190 
îr_ªt
: 
rvÆ
 = 1;

192 
	`ãxt_‰ì
(
ç
);

193 
rvÆ
 = 0;

196 
	`mem£t
(
bp
 + 
vp
->
m_°¨t
.
˙o
, 
vù
->
æa°
, 
˙t
);

197 
rvÆ
 = 
	`db_£t
(
•
, 
vp
->
m_°¨t
.
 o
, 
bp
, 
Àn
);

199 
	`FREE_SPACE
(
•
, 
bp
, 
bÀn
);

201 
vp
->
m_föÆ
 = vp->
m_°›
;

202  (
rvÆ
);

203 
	}
}

	@vi/v_right.c

10 
	~"c⁄fig.h
"

12 #i‚de‡
löt


13 c⁄° 
	gsccsid
[] = "@(#)v_right.c 10.7 (Berkeley) 3/6/96";

16 
	~<sys/ty≥s.h
>

17 
	~<sys/queue.h
>

18 
	~<sys/time.h
>

20 
	~<bô°rög.h
>

21 
	~<limôs.h
>

22 
	~<°dio.h
>

24 
	~"../comm⁄/comm⁄.h
"

25 
	~"vi.h
"

34 
	$v_right
(
•
, 
vp
)

35 
SCR
 *
•
;

36 
VICMD
 *
vp
;

38 
size_t
 
Àn
;

39 
i£m±y
;

41 i‡(
	`db_egë
(
•
, 
vp
->
m_°¨t
.
 o
, 
NULL
, &
Àn
, &
i£m±y
)) {

42 i‡(
i£m±y
)

43 
eﬁ
;

48 i‡(
Àn
 == 0) {

49 
eﬁ
: 
	`v_eﬁ
(
•
, 
NULL
);

62 
vp
->
m_°›
.
˙o
 = vp->
m_°¨t
.cno +

63 (
	`F_ISSET
(
vp
, 
VC_C1SET
Ë? vp->
cou¡
 : 1);

64 i‡(
vp
->
m_°¨t
.
˙o
 =
Àn
 - 1 && !
	`ISMOTION
(vp)) {

65 
	`v_eﬁ
(
•
, 
NULL
);

68 i‡(
vp
->
m_°›
.
˙o
 >
Àn
) {

69 
vp
->
m_°›
.
˙o
 = 
Àn
 - 1;

70 
vp
->
m_föÆ
 = 
	`ISMOTION
(vpË? vp->
m_°¨t
 : vp->
m_°›
;

71 } i‡(
	`ISMOTION
(
vp
)) {

72 --
vp
->
m_°›
.
˙o
;

73 
vp
->
m_föÆ
 = vp->
m_°¨t
;

75 
vp
->
m_föÆ
 = vp->
m_°›
;

77 
	}
}

86 
	$v_dﬁœr
(
•
, 
vp
)

87 
SCR
 *
•
;

88 
VICMD
 *
vp
;

90 
size_t
 
Àn
;

91 
i£m±y
;

97 i‡((
	`F_ISSET
(
vp
, 
VC_C1SET
Ë? vp->
cou¡
 : 1) != 1) {

104 
vp
->
m_°›
.
˙o
 = 0;

105 i‡(
	`n⁄bœnk
(
•
, 
vp
->
m_°¨t
.
 o
, &vp->
m_°›
.
˙o
))

107 i‡(
	`ISMOTION
(
vp
Ë&& vp->
m_°¨t
.
˙o
 <vp->
m_°›
.cno)

108 
	`F_SET
(
vp
, 
VM_LMODE
);

110 --
vp
->
cou¡
;

111 i‡(
	`v_down
(
•
, 
vp
))

124 i‡(
	`db_egë
(
•
, 
vp
->
m_°›
.
 o
, 
NULL
, &
Àn
, &
i£m±y
)) {

125 i‡(!
i£m±y
)

127 
Àn
 = 0;

130 i‡(
Àn
 == 0) {

131 i‡(
	`ISMOTION
(
vp
Ë&& !
	`ISCMD
(vp->
rkp
, 'c')) {

132 
	`v_eﬁ
(
•
, 
NULL
);

142 
vp
->
m_°›
.
˙o
 = 
Àn
 ?Üen - 1 : 0;

143 
vp
->
m_föÆ
 = 
	`ISMOTION
(vpË? vp->
m_°¨t
 : vp->
m_°›
;

145 
	}
}

	@vi/v_screen.c

10 
	~"c⁄fig.h
"

12 #i‚de‡
löt


13 c⁄° 
	gsccsid
[] = "@(#)v_screen.c 10.10 (Berkeley) 4/27/96";

16 
	~<sys/ty≥s.h
>

17 
	~<sys/queue.h
>

18 
	~<sys/time.h
>

20 
	~<bô°rög.h
>

21 
	~<limôs.h
>

22 
	~<°dio.h
>

24 
	~"../comm⁄/comm⁄.h
"

25 
	~"vi.h
"

34 
	$v_s¸ìn
(
•
, 
vp
)

35 
SCR
 *
•
;

36 
VICMD
 *
vp
;

44 i‡(
	`F_ISSET
(
•
, 
SC_COMEDIT
)) {

45 
	`msgq
(
•
, 
M_ERR
,

54 i‡(
•
->
q
.
cqe_√xt
 !(*)&•->
gp
->
dq
)

55 
•
->
√xtdi•
 = sp->
q
.
cqe_√xt
;

56 i‡(
•
->
gp
->
dq
.
cqh_fú°
 == sp) {

57 
	`msgq
(
•
, 
M_ERR
, "187|No other screenÅo switchÅo");

60 
•
->
√xtdi•
 = sp->
gp
->
dq
.
cqh_fú°
;

62 
	`F_SET
(
•
->
√xtdi•
, 
SC_STATUS
);

63 
	`F_SET
(
•
, 
SC_SSWITCH
 | 
SC_STATUS
);

65 
	}
}

	@vi/v_scroll.c

10 
	~"c⁄fig.h
"

12 #i‚de‡
löt


13 c⁄° 
	gsccsid
[] = "@(#)v_scroll.c 10.9 (Berkeley) 4/27/96";

16 
	~<sys/ty≥s.h
>

17 
	~<sys/queue.h
>

18 
	~<sys/time.h
>

20 
	~<bô°rög.h
>

21 
	~<î∫o.h
>

22 
	~<limôs.h
>

23 
	~<°dio.h
>

25 
	~"../comm⁄/comm⁄.h
"

26 
	~"vi.h
"

28 
gŸo_adju°
 
__P
((
VICMD
 *));

70 
	$v_lgŸo
(
•
, 
vp
)

71 
SCR
 *
•
;

72 
VICMD
 *
vp
;

74 
ª˙o_t
 
∆öes
;

76 i‡(
	`F_ISSET
(
vp
, 
VC_C1SET
)) {

77 i‡(!
	`db_exi°
(
•
, 
vp
->
cou¡
)) {

82 i‡(
vp
->
cou¡
 == 1) {

83 i‡(
	`db_œ°
(
•
, &
∆öes
))

85 i‡(
∆öes
 == 0)

88 
	`v_eof
(
•
, &
vp
->
m_°¨t
);

91 
vp
->
m_°›
.
 o
 = vp->
cou¡
;

93 i‡(
	`db_œ°
(
•
, &
∆öes
))

95 
vp
->
m_°›
.
 o
 = 
∆öes
 ?Çlines : 1;

97 
	`gŸo_adju°
(
vp
);

99 
	}
}

109 
	$v_home
(
•
, 
vp
)

110 
SCR
 *
•
;

111 
VICMD
 *
vp
;

113 i‡(
	`vs_sm_posôi⁄
(
•
, &
vp
->
m_°›
,

114 
	`F_ISSET
(
vp
, 
VC_C1SET
Ë? vp->
cou¡
 - 1 : 0, 
P_TOP
))

116 
	`gŸo_adju°
(
vp
);

118 
	}
}

128 
	$v_middÀ
(
•
, 
vp
)

129 
SCR
 *
•
;

130 
VICMD
 *
vp
;

137 i‡(
	`vs_sm_posôi⁄
(
•
, &
vp
->
m_°›
, 0, 
P_MIDDLE
))

139 
	`gŸo_adju°
(
vp
);

141 
	}
}

151 
	$v_bŸtom
(
•
, 
vp
)

152 
SCR
 *
•
;

153 
VICMD
 *
vp
;

155 i‡(
	`vs_sm_posôi⁄
(
•
, &
vp
->
m_°›
,

156 
	`F_ISSET
(
vp
, 
VC_C1SET
Ë? vp->
cou¡
 - 1 : 0, 
P_BOTTOM
))

158 
	`gŸo_adju°
(
vp
);

160 
	}
}

163 
	$gŸo_adju°
(
vp
)

164 
VICMD
 *
vp
;

167 
vp
->
m_föÆ
 = vp->
m_°›
;

189 i‡(
	`ISMOTION
(
vp
)) {

190 
	`F_CLR
(
vp
, 
VM_RCM_MASK
);

191 
	`F_SET
(
vp
, 
VM_RCM_SETFNB
);

201 i‡(
vp
->
m_°›
.
 o
 < vp->
m_°¨t
.lno ||

202 
vp
->
m_°›
.
 o
 =vp->
m_°¨t
.lno &&

203 
vp
->
m_°›
.
˙o
 < vp->
m_°¨t
.cno) {

204 i‡(
	`ISCMD
(
vp
->
rkp
, 'y'Ë&& vp->
m_°›
.
 o
 =vp->
m_°¨t
.lno)

205 
vp
->
m_föÆ
 = vp->
m_°¨t
;

207 
vp
->
m_föÆ
 = vp->
m_°¨t
;

208 
	}
}

217 
	$v_up
(
•
, 
vp
)

218 
SCR
 *
•
;

219 
VICMD
 *
vp
;

221 
ª˙o_t
 
 o
;

223 
 o
 = 
	`F_ISSET
(
vp
, 
VC_C1SET
Ë? vp->
cou¡
 : 1;

224 i‡(
vp
->
m_°¨t
.
 o
 <=Üno) {

225 
	`v_sof
(
•
, &
vp
->
m_°¨t
);

228 
vp
->
m_°›
.
 o
 = vp->
m_°¨t
.lno -Üno;

229 
vp
->
m_föÆ
 = vp->
m_°›
;

231 
	}
}

241 
	$v_¸
(
•
, 
vp
)

242 
SCR
 *
•
;

243 
VICMD
 *
vp
;

246 i‡(
	`F_ISSET
(
•
, 
SC_COMEDIT
))

247  (
	`v_e˛_exec
(
•
));

250 i‡(
	`F_ISSET
(
•
, 
SC_SCRIPT
))

251  (
	`ss¸_exec
(
•
, 
vp
->
m_°¨t
.
 o
));

254  (
	`v_down
(
•
, 
vp
));

255 
	}
}

264 
	$v_down
(
•
, 
vp
)

265 
SCR
 *
•
;

266 
VICMD
 *
vp
;

268 
ª˙o_t
 
 o
;

270 
 o
 = 
vp
->
m_°¨t
. ÿ+ (
	`F_ISSET
(vp, 
VC_C1SET
Ë? vp->
cou¡
 : 1);

271 i‡(!
	`db_exi°
(
•
, 
 o
)) {

272 
	`v_eof
(
•
, &
vp
->
m_°¨t
);

275 
vp
->
m_°›
.
 o
 =Üno;

276 
vp
->
m_föÆ
 = 
	`ISMOTION
(vpË? vp->
m_°¨t
 : vp->
m_°›
;

278 
	}
}

287 
	$v_h∑geup
(
•
, 
vp
)

288 
SCR
 *
•
;

289 
VICMD
 *
vp
;

298 i‡(
	`F_ISSET
(
vp
, 
VC_C1SET
))

299 
•
->
defs¸ﬁl
 = 
vp
->
cou¡
;

300 i‡(
	`vs_sm_s¸ﬁl
(
•
, &
vp
->
m_°›
, sp->
defs¸ﬁl
, 
CNTRL_U
))

302 
vp
->
m_föÆ
 = vp->
m_°›
;

304 
	}
}

313 
	$v_h∑gedown
(
•
, 
vp
)

314 
SCR
 *
•
;

315 
VICMD
 *
vp
;

324 i‡(
	`F_ISSET
(
vp
, 
VC_C1SET
))

325 
•
->
defs¸ﬁl
 = 
vp
->
cou¡
;

326 i‡(
	`vs_sm_s¸ﬁl
(
•
, &
vp
->
m_°›
, sp->
defs¸ﬁl
, 
CNTRL_D
))

328 
vp
->
m_föÆ
 = vp->
m_°›
;

330 
	}
}

343 
	$v_∑gedown
(
•
, 
vp
)

344 
SCR
 *
•
;

345 
VICMD
 *
vp
;

347 
ª˙o_t
 
off£t
;

370 
off£t
 = (
	`F_ISSET
(
vp
, 
VC_C1SET
Ë? vp->
cou¡
 : 1Ë* (
	`IS_SPLIT
(
•
) ?

371 
	`MIN
(
•
->
t_maxrows
, 
	`O_VAL
(•, 
O_WINDOW
)) : O_VAL(sp, O_WINDOW));

372 
off£t
 = offset <= 2 ? 1 : offset - 2;

373 i‡(
	`vs_sm_s¸ﬁl
(
•
, &
vp
->
m_°›
, 
off£t
, 
CNTRL_F
))

375 
vp
->
m_föÆ
 = vp->
m_°›
;

377 
	}
}

391 
	$v_∑geup
(
•
, 
vp
)

392 
SCR
 *
•
;

393 
VICMD
 *
vp
;

395 
ª˙o_t
 
off£t
;

423 
off£t
 = (
	`F_ISSET
(
vp
, 
VC_C1SET
Ë? vp->
cou¡
 : 1Ë* (
	`IS_SPLIT
(
•
) ?

424 
	`MIN
(
•
->
t_maxrows
, 
	`O_VAL
(•, 
O_WINDOW
)) : O_VAL(sp, O_WINDOW));

425 
off£t
 = offset <= 2 ? 1 : offset - 2;

426 i‡(
	`vs_sm_s¸ﬁl
(
•
, &
vp
->
m_°›
, 
off£t
, 
CNTRL_B
))

428 
vp
->
m_föÆ
 = vp->
m_°›
;

430 
	}
}

439 
	$v_löeup
(
•
, 
vp
)

440 
SCR
 *
•
;

441 
VICMD
 *
vp
;

447 i‡(
	`vs_sm_s¸ﬁl
(
•
,

448 &
vp
->
m_°›
, 
	`F_ISSET
(vp, 
VC_C1SET
Ë? vp->
cou¡
 : 1, 
CNTRL_Y
))

450 
vp
->
m_föÆ
 = vp->
m_°›
;

452 
	}
}

461 
	$v_löedown
(
•
, 
vp
)

462 
SCR
 *
•
;

463 
VICMD
 *
vp
;

469 i‡(
	`vs_sm_s¸ﬁl
(
•
,

470 &
vp
->
m_°›
, 
	`F_ISSET
(vp, 
VC_C1SET
Ë? vp->
cou¡
 : 1, 
CNTRL_E
))

472 
vp
->
m_föÆ
 = vp->
m_°›
;

474 
	}
}

	@vi/v_search.c

10 
	~"c⁄fig.h
"

12 #i‚de‡
löt


13 c⁄° 
	gsccsid
[] = "@(#)v_search.c 10.18 (Berkeley) 9/19/96";

16 
	~<sys/ty≥s.h
>

17 
	~<sys/queue.h
>

18 
	~<sys/time.h
>

20 
	~<bô°rög.h
>

21 
	~<˘y≥.h
>

22 
	~<î∫o.h
>

23 
	~<limôs.h
>

24 
	~<°dio.h
>

25 
	~<°dlib.h
>

26 
	~<°rög.h
>

28 
	~"../comm⁄/comm⁄.h
"

29 
	~"vi.h
"

31 
v_exaddr
 
__P
((
SCR
 *, 
VICMD
 *, 
dú_t
));

32 
v_£¨ch
 
__P
((
SCR
 *, 
VICMD
 *, *, 
size_t
, 
u_öt
, 
dú_t
));

41 
	$v_£¨chb
(
•
, 
vp
)

42 
SCR
 *
•
;

43 
VICMD
 *
vp
;

45  (
	`v_exaddr
(
•
, 
vp
, 
BACKWARD
));

46 
	}
}

55 
	$v_£¨chf
(
•
, 
vp
)

56 
SCR
 *
•
;

57 
VICMD
 *
vp
;

59  (
	`v_exaddr
(
•
, 
vp
, 
FORWARD
));

60 
	}
}

67 
	$v_exaddr
(
•
, 
vp
, 
dú
)

68 
SCR
 *
•
;

69 
VICMD
 *
vp
;

70 
dú_t
 
dú
;

72 
EXCMDLIST
 
Áke
 = { "search" };

73 
EXCMD
 *
cmdp
;

74 
GS
 *
gp
;

75 
TEXT
 *
ç
;

76 
ª˙o_t
 
s_ o
;

77 
size_t
 
Àn
, 
s_˙o
, 
éí
;

78 
îr
, 
nb
, 
ty≥
;

79 *
cmd
, *
t
, 
buf
[20];

86 i‡(
	`F_ISSET
(
vp
, 
VC_ISDOT
))

87  (
	`v_£¨ch
(
•
, 
vp
,

88 
NULL
, 0, 
SEARCH_PARSE
 | 
SEARCH_MSG
 | 
SEARCH_SET
, 
dú
));

91 i‡(
	`v_tcmd
(
•
, 
vp
, 
dú
 =
BACKWARD
 ? 
CH_BSEARCH
 : 
CH_FSEARCH
,

92 
TXT_BS
 | 
TXT_CR
 | 
TXT_ESCAPE
 | 
TXT_PROMPT
 |

93 (
	`O_ISSET
(
•
, 
O_SEARCHINCR
Ë? 
TXT_SEARCHINCR
 : 0)))

96 
ç
 = 
•
->
tiq
.
cqh_fú°
;

99 i‡(
ç
->
ãrm
 =
TERM_BS
)

107 i‡(
ç
->
ãrm
 =
TERM_SEARCH
) {

108 
vp
->
m_°›
.
 o
 = 
•
->lno;

109 
vp
->
m_°›
.
˙o
 = 
•
->cno;

110 i‡(
	`ISMOTION
(
vp
))

111  (
	`v_c‹ª˘
(
•
, 
vp
, 0));

112 
vp
->
m_föÆ
 = vp->
m_°›
;

123 
gp
 = 
•
->gp;

124 
gp
->
excmd
.
˝
 = 
ç
->
lb
;

125 
gp
->
excmd
.
˛í
 = 
ç
->
Àn
;

126 
	`F_INIT
(&
gp
->
excmd
, 
E_VISEARCH
);

147 i‡(!
	`KEYS_WAITING
(
•
))

148 
	`F_SET
(&
gp
->
excmd
, 
E_SEARCH_WMSG
);

151 
s_ o
 = 
•
->
 o
;

152 
s_˙o
 = 
•
->
˙o
;

178 
cmdp
 = &
gp
->
excmd
;

179 i‡(
	`ex_ønge
(
•
, 
cmdp
, &
îr
))

186 
cmd
 = 
cmdp
->
˝
;

187 
Àn
 = 
cmdp
->
˛í
;

188 
gp
->
excmd
.
˛í
 = 0;

190 i‡(
îr
)

191 
îr2
;

194 
cmdp
->
addr˙t
) {

196 
vp
->
m_°›
 = 
cmdp
->
addr1
;

199 
vp
->
m_°›
 = 
cmdp
->
addr2
;

202 i‡(!
	`db_exi°
(
•
, 
vp
->
m_°›
.
 o
)) {

203 
	`ex_badaddr
(
•
, &
Áke
,

204 
vp
->
m_°›
.
 o
 =0 ? 
A_ZERO
 : 
A_EOF
, 
NUM_OK
);

205 
îr2
;

214 i‡(
	`ISMOTION
(
vp
))

215  (
	`v_c‹ª˘
(
•
, 
vp
, 
	`F_ISSET
(
cmdp
, 
E_DELTA
)));

222 
nb
 = 
	`F_ISSET
(
cmdp
, 
E_DELTA
);

225 i‡(
Àn
 != 0) {

226 i‡(*
cmd
 != 'z')

227 
îr1
;

230 
t
 = 
cmd
 + 1, 
éí
 = 
Àn
 - 1;Ålen > 0; ++t, --tlen)

231 i‡(!
	`isdigô
(*
t
))

233 i‡(
éí
 &&

234 (*
t
 == '-' || *t == '.' || *t == '+' || *t == '^')) {

235 ++
t
;

236 --
éí
;

237 
ty≥
 = 1;

239 
ty≥
 = 0;

240 i‡(
éí
)

241 
îr1
;

244 
nb
 = 0;

247 i‡(!
ty≥
 &&

248 
	`v_evít_push
(
•
, 
NULL
, "+", 1, 
CH_NOMAP
 | 
CH_QUOTED
))

252 i‡(
	`v_evít_push
(
•
, 
NULL
, 
cmd
, 
Àn
, 
CH_NOMAP
 | 
CH_QUOTED
))

256 
éí
 = 
	`¢¥ötf
(
buf
,

257 (
buf
), "%lu", (
u_l⁄g
)
vp
->
m_°›
.
 o
);

258 i‡(
	`v_evít_push
(
•
, 
NULL
, 
buf
, 
éí
, 
CH_NOMAP
 | 
CH_QUOTED
))

262 
	`F_SET
(
	`VIP
(
•
), 
VIP_S_REFRESH
);

266 
vp
->
m_föÆ
 = vp->
m_°›
;

267 i‡(
nb
) {

268 
	`F_CLR
(
vp
, 
VM_RCM_MASK
);

269 
	`F_SET
(
vp
, 
VM_RCM_SETFNB
);

273 
îr1
: 
	`msgq
(
•
, 
M_ERR
,

275 
îr2
: 
vp
->
m_föÆ
.
 o
 = 
s_ o
;

276 
vp
->
m_föÆ
.
˙o
 = 
s_˙o
;

278 
	}
}

287 
	$v_£¨chN
(
•
, 
vp
)

288 
SCR
 *
•
;

289 
VICMD
 *
vp
;

291 
dú_t
 
dú
;

293 
•
->
£¨chdú
) {

294 
BACKWARD
:

295 
dú
 = 
FORWARD
;

297 
FORWARD
:

298 
dú
 = 
BACKWARD
;

301 
dú
 = 
•
->
£¨chdú
;

304  (
	`v_£¨ch
(
•
, 
vp
, 
NULL
, 0, 
SEARCH_PARSE
, 
dú
));

305 
	}
}

314 
	$v_£¨chn
(
•
, 
vp
)

315 
SCR
 *
•
;

316 
VICMD
 *
vp
;

318  (
	`v_£¨ch
(
•
, 
vp
, 
NULL
, 0, 
SEARCH_PARSE
, sp->
£¨chdú
));

319 
	}
}

328 
	$v_£¨chw
(
•
, 
vp
)

329 
SCR
 *
•
;

330 
VICMD
 *
vp
;

332 
size_t
 
bÀn
, 
Àn
;

333 
rvÆ
;

334 *
bp
;

336 
Àn
 = 
	`VIP
(
•
)->
kÀn
 + (
RE_WSTART
Ë+ (
RE_WSTOP
);

337 
	`GET_SPACE_RET
(
•
, 
bp
, 
bÀn
, 
Àn
);

338 
Àn
 = 
	`¢¥ötf
(
bp
, 
bÀn
, "%s%s%s", 
RE_WSTART
, 
	`VIP
(
•
)->
keyw
, 
RE_WSTOP
);

340 
rvÆ
 = 
	`v_£¨ch
(
•
, 
vp
, 
bp
, 
Àn
, 
SEARCH_SET
, 
FORWARD
);

342 
	`FREE_SPACE
(
•
, 
bp
, 
bÀn
);

343  (
rvÆ
);

344 
	}
}

351 
	$v_£¨ch
(
•
, 
vp
, 
±∫
, 
∂í
, 
Êags
, 
dú
)

352 
SCR
 *
•
;

353 
VICMD
 *
vp
;

354 
u_öt
 
Êags
;

355 *
±∫
;

356 
size_t
 
∂í
;

357 
dú_t
 
dú
;

360 
	`LF_SET
(
SEARCH_MSG
);

363 i‡(
	`ISMOTION
(
vp
))

364 
	`LF_SET
(
SEARCH_EOL
);

370 i‡(!
	`KEYS_WAITING
(
•
))

371 
	`LF_SET
(
SEARCH_WMSG
);

373 
dú
) {

374 
BACKWARD
:

375 i‡(
	`b_£¨ch
(
•
,

376 &
vp
->
m_°¨t
, &vp->
m_°›
, 
±∫
, 
∂í
, 
NULL
, 
Êags
))

379 
FORWARD
:

380 i‡(
	`f_£¨ch
(
•
,

381 &
vp
->
m_°¨t
, &vp->
m_°›
, 
±∫
, 
∂í
, 
NULL
, 
Êags
))

384 
NOTSET
:

385 
	`msgq
(
•
, 
M_ERR
, "189|NoÖrevious searchÖattern");

388 
	`ab‹t
();

392 i‡(
	`ISMOTION
(
vp
)) {

393 i‡(
	`v_c‹ª˘
(
•
, 
vp
, 0))

396 
vp
->
m_föÆ
 = vp->
m_°›
;

398 
	}
}

420 
	$v_c‹ª˘
(
•
, 
vp
, 
isdñè
)

421 
SCR
 *
•
;

422 
VICMD
 *
vp
;

423 
isdñè
;

425 
dú_t
 
dú
;

426 
MARK
 
m
;

427 
size_t
 
Àn
;

442 i‡(
vp
->
m_°¨t
.
 o
 =vp->
m_°›
.lno &&

443 
vp
->
m_°¨t
.
˙o
 =vp->
m_°›
.cno) {

444 
	`msgq
(
•
, 
M_BERR
, "190|Search wrappedÅo originalÖosition");

453 i‡(
isdñè
)

454 
	`F_SET
(
vp
, 
VM_LMODE
);

464 i‡(
vp
->
m_°¨t
.
 o
 > vp->
m_°›
.lno ||

465 
vp
->
m_°¨t
.
 o
 =vp->
m_°›
.lno &&

466 
vp
->
m_°¨t
.
˙o
 > vp->
m_°›
.cno) {

467 
m
 = 
vp
->
m_°¨t
;

468 
vp
->
m_°¨t
 = vp->
m_°›
;

469 
vp
->
m_°›
 = 
m
;

470 
dú
 = 
BACKWARD
;

472 
dú
 = 
FORWARD
;

482 
vp
->
m_föÆ
 = vp->
m_°¨t
;

488 i‡(
isdñè
)

502 i‡(
vp
->
m_°¨t
.
 o
 < vp->
m_°›
. ÿ&& vp->m_°›.
˙o
 == 0) {

503 i‡(
	`db_gë
(
•
, --
vp
->
m_°›
.
 o
, 
DBG_FATAL
, 
NULL
, &
Àn
))

505 
vp
->
m_°›
.
˙o
 = 
Àn
 ?Üen - 1 : 0;

506 
Àn
 = 0;

507 i‡(
	`n⁄bœnk
(
•
, 
vp
->
m_°¨t
.
 o
, &
Àn
))

509 i‡(
vp
->
m_°¨t
.
˙o
 <
Àn
)

510 
	`F_SET
(
vp
, 
VM_LMODE
);

512 --
vp
->
m_°›
.
˙o
;

515 
	}
}

	@vi/v_section.c

10 
	~"c⁄fig.h
"

12 #i‚de‡
löt


13 c⁄° 
	gsccsid
[] = "@(#)v_section.c 10.7 (Berkeley) 3/6/96";

16 
	~<sys/ty≥s.h
>

17 
	~<sys/queue.h
>

18 
	~<sys/time.h
>

20 
	~<bô°rög.h
>

21 
	~<limôs.h
>

22 
	~<°dio.h
>

23 
	~<°rög.h
>

25 
	~"../comm⁄/comm⁄.h
"

26 
	~"vi.h
"

65 
	$v_£˘i⁄f
(
•
, 
vp
)

66 
SCR
 *
•
;

67 
VICMD
 *
vp
;

69 
ª˙o_t
 
˙t
, 
 o
;

70 
size_t
 
Àn
;

71 *
p
, *
li°
, *
Õ
;

74 i‡((
li°
 = 
	`O_STR
(
•
, 
O_SECTIONS
)Ë=
NULL
)

85 i‡(
	`ISMOTION
(
vp
))

86 i‡(
vp
->
m_°¨t
.
˙o
 == 0)

87 
	`F_SET
(
vp
, 
VM_LMODE
);

89 
vp
->
m_°›
 = vp->
m_°¨t
;

90 
vp
->
m_°›
.
˙o
 = 0;

91 i‡(
	`n⁄bœnk
(
•
, 
vp
->
m_°›
.
 o
, &vp->m_°›.
˙o
))

93 i‡(
vp
->
m_°¨t
.
˙o
 <vp->
m_°›
.cno)

94 
	`F_SET
(
vp
, 
VM_LMODE
);

97 
˙t
 = 
	`F_ISSET
(
vp
, 
VC_C1SET
Ë? vp->
cou¡
 : 1;

98 
 o
 = 
vp
->
m_°¨t
. o; !
	`db_gë
(
•
, ++ o, 0, &
p
, &
Àn
);) {

99 i‡(
Àn
 == 0)

101 i‡(
p
[0] ='{' || 
	`ISMOTION
(
vp
) &&Ö[0] == '}') {

102 i‡(!--
˙t
) {

103 i‡(
p
[0] == '{')

104 
adju°1
;

105 
adju°2
;

116 i‡(
p
[0] == '\014') {

117 i‡(!--
˙t
)

118 
adju°1
;

121 i‡(
p
[0] !'.' || 
Àn
 < 2)

123 
Õ
 = 
li°
; *lp != '\0';Üp += 2 * (*lp))

124 i‡(
Õ
[0] =
p
[1] &&

125 (
Õ
[1] =' ' && 
Àn
 =2 ||Üp[1] =
p
[2]) &&

126 !--
˙t
) {

133 
adju°1
: i‡(
	`ISMOTION
(
vp
))

134 
ªt1
;

136 
adju°2
: 
vp
->
m_°›
.
 o
 =Üno;

137 
vp
->
m_°›
.
˙o
 = 0;

138 
ªt2
;

143 i‡(
vp
->
m_°¨t
.
 o
 ==Üno - 1) {

144 
	`v_eof
(
•
, 
NULL
);

148 
ªt1
: i‡(
	`db_gë
(
•
, --
 o
, 
DBG_FATAL
, 
NULL
, &
Àn
))

150 
vp
->
m_°›
.
 o
 =Üno;

151 
vp
->
m_°›
.
˙o
 = 
Àn
 ?Üen - 1 : 0;

157 
ªt2
: i‡(
	`ISMOTION
(
vp
)) {

158 
vp
->
m_föÆ
 = vp->
m_°¨t
;

159 i‡(
	`F_ISSET
(
vp
, 
VM_LMODE
))

160 
vp
->
m_föÆ
.
˙o
 = 0;

162 
vp
->
m_föÆ
 = vp->
m_°›
;

164 
	}
}

173 
	$v_£˘i⁄b
(
•
, 
vp
)

174 
SCR
 *
•
;

175 
VICMD
 *
vp
;

177 
size_t
 
Àn
;

178 
ª˙o_t
 
˙t
, 
 o
;

179 *
p
, *
li°
, *
Õ
;

182 i‡(
vp
->
m_°¨t
.
 o
 <= 1) {

183 
	`v_sof
(
•
, 
NULL
);

188 i‡((
li°
 = 
	`O_STR
(
•
, 
O_SECTIONS
)Ë=
NULL
)

191 
˙t
 = 
	`F_ISSET
(
vp
, 
VC_C1SET
Ë? vp->
cou¡
 : 1;

192 
 o
 = 
vp
->
m_°¨t
. o; !
	`db_gë
(
•
, -- o, 0, &
p
, &
Àn
);) {

193 i‡(
Àn
 == 0)

195 i‡(
p
[0] == '{') {

196 i‡(!--
˙t
)

197 
adju°1
;

207 i‡(
p
[0] == '\014') {

208 i‡(!--
˙t
)

209 
adju°1
;

212 i‡(
p
[0] !'.' || 
Àn
 < 2)

214 
Õ
 = 
li°
; *lp != '\0';Üp += 2 * (*lp))

215 i‡(
Õ
[0] =
p
[1] &&

216 (
Õ
[1] =' ' && 
Àn
 =2 ||Üp[1] =
p
[2]) &&

217 !--
˙t
) {

218 
adju°1
: 
vp
->
m_°›
.
 o
 =Üno;

219 
vp
->
m_°›
.
˙o
 = 0;

220 
ªt1
;

228 
vp
->
m_°›
.
 o
 = 1;

229 
vp
->
m_°›
.
˙o
 = 0;

241 
ªt1
: i‡(
vp
->
m_°¨t
.
˙o
 == 0) {

242 
	`F_CLR
(
vp
, 
VM_RCM_MASK
);

243 
	`F_SET
(
vp
, 
VM_RCM_SETFNB
);

245 --
vp
->
m_°¨t
.
 o
;

246 
	`F_SET
(
vp
, 
VM_LMODE
);

248 --
vp
->
m_°¨t
.
˙o
;

250 
vp
->
m_föÆ
 = vp->
m_°›
;

252 
	}
}

	@vi/v_sentence.c

10 
	~"c⁄fig.h
"

12 #i‚de‡
löt


13 c⁄° 
	gsccsid
[] = "@(#)v_sentence.c 10.7 (Berkeley) 3/6/96";

16 
	~<sys/ty≥s.h
>

17 
	~<sys/queue.h
>

18 
	~<sys/time.h
>

20 
	~<bô°rög.h
>

21 
	~<˘y≥.h
>

22 
	~<limôs.h
>

23 
	~<°dio.h
>

25 
	~"../comm⁄/comm⁄.h
"

26 
	~"vi.h
"

55 
	$v_£¡í˚f
(
•
, 
vp
)

56 
SCR
 *
•
;

57 
VICMD
 *
vp
;

59 íum { 
BLANK
, 
NONE
, 
PERIOD
 } 
°©e
;

60 
VCS
 
cs
;

61 
size_t
 
Àn
;

62 
u_l⁄g
 
˙t
;

64 
cs
.
cs_ o
 = 
vp
->
m_°¨t
.
 o
;

65 
cs
.
cs_˙o
 = 
vp
->
m_°¨t
.
˙o
;

66 i‡(
	`cs_öô
(
•
, &
cs
))

69 
˙t
 = 
	`F_ISSET
(
vp
, 
VC_C1SET
Ë? vp->
cou¡
 : 1;

77 i‡(
cs
.
cs_Êags
 =
CS_EMP
 || cs.cs_Êag†=0 && 
	`isbœnk
(cs.
cs_ch
)) {

78 i‡(
	`cs_fbœnk
(
•
, &
cs
))

80 i‡(--
˙t
 == 0) {

81 i‡(
vp
->
m_°¨t
.
 o
 !
cs
.
cs_ o
 ||

82 
vp
->
m_°¨t
.
˙o
 !
cs
.
cs_˙o
)

83 
okªt
;

88 
°©e
 = 
NONE
;;) {

89 i‡(
	`cs_√xt
(
•
, &
cs
))

91 i‡(
cs
.
cs_Êags
 =
CS_EOF
)

93 i‡(
cs
.
cs_Êags
 =
CS_EOL
) {

94 i‡((
°©e
 =
PERIOD
 || sèã =
BLANK
Ë&& --
˙t
 == 0) {

95 i‡(
	`cs_√xt
(
•
, &
cs
))

97 i‡(
cs
.
cs_Êags
 == 0 &&

98 
	`isbœnk
(
cs
.
cs_ch
Ë&& 
	`cs_fbœnk
(
•
, &cs))

100 
okªt
;

102 
°©e
 = 
NONE
;

105 i‡(
cs
.
cs_Êags
 =
CS_EMP
) {

106 i‡(--
˙t
 == 0)

107 
okªt
;

108 i‡(
	`cs_fbœnk
(
•
, &
cs
))

110 i‡(--
˙t
 == 0)

111 
okªt
;

112 
°©e
 = 
NONE
;

115 
cs
.
cs_ch
) {

119 
°©e
 = 
PERIOD
;

125 i‡(
°©e
 !
PERIOD
)

126 
°©e
 = 
NONE
;

129 i‡(
°©e
 =
PERIOD
)

130 
°©e
 = 
BLANK
;

133 i‡(
°©e
 =
PERIOD
) {

134 
°©e
 = 
BLANK
;

137 i‡(
°©e
 =
BLANK
 && --
˙t
 == 0) {

138 i‡(
	`cs_fbœnk
(
•
, &
cs
))

140 
okªt
;

144 
°©e
 = 
NONE
;

150 i‡(
vp
->
m_°¨t
.
 o
 =
cs
.
cs_ o
 && vp->m_°¨t.
˙o
 =cs.
cs_˙o
) {

151 
	`v_eof
(
•
, 
NULL
);

155 
okªt
: 
vp
->
m_°›
.
 o
 = 
cs
.
cs_ o
;

156 
vp
->
m_°›
.
˙o
 = 
cs
.
cs_˙o
;

171 i‡(
	`ISMOTION
(
vp
)) {

172 i‡(
vp
->
m_°¨t
.
˙o
 == 0 &&

173 (
cs
.
cs_Êags
 !0 || 
vp
->
m_°›
.
˙o
 == 0)) {

174 i‡(
vp
->
m_°¨t
.
 o
 < vp->
m_°›
.lno) {

175 i‡(
	`db_gë
(
•
,

176 --
vp
->
m_°›
.
 o
, 
DBG_FATAL
, 
NULL
, &
Àn
))

178 
vp
->
m_°›
.
˙o
 = 
Àn
 ?Üen - 1 : 0;

180 
	`F_SET
(
vp
, 
VM_LMODE
);

182 --
vp
->
m_°›
.
˙o
;

183 
vp
->
m_föÆ
 = vp->
m_°¨t
;

185 
vp
->
m_föÆ
 = vp->
m_°›
;

187 
	}
}

196 
	$v_£¡í˚b
(
•
, 
vp
)

197 
SCR
 *
•
;

198 
VICMD
 *
vp
;

200 
VCS
 
cs
;

201 
ª˙o_t
 
¶no
;

202 
size_t
 
Àn
, 
s˙o
;

203 
u_l⁄g
 
˙t
;

204 
œ°
;

210 i‡(
vp
->
m_°¨t
.
 o
 =1 && vp->m_°¨t.
˙o
 == 0)

213 
cs
.
cs_ o
 = 
vp
->
m_°¨t
.
 o
;

214 
cs
.
cs_˙o
 = 
vp
->
m_°¨t
.
˙o
;

215 i‡(
	`cs_öô
(
•
, &
cs
))

218 
˙t
 = 
	`F_ISSET
(
vp
, 
VC_C1SET
Ë? vp->
cou¡
 : 1;

231 i‡(
cs
.
cs_Êags
 =
CS_EMP
) {

232 i‡(
	`cs_bbœnk
(
•
, &
cs
))

235 i‡(
	`cs_¥ev
(
•
, &
cs
))

237 i‡(
cs
.
cs_Êags
 !
CS_EOL
)

240 } i‡(
cs
.
cs_Êags
 =0 && !
	`isbœnk
(cs.
cs_ch
))

242 i‡(
	`cs_¥ev
(
•
, &
cs
))

244 i‡(
cs
.
cs_Êags
 !0 || 
	`isbœnk
(cs.
cs_ch
))

248 
œ°
 = 0;;) {

249 i‡(
	`cs_¥ev
(
•
, &
cs
))

251 i‡(
cs
.
cs_Êags
 =
CS_SOF
)

253 i‡(
cs
.
cs_Êags
 =
CS_EOL
) {

254 
œ°
 = 1;

257 i‡(
cs
.
cs_Êags
 =
CS_EMP
) {

258 i‡(--
˙t
 == 0)

259 
ªt
;

260 i‡(
	`cs_bbœnk
(
•
, &
cs
))

262 
œ°
 = 0;

265 
cs
.
cs_ch
) {

269 i‡(!
œ°
 || --
˙t
 != 0) {

270 
œ°
 = 0;

274 
ªt
: 
¶no
 = 
cs
.
cs_ o
;

275 
s˙o
 = 
cs
.
cs_˙o
;

282 i‡(
	`cs_√xt
(
•
, &
cs
))

284 } !
cs
.
cs_Êags
 &&

285 (
cs
.
cs_ch
 == ')' || cs.cs_ch == ']' ||

286 
cs
.
cs_ch
 == '"' || cs.cs_ch == '\''));

287 i‡((
cs
.
cs_Êags
 || 
	`isbœnk
(cs.
cs_ch
)) &&

288 
	`cs_fbœnk
(
•
, &
cs
))

297 i‡(
vp
->
m_°¨t
.
 o
 !
cs
.
cs_ o
 ||

298 
vp
->
m_°¨t
.
˙o
 !
cs
.
cs_˙o
)

299 
okªt
;

306 i‡(
	`cs_¥ev
(
•
, &
cs
))

308 i‡(
cs
.
cs_Êags
 =
CS_EOL
)

310 i‡(
cs
.
cs_Êags
 =0 && 
	`isbœnk
(cs.
cs_ch
))

314 i‡(
cs
.
cs_Êags
 =
CS_EMP
)

315 
okªt
;

318 ++
˙t
;

319 
cs
.
cs_ o
 = 
¶no
;

320 
cs
.
cs_˙o
 = 
s˙o
;

321 
œ°
 = 0;

324 
œ°
 = 1;

327 
œ°
 =

328 
cs
.
cs_Êags
 =
CS_EOL
 || 
	`isbœnk
(cs.
cs_ch
) ||

329 
cs
.
cs_ch
 == ')' || cs.cs_ch == ']' ||

330 
cs
.
cs_ch
 == '"' || cs.cs_ch == '\'' ? 1 : 0;

334 
okªt
: 
vp
->
m_°›
.
 o
 = 
cs
.
cs_ o
;

335 
vp
->
m_°›
.
˙o
 = 
cs
.
cs_˙o
;

347 i‡(
	`ISMOTION
(
vp
))

348 i‡(
vp
->
m_°¨t
.
˙o
 == 0 &&

349 (
cs
.
cs_Êags
 !0 || 
vp
->
m_°›
.
˙o
 == 0)) {

350 i‡(
	`db_gë
(
•
,

351 --
vp
->
m_°¨t
.
 o
, 
DBG_FATAL
, 
NULL
, &
Àn
))

353 
vp
->
m_°¨t
.
˙o
 = 
Àn
 ?Üen - 1 : 0;

354 
	`F_SET
(
vp
, 
VM_LMODE
);

356 --
vp
->
m_°¨t
.
˙o
;

357 
vp
->
m_föÆ
 = vp->
m_°›
;

359 
	}
}

	@vi/v_status.c

10 
	~"c⁄fig.h
"

12 #i‚de‡
löt


13 c⁄° 
	gsccsid
[] = "@(#)v_status.c 10.9 (Berkeley) 5/15/96";

16 
	~<sys/ty≥s.h
>

17 
	~<sys/queue.h
>

18 
	~<sys/°©.h
>

19 
	~<sys/time.h
>

21 
	~<bô°rög.h
>

22 
	~<limôs.h
>

23 
	~<°dio.h
>

25 
	~"../comm⁄/comm⁄.h
"

26 
	~"vi.h
"

35 
	$v_°©us
(
•
, 
vp
)

36 
SCR
 *
•
;

37 
VICMD
 *
vp
;

39 ()
	`msgq_°©us
(
•
, 
vp
->
m_°¨t
.
 o
, 
MSTAT_SHOWLAST
);

41 
	}
}

	@vi/v_txt.c

10 
	~"c⁄fig.h
"

12 #i‚de‡
löt


13 c⁄° 
	gsccsid
[] = "@(#)v_txt.c 10.87 (Berkeley) 10/13/96";

16 
	~<sys/ty≥s.h
>

17 
	~<sys/queue.h
>

18 
	~<sys/°©.h
>

19 
	~<sys/time.h
>

21 
	~<bô°rög.h
>

22 
	~<˘y≥.h
>

23 
	~<î∫o.h
>

24 
	~<limôs.h
>

25 
	~<°dio.h
>

26 
	~<°dlib.h
>

27 
	~<°rög.h
>

28 
	~<uni°d.h
>

30 
	~"../comm⁄/comm⁄.h
"

31 
	~"vi.h
"

33 
txt_abbªv
 
__P
((
SCR
 *, 
TEXT
 *, 
CHAR_T
 *, , *, *));

34 
txt_ai_ªsﬁve
 
__P
((
SCR
 *, 
TEXT
 *, *));

35 
TEXT
 *
txt_backup
 
__P
((
SCR
 *, 
TEXTH
 *, TEXT *, 
u_öt32_t
 *));

36 
txt_dít
 
__P
((
SCR
 *, 
TEXT
 *, ));

37 
txt_em¨k
 
__P
((
SCR
 *, 
TEXT
 *, 
size_t
));

38 
txt_îr
 
__P
((
SCR
 *, 
TEXTH
 *));

39 
txt_fc
 
__P
((
SCR
 *, 
TEXT
 *, *));

40 
txt_fc_cﬁ
 
__P
((
SCR
 *, , 
ARGS
 **));

41 
txt_hex
 
__P
((
SCR
 *, 
TEXT
 *));

42 
txt_ösch
 
__P
((
SCR
 *, 
TEXT
 *, 
CHAR_T
 *, 
u_öt
));

43 
txt_i§ch
 
__P
((
SCR
 *, 
VICMD
 *, 
TEXT
 *, 
u_öt8_t
 *));

44 
txt_m≠_íd
 
__P
((
SCR
 *));

45 
txt_m≠_öô
 
__P
((
SCR
 *));

46 
txt_m¨gö
 
__P
((
SCR
 *, 
TEXT
 *, TEXT *, *, 
u_öt32_t
));

47 
txt_nom‹ech
 
__P
((
SCR
 *));

48 
txt_Rªsﬁve
 
__P
((
SCR
 *, 
TEXTH
 *, 
TEXT
 *, c⁄° 
size_t
));

49 
txt_ªsﬁve
 
__P
((
SCR
 *, 
TEXTH
 *, 
u_öt32_t
));

50 
txt_showm©ch
 
__P
((
SCR
 *, 
TEXT
 *));

51 
txt_unm≠
 
__P
((
SCR
 *, 
TEXT
 *, 
u_öt32_t
 *));

54 #i‡
deföed
(
DEBUG
) && 0

55 #unde‡
CH_CURSOR


56 
	#CH_CURSOR
 '+'

	)

66 
	$v_tcmd
(
•
, 
vp
, 
¥om±
, 
Êags
)

67 
SCR
 *
•
;

68 
VICMD
 *
vp
;

69 
ARG_CHAR_T
 
¥om±
;

70 
u_öt
 
Êags
;

73 
vp
->
m_föÆ
.
 o
 = 
•
->lno;

74 
vp
->
m_föÆ
.
˙o
 = 
•
->cno;

77 i‡(
	`txt_m≠_öô
(
•
))

81 
•
->
 o
 = 
TMAP
[0].lno;

82 
•
->
˙o
 = 0;

85 
	`F_SET
(
•
, 
SC_TINPUT_INFO
);

88 
	`LF_SET
(
TXT_APPENDEOL
 |

89 
TXT_CR
 | 
TXT_ESCAPE
 | 
TXT_INFOLINE
 | 
TXT_MAPINPUT
);

90 i‡(
	`O_ISSET
(
•
, 
O_ALTWERASE
))

91 
	`LF_SET
(
TXT_ALTWERASE
);

92 i‡(
	`O_ISSET
(
•
, 
O_TTYWERASE
))

93 
	`LF_SET
(
TXT_TTYWERASE
);

96 i‡(
	`v_txt
(
•
, 
vp
, 
NULL
, NULL, 0, 
¥om±
, 0, 1, 
Êags
))

100 
	`F_CLR
(
•
, 
SC_TINPUT_INFO
);

103 i‡(
	`txt_m≠_íd
(
•
))

106 i‡(
	`IS_ONELINE
(
•
))

107 
	`F_SET
(
•
, 
SC_SCR_REDRAW
);

110 
•
->
 o
 = 
vp
->
m_föÆ
.lno;

111 
•
->
˙o
 = 
vp
->
m_föÆ
.cno;

114 
	}
}

121 
	$txt_m≠_öô
(
•
)

122 
SCR
 *
•
;

124 
SMAP
 *
esmp
;

125 
VI_PRIVATE
 *
vù
;

127 
vù
 = 
	`VIP
(
•
);

128 i‡(!
	`IS_ONELINE
(
•
)) {

137 
vù
->
sv_tm_ o
 = 
TMAP
->
 o
;

138 
vù
->
sv_tm_soff
 = 
TMAP
->
soff
;

139 
vù
->
sv_tm_coff
 = 
TMAP
->
coff
;

140 
vù
->
sv_t_maxrows
 = 
•
->
t_maxrows
;

141 
vù
->
sv_t_mörows
 = 
•
->
t_mörows
;

142 
vù
->
sv_t_rows
 = 
•
->
t_rows
;

148 i‡(
	`IS_SMALL
(
•
))

149 
esmp
 =

150 
HMAP
 + (
•
->
t_maxrows
 - 1); 
TMAP
 < 
esmp
; ++TMAP) {

151 
TMAP
[1].
 o
 = TMAP[0].lno + 1;

152 
TMAP
[1].
coff
 = 
HMAP
->coff;

153 
TMAP
[1].
soff
 = 1;

157 
TMAP
[1].
 o
 = TMAP[0].lno + 1;

158 
TMAP
[1].
soff
 = 1;

159 
TMAP
[1].
coff
 = 0;

160 
	`SMAP_FLUSH
(&
TMAP
[1]);

161 ++
TMAP
;

164 
•
->
t_rows
 = sp->
t_mörows
 = ++•->
t_maxrows
;

167 
	}
}

174 
	$txt_m≠_íd
(
•
)

175 
SCR
 *
•
;

177 
VI_PRIVATE
 *
vù
;

178 
size_t
 
˙t
;

180 
vù
 = 
	`VIP
(
•
);

181 i‡(!
	`IS_ONELINE
(
•
)) {

183 
•
->
t_rows
 = 
vù
->
sv_t_rows
;

184 
•
->
t_mörows
 = 
vù
->
sv_t_mörows
;

185 
•
->
t_maxrows
 = 
vù
->
sv_t_maxrows
;

191 i‡(
	`IS_SMALL
(
•
)) {

192 
˙t
 = 
•
->
t_rows
; c¡ <•->
t_maxrows
; ++cnt) {

193 ()
•
->
gp
->
	`s¸_move
(•, 
˙t
, 0);

194 ()
•
->
gp
->
	`s¸_˛π€ﬁ
(sp);

196 
TMAP
 = 
HMAP
 + (
•
->
t_rows
 - 1);

198 --
TMAP
;

205 i‡(!
	`O_ISSET
(
•
, 
O_LEFTRIGHT
))

206 
vù
->
sv_tm_ o
 !
TMAP
->
 o
 ||

207 
vù
->
sv_tm_soff
 !
TMAP
->
soff
)

208 i‡(
	`vs_sm_1down
(
•
))

218 
	`VI_SCR_CFLUSH
(
vù
);

219 
	`F_SET
(
vù
, 
VIP_CUR_INVALID
);

222 
	}
}

228 
	#UNMAP_TST
 \

229 
	`FL_ISSET
(
ec_Êags
, 
EC_MAPINPUT
Ë&& 
	`LF_ISSET
(
TXT_INFOLINE
)

	)

235 
	#UPDATE_POSITION
(
•
, 
ç
) { \

236 (
•
)->
 o
 = (
ç
)->lno; \

237 (
•
)->
˙o
 = (
ç
)->cno; \

238 }

	)

248 
	$v_txt
(
•
, 
vp
, 
tm
, 
Õ
, 
Àn
, 
¥om±
, 
ai_löe
, 
rcou¡
, 
Êags
)

249 
SCR
 *
•
;

250 
VICMD
 *
vp
;

251 
MARK
 *
tm
;

252 c⁄° *
Õ
;

253 
size_t
 
Àn
;

254 
ARG_CHAR_T
 
¥om±
;

255 
ª˙o_t
 
ai_löe
;

256 
u_l⁄g
 
rcou¡
;

257 
u_öt32_t
 
Êags
;

259 
EVENT
 
ev
, *
evp
;

260 
EVENT
 
fc
;

261 
GS
 *
gp
;

262 
TEXT
 *
¡p
, *
ç
;

263 
TEXT
 
aô
;

264 
TEXT
 
wmt
;

265 
TEXTH
 *
tiqh
;

266 
VI_PRIVATE
 *
vù
;

267 
abb_t
 
abb
;

268 
ˇøt_t
 
ˇøt
;

269 
quŸe_t
 
quŸe
;

270 
size_t
 
owrôe
, 
ö£π
;

271 
size_t
 
m¨gö
;

272 
size_t
 
rcﬁ
;

273 
size_t
 
tcﬁ
;

274 
u_öt32_t
 
ec_Êags
;

275 
	#IS_RESTART
 0x01

	)

276 
	#IS_RUNNING
 0x02

	)

277 
u_öt8_t
 
is_Êags
;

278 
ab˙t
, 
ab_tu∫off
;

279 
fûec_ªdøw
;

280 
hex˙t
;

281 
showm©ch
;

282 
wm_£t
, 
wm_skù
;

283 
max
, 
tmp
;

284 *
p
;

286 
gp
 = 
•
->gp;

287 
vù
 = 
	`VIP
(
•
);

293 
	`F_SET
(
•
, 
SC_TINPUT
);

301 
tiqh
 = &
•
->
tiq
;

302 i‡(
tiqh
->
cqh_fú°
 != (*)tiqh) {

303 
ç
 = 
tiqh
->
cqh_fú°
;

304 i‡(
ç
->
q
.
cqe_√xt
 !(*)
tiqh
 ||Åp->
lb_Àn
 < 
Àn
 + 32) {

305 
	`ãxt_l‰ì
(
tiqh
);

306 
√wç
;

308 
ç
->
ai
 =Åp->
ö£π
 =Åp->
off£t
 =Åp->
owrôe
 = 0;

309 i‡(
Õ
 !
NULL
) {

310 
ç
->
Àn
 =Üen;

311 
	`memmove
(
ç
->
lb
, 
Õ
, 
Àn
);

313 
ç
->
Àn
 = 0;

315 
√wç
: i‡((
ç
 = 
	`ãxt_öô
(
•
, 
Õ
, 
Àn
,Üí + 32)Ë=
NULL
)

317 
	`CIRCLEQ_INSERT_HEAD
(
tiqh
, 
ç
, 
q
);

321 
ç
->
ãrm
 = 
TERM_OK
;

324 
ç
->
 o
 = 
•
->lno;

325 
ç
->
˙o
 = 
•
->cno;

333 i‡(
Àn
) {

334 i‡(
	`LF_ISSET
(
TXT_OVERWRITE
)) {

335 
ç
->
owrôe
 = (
tm
->
˙o
 -Åp->cno) + 1;

336 
ç
->
ö£π
 = (
Àn
 - 
tm
->
˙o
) - 1;

338 
ç
->
ö£π
 = 
Àn
 -Åp->
˙o
;

340 i‡(
	`LF_ISSET
(
TXT_EMARK
Ë&& 
	`txt_em¨k
(
•
, 
ç
, 
tm
->
˙o
))

357 i‡(
	`LF_ISSET
(
TXT_AUTOINDENT
Ë&& 
ai_löe
 !
OOBLNO
) {

358 i‡(
	`v_txt_auto
(
•
, 
ai_löe
, 
NULL
, 0, 
ç
))

360 
ç
->
˙o
 =Åp->
ai
;

367 i‡(
	`LF_ISSET
(
TXT_AICHARS
)) {

368 
ç
->
off£t
 = 0;

369 
ç
->
ai
 =Åp->
˙o
;

371 
ç
->
off£t
 =Åp->
˙o
;

375 i‡(
	`LF_ISSET
(
TXT_PROMPT
)) {

376 
ç
->
lb
[ç->
˙o
++] = 
¥om±
;

377 ++
ç
->
Àn
;

378 ++
ç
->
off£t
;

391 i‡(
	`LF_ISSET
(
TXT_APPENDEOL
)) {

392 
ç
->
lb
[ç->
˙o
] = 
CH_CURSOR
;

393 ++
ç
->
Àn
;

394 ++
ç
->
ö£π
;

395 ()
	`vs_ch™ge
(
•
, 
ç
->
 o
, 
LINE_RESET
);

423 
wm_£t
 = 
wm_skù
 = 0;

424 i‡(
	`LF_ISSET
(
TXT_WRAPMARGIN
))

425 i‡((
m¨gö
 = 
	`O_VAL
(
•
, 
O_WRAPMARGIN
)) != 0)

426 
m¨gö
 = 
•
->
cﬁs
 - margin;

428 
m¨gö
 = 
	`O_VAL
(
•
, 
O_WRAPLEN
);

430 
m¨gö
 = 0;

433 
ab˙t
 = 
ab_tu∫off
 = 0;

434 
abb
 = 
	`F_ISSET
(
gp
, 
G_ABBREV
) &&

435 
	`LF_ISSET
(
TXT_MAPINPUT
Ë? 
AB_INWORD
 : 
AB_NOTSET
;

457 
rcﬁ
 = 0;

458 i‡(
	`LF_ISSET
(
TXT_REPLAY
)) {

459 
abb
 = 
AB_NOTSET
;

460 
	`LF_CLR
(
TXT_RECORD
);

464 
quŸe
 = 
Q_NOTSET
;

465 
ˇøt
 = 
C_NOTSET
;

466 
	`FL_INIT
(
is_Êags
,

467 
	`LF_ISSET
(
TXT_SEARCHINCR
Ë? 
IS_RESTART
 | 
IS_RUNNING
 : 0);

468 
fûec_ªdøw
 = 
hex˙t
 = 
showm©ch
 = 0;

471 
ec_Êags
 = 
	`LF_ISSET
(
TXT_MAPINPUT
Ë? 
EC_MAPINPUT
 : 0;

474 
	`UPDATE_POSITION
(
•
, 
ç
);

475 i‡(
	`vs_ª‰esh
(
•
, 1))

479 i‡(
	`F_ISSET
(
vp
, 
VC_ISDOT
))

480 
ª∂ay
;

483 
evp
 = &
ev
;

484 
√xt
: i‡(
	`v_evít_gë
(
•
, 
evp
, 0, 
ec_Êags
))

493 i‡(
fûec_ªdøw
 && !
	`F_ISSET
(
•
, 
SC_SCR_EXWROTE
)) {

494 
fûec_ªdøw
 = 0;

496 
fc
.
e_evít
 = 
E_REPAINT
;

497 
fc
.
e_Êno
 = 
vù
->
tŸÆcou¡
 >=

498 
•
->
rows
 ? 1 : sp->row†- 
vù
->
tŸÆcou¡
;

499 
fc
.
e_éno
 = 
•
->
rows
;

500 
vù
->
löecou¡
 = vù->
lc⁄töue
 = vù->
tŸÆcou¡
 = 0;

501 ()
	`vs_ª∑öt
(
•
, &
fc
);

502 ()
	`vs_ª‰esh
(
•
, 1);

506 
evp
->
e_evít
) {

507 
E_CHARACTER
:

509 
E_ERR
:

510 
E_EOF
:

511 
	`F_SET
(
•
, 
SC_EXIT_FORCE
);

513 
E_INTERRUPT
:

521 
k_esˇ≥
;

522 
E_REPAINT
:

523 i‡(
	`vs_ª∑öt
(
•
, &
ev
))

525 
√xt
;

526 
E_WRESIZE
:

528 
	`v_emsg
(
•
, 
NULL
, 
VIM_WRESIZE
);

529 
k_esˇ≥
;

531 
	`v_evít_îr
(
•
, 
evp
);

532 
k_esˇ≥
;

542 i‡(
rcﬁ
 =0 && !
	`LF_ISSET
(
TXT_REPLAY
Ë&& 
evp
->
e_c
 == '\0') {

543 i‡(
vù
->
ªp
 =
NULL
)

544 
d⁄e
;

546 
abb
 = 
AB_NOTSET
;

547 
	`LF_CLR
(
TXT_RECORD
);

548 
	`LF_SET
(
TXT_REPLAY
);

549 
ª∂ay
;

559 i‡(
quŸe
 =
Q_NOTSET
) {

560 
L__˚dô
, 
L__fûec
;

562 
L__˚dô
 = 
L__fûec
 = 0;

563 i‡(
	`LF_ISSET
(
TXT_CEDIT
Ë&& 
	`O_STR
(
•
, 
O_CEDIT
Ë!
NULL
 &&

564 
	`O_STR
(
•
, 
O_CEDIT
)[0] =
evp
->
e_c
)

565 
L__˚dô
 = 1;

566 i‡(
	`LF_ISSET
(
TXT_FILEC
Ë&& 
	`O_STR
(
•
, 
O_FILEC
Ë!
NULL
 &&

567 
	`O_STR
(
•
, 
O_FILEC
)[0] =
evp
->
e_c
)

568 
L__fûec
 = 1;

569 i‡(
L__˚dô
 =1 && (
L__fûec
 =0 || 
ç
->
˙o
 =ç->
off£t
)) {

570 
ç
->
ãrm
 = 
TERM_CEDIT
;

571 
k_esˇ≥
;

573 i‡(
L__fûec
 == 1) {

574 i‡(
	`txt_fc
(
•
, 
ç
, &
fûec_ªdøw
))

575 
îr
;

576 
ªsﬁve
;

581 
	#MAX_ABBREVIATION_EXPANSION
 256

	)

582 i‡(
	`F_ISSET
(&
evp
->
e_ch
, 
CH_ABBREVIATED
)) {

583 i‡(++
ab˙t
 > 
MAX_ABBREVIATION_EXPANSION
) {

584 i‡(
	`v_evít_Êush
(
•
, 
CH_ABBREVIATED
))

585 
	`msgq
(
•
, 
M_ERR
,

587 
ab˙t
 = 0;

588 i‡(
	`LF_ISSET
(
TXT_REPLAY
))

589 
d⁄e
;

590 
ªsﬁve
;

593 
ab˙t
 = 0;

596 i‡(
	`LF_ISSET
(
TXT_RECORD
)) {

597 
	`BINC_GOTO
(
•
, 
vù
->
ªp
,

598 
vù
->
ªp_Àn
, (
rcﬁ
 + 1Ë* (
EVENT
));

599 
vù
->
ªp
[
rcﬁ
++] = *
evp
;

602 
ª∂ay
: i‡(
	`LF_ISSET
(
TXT_REPLAY
))

603 
evp
 = 
vù
->
ªp
 + 
rcﬁ
++;

606 i‡(
wm_skù
) {

607 
wm_skù
 = 0;

608 i‡(
evp
->
e_c
 == ' ')

609 
ªsﬁve
;

613 i‡(
	`F_ISSET
(&
evp
->
e_ch
, 
CH_QUOTED
))

614 
ösq_ch
;

629 i‡(
quŸe
 =
Q_BTHIS
 || quŸê=
Q_VTHIS
) {

630 
	`FL_CLR
(
ec_Êags
, 
EC_QUOTED
);

631 i‡(
	`LF_ISSET
(
TXT_MAPINPUT
))

632 
	`FL_SET
(
ec_Êags
, 
EC_MAPINPUT
);

634 i‡(
quŸe
 =
Q_BTHIS
 &&

635 (
evp
->
e_vÆue
 =
K_VERASE
 ||Évp->e_vÆuê=
K_VKILL
)) {

636 
quŸe
 = 
Q_NOTSET
;

637 --
ç
->
˙o
;

638 ++
ç
->
owrôe
;

639 
ö¶_ch
;

641 i‡(
quŸe
 =
Q_VTHIS
 && 
evp
->
e_vÆue
 !
K_NL
) {

642 
quŸe
 = 
Q_NOTSET
;

643 
ö¶_ch
;

645 
quŸe
 = 
Q_NOTSET
;

654 i‡(
hex˙t
 > 1 && !
	`isxdigô
(
evp
->
e_c
)) {

655 
hex˙t
 = 0;

656 i‡(
	`txt_hex
(
•
, 
ç
))

657 
îr
;

660 
evp
->
e_vÆue
) {

661 
K_CR
:

662 
K_NL
:

664 
k_¸
: i‡(
	`LF_ISSET
(
TXT_CR
)) {

672 i‡(
	`LF_ISSET
(
TXT_INFOLINE
)) {

673 i‡(
	`vs_ch™ge
(
•
, 
ç
->
 o
, 
LINE_RESET
))

674 
îr
;

675 } i‡(
	`F_ISSET
(
•
, 
SC_SCRIPT
))

676 ()
	`v_evít_push
(
•
, 
NULL
, "\r", 1, 
CH_NOMAP
);

679 i‡(
ç
->
˙o
 <ç->
off£t
)

680 
ç
->
ãrm
 = 
TERM_CR
;

686 i‡(
	`FL_ISSET
(
is_Êags
, 
IS_RUNNING
) &&

687 
ç
->
˙o
 >ç->
off£t
 + 1)

688 
ç
->
ãrm
 = 
TERM_SEARCH
;

690 
k_esˇ≥
;

693 
	#LINE_RESOLVE
 { \

698 i‡(
abb
 =
AB_INWORD
 && \

699 !
	`LF_ISSET
(
TXT_REPLAY
Ë&& 
	`F_ISSET
(
gp
, 
G_ABBREV
)) { \

700 i‡(
	`txt_abbªv
(
•
, 
ç
, &
evp
->
e_c
, \

701 
	`LF_ISSET
(
TXT_INFOLINE
), &
tmp
, \

702 &
ab_tu∫off
)) \

703 
îr
; \

704 i‡(
tmp
) { \

705 i‡(
	`LF_ISSET
(
TXT_RECORD
)) \

706 
rcﬁ
 -
tmp
 + 1; \

707 
ªsﬁve
; \

710 i‡(
abb
 !
AB_NOTSET
) \

711 
abb
 = 
AB_NOTWORD
; \

712 i‡(
UNMAP_TST
) \

713 
	`txt_unm≠
(
•
, 
ç
, &
ec_Êags
); \

720 i‡(
	`LF_ISSET
(
TXT_APPENDEOL
Ë&& 
ç
->
ö£π
 > 0) { \

721 --
ç
->
Àn
; \

722 --
ç
->
ö£π
; \

724 }

	)

725 
LINE_RESOLVE
;

731 
ç
->
sv_Àn
 =Åp->
Àn
;

732 
ç
->
sv_˙o
 =Åp->
˙o
;

733 
ç
->
Àn
 =Åp->
˙o
;

736 i‡(
	`vs_ch™ge
(
•
, 
ç
->
 o
, 
LINE_RESET
))

737 
îr
;

748 
ç
->
R_îa£
 = 0;

749 
owrôe
 = 
ç
->owrite;

750 
ö£π
 = 
ç
->insert;

751 i‡(
	`LF_ISSET
(
TXT_REPLACE
Ë&& 
owrôe
 != 0) {

752 
p
 = 
ç
->
lb
 +Åp->
˙o
; 
owrôe
 > 0 && 
	`isbœnk
(*p);

753 ++
p
, --
owrôe
, ++
ç
->
R_îa£
);

754 i‡(
owrôe
 == 0)

755 ; 
ö£π
 > 0 && 
	`isbœnk
(*
p
);

756 ++
p
, ++
ç
->
R_îa£
, --
ö£π
);

758 
p
 = 
ç
->
lb
 +Åp->
˙o
 + 
owrôe
;

759 i‡(
	`O_ISSET
(
•
, 
O_AUTOINDENT
))

760 ; 
ö£π
 > 0 &&

761 
	`isbœnk
(*
p
); ++p, --
ö£π
);

762 
owrôe
 = 0;

771 i‡((
¡p
 = 
	`ãxt_öô
(
•
, 
p
,

772 
ö£π
 + 
owrôe
, in£π + owrôê+ 32)Ë=
NULL
)

773 
îr
;

774 
	`CIRCLEQ_INSERT_TAIL
(&
•
->
tiq
, 
¡p
, 
q
);

777 
¡p
->
ö£π
 = insert;

778 
¡p
->
owrôe
 = owrite;

779 
¡p
->
 o
 = 
ç
->lno + 1;

788 i‡(
	`LF_ISSET
(
TXT_AUTOINDENT
)) {

789 i‡(
ˇøt
 =
C_NOCHANGE
) {

790 i‡(
	`v_txt_auto
(
•
, 
OOBLNO
, &
aô
,áô.
ai
, 
¡p
))

791 
îr
;

792 
	`FREE_SPACE
(
•
, 
aô
.
lb
,áô.
lb_Àn
);

794 i‡(
	`v_txt_auto
(
•
, 
OOBLNO
, 
ç
,Åp->
˙o
, 
¡p
))

795 
îr
;

796 
ˇøt
 = 
C_NOTSET
;

800 
¡p
->
˙o
 =Çç->
ai
;

807 i‡(
wm_£t
) {

808 i‡(
wmt
.
off£t
 != 0 ||

809 
wmt
.
owrôe
 !0 || wmt.
ö£π
 != 0) {

810 
	#WMTSPACE
 
wmt
.
off£t
 + wmt.
owrôe
 + wmt.
ö£π


	)

811 
	`BINC_GOTO
(
•
, 
¡p
->
lb
,

812 
¡p
->
lb_Àn
,Çç->
Àn
 + 
WMTSPACE
 + 32);

813 
	`memmove
(
¡p
->
lb
 +Çç->
˙o
, 
wmt
.lb, 
WMTSPACE
);

814 
¡p
->
Àn
 +
WMTSPACE
;

815 
¡p
->
˙o
 +
wmt
.
off£t
;

816 
¡p
->
owrôe
 = 
wmt
.owrite;

817 
¡p
->
ö£π
 = 
wmt
.insert;

819 
wm_£t
 = 0;

823 i‡(
¡p
->
owrôe
 =0 &&Çç->
ö£π
 == 0) {

824 
	`BINC_GOTO
(
•
, 
¡p
->
lb
,Çç->
lb_Àn
,Çç->
Àn
 + 1);

825 
	`LF_SET
(
TXT_APPENDEOL
);

826 
¡p
->
lb
[¡p->
˙o
] = 
CH_CURSOR
;

827 ++
¡p
->
ö£π
;

828 ++
¡p
->
Àn
;

832 
ç
 = 
¡p
;

833 i‡(
	`vs_ch™ge
(
•
, 
ç
->
 o
, 
LINE_INSERT
))

834 
îr
;

836 
ªsﬁve
;

837 
K_ESCAPE
:

838 i‡(!
	`LF_ISSET
(
TXT_ESCAPE
))

839 
ös_ch
;

842 i‡(
rcou¡
 > 1) {

843 --
rcou¡
;

845 
rcﬁ
 = 0;

846 
abb
 = 
AB_NOTSET
;

847 
	`LF_CLR
(
TXT_RECORD
);

848 
	`LF_SET
(
TXT_REPLAY
);

854 i‡(
	`LF_ISSET
(
TXT_ADDNEWLINE
))

855 
k_¸
;

861 i‡(
	`LF_ISSET
(
TXT_REPLACE
)) {

862 
ç
->
ö£π
 =Åp->
owrôe
;

863 
ç
->
owrôe
 = 0;

864 
	`LF_CLR
(
TXT_REPLACE
);

866 
ª∂ay
;

870 i‡(
ç
->
˙o
 <ç->
off£t
)

871 
ç
->
ãrm
 = 
TERM_ESC
;

877 i‡(
	`FL_ISSET
(
is_Êags
, 
IS_RUNNING
Ë&& 
ç
->
˙o
 >ç->
off£t
 + 1)

878 
ç
->
ãrm
 = 
TERM_SEARCH
;

880 
k_esˇ≥
: 
LINE_RESOLVE
;

886 i‡(
	`LF_ISSET
(
TXT_REPLACE
))

887 
	`txt_Rªsﬁve
(
•
, &•->
tiq
, 
ç
, 
Àn
);

893 i‡(
ç
->
owrôe
) {

894 i‡(
ç
->
ö£π
)

895 
	`memmove
(
ç
->
lb
 +Åp->
˙o
,

896 
ç
->
lb
 +Åp->
˙o
 +Åp->
owrôe
,Åp->
ö£π
);

897 
ç
->
Àn
 -ç->
owrôe
;

909 i‡(
	`LF_ISSET
(
TXT_RESOLVE
)) {

910 i‡(
	`txt_ªsﬁve
(
•
, &•->
tiq
, 
Êags
))

911 
îr
;

913 
	`BINC_GOTO
(
•
, 
ç
->
lb
,Åp->
lb_Àn
,Åp->
Àn
 + 1);

914 
ç
->
lb
[ç->
Àn
] = '\0';

921 i‡(
ç
->
˙o
 != 0)

922 --
ç
->
˙o
;

925 i‡(
	`vs_ch™ge
(
•
, 
ç
->
 o
, 
LINE_RESET
))

927 
d⁄e
;

928 
K_CARAT
:

929 i‡(
ç
->
˙o
 <ç->
ai
 && 
	`LF_ISSET
(
TXT_AUTOINDENT
))

930 
ˇøt
 = 
C_CARATSET
;

931 
ös_ch
;

932 
K_ZERO
:

933 i‡(
ç
->
˙o
 <ç->
ai
 && 
	`LF_ISSET
(
TXT_AUTOINDENT
))

934 
ˇøt
 = 
C_ZEROSET
;

935 
ös_ch
;

936 
K_CNTRLD
:

944 i‡(!
	`LF_ISSET
(
TXT_AUTOINDENT
))

945 
ös_ch
;

946 i‡(
ç
->
˙o
 == 0)

947 
ªsﬁve
;

949 
ˇøt
) {

950 
C_CARATSET
:

951 i‡(
ç
->
ai
 =0 ||Åp->
˙o
 >Åp->aò+Åp->
off£t
 + 1)

952 
ös_ch
;

955 
aô
.
lb
 = 
NULL
;

956 
aô
.
lb_Àn
 = 0;

957 
	`BINC_GOTO
(
•
, 
aô
.
lb
,áô.
lb_Àn
, 
ç
->
ai
);

958 
	`memmove
(
aô
.
lb
, 
ç
->lb,Åp->
ai
);

959 
aô
.
ai
 =áô.
Àn
 = 
ç
->ai;

961 
ˇøt
 = 
C_NOCHANGE
;

962 
À·m¨gö
;

963 
C_ZEROSET
:

964 i‡(
ç
->
ai
 =0 ||Åp->
˙o
 >Åp->aò+Åp->
off£t
 + 1)

965 
ös_ch
;

967 
ˇøt
 = 
C_NOTSET
;

968 
À·m¨gö
: 
ç
->
lb
[ç->
˙o
 - 1] = ' ';

969 
ç
->
owrôe
 +ç->
˙o
 -Åp->
off£t
;

970 
ç
->
ai
 = 0;

971 
ç
->
˙o
 =Åp->
off£t
;

973 
C_NOTSET
:

974 i‡(
ç
->
ai
 =0 ||Åp->
˙o
 >Åp->aò+Åp->
off£t
)

975 
ös_ch
;

977 ()
	`txt_dít
(
•
, 
ç
, 0);

980 
	`ab‹t
();

983 
K_VERASE
:

985 i‡(
ç
->
˙o
 <ç->
off£t
 && 
	`LF_ISSET
(
TXT_BS
)) {

986 
ç
->
ãrm
 = 
TERM_BS
;

987 
d⁄e
;

994 i‡(
ç
->
˙o
 == 0) {

995 i‡((
¡p
 =

996 
	`txt_backup
(
•
, &•->
tiq
, 
ç
, &
Êags
)Ë=
NULL
)

997 
îr
;

998 
ç
 = 
¡p
;

1003 i‡(
ç
->
˙o
 <ç->
off£t
) {

1004 i‡(!
	`LF_ISSET
(
TXT_REPLAY
))

1005 
	`txt_nom‹ech
(
•
);

1010 --
ç
->
˙o
;

1022 i‡(
	`FL_ISSET
(
is_Êags
, 
IS_RUNNING
))

1023 
ç
->
lb
[ç->
˙o
] = ' ';

1033 ++
ç
->
owrôe
;

1034 i‡(
ç
->
˙o
 <Åp->
ai
)

1035 --
ç
->
ai
;

1038 i‡(
	`FL_ISSET
(
is_Êags
, 
IS_RUNNING
))

1039 
	`FL_SET
(
is_Êags
, 
IS_RESTART
);

1041 
K_VWERASE
:

1046 i‡(
ç
->
˙o
 == 0) {

1047 i‡((
¡p
 =

1048 
	`txt_backup
(
•
, &•->
tiq
, 
ç
, &
Êags
)Ë=
NULL
)

1049 
îr
;

1050 
ç
 = 
¡p
;

1056 i‡(
ç
->
˙o
 <ç->
off£t
) {

1057 i‡(!
	`LF_ISSET
(
TXT_REPLAY
))

1058 
	`txt_nom‹ech
(
•
);

1070 i‡(
ç
->
ai
 &&Åp->
˙o
 >Åp->ai)

1071 
max
 = 
ç
->
ai
;

1073 
ç
->
ai
 = 0;

1074 
max
 = 
ç
->
off£t
;

1078 
ç
->
˙o
 > 
max
 && 
	`isbœnk
—p->
lb
[tp->cno - 1])) {

1079 --
ç
->
˙o
;

1080 ++
ç
->
owrôe
;

1082 i‡(
ç
->
˙o
 =
max
)

1105 i‡(
	`LF_ISSET
(
TXT_TTYWERASE
))

1106 
ç
->
˙o
 > 
max
) {

1107 --
ç
->
˙o
;

1108 ++
ç
->
owrôe
;

1109 i‡(
	`FL_ISSET
(
is_Êags
, 
IS_RUNNING
))

1110 
ç
->
lb
[ç->
˙o
] = ' ';

1111 i‡(
	`isbœnk
(
ç
->
lb
[ç->
˙o
 - 1]))

1115 i‡(
	`LF_ISSET
(
TXT_ALTWERASE
)) {

1116 --
ç
->
˙o
;

1117 ++
ç
->
owrôe
;

1118 i‡(
	`FL_ISSET
(
is_Êags
, 
IS_RUNNING
))

1119 
ç
->
lb
[ç->
˙o
] = ' ';

1120 i‡(
	`isbœnk
(
ç
->
lb
[ç->
˙o
 - 1]))

1123 i‡(
ç
->
˙o
 > 
max
)

1124 
tmp
 = 
	`öw‹d
(
ç
->
lb
[ç->
˙o
 - 1]);

1125 
ç
->
˙o
 > 
max
) {

1126 --
ç
->
˙o
;

1127 ++
ç
->
owrôe
;

1128 i‡(
	`FL_ISSET
(
is_Êags
, 
IS_RUNNING
))

1129 
ç
->
lb
[ç->
˙o
] = ' ';

1130 i‡(
tmp
 !
	`öw‹d
(
ç
->
lb
[ç->
˙o
 - 1])

1131 || 
	`isbœnk
(
ç
->
lb
[ç->
˙o
 - 1]))

1137 i‡(
	`FL_ISSET
(
is_Êags
, 
IS_RUNNING
))

1138 
	`FL_SET
(
is_Êags
, 
IS_RESTART
);

1140 
K_VKILL
:

1147 i‡(
ç
->
˙o
 == 0) {

1148 i‡((
¡p
 =

1149 
	`txt_backup
(
•
, &•->
tiq
, 
ç
, &
Êags
)Ë=
NULL
)

1150 
îr
;

1151 
ç
 = 
¡p
;

1155 i‡(
ç
->
˙o
 <ç->
off£t
) {

1156 i‡(!
	`LF_ISSET
(
TXT_REPLAY
))

1157 
	`txt_nom‹ech
(
•
);

1169 i‡(
ç
->
ai
 &&Åp->
˙o
 >Åp->ai)

1170 
max
 = 
ç
->
ai
;

1172 
ç
->
ai
 = 0;

1173 
max
 = 
ç
->
off£t
;

1175 
ç
->
owrôe
 +ç->
˙o
 - 
max
;

1181 i‡(
	`FL_ISSET
(
is_Êags
, 
IS_RUNNING
))

1183 
ç
->
lb
[--ç->
˙o
] = ' ';

1184 } 
ç
->
˙o
 > 
max
);

1186 
ç
->
˙o
 = 
max
;

1189 i‡(
	`FL_ISSET
(
is_Êags
, 
IS_RUNNING
))

1190 
	`FL_SET
(
is_Êags
, 
IS_RESTART
);

1192 
K_CNTRLT
:

1193 i‡(!
	`LF_ISSET
(
TXT_CNTRLT
))

1194 
ös_ch
;

1195 i‡(
	`txt_dít
(
•
, 
ç
, 1))

1196 
îr
;

1197 
ebuf_chk
;

1198 
K_RIGHTBRACE
:

1199 
K_RIGHTPAREN
:

1200 i‡(
	`LF_ISSET
(
TXT_SHOWMATCH
))

1201 
showm©ch
 = 1;

1202 
ös_ch
;

1203 
K_BACKSLASH
:

1226 
quŸe
 = 
Q_BNEXT
;

1227 
ösq_ch
;

1228 
K_VLNEXT
:

1229 
evp
->
e_c
 = '^';

1230 
quŸe
 = 
Q_VNEXT
;

1237 
	`FL_SET
(
ec_Êags
, 
EC_QUOTED
);

1238 
	`FL_CLR
(
ec_Êags
, 
EC_MAPINPUT
);

1245 
ö¶_ch
;

1246 
K_HEXCHAR
:

1247 
hex˙t
 = 1;

1248 
ösq_ch
;

1250 
ös_ch
:

1263 i‡(
	`LF_ISSET
(
TXT_BEAUTIFY
Ë&& 
	`is˙ål
(
evp
->
e_c
) &&

1264 
evp
->
e_vÆue
 !
K_FORMFEED
 &&Évp->e_vÆuê!
K_TAB
) {

1265 
	`msgq
(
•
, 
M_BERR
,

1267 i‡(
	`LF_ISSET
(
TXT_REPLAY
))

1268 
d⁄e
;

1272 
ösq_ch
:

1278 i‡(!
	`öw‹d
(
evp
->
e_c
)) {

1279 i‡(
abb
 =
AB_INWORD
 &&

1280 !
	`LF_ISSET
(
TXT_REPLAY
Ë&& 
	`F_ISSET
(
gp
, 
G_ABBREV
)) {

1281 i‡(
	`txt_abbªv
(
•
, 
ç
, &
evp
->
e_c
,

1282 
	`LF_ISSET
(
TXT_INFOLINE
), &
tmp
, &
ab_tu∫off
))

1283 
îr
;

1284 i‡(
tmp
) {

1285 i‡(
	`LF_ISSET
(
TXT_RECORD
))

1286 
rcﬁ
 -
tmp
 + 1;

1287 
ªsﬁve
;

1290 i‡(
	`isbœnk
(
evp
->
e_c
Ë&& 
UNMAP_TST
)

1291 
	`txt_unm≠
(
•
, 
ç
, &
ec_Êags
);

1293 i‡(
abb
 !
AB_NOTSET
)

1294 
abb
 = 
	`öw‹d
(
evp
->
e_c
Ë? 
AB_INWORD
 : 
AB_NOTWORD
;

1296 
ö¶_ch
: i‡(
	`txt_ösch
(
•
, 
ç
, &
evp
->
e_c
, 
Êags
))

1297 
îr
;

1304 i‡(
quŸe
 =
Q_VNEXT
) {

1305 --
ç
->
˙o
;

1306 ++
ç
->
owrôe
;

1316 i‡(
hex˙t
 !0 && hex˙t++ =(
CHAR_T
) * 2 + 1) {

1317 
hex˙t
 = 0;

1318 i‡(
	`txt_hex
(
•
, 
ç
))

1319 
îr
;

1333 i‡(
m¨gö
 != 0) {

1334 i‡(
	`vs_cﬁumn
(
•
, &
tcﬁ
))

1335 
îr
;

1336 i‡(
tcﬁ
 >
m¨gö
) {

1337 i‡(
	`txt_m¨gö
(
•
, 
ç
, &
wmt
, &
tmp
, 
Êags
))

1338 
îr
;

1339 i‡(
tmp
) {

1340 i‡(
	`isbœnk
(
evp
->
e_c
))

1341 
wm_skù
 = 1;

1342 
wm_£t
 = 1;

1343 
k_¸
;

1354 
ebuf_chk
: i‡(
ç
->
˙o
 >ç->
Àn
) {

1355 
	`BINC_GOTO
(
•
, 
ç
->
lb
,Åp->
lb_Àn
,Åp->
Àn
 + 1);

1356 
	`LF_SET
(
TXT_APPENDEOL
);

1358 
ç
->
lb
[ç->
˙o
] = 
CH_CURSOR
;

1359 ++
ç
->
ö£π
;

1360 ++
ç
->
Àn
;

1364 i‡(
quŸe
 !
Q_NOTSET
) {

1365 i‡(
quŸe
 =
Q_BNEXT
)

1366 
quŸe
 = 
Q_BTHIS
;

1367 i‡(
quŸe
 =
Q_VNEXT
)

1368 
quŸe
 = 
Q_VTHIS
;

1373 #ifde‡
DEBUG


1374 i‡(
ç
->
˙o
 +Åp->
ö£π
 +Åp->
owrôe
 !ç->
Àn
) {

1375 
	`msgq
(
•
, 
M_ERR
,

1377 
ç
->
Àn
,Åp->
˙o
,Åp->
ai
,Åp->
ö£π
,Åp->
owrôe
);

1378 i‡(
	`LF_ISSET
(
TXT_REPLAY
))

1379 
d⁄e
;

1380 
ç
->
Àn
 =Åp->
˙o
 +Åp->
ö£π
 +Åp->
owrôe
;

1384 
ªsﬁve
:

1388 i‡(
m¨gö
 =0 && 
	`LF_ISSET
(
TXT_REPLAY
))

1389 
ª∂ay
;

1397 i‡((
m¨gö
 !0 || !
	`KEYS_WAITING
(
•
)) &&

1398 
	`vs_ch™ge
(
•
, 
ç
->
 o
, 
LINE_RESET
))

1406 i‡(
showm©ch
) {

1407 i‡(!
	`KEYS_WAITING
(
•
Ë&& 
	`txt_showm©ch
(•, 
ç
))

1409 
showm©ch
 = 0;

1416 i‡((
vù
->
tŸÆcou¡
 !0 || 
	`F_ISSET
(
gp
, 
G_BELLSCHED
)) &&

1417 !
	`F_ISSET
(
•
, 
SC_TINPUT_INFO
Ë&& !
fûec_ªdøw
 &&

1418 
	`vs_ªsﬁve
(
•
, 
NULL
, 0))

1425 i‡(
m¨gö
 !0 || !
	`KEYS_WAITING
(
•
)) {

1426 
	`UPDATE_POSITION
(
•
, 
ç
);

1427 i‡(
	`vs_ª‰esh
(
•
, 
m¨gö
 != 0))

1432 i‡(
	`FL_ISSET
(
is_Êags
, 
IS_RUNNING
Ë&& 
	`txt_i§ch
(
•
, 
vp
, 
ç
, &is_flags))

1436 i‡(
	`LF_ISSET
(
TXT_REPLAY
))

1437 
ª∂ay
;

1438 
√xt
;

1440 
d⁄e
:

1441 
	`F_CLR
(
•
, 
SC_TINPUT
);

1444 i‡(
	`LF_ISSET
(
TXT_RECORD
))

1445 
vù
->
ªp_˙t
 = 
rcﬁ
;

1451 i‡(!
	`F_ISSET
(
•
, 
SC_TINPUT_INFO
)) {

1452 
vp
->
m_föÆ
.
 o
 = 
ç
->lno;

1453 
vp
->
m_föÆ
.
˙o
 = 
ç
->cno;

1457 
îr
:

1458 
Æloc_îr
:

1459 
	`txt_îr
(
•
, &•->
tiq
);

1461 
	}
}

1468 
	$txt_abbªv
(
•
, 
ç
, 
push˝
, 
isöfﬁöe
, 
didsubp
, 
tu∫ofÂ
)

1469 
SCR
 *
•
;

1470 
TEXT
 *
ç
;

1471 
CHAR_T
 *
push˝
;

1472 
isöfﬁöe
, *
didsubp
, *
tu∫ofÂ
;

1474 
VI_PRIVATE
 *
vù
;

1475 
CHAR_T
 
ch
, *
p
;

1476 
SEQ
 *
qp
;

1477 
size_t
 
Àn
, 
off
;

1480 *
didsubp
 = 0;

1481 i‡(
ç
->
˙o
 =ç->
off£t
)

1484 
vù
 = 
	`VIP
(
•
);

1506 
off
 = 
ç
->
˙o
 - 1;

1507 
p
 = 
ç
->
lb
 + 
off
;

1508 
Àn
 = 1;

1509 i‡(
off
 =
ç
->
off£t
 || 
	`isbœnk
(
p
[-1]))

1510 
£¨ch
;

1511 i‡(
	`öw‹d
(
p
[-1]))

1513 --
off
; --
p
; ++
Àn
;

1514 i‡(
off
 =
ç
->
off£t
 || !
	`öw‹d
(
p
[-1]))

1519 --
off
; --
p
; ++
Àn
;

1520 i‡(
off
 =
ç
->
off£t
 ||

1521 
	`öw‹d
(
p
[-1]Ë|| 
	`isbœnk
(p[-1]))

1563 
£¨ch
: i‡(
isöfﬁöe
)

1564 i‡(
off
 =
ç
->
ai
 || of‡=ç->
off£t
)

1565 i‡(
	`ex_is_abbªv
(
p
, 
Àn
)) {

1566 *
tu∫ofÂ
 = 1;

1569 *
tu∫ofÂ
 = 0;

1571 i‡(*
tu∫ofÂ
)

1575 i‡((
qp
 = 
	`£q_föd
(
•
, 
NULL
, NULL, 
p
, 
Àn
, 
SEQ_ABBREV
, NULL)) == NULL)

1596 
ch
 = *
push˝
;

1597 i‡(
	`v_evít_push
(
•
, 
NULL
, &
ch
, 1, 
CH_ABBREVIATED
))

1599 i‡(
	`v_evít_push
(
•
, 
NULL
, 
qp
->
ouçut
, qp->
ﬁí
, 
CH_ABBREVIATED
))

1611 
ç
->
˙o
 -
Àn
;

1612 i‡(
qp
->
ﬁí
 >
Àn
)

1613 
ç
->
owrôe
 +
Àn
;

1615 i‡(
ç
->
ö£π
)

1616 
	`memmove
(
ç
->
lb
 +Åp->
˙o
 + 
qp
->
ﬁí
,

1617 
ç
->
lb
 +Åp->
˙o
 +Åp->
owrôe
 + 
Àn
,Åp->
ö£π
);

1618 
ç
->
owrôe
 +
qp
->
ﬁí
;

1619 
ç
->
Àn
 -À¿- 
qp
->
ﬁí
;

1629 *
didsubp
 = 
Àn
;

1631 
	}
}

1638 
	$txt_unm≠
(
•
, 
ç
, 
ec_Êag•
)

1639 
SCR
 *
•
;

1640 
TEXT
 *
ç
;

1641 
u_öt32_t
 *
ec_Êag•
;

1643 
size_t
 
Àn
, 
off
;

1644 *
p
;

1647 
off
 = 
ç
->
˙o
 - 1, 
p
 =Åp->
lb
 + off, 
Àn
 = 0;; --p, --off) {

1648 i‡(
	`isbœnk
(*
p
)) {

1649 ++
p
;

1652 ++
Àn
;

1653 i‡(
off
 =
ç
->
ai
 || of‡=ç->
off£t
)

1670 i‡((
off
 =
ç
->
ai
 || of‡=ç->
off£t
Ë&& 
	`ex_is_unm≠
(
p
, 
Àn
))

1671 
	`FL_CLR
(*
ec_Êag•
, 
EC_MAPINPUT
);

1673 
	`FL_SET
(*
ec_Êag•
, 
EC_MAPINPUT
);

1674 
	}
}

1681 
	$txt_ai_ªsﬁve
(
•
, 
ç
, 
ch™gedp
)

1682 
SCR
 *
•
;

1683 
TEXT
 *
ç
;

1684 *
ch™gedp
;

1686 
u_l⁄g
 
ts
;

1687 
dñ
;

1688 
size_t
 
˙o
, 
Àn
, 
√w
, 
ﬁd
, 
s˙o
, 
•a˚s
, 
èb_a·î_•
, 
èbs
;

1689 *
p
;

1691 *
ch™gedp
 = 0;

1697 i‡(!
ç
->
Àn
 ||Åp->
off£t
 || !ç->
ai
)

1704 i‡(
ç
->
Àn
 <ç->
ai
) {

1705 
ç
->
ai
 =Åp->
˙o
 =Åp->
Àn
 = 0;

1714 
ts
 = 
	`O_VAL
(
•
, 
O_TABSTOP
);

1717 
p
 = 
ç
->
lb
, 
s˙o
 = 0, 
Àn
 =Åp->len,

1718 
•a˚s
 = 
èb_a·î_•
 = 0; 
Àn
-- && 
	`isbœnk
(*
p
); ++p)

1719 i‡(*
p
 == '\t') {

1720 i‡(
•a˚s
)

1721 
èb_a·î_•
 = 1;

1722 
s˙o
 +
	`COL_OFF
(s˙o, 
ts
);

1724 ++
•a˚s
;

1725 ++
s˙o
;

1732 i‡(!
•a˚s
 || !
èb_a·î_•
 && s∑˚†< 
ts
)

1736 
˙o
 = 0, 
èbs
 = 0; cnÿ+ 
	`COL_OFF
(˙o, 
ts
Ë<
s˙o
; ++tabs)

1737 
˙o
 +
	`COL_OFF
(˙o, 
ts
);

1738 
•a˚s
 = 
s˙o
 - 
˙o
;

1744 
ﬁd
 = 
p
 - 
ç
->
lb
;

1745 
√w
 = 
•a˚s
 + 
èbs
;

1746 i‡(
ﬁd
 =
√w
)

1750 
dñ
 = 
ﬁd
 - 
√w
;

1751 
	`memmove
(
p
 - 
dñ
,Ö, 
ç
->
Àn
 - 
ﬁd
);

1752 
ç
->
Àn
 -
dñ
;

1753 
ç
->
˙o
 -
dñ
;

1756 
p
 = 
ç
->
lb
; 
èbs
--;)

1757 *
p
++ = '\t';

1758 
•a˚s
--)

1759 *
p
++ = ' ';

1760 *
ch™gedp
 = 1;

1761 
	}
}

1771 
	$v_txt_auto
(
•
, 
 o
, 
aôp
, 
Àn
, 
ç
)

1772 
SCR
 *
•
;

1773 
ª˙o_t
 
 o
;

1774 
TEXT
 *
aôp
, *
ç
;

1775 
size_t
 
Àn
;

1777 
size_t
 
∆í
;

1778 *
p
, *
t
;

1780 i‡(
aôp
 =
NULL
) {

1786 i‡(
 o
 == 0) {

1787 
ç
->
ai
 = 0;

1790 i‡(
	`db_gë
(
•
, 
 o
, 
DBG_FATAL
, &
t
, &
Àn
))

1793 
t
 = 
aôp
->
lb
;

1796 
p
 = 
t
; 
Àn
 > 0; ++p, --len)

1797 i‡(!
	`isbœnk
(*
p
))

1801 i‡((
∆í
 = (
p
 - 
t
)) == 0)

1805 
	`BINC_RET
(
•
, 
ç
->
lb
,Åp->
lb_Àn
,Åp->
Àn
 + 
∆í
);

1808 i‡(
ç
->
Àn
 != 0)

1809 
	`memmove
(
ç
->
lb
 + 
∆í
,Åp->lb,Åp->
Àn
);

1810 
ç
->
Àn
 +
∆í
;

1813 
	`memmove
(
ç
->
lb
, 
t
, 
∆í
);

1816 
ç
->
ai
 = 
∆í
;

1818 
	}
}

1824 
TEXT
 *

1825 
	$txt_backup
(
•
, 
tiqh
, 
ç
, 
Êag•
)

1826 
SCR
 *
•
;

1827 
TEXTH
 *
tiqh
;

1828 
TEXT
 *
ç
;

1829 
u_öt32_t
 *
Êag•
;

1831 
VI_PRIVATE
 *
vù
;

1832 
TEXT
 *
¡p
;

1835 i‡((
¡p
 = 
ç
->
q
.
cqe_¥ev
Ë=(*)
tiqh
) {

1836 i‡(!
	`FL_ISSET
(*
Êag•
, 
TXT_REPLAY
))

1837 
	`msgq
(
•
, 
M_BERR
,

1839  (
ç
);

1843 
¡p
->
Àn
 =Çç->
sv_Àn
;

1846 
vù
 = 
	`VIP
(
•
);

1847 i‡(
¡p
->
owrôe
 =0 &&Çç->
ö£π
 == 0) {

1848 
¡p
->
lb
[¡p->
Àn
] = 
CH_CURSOR
;

1849 ++
¡p
->
ö£π
;

1850 ++
¡p
->
Àn
;

1851 
	`FL_SET
(*
Êag•
, 
TXT_APPENDEOL
);

1853 
	`FL_CLR
(*
Êag•
, 
TXT_APPENDEOL
);

1856 
	`CIRCLEQ_REMOVE
(
tiqh
, 
ç
, 
q
);

1857 
	`ãxt_‰ì
(
ç
);

1860 i‡(
	`vs_ch™ge
(
•
, 
¡p
->
 o
 + 1, 
LINE_DELETE
))

1861  (
NULL
);

1864  (
¡p
);

1865 
	}
}

1904 
	$txt_dít
(
•
, 
ç
, 
isödít
)

1905 
SCR
 *
•
;

1906 
TEXT
 *
ç
;

1907 
isödít
;

1909 
CHAR_T
 
ch
;

1910 
u_l⁄g
 
sw
, 
ts
;

1911 
size_t
 
˙o
, 
cuºít
, 
•a˚s
, 
èrgë
, 
èbs
, 
off
;

1912 
ai_ª£t
;

1914 
ts
 = 
	`O_VAL
(
•
, 
O_TABSTOP
);

1915 
sw
 = 
	`O_VAL
(
•
, 
O_SHIFTWIDTH
);

1933 
cuºít
 = 
˙o
 = 0; cnÿ< 
ç
->cno; ++cno)

1934 
cuºít
 +
ç
->
lb
[
˙o
] == '\t' ?

1935 
	`COL_OFF
(
cuºít
, 
ts
Ë: 
	`KEY_LEN
(
•
, 
ç
->
lb
[
˙o
]);

1937 
èrgë
 = 
cuºít
;

1938 i‡(
isödít
)

1939 
èrgë
 +
	`COL_OFF
—¨gë, 
sw
);

1941 
èrgë
 ---èrgë % 
sw
;

1951 
ai_ª£t
 = !
isödít
 || 
ç
->
˙o
 =ç->
ai
 +Åp->
off£t
;

1958 ; 
ç
->
˙o
 >Åp->
off£t
 &&

1959 (
ç
->
lb
[ç->
˙o
 - 1] == ' ' ||Åp->lb[tp->cno - 1] == '\t');

1960 --
ç
->
˙o
, ++ç->
owrôe
);

1961 
cuºít
 = 
˙o
 = 0; cnÿ< 
ç
->cno; ++cno)

1962 
cuºít
 +
ç
->
lb
[
˙o
] == '\t' ?

1963 
	`COL_OFF
(
cuºít
, 
ts
Ë: 
	`KEY_LEN
(
•
, 
ç
->
lb
[
˙o
]);

1977 i‡(
cuºít
 >
èrgë
)

1978 
•a˚s
 = 
èbs
 = 0;

1980 
˙o
 = 
cuºít
,

1981 
èbs
 = 0; 
˙o
 + 
	`COL_OFF
(˙o, 
ts
Ë<
èrgë
; ++tabs)

1982 
˙o
 +
	`COL_OFF
(˙o, 
ts
);

1983 
•a˚s
 = 
èrgë
 - 
˙o
;

1987 i‡(
ai_ª£t
)

1988 
ç
->
ai
 = 
èbs
 + 
•a˚s
;

1994 
ch
 = '\t'; 
èbs
 > 0; --tabs)

1995 ()
	`txt_ösch
(
•
, 
ç
, &
ch
, 0);

1996 
ch
 = ' '; 
•a˚s
 > 0; --spaces)

1997 ()
	`txt_ösch
(
•
, 
ç
, &
ch
, 0);

1999 
	}
}

2006 
	$txt_fc
(
•
, 
ç
, 
ªdøwp
)

2007 
SCR
 *
•
;

2008 
TEXT
 *
ç
;

2009 *
ªdøwp
;

2011 
°©
 
sb
;

2012 
ARGS
 **
¨gv
;

2013 
CHAR_T
 
s_ch
;

2014 
EXCMD
 
cmd
;

2015 
size_t
 
ödx
, 
Àn
, 
∆í
, 
off
;

2016 
¨gc
, 
åydú
;

2017 *
p
, *
t
;

2019 
åydú
 = 0;

2020 *
ªdøwp
 = 0;

2026 i‡(
ç
->
˙o
 == 1) {

2027 
Àn
 = 0;

2028 
p
 = 
ç
->
lb
;

2030 
ªåy
: 
Àn
 = 0,

2031 
off
 = 
ç
->
˙o
 - 1, 
p
 =Åp->
lb
 + off;; --off, --p) {

2032 i‡(
	`isbœnk
(*
p
)) {

2033 ++
p
;

2036 ++
Àn
;

2037 i‡(
off
 =
ç
->
ai
 || of‡=ç->
off£t
)

2048 
off
 = 
p
 - 
ç
->
lb
;

2049 
	`BINC_RET
(
•
, 
ç
->
lb
,Åp->
lb_Àn
,Åp->
Àn
 + 1);

2050 
p
 = 
ç
->
lb
 + 
off
;

2052 
s_ch
 = 
p
[
Àn
];

2053 
p
[
Àn
] = '*';

2056 
	`ex_cöô
(&
cmd
, 0, 0, 
OOBLNO
, OOBLNO, 0, 
NULL
);

2057 i‡(
	`¨gv_öô
(
•
, &
cmd
))

2059 i‡(
	`¨gv_exp2
(
•
, &
cmd
, 
p
, 
Àn
 + 1)) {

2060 
p
[
Àn
] = 
s_ch
;

2063 
¨gc
 = 
cmd
.argc;

2064 
¨gv
 = 
cmd
.argv;

2066 
p
[
Àn
] = 
s_ch
;

2068 
¨gc
) {

2070 i‡(!
åydú
)

2071 ()
•
->
gp
->
	`s¸_bñl
(sp);

2075 
∆í
 = 
	`°æí
(
cmd
.
¨gv
[0]->
bp
);

2076 i‡(
Àn
 !
∆í
 || 
	`memcmp
(
cmd
.
¨gv
[0]->
bp
, 
p
,Üen))

2080 i‡(!
åydú
 &&

2081 !
	`°©
(
cmd
.
¨gv
[0]->
bp
, &
sb
Ë&& 
	`S_ISDIR
(sb.
°_mode
)) {

2082 
p
 +
Àn
;

2083 
isdú
;

2087 i‡(!
åydú
)

2088 ()
•
->
gp
->
	`s¸_bñl
(sp);

2091 *
ªdøwp
 = 1;

2092 i‡(
	`txt_fc_cﬁ
(
•
, 
¨gc
, 
¨gv
))

2096 
∆í
 = 
cmd
.
¨gv
[0]->
Àn
; --
¨gc
 > 0;) {

2097 i‡(
cmd
.
¨gv
[
¨gc
]->
Àn
 < 
∆í
)

2098 
∆í
 = 
cmd
.
¨gv
[
¨gc
]->
Àn
;

2099 
ödx
 = 0; indx < 
∆í
 &&

2100 
cmd
.
¨gv
[
¨gc
]->
bp
[
ödx
] == cmd.argv[0]->bp[indx];

2101 ++
ödx
);

2102 
∆í
 = 
ödx
;

2108 
t
 = 
cmd
.
¨gv
[0]->
bp
; 
Àn
 > 0 && 
∆í
 > 0; --len, --nlen)

2109 *
p
++ = *
t
++;

2112 i‡(
Àn
) {

2113 
ç
->
˙o
 -
Àn
;

2114 
ç
->
owrôe
 +
Àn
;

2118 ; 
∆í
 > 0 && 
ç
->
owrôe
 > 0; --∆í, --ç->owrôe, ++ç->
˙o
)

2119 *
p
++ = *
t
++;

2122 i‡(
∆í
) {

2123 
off
 = 
p
 - 
ç
->
lb
;

2124 
	`BINC_RET
(
•
, 
ç
->
lb
,Åp->
lb_Àn
,Åp->
Àn
 + 
∆í
);

2125 
p
 = 
ç
->
lb
 + 
off
;

2127 
ç
->
˙o
 +
∆í
;

2128 
ç
->
Àn
 +
∆í
;

2130 i‡(
ç
->
ö£π
 != 0)

2131 ()
	`memmove
(
p
 + 
∆í
,Ö, 
ç
->
ö£π
);

2132 
∆í
--)

2133 *
p
++ = *
t
++;

2137 i‡(
¨gc
 =1 && !
	`°©
(
cmd
.
¨gv
[0]->
bp
, &
sb
Ë&& 
	`S_ISDIR
(sb.
°_mode
)) {

2138 
isdú
: i‡(
ç
->
owrôe
 == 0) {

2139 
off
 = 
p
 - 
ç
->
lb
;

2140 
	`BINC_RET
(
•
, 
ç
->
lb
,Åp->
lb_Àn
,Åp->
Àn
 + 1);

2141 
p
 = 
ç
->
lb
 + 
off
;

2142 i‡(
ç
->
ö£π
 != 0)

2143 ()
	`memmove
(
p
 + 1,Ö, 
ç
->
ö£π
);

2144 ++
ç
->
Àn
;

2146 --
ç
->
owrôe
;

2148 ++
ç
->
˙o
;

2149 *
p
++ = '/';

2151 
åydú
 = 1;

2152 
ªåy
;

2155 
	}
}

2162 
	$txt_fc_cﬁ
(
•
, 
¨gc
, 
¨gv
)

2163 
SCR
 *
•
;

2164 
¨gc
;

2165 
ARGS
 **
¨gv
;

2167 
ARGS
 **
av
;

2168 
CHAR_T
 *
p
;

2169 
GS
 *
gp
;

2170 
size_t
 
ba£
, 
˙t
, 
cﬁ
, 
cﬁwidth
, 
numrows
, 
numcﬁs
, 
¥efix
, 
row
;

2171 
ac
, 
nf
, 
ª£t
;

2173 
gp
 = 
•
->gp;

2176 i‡((
p
 = 
	`°ºchr
(
¨gv
[0]->
bp
, '/')Ë=
NULL
)

2177 
¥efix
 = 0;

2179 
¥efix
 = (
p
 - 
¨gv
[0]->
bp
) + 1;

2180 
ac
 = 
¨gc
 - 1, 
av
 = 
¨gv
 + 1;ác > 0; --ac, ++av)

2181 i‡(
av
[0]->
Àn
 < 
¥efix
 ||

2182 
	`memcmp
(
av
[0]->
bp
, 
¨gv
[0]->bp, 
¥efix
)) {

2183 
¥efix
 = 0;

2195 
ac
 = 
¨gc
, 
av
 = 
¨gv
, 
cﬁwidth
 = 0;ác > 0; --ac, ++av) {

2196 
cﬁ
 = 0, 
p
 = 
av
[0]->
bp
 + 
¥efix
; *p != '\0'; ++p)

2197 
cﬁ
 +
	`KEY_LEN
(
•
, *
p
);

2198 i‡(
cﬁ
 > 
cﬁwidth
)

2199 
cﬁwidth
 = 
cﬁ
;

2201 
cﬁwidth
 +
	`COL_OFF
(colwidth, 6);

2207 i‡(
	`F_ISSET
(
•
, 
SC_TINPUT_INFO
)) {

2208 
ª£t
 = 1;

2209 
	`F_CLR
(
•
, 
SC_TINPUT_INFO
);

2211 
ª£t
 = 0;

2213 
	#CHK_INTR
 \

2214 i‡(
	`F_ISSET
(
gp
, 
G_INTERRUPTED
)) \

2215 
öå
;

	)

2218 i‡(
cﬁwidth
 > 
•
->
cﬁs
) {

2219 
p
 = 
	`msg_¥öt
(
•
, 
av
[0]->
bp
 + 
¥efix
, &
nf
);

2220 
ac
 = 
¨gc
, 
av
 = 
¨gv
;ác > 0; --ac, ++av) {

2221 ()
	`ex_¥ötf
(
•
, "%s\n", 
p
);

2222 i‡(
	`F_ISSET
(
gp
, 
G_INTERRUPTED
))

2225 i‡(
nf
)

2226 
	`FREE_SPACE
(
•
, 
p
, 0);

2227 
CHK_INTR
;

2230 
numcﬁs
 = (
•
->
cﬁs
 - 1Ë/ 
cﬁwidth
;

2231 i‡(
¨gc
 > 
numcﬁs
) {

2232 
numrows
 = 
¨gc
 / 
numcﬁs
;

2233 i‡(
¨gc
 % 
numcﬁs
)

2234 ++
numrows
;

2236 
numrows
 = 1;

2239 
row
 = 0;Ñow < 
numrows
; ++row) {

2240 
ba£
 = 
row
, 
cﬁ
 = 0; cﬁ < 
numcﬁs
; ++col) {

2241 
p
 = 
	`msg_¥öt
(
•
, 
¨gv
[
ba£
]->
bp
 + 
¥efix
, &
nf
);

2242 
˙t
 = 
	`ex_¥ötf
(
•
, "%s", 
p
);

2243 i‡(
nf
)

2244 
	`FREE_SPACE
(
•
, 
p
, 0);

2245 
CHK_INTR
;

2246 i‡((
ba£
 +
numrows
Ë>
¨gc
)

2248 ()
	`ex_¥ötf
(
•
,

2249 "%*s", ()(
cﬁwidth
 - 
˙t
), "");

2250 
CHK_INTR
;

2252 ()
	`ex_puts
(
•
, "\n");

2253 
CHK_INTR
;

2255 ()
	`ex_puts
(
•
, "\n");

2256 
CHK_INTR
;

2258 ()
	`ex_fÊush
(
•
);

2261 
öå
: 
	`F_CLR
(
gp
, 
G_INTERRUPTED
);

2263 i‡(
ª£t
)

2264 
	`F_SET
(
•
, 
SC_TINPUT_INFO
);

2267 
	}
}

2274 
	$txt_em¨k
(
•
, 
ç
, 
˙o
)

2275 
SCR
 *
•
;

2276 
TEXT
 *
ç
;

2277 
size_t
 
˙o
;

2279 
CHAR_T
 
ch
, *
kp
;

2280 
size_t
 
chÀn
, 
∆í
, 
ﬁí
;

2281 *
p
;

2283 
ch
 = 
CH_ENDMARK
;

2289 
∆í
 = 
	`KEY_LEN
(
•
, 
ch
);

2290 i‡(
ç
->
lb
[
˙o
] == '\t')

2291 ()
	`vs_cﬁumns
(
•
, 
ç
->
lb
,Åp->
 o
, &
˙o
, &
ﬁí
);

2293 
ﬁí
 = 
	`KEY_LEN
(
•
, 
ç
->
lb
[
˙o
]);

2300 i‡(
ﬁí
 > 
∆í
) {

2301 
	`BINC_RET
(
•
, 
ç
->
lb
,Åp->
lb_Àn
,Åp->
Àn
 + 
ﬁí
);

2302 
chÀn
 = 
ﬁí
 - 
∆í
;

2303 i‡(
ç
->
ö£π
 != 0)

2304 
	`memmove
(
ç
->
lb
 + 
˙o
 + 1 + 
chÀn
,

2305 
ç
->
lb
 + 
˙o
 + 1,Åp->
ö£π
);

2307 
ç
->
Àn
 +
chÀn
;

2308 
ç
->
owrôe
 +
chÀn
;

2309 
p
 = 
ç
->
lb
 + 
˙o
;

2310 i‡(
ç
->
lb
[
˙o
] == '\t')

2311 
˙o
 +
chÀn
; chlen--;)

2312 *
p
++ = ' ';

2314 
kp
 = 
	`KEY_NAME
(
•
, 
ç
->
lb
[
˙o
]),

2315 
˙o
 +
chÀn
; chlen--;)

2316 *
p
++ = *
kp
++;

2318 
ç
->
lb
[
˙o
] = 
ch
;

2319  (
	`vs_ch™ge
(
•
, 
ç
->
 o
, 
LINE_RESET
));

2320 
	}
}

2327 
	$txt_îr
(
•
, 
tiqh
)

2328 
SCR
 *
•
;

2329 
TEXTH
 *
tiqh
;

2331 
ª˙o_t
 
 o
;

2342 
 o
 = 
tiqh
->
cqh_fú°
->lno;

2343 !
	`db_exi°
(
•
, 
 o
) &&Üno > 0; --lno);

2345 
•
->
 o
 =Üno == 0 ? 1 :Üno;

2346 
•
->
˙o
 = 0;

2349 
	`F_SET
(
•
, 
SC_SCR_REDRAW
);

2350 
	}
}

2362 
	$txt_hex
(
•
, 
ç
)

2363 
SCR
 *
•
;

2364 
TEXT
 *
ç
;

2366 
CHAR_T
 
ßvec
;

2367 
size_t
 
Àn
, 
off
;

2368 
u_l⁄g
 
vÆue
;

2369 *
p
, *
wp
;

2376 
ßvec
 = 
ç
->
lb
[ç->
˙o
];

2377 
ç
->
lb
[ç->
˙o
] = 0;

2380 
off
 = 
ç
->
˙o
 - 1, 
p
 =Åp->
lb
 + off, 
Àn
 = 0;; --p, --off, ++len) {

2381 i‡(*
p
 =
CH_HEX
) {

2382 
wp
 = 
p
 + 1;

2386 i‡(
off
 =
ç
->
ai
 || of‡=ç->
off£t
)

2387 
nŸhex
;

2391 i‡(
Àn
 == 0)

2392 
nŸhex
;

2395 
î∫o
 = 0;

2396 
vÆue
 = 
	`°πﬁ
(
wp
, 
NULL
, 16);

2397 i‡(
î∫o
 || 
vÆue
 > 
MAX_CHAR_T
) {

2398 
nŸhex
: 
ç
->
lb
[ç->
˙o
] = 
ßvec
;

2403 
ç
->
lb
[ç->
˙o
] = 
ßvec
;

2406 
ç
->
˙o
 -
Àn
;

2407 
ç
->
Àn
 -=Üen;

2408 
ç
->
lb
[ç->
˙o
 - 1] = 
vÆue
;

2411 i‡(
ç
->
owrôe
)

2412 
	`memmove
(
ç
->
lb
 +Åp->
˙o
,Åp->lb +Åp->˙ÿ+ 
Àn
,Åp->
owrôe
);

2415 i‡(
ç
->
ö£π
)

2416 
	`memmove
(
ç
->
lb
 +Åp->
˙o
 +Åp->
owrôe
,

2417 
ç
->
lb
 +Åp->
˙o
 +Åp->
owrôe
 + 
Àn
,Åp->
ö£π
);

2420 
	}
}

2442 
	$txt_ösch
(
•
, 
ç
, 
chp
, 
Êags
)

2443 
SCR
 *
•
;

2444 
TEXT
 *
ç
;

2445 
CHAR_T
 *
chp
;

2446 
u_öt
 
Êags
;

2448 
CHAR_T
 *
kp
, 
ßvech
;

2449 
size_t
 
chÀn
, 
˙o
, 
c›ydown
, 
ﬁí
, 
∆í
;

2450 *
p
;

2456 i‡(
	`LF_ISSET
(
TXT_REPLACE
)) {

2457 i‡(
ç
->
owrôe
) {

2458 --
ç
->
owrôe
;

2459 
ç
->
lb
[ç->
˙o
++] = *
chp
;

2462 } i‡(
ç
->
owrôe
) {

2463 
˙o
 = 
ç
->cno;

2470 i‡(*
chp
 == '\t') {

2471 
ßvech
 = 
ç
->
lb
[
˙o
];

2472 
ç
->
lb
[
˙o
] = '\t';

2473 ()
	`vs_cﬁumns
(
•
, 
ç
->
lb
,Åp->
 o
, &
˙o
, &
∆í
);

2474 
ç
->
lb
[
˙o
] = 
ßvech
;

2476 
∆í
 = 
	`KEY_LEN
(
•
, *
chp
);

2484 
c›ydown
 = 0; 
∆í
 !0 && 
ç
->
owrôe
 != 0;) {

2485 --
ç
->
owrôe
;

2487 i‡(
ç
->
lb
[
˙o
] == '\t')

2488 ()
	`vs_cﬁumns
(
•
,

2489 
ç
->
lb
,Åp->
 o
, &
˙o
, &
ﬁí
);

2491 
ﬁí
 = 
	`KEY_LEN
(
•
, 
ç
->
lb
[
˙o
]);

2493 i‡(
ﬁí
 =
∆í
) {

2494 
∆í
 = 0;

2497 i‡(
ﬁí
 < 
∆í
) {

2498 ++
c›ydown
;

2499 
∆í
 -
ﬁí
;

2501 
	`BINC_RET
(
•
,

2502 
ç
->
lb
,Åp->
lb_Àn
,Åp->
Àn
 + 
ﬁí
);

2503 
chÀn
 = 
ﬁí
 - 
∆í
;

2504 
	`memmove
(
ç
->
lb
 + 
˙o
 + 1 + 
chÀn
,

2505 
ç
->
lb
 + 
˙o
 + 1,Åp->
owrôe
 +Åp->
ö£π
);

2507 
ç
->
Àn
 +
chÀn
;

2508 
ç
->
owrôe
 +
chÀn
;

2509 i‡(
ç
->
lb
[
˙o
] == '\t')

2510 
p
 = 
ç
->
lb
 + 
˙o
 + 1; 
chÀn
--;)

2511 *
p
++ = ' ';

2513 
kp
 =

2514 
	`KEY_NAME
(
•
, 
ç
->
lb
[
˙o
]Ë+ 
∆í
,

2515 
p
 = 
ç
->
lb
 + 
˙o
 + 1; 
chÀn
--;)

2516 *
p
++ = *
kp
++;

2517 
∆í
 = 0;

2527 i‡(
c›ydown
 !0 && (
ç
->
Àn
 -= copydown) != 0)

2528 
	`memmove
(
ç
->
lb
 + 
˙o
,Åp->lb + cnÿ+ 
c›ydown
,

2529 
ç
->
owrôe
 +Åp->
ö£π
 + 
c›ydown
);

2532 i‡(
∆í
 == 0) {

2533 
ç
->
lb
[ç->
˙o
++] = *
chp
;

2539 
	`BINC_RET
(
•
, 
ç
->
lb
,Åp->
lb_Àn
,Åp->
Àn
 + 1);

2541 ++
ç
->
Àn
;

2542 i‡(
ç
->
ö£π
) {

2543 i‡(
ç
->
ö£π
 == 1)

2544 
ç
->
lb
[ç->
˙o
 + 1] =Åp->lb[tp->cno];

2546 
	`memmove
(
ç
->
lb
 +Åp->
˙o
 + 1,

2547 
ç
->
lb
 +Åp->
˙o
,Åp->
owrôe
 +Åp->
ö£π
);

2549 
ç
->
lb
[ç->
˙o
++] = *
chp
;

2551 
	}
}

2558 
	$txt_i§ch
(
•
, 
vp
, 
ç
, 
is_Êag•
)

2559 
SCR
 *
•
;

2560 
VICMD
 *
vp
;

2561 
TEXT
 *
ç
;

2562 
u_öt8_t
 *
is_Êag•
;

2564 
MARK
 
°¨t
;

2565 
ª˙o_t
 
 o
;

2566 
u_öt
 
sf
;

2569 i‡(
	`IS_ONELINE
(
•
)) {

2570 
	`FL_CLR
(*
is_Êag•
, 
IS_RUNNING
);

2578 i‡(
ç
->
˙o
 <= 1) {

2579 
vp
->
m_föÆ
 = vp->
m_°¨t
;

2587 i‡(
ç
->
lb
[ç->
˙o
 - 1] == '\\' &&

2588 (
ç
->
˙o
 =2 ||Åp->
lb
[tp->cno - 2] != '\\'))

2595 i‡(
	`°rchr
(
	`O_STR
(
•
, 
O_SHELLMETA
), 
ç
->
lb
[ç->
˙o
 - 1]Ë!
NULL
 &&

2596 (
ç
->
˙o
 =2 ||Åp->
lb
[tp->cno - 2] != '\\'))

2597 
vp
->
m_föÆ
 = vp->
m_°¨t
;

2606 i‡(
ç
->
lb
[0] =ç->lb[ç->
˙o
 - 1] &&

2607 (
ç
->
˙o
 =2 ||Åp->
lb
[tp->cno - 2] != '\\')) {

2608 
vp
->
m_föÆ
 = vp->
m_°¨t
;

2609 
	`FL_CLR
(*
is_Êag•
, 
IS_RUNNING
);

2617 
 o
 = 
ç
->lno;

2618 
	`F_SET
(
	`VIP
(
•
), 
VIP_S_MODELINE
);

2619 
	`F_CLR
(
•
, 
SC_TINPUT
 | 
SC_TINPUT_INFO
);

2620 i‡(
	`txt_m≠_íd
(
•
))

2630 i‡(
	`FL_ISSET
(*
is_Êag•
, 
IS_RESTART
)) {

2631 
°¨t
 = 
vp
->
m_°¨t
;

2632 
sf
 = 
SEARCH_SET
;

2634 
°¨t
 = 
vp
->
m_föÆ
;

2635 
sf
 = 
SEARCH_INCR
 | 
SEARCH_SET
;

2638 i‡(
ç
->
lb
[0] == '/' ?

2639 !
	`f_£¨ch
(
•
,

2640 &
°¨t
, &
vp
->
m_föÆ
, 
ç
->
lb
 + 1,Åp->
˙o
 - 1, 
NULL
, 
sf
) :

2641 !
	`b_£¨ch
(
•
,

2642 &
°¨t
, &
vp
->
m_föÆ
, 
ç
->
lb
 + 1,Åp->
˙o
 - 1, 
NULL
, 
sf
)) {

2643 
•
->
 o
 = 
vp
->
m_föÆ
.lno;

2644 
•
->
˙o
 = 
vp
->
m_föÆ
.cno;

2645 
	`FL_CLR
(*
is_Êag•
, 
IS_RESTART
);

2647 i‡(!
	`KEYS_WAITING
(
•
Ë&& 
	`vs_ª‰esh
(sp, 0))

2650 
	`FL_SET
(*
is_Êag•
, 
IS_RESTART
);

2653 i‡(
	`txt_m≠_öô
(
•
))

2655 
	`F_CLR
(
	`VIP
(
•
), 
VIP_S_MODELINE
);

2656 
	`F_SET
(
•
, 
SC_TINPUT
 | 
SC_TINPUT_INFO
);

2659 
ç
->
 o
 = 
TMAP
[0].lno;

2669 i‡(
 o
 !
TMAP
[0].lno) {

2670 i‡(
	`vs_löe
(
•
, &
TMAP
[0], 
NULL
, NULL))

2672 ()
•
->
gp
->
	`s¸_ª‰esh
(sp, 0);

2675 
	}
}

2682 
	$txt_ªsﬁve
(
•
, 
tiqh
, 
Êags
)

2683 
SCR
 *
•
;

2684 
TEXTH
 *
tiqh
;

2685 
u_öt32_t
 
Êags
;

2687 
VI_PRIVATE
 *
vù
;

2688 
TEXT
 *
ç
;

2689 
ª˙o_t
 
 o
;

2690 
ch™ged
;

2699 
vù
 = 
	`VIP
(
•
);

2700 
ç
 = 
tiqh
->
cqh_fú°
;

2702 i‡(
	`LF_ISSET
(
TXT_AUTOINDENT
))

2703 
	`txt_ai_ªsﬁve
(
•
, 
ç
, &
ch™ged
);

2705 
ch™ged
 = 0;

2706 i‡(
	`db_£t
(
•
, 
ç
->
 o
,Åp->
lb
,Åp->
Àn
) ||

2707 
ch™ged
 && 
	`vs_ch™ge
(
•
, 
ç
->
 o
, 
LINE_RESET
))

2710 
 o
 = 
ç
-> o; (ç =Åp->
q
.
cqe_√xt
Ë!(*)&
•
->
tiq
; ++lno) {

2711 i‡(
	`LF_ISSET
(
TXT_AUTOINDENT
))

2712 
	`txt_ai_ªsﬁve
(
•
, 
ç
, &
ch™ged
);

2714 
ch™ged
 = 0;

2715 i‡(
	`db_≠≥nd
(
•
, 0, 
 o
, 
ç
->
lb
,Åp->
Àn
) ||

2716 
ch™ged
 && 
	`vs_ch™ge
(
•
, 
ç
->
 o
, 
LINE_RESET
))

2725 
	`F_CLR
(
•
, 
SC_TINPUT
);

2728 
	}
}

2739 
	$txt_showm©ch
(
•
, 
ç
)

2740 
SCR
 *
•
;

2741 
TEXT
 *
ç
;

2743 
GS
 *
gp
;

2744 
VCS
 
cs
;

2745 
MARK
 
m
;

2746 
˙t
, 
ídc
, 
°¨tc
;

2748 
gp
 = 
•
->gp;

2754 
	`UPDATE_POSITION
(
•
, 
ç
);

2755 i‡(
	`vs_ª‰esh
(
•
, 1))

2762 i‡(
	`vs_sm_posôi⁄
(
•
, &
m
, 0, 
P_TOP
))

2766 
cs
.
cs_ o
 = 
ç
->
 o
;

2767 
cs
.
cs_˙o
 = 
ç
->
˙o
 - 1;

2768 i‡(
	`cs_öô
(
•
, &
cs
))

2770 
°¨tc
 = (
ídc
 = 
cs
.
cs_ch
) == ')' ? '(' : '{';

2773 
˙t
 = 1;;) {

2774 i‡(
	`cs_¥ev
(
•
, &
cs
))

2776 i‡(
cs
.
cs_Êags
 != 0) {

2777 i‡(
cs
.
cs_Êags
 =
CS_EOF
 || cs.cs_Êag†=
CS_SOF
) {

2778 
	`msgq
(
•
, 
M_BERR
,

2779 "Unm©ched %s", 
	`KEY_NAME
(
•
, 
ídc
));

2784 i‡(
cs
.
cs_ch
 =
ídc
)

2785 ++
˙t
;

2786 i‡(
cs
.
cs_ch
 =
°¨tc
 && --
˙t
 == 0)

2791 i‡(
cs
.
cs_ o
 < 
m
.
 o
 || cs.cs_ ÿ=m. ÿ&& cs.
cs_˙o
 < m.
˙o
)

2793 
•
->
 o
 = 
cs
.
cs_ o
;

2794 
•
->
˙o
 = 
cs
.
cs_˙o
;

2795 i‡(
	`vs_ª‰esh
(
•
, 1))

2799  (
	`v_evít_gë
(
•
,

2800 
NULL
, 
	`O_VAL
(
•
, 
O_MATCHTIME
Ë* 100, 
EC_TIMEOUT
));

2801 
	}
}

2808 
	$txt_m¨gö
(
•
, 
ç
, 
wmç
, 
didbªak
, 
Êags
)

2809 
SCR
 *
•
;

2810 
TEXT
 *
ç
, *
wmç
;

2811 *
didbªak
;

2812 
u_öt32_t
 
Êags
;

2814 
VI_PRIVATE
 *
vù
;

2815 
size_t
 
Àn
, 
off
;

2816 *
p
, *
wp
;

2819 
off
 = 
ç
->
˙o
 - 1, 
p
 =Åp->
lb
 + off, 
Àn
 = 0;; --off, --p, ++len) {

2820 i‡(
	`isbœnk
(*
p
)) {

2821 
wp
 = 
p
 + 1;

2834 i‡(
off
 =
ç
->
ai
 || of‡=ç->
off£t
) {

2835 *
didbªak
 = 0;

2850 
vù
 = 
	`VIP
(
•
);

2851 
wmç
->
lb
 = 
p
 + 1;

2852 
wmç
->
off£t
 = 
Àn
;

2853 
wmç
->
ö£π
 = 
	`LF_ISSET
(
TXT_APPENDEOL
Ë? 
ç
->insert - 1 :Åp->insert;

2854 
wmç
->
owrôe
 = 
ç
->owrite;

2857 
ç
->
˙o
 -
Àn
;

2858 i‡(
	`LF_ISSET
(
TXT_APPENDEOL
)) {

2859 
ç
->
Àn
 -À¿+Åp->
owrôe
 + (ç->
ö£π
 - 1);

2860 
ç
->
ö£π
 = 1;

2862 
ç
->
Àn
 -À¿+Åp->
owrôe
 +Åp->
ö£π
;

2863 
ç
->
ö£π
 = 0;

2865 
ç
->
owrôe
 = 0;

2871 ;; --
p
, --
off
) {

2872 i‡(!
	`isbœnk
(*
p
))

2874 --
ç
->
˙o
;

2875 --
ç
->
Àn
;

2876 i‡(
off
 =
ç
->
ai
 || of‡=ç->
off£t
)

2879 *
didbªak
 = 1;

2881 
	}
}

2888 
	$txt_Rªsﬁve
(
•
, 
tiqh
, 
ç
, 
‹ig_Àn
)

2889 
SCR
 *
•
;

2890 
TEXTH
 *
tiqh
;

2891 
TEXT
 *
ç
;

2892 c⁄° 
size_t
 
‹ig_Àn
;

2894 
TEXT
 *
âp
;

2895 
size_t
 
öput_Àn
, 
ªèö
;

2896 *
p
;

2902 i‡(
ç
->
owrôe
 == 0)

2909 
âp
 = 
tiqh
->
cqh_fú°
, 
öput_Àn
 = 0;;) {

2910 
öput_Àn
 +
âp
 =
ç
 ?Åp->
˙o
 :Åç->
Àn
 +Åç->
R_îa£
;

2911 i‡((
âp
 =Åç->
q
.
cqe_√xt
Ë=(*)&
•
->
tiq
)

2929 i‡(
öput_Àn
 < 
‹ig_Àn
) {

2930 
ªèö
 = 
	`MIN
(
ç
->
owrôe
, 
‹ig_Àn
 - 
öput_Àn
);

2931 i‡(
	`db_gë
(
•
,

2932 
tiqh
->
cqh_fú°
->
 o
, 
DBG_FATAL
 | 
DBG_NOCACHE
, &
p
, 
NULL
))

2934 
	`mem˝y
(
ç
->
lb
 +Åp->
˙o
, 
p
 + 
öput_Àn
, 
ªèö
);

2935 
ç
->
Àn
 -ç->
owrôe
 - 
ªèö
;

2936 
ç
->
owrôe
 = 0;

2937 
ç
->
ö£π
 +
ªèö
;

2939 
	}
}

2946 
	$txt_nom‹ech
(
•
)

2947 
SCR
 *
•
;

2949 
	`msgq
(
•
, 
M_BERR
, "194|No more charactersÅoÉrase");

2950 
	}
}

	@vi/v_ulcase.c

10 
	~"c⁄fig.h
"

12 #i‚de‡
löt


13 c⁄° 
	gsccsid
[] = "@(#)v_ulcase.c 10.7 (Berkeley) 3/6/96";

16 
	~<sys/ty≥s.h
>

17 
	~<sys/queue.h
>

18 
	~<sys/time.h
>

20 
	~<bô°rög.h
>

21 
	~<˘y≥.h
>

22 
	~<î∫o.h
>

23 
	~<limôs.h
>

24 
	~<°dio.h
>

25 
	~<°dlib.h
>

26 
	~<°rög.h
>

28 
	~"../comm⁄/comm⁄.h
"

29 
	~"vi.h
"

31 
ulˇ£
 
__P
((
SCR
 *, 
ª˙o_t
, 
CHAR_T
 *, 
size_t
, size_t, size_t));

50 
	$v_ulˇ£
(
•
, 
vp
)

51 
SCR
 *
•
;

52 
VICMD
 *
vp
;

54 
ª˙o_t
 
 o
;

55 
size_t
 
˙o
, 
l˙t
, 
Àn
;

56 
u_l⁄g
 
˙t
;

57 *
p
;

59 
 o
 = 
vp
->
m_°¨t
.lno;

60 
˙o
 = 
vp
->
m_°¨t
.cno;

62 
˙t
 = 
	`F_ISSET
(
vp
, 
VC_C1SET
Ë? vp->
cou¡
 : 1; c¡ > 0; 
˙o
 = 0) {

64 i‡(
	`db_gë
(
•
, 
 o
, 0, &
p
, &
Àn
)) {

65 i‡(
 o
 == 1) {

66 
	`v_emsg
(
•
, 
NULL
, 
VIM_EMPTY
);

69 --
 o
;

74 i‡(
Àn
 == 0) {

75 --
˙t
;

76 
vp
->
m_föÆ
.
˙o
 = 0;

80 i‡(
˙o
 + 
˙t
 >
Àn
) {

81 
l˙t
 = 
Àn
 - 1;

82 
˙t
 -
Àn
 - 
˙o
;

84 
vp
->
m_föÆ
.
˙o
 = 
Àn
 - 1;

86 
l˙t
 = 
˙o
 + 
˙t
 - 1;

87 
˙t
 = 0;

89 
vp
->
m_föÆ
.
˙o
 = 
l˙t
 + 1;

92 i‡(
	`ulˇ£
(
•
, 
 o
, 
p
, 
Àn
, 
˙o
, 
l˙t
))

95 i‡(
˙t
 > 0)

96 ++
 o
;

99 
vp
->
m_föÆ
.
 o
 =Üno;

101 
	}
}

110 
	$v_mulˇ£
(
•
, 
vp
)

111 
SCR
 *
•
;

112 
VICMD
 *
vp
;

114 
CHAR_T
 *
p
;

115 
size_t
 
Àn
;

116 
ª˙o_t
 
 o
;

118 
 o
 = 
vp
->
m_°¨t
.lno;;) {

119 i‡(
	`db_gë
(
•
, 
 o
, 
DBG_FATAL
, &
p
, &
Àn
))

121 i‡(
Àn
 !0 && 
	`ulˇ£
(
•
, 
 o
, 
p
,Üen,

122 
 o
 =
vp
->
m_°¨t
. ÿ? vp->m_°¨t.
˙o
 : 0,

123 !
	`F_ISSET
(
vp
, 
VM_LMODE
) &&

124 
 o
 =
vp
->
m_°›
. ÿ? vp->m_°›.
˙o
 : 
Àn
))

127 i‡(++
 o
 > 
vp
->
m_°›
.lno)

141 
	}
}

148 
	$ulˇ£
(
•
, 
 o
, 
Õ
, 
Àn
, 
s˙o
, 
e˙o
)

149 
SCR
 *
•
;

150 
ª˙o_t
 
 o
;

151 
CHAR_T
 *
Õ
;

152 
size_t
 
Àn
, 
s˙o
, 
e˙o
;

154 
size_t
 
bÀn
;

155 
ch™ge
, 
rvÆ
;

156 
CHAR_T
 
ch
, *
p
, *
t
;

157 *
bp
;

159 
	`GET_SPACE_RET
(
•
, 
bp
, 
bÀn
, 
Àn
);

160 
	`memmove
(
bp
, 
Õ
, 
Àn
);

162 
ch™ge
 = 
rvÆ
 = 0;

163 
p
 = 
bp
 + 
s˙o
, 
t
 = b∞+ 
e˙o
 + 1;Ö <Å; ++p) {

164 
ch
 = *(
u_ch¨
 *)
p
;

165 i‡(
	`i¶owî
(
ch
)) {

166 *
p
 = 
	`touµî
(
ch
);

167 
ch™ge
 = 1;

168 } i‡(
	`isuµî
(
ch
)) {

169 *
p
 = 
	`tﬁowî
(
ch
);

170 
ch™ge
 = 1;

174 i‡(
ch™ge
 && 
	`db_£t
(
•
, 
 o
, 
bp
, 
Àn
))

175 
rvÆ
 = 1;

177 
	`FREE_SPACE
(
•
, 
bp
, 
bÀn
);

178  (
rvÆ
);

179 
	}
}

	@vi/v_undo.c

10 
	~"c⁄fig.h
"

12 #i‚de‡
löt


13 c⁄° 
	gsccsid
[] = "@(#)v_undo.c 10.5 (Berkeley) 3/6/96";

16 
	~<sys/ty≥s.h
>

17 
	~<sys/queue.h
>

18 
	~<sys/time.h
>

20 
	~<bô°rög.h
>

21 
	~<î∫o.h
>

22 
	~<limôs.h
>

23 
	~<°dio.h
>

24 
	~<°dlib.h
>

25 
	~<°rög.h
>

27 
	~"../comm⁄/comm⁄.h
"

28 
	~"vi.h
"

37 
	$v_Undo
(
•
, 
vp
)

38 
SCR
 *
•
;

39 
VICMD
 *
vp
;

48 
vp
->
m_föÆ
.
˙o
 = 0;

60 
	`F_SET
(
•
->
ï
, 
F_UNDO
);

61 
•
->
ï
->
lundo
 = 
BACKWARD
;

63  (
	`log_£éöe
(
•
));

64 
	}
}

73 
	$v_undo
(
•
, 
vp
)

74 
SCR
 *
•
;

75 
VICMD
 *
vp
;

77 
EXF
 *
ï
;

80 
	`VIP
(
•
)->
u_c˙t
 = sp->
c˙t
;

123 
ï
 = 
•
->ep;

124 i‡(!
	`F_ISSET
(
ï
, 
F_UNDO
)) {

125 
	`F_SET
(
ï
, 
F_UNDO
);

126 
ï
->
lundo
 = 
BACKWARD
;

127 } i‡(!
	`F_ISSET
(
vp
, 
VC_ISDOT
))

128 
ï
->
lundo
 =Ép->lundÿ=
BACKWARD
 ? 
FORWARD
 : BACKWARD;

130 
ï
->
lundo
) {

131 
BACKWARD
:

132  (
	`log_backw¨d
(
•
, &
vp
->
m_föÆ
));

133 
FORWARD
:

134  (
	`log_f‹w¨d
(
•
, &
vp
->
m_föÆ
));

136 
	`ab‹t
();

139 
	}
}

	@vi/v_util.c

10 
	~"c⁄fig.h
"

12 #i‚de‡
löt


13 c⁄° 
	gsccsid
[] = "@(#)v_util.c 10.11 (Berkeley) 6/30/96";

16 
	~<sys/ty≥s.h
>

17 
	~<sys/queue.h
>

18 
	~<sys/time.h
>

20 
	~<bô°rög.h
>

21 
	~<˘y≥.h
>

22 
	~<limôs.h
>

23 
	~<°dio.h
>

24 
	~<°dlib.h
>

25 
	~<°rög.h
>

26 
	~<uni°d.h
>

28 
	~"../comm⁄/comm⁄.h
"

29 
	~"vi.h
"

38 
	$v_eof
(
•
, 
mp
)

39 
SCR
 *
•
;

40 
MARK
 *
mp
;

42 
ª˙o_t
 
 o
;

44 i‡(
mp
 =
NULL
)

45 
	`v_emsg
(
•
, 
NULL
, 
VIM_EOF
);

47 i‡(
	`db_œ°
(
•
, &
 o
))

49 i‡(
mp
->
 o
 >=Üno)

50 
	`v_emsg
(
•
, 
NULL
, 
VIM_EOF
);

52 
	`msgq
(
•
, 
M_BERR
, "195|MovementÖastÅheÉnd-of-file");

54 
	}
}

63 
	$v_eﬁ
(
•
, 
mp
)

64 
SCR
 *
•
;

65 
MARK
 *
mp
;

67 
size_t
 
Àn
;

69 i‡(
mp
 =
NULL
)

70 
	`v_emsg
(
•
, 
NULL
, 
VIM_EOL
);

72 i‡(
	`db_gë
(
•
, 
mp
->
 o
, 
DBG_FATAL
, 
NULL
, &
Àn
))

74 i‡(
mp
->
˙o
 =
Àn
 - 1)

75 
	`v_emsg
(
•
, 
NULL
, 
VIM_EOL
);

77 
	`msgq
(
•
, 
M_BERR
, "196|MovementÖastÅheÉnd-of-line");

79 
	}
}

88 
	$v_nomove
(
•
)

89 
SCR
 *
•
;

91 
	`msgq
(
•
, 
M_BERR
, "197|No cursor movement made");

92 
	}
}

101 
	$v_sof
(
•
, 
mp
)

102 
SCR
 *
•
;

103 
MARK
 *
mp
;

105 i‡(
mp
 =
NULL
 || mp->
 o
 == 1)

106 
	`msgq
(
•
, 
M_BERR
, "198|AlreadyátÅhe beginning ofÅhe file");

108 
	`msgq
(
•
, 
M_BERR
, "199|MovementÖastÅhe beginning ofÅhe file");

109 
	}
}

118 
	$v_sﬁ
(
•
)

119 
SCR
 *
•
;

121 
	`msgq
(
•
, 
M_BERR
, "200|Already inÅhe first column");

122 
	}
}

131 
	$v_i£m±y
(
p
, 
Àn
)

132 *
p
;

133 
size_t
 
Àn
;

135 ; 
Àn
--; ++
p
)

136 i‡(!
	`isbœnk
(*
p
))

139 
	}
}

148 
	$v_emsg
(
•
, 
p
, 
which
)

149 
SCR
 *
•
;

150 *
p
;

151 
vim_t
 
which
;

153 
which
) {

154 
VIM_COMBUF
:

155 
	`msgq
(
•
, 
M_ERR
,

158 
VIM_EMPTY
:

159 
	`msgq
(
•
, 
M_BERR
, "209|The file isÉmpty");

161 
VIM_EOF
:

162 
	`msgq
(
•
, 
M_BERR
, "202|AlreadyátÉnd-of-file");

164 
VIM_EOL
:

165 
	`msgq
(
•
, 
M_BERR
, "203|AlreadyátÉnd-of-line");

167 
VIM_NOCOM
:

168 
VIM_NOCOM_B
:

169 
	`msgq
(
•
,

170 
which
 =
VIM_NOCOM_B
 ? 
M_BERR
 : 
M_ERR
,

171 "204|%†i¢'à®vòcomm™d", 
p
);

173 
VIM_WRESIZE
:

174 
	`msgq
(
•
, 
M_ERR
, "WindowÑesize interruptedÅext input mode");

176 
VIM_USAGE
:

177 
	`msgq
(
•
, 
M_ERR
, "205|Ußge: %s", 
p
);

180 
	}
}

	@vi/v_word.c

10 
	~"c⁄fig.h
"

12 #i‚de‡
löt


13 c⁄° 
	gsccsid
[] = "@(#)v_word.c 10.5 (Berkeley) 3/6/96";

16 
	~<sys/ty≥s.h
>

17 
	~<sys/queue.h
>

18 
	~<sys/time.h
>

20 
	~<bô°rög.h
>

21 
	~<˘y≥.h
>

22 
	~<limôs.h
>

23 
	~<°dio.h
>

25 
	~"../comm⁄/comm⁄.h
"

26 
	~"vi.h
"

67 
	ewhich
 {
	mBIGWORD
, 
	mLITTLEWORD
};

69 
bw‹d
 
__P
((
SCR
 *, 
VICMD
 *, 
which
));

70 
ew‹d
 
__P
((
SCR
 *, 
VICMD
 *, 
which
));

71 
fw‹d
 
__P
((
SCR
 *, 
VICMD
 *, 
which
));

80 
	$v_w‹dW
(
•
, 
vp
)

81 
SCR
 *
•
;

82 
VICMD
 *
vp
;

84  (
	`fw‹d
(
•
, 
vp
, 
BIGWORD
));

85 
	}
}

94 
	$v_w‹dw
(
•
, 
vp
)

95 
SCR
 *
•
;

96 
VICMD
 *
vp
;

98  (
	`fw‹d
(
•
, 
vp
, 
LITTLEWORD
));

99 
	}
}

106 
	$fw‹d
(
•
, 
vp
, 
ty≥
)

107 
SCR
 *
•
;

108 
VICMD
 *
vp
;

109 
which
 
ty≥
;

111 íum { 
INWORD
, 
NOTWORD
 } 
°©e
;

112 
VCS
 
cs
;

113 
u_l⁄g
 
˙t
;

115 
˙t
 = 
	`F_ISSET
(
vp
, 
VC_C1SET
Ë? vp->
cou¡
 : 1;

116 
cs
.
cs_ o
 = 
vp
->
m_°¨t
.
 o
;

117 
cs
.
cs_˙o
 = 
vp
->
m_°¨t
.
˙o
;

118 i‡(
	`cs_öô
(
•
, &
cs
))

128 i‡(
cs
.
cs_Êags
 =
CS_EMP
 || cs.cs_Êag†=0 && 
	`isbœnk
(cs.
cs_ch
)) {

129 i‡(
	`ISMOTION
(
vp
Ë&& 
cs
.
cs_Êags
 !
CS_EMP
 && 
˙t
 == 1) {

130 i‡(
	`ISCMD
(
vp
->
rkp
, 'c'))

132 i‡(
	`ISCMD
(
vp
->
rkp
, 'd') || ISCMD(vp->rkp, 'y')) {

133 i‡(
	`cs_f•a˚
(
•
, &
cs
))

135 
ªt
;

138 i‡(
	`cs_fbœnk
(
•
, &
cs
))

140 --
˙t
;

149 i‡(
ty≥
 =
BIGWORD
)

150 
˙t
--) {

152 i‡(
	`cs_√xt
(
•
, &
cs
))

154 i‡(
cs
.
cs_Êags
 =
CS_EOF
)

155 
ªt
;

156 i‡(
cs
.
cs_Êags
 !0 || 
	`isbœnk
(cs.
cs_ch
))

165 i‡(
˙t
 =0 && 
	`ISMOTION
(
vp
)) {

166 i‡((
	`ISCMD
(
vp
->
rkp
, 'd') ||

167 
	`ISCMD
(
vp
->
rkp
, 'y')) &&

168 
	`cs_f•a˚
(
•
, &
cs
))

174 i‡(
	`cs_fbœnk
(
•
, &
cs
))

176 i‡(
cs
.
cs_Êags
 =
CS_EOF
)

177 
ªt
;

180 
˙t
--) {

181 
°©e
 = 
cs
.
cs_Êags
 == 0 &&

182 
	`öw‹d
(
cs
.
cs_ch
Ë? 
INWORD
 : 
NOTWORD
;

184 i‡(
	`cs_√xt
(
•
, &
cs
))

186 i‡(
cs
.
cs_Êags
 =
CS_EOF
)

187 
ªt
;

188 i‡(
cs
.
cs_Êags
 !0 || 
	`isbœnk
(cs.
cs_ch
))

190 i‡(
°©e
 =
INWORD
) {

191 i‡(!
	`öw‹d
(
cs
.
cs_ch
))

194 i‡(
	`öw‹d
(
cs
.
cs_ch
))

198 i‡(
˙t
 =0 && 
	`ISMOTION
(
vp
)) {

199 i‡((
	`ISCMD
(
vp
->
rkp
, 'd') ||

200 
	`ISCMD
(
vp
->
rkp
, 'y')) &&

201 
	`cs_f•a˚
(
•
, &
cs
))

207 i‡(
cs
.
cs_Êags
 !0 || 
	`isbœnk
(cs.
cs_ch
))

208 i‡(
	`cs_fbœnk
(
•
, &
cs
))

210 i‡(
cs
.
cs_Êags
 =
CS_EOF
)

211 
ªt
;

220 
ªt
: i‡(!
	`ISMOTION
(
vp
) &&

221 
cs
.
cs_ o
 =
vp
->
m_°¨t
.
 o
 && cs.
cs_˙o
 =vp->m_°¨t.
˙o
) {

222 
	`v_eof
(
•
, &
vp
->
m_°¨t
);

227 
vp
->
m_°›
.
 o
 = 
cs
.
cs_ o
;

228 
vp
->
m_°›
.
˙o
 = 
cs
.
cs_˙o
;

229 i‡(
	`ISMOTION
(
vp
Ë&& 
cs
.
cs_Êags
 == 0)

230 --
vp
->
m_°›
.
˙o
;

236 
vp
->
m_föÆ
 = 
	`ISMOTION
(vpË? vp->
m_°¨t
 : vp->
m_°›
;

238 
	}
}

247 
	$v_w‹dE
(
•
, 
vp
)

248 
SCR
 *
•
;

249 
VICMD
 *
vp
;

251  (
	`ew‹d
(
•
, 
vp
, 
BIGWORD
));

252 
	}
}

261 
	$v_w‹de
(
•
, 
vp
)

262 
SCR
 *
•
;

263 
VICMD
 *
vp
;

265  (
	`ew‹d
(
•
, 
vp
, 
LITTLEWORD
));

266 
	}
}

273 
	$ew‹d
(
•
, 
vp
, 
ty≥
)

274 
SCR
 *
•
;

275 
VICMD
 *
vp
;

276 
which
 
ty≥
;

278 íum { 
INWORD
, 
NOTWORD
 } 
°©e
;

279 
VCS
 
cs
;

280 
u_l⁄g
 
˙t
;

282 
˙t
 = 
	`F_ISSET
(
vp
, 
VC_C1SET
Ë? vp->
cou¡
 : 1;

283 
cs
.
cs_ o
 = 
vp
->
m_°¨t
.
 o
;

284 
cs
.
cs_˙o
 = 
vp
->
m_°¨t
.
˙o
;

285 i‡(
	`cs_öô
(
•
, &
cs
))

294 i‡(
cs
.
cs_Êags
 =0 && !
	`isbœnk
(cs.
cs_ch
)) {

295 i‡(
	`cs_√xt
(
•
, &
cs
))

297 i‡(
cs
.
cs_Êags
 =0 && !
	`isbœnk
(cs.
cs_ch
))

298 
°¨t
;

300 i‡(
	`cs_fbœnk
(
•
, &
cs
))

309 
°¨t
: i‡(
ty≥
 =
BIGWORD
)

310 
˙t
--) {

312 i‡(
	`cs_√xt
(
•
, &
cs
))

314 i‡(
cs
.
cs_Êags
 =
CS_EOF
)

315 
ªt
;

316 i‡(
cs
.
cs_Êags
 !0 || 
	`isbœnk
(cs.
cs_ch
))

324 i‡(
˙t
 == 0) {

325 i‡(
cs
.
cs_Êags
 =0 && 
	`cs_¥ev
(
•
, &cs))

331 i‡(
	`cs_fbœnk
(
•
, &
cs
))

333 i‡(
cs
.
cs_Êags
 =
CS_EOF
)

334 
ªt
;

337 
˙t
--) {

338 
°©e
 = 
cs
.
cs_Êags
 == 0 &&

339 
	`öw‹d
(
cs
.
cs_ch
Ë? 
INWORD
 : 
NOTWORD
;

341 i‡(
	`cs_√xt
(
•
, &
cs
))

343 i‡(
cs
.
cs_Êags
 =
CS_EOF
)

344 
ªt
;

345 i‡(
cs
.
cs_Êags
 !0 || 
	`isbœnk
(cs.
cs_ch
))

347 i‡(
°©e
 =
INWORD
) {

348 i‡(!
	`öw‹d
(
cs
.
cs_ch
))

351 i‡(
	`öw‹d
(
cs
.
cs_ch
))

355 i‡(
˙t
 == 0) {

356 i‡(
cs
.
cs_Êags
 =0 && 
	`cs_¥ev
(
•
, &cs))

362 i‡(
cs
.
cs_Êags
 !0 || 
	`isbœnk
(cs.
cs_ch
))

363 i‡(
	`cs_fbœnk
(
•
, &
cs
))

365 i‡(
cs
.
cs_Êags
 =
CS_EOF
)

366 
ªt
;

375 
ªt
: i‡(!
	`ISMOTION
(
vp
) &&

376 
cs
.
cs_ o
 =
vp
->
m_°¨t
.
 o
 && cs.
cs_˙o
 =vp->m_°¨t.
˙o
) {

377 
	`v_eof
(
•
, &
vp
->
m_°¨t
);

382 
vp
->
m_°›
.
 o
 = 
cs
.
cs_ o
;

383 
vp
->
m_°›
.
˙o
 = 
cs
.
cs_˙o
;

389 
vp
->
m_föÆ
 = 
	`ISMOTION
(vpË? vp->
m_°¨t
 : vp->
m_°›
;

391 
	}
}

400 
	$v_w‹dB
(
•
, 
vp
)

401 
SCR
 *
•
;

402 
VICMD
 *
vp
;

404  (
	`bw‹d
(
•
, 
vp
, 
BIGWORD
));

405 
	}
}

414 
	$v_w‹db
(
•
, 
vp
)

415 
SCR
 *
•
;

416 
VICMD
 *
vp
;

418  (
	`bw‹d
(
•
, 
vp
, 
LITTLEWORD
));

419 
	}
}

426 
	$bw‹d
(
•
, 
vp
, 
ty≥
)

427 
SCR
 *
•
;

428 
VICMD
 *
vp
;

429 
which
 
ty≥
;

431 íum { 
INWORD
, 
NOTWORD
 } 
°©e
;

432 
VCS
 
cs
;

433 
u_l⁄g
 
˙t
;

435 
˙t
 = 
	`F_ISSET
(
vp
, 
VC_C1SET
Ë? vp->
cou¡
 : 1;

436 
cs
.
cs_ o
 = 
vp
->
m_°¨t
.
 o
;

437 
cs
.
cs_˙o
 = 
vp
->
m_°¨t
.
˙o
;

438 i‡(
	`cs_öô
(
•
, &
cs
))

448 i‡(
cs
.
cs_Êags
 =0 && !
	`isbœnk
(cs.
cs_ch
)) {

449 i‡(
	`cs_¥ev
(
•
, &
cs
))

451 i‡(
cs
.
cs_Êags
 =0 && !
	`isbœnk
(cs.
cs_ch
))

452 
°¨t
;

454 i‡(
	`cs_bbœnk
(
•
, &
cs
))

463 
°¨t
: i‡(
ty≥
 =
BIGWORD
)

464 
˙t
--) {

466 i‡(
	`cs_¥ev
(
•
, &
cs
))

468 i‡(
cs
.
cs_Êags
 =
CS_SOF
)

469 
ªt
;

470 i‡(
cs
.
cs_Êags
 !0 || 
	`isbœnk
(cs.
cs_ch
))

478 i‡(
˙t
 == 0) {

479 i‡(
cs
.
cs_Êags
 =0 && 
	`cs_√xt
(
•
, &cs))

485 i‡(
	`cs_bbœnk
(
•
, &
cs
))

487 i‡(
cs
.
cs_Êags
 =
CS_SOF
)

488 
ªt
;

491 
˙t
--) {

492 
°©e
 = 
cs
.
cs_Êags
 == 0 &&

493 
	`öw‹d
(
cs
.
cs_ch
Ë? 
INWORD
 : 
NOTWORD
;

495 i‡(
	`cs_¥ev
(
•
, &
cs
))

497 i‡(
cs
.
cs_Êags
 =
CS_SOF
)

498 
ªt
;

499 i‡(
cs
.
cs_Êags
 !0 || 
	`isbœnk
(cs.
cs_ch
))

501 i‡(
°©e
 =
INWORD
) {

502 i‡(!
	`öw‹d
(
cs
.
cs_ch
))

505 i‡(
	`öw‹d
(
cs
.
cs_ch
))

509 i‡(
˙t
 == 0) {

510 i‡(
cs
.
cs_Êags
 =0 && 
	`cs_√xt
(
•
, &cs))

516 i‡(
cs
.
cs_Êags
 !0 || 
	`isbœnk
(cs.
cs_ch
))

517 i‡(
	`cs_bbœnk
(
•
, &
cs
))

519 i‡(
cs
.
cs_Êags
 =
CS_SOF
)

520 
ªt
;

524 
ªt
: i‡(
cs
.
cs_ o
 =
vp
->
m_°¨t
.
 o
 && cs.
cs_˙o
 =vp->m_°¨t.
˙o
) {

525 
	`v_sof
(
•
, &
vp
->
m_°¨t
);

530 
vp
->
m_°›
.
 o
 = 
cs
.
cs_ o
;

531 
vp
->
m_°›
.
˙o
 = 
cs
.
cs_˙o
;

543 
vp
->
m_föÆ
 = vp->
m_°›
;

544 i‡(
	`ISMOTION
(
vp
))

545 --
vp
->
m_°¨t
.
˙o
;

547 
	}
}

	@vi/v_xchar.c

10 
	~"c⁄fig.h
"

12 #i‚de‡
löt


13 c⁄° 
	gsccsid
[] = "@(#)v_xchar.c 10.9 (Berkeley) 10/23/96";

16 
	~<sys/ty≥s.h
>

17 
	~<sys/queue.h
>

18 
	~<sys/time.h
>

20 
	~<bô°rög.h
>

21 
	~<limôs.h
>

22 
	~<°dio.h
>

24 
	~"../comm⁄/comm⁄.h
"

25 
	~"vi.h
"

34 
	$v_xch¨
(
•
, 
vp
)

35 
SCR
 *
•
;

36 
VICMD
 *
vp
;

38 
size_t
 
Àn
;

39 
i£m±y
;

41 i‡(
	`db_egë
(
•
, 
vp
->
m_°¨t
.
 o
, 
NULL
, &
Àn
, &
i£m±y
)) {

42 i‡(
i£m±y
)

43 
nodñ
;

46 i‡(
Àn
 == 0) {

47 
nodñ
: 
	`msgq
(
•
, 
M_BERR
, "206|No charactersÅo delete");

60 i‡(
	`F_ISSET
(
vp
, 
VC_C1SET
))

61 
vp
->
m_°›
.
˙o
 +vp->
cou¡
 - 1;

62 i‡(
vp
->
m_°›
.
˙o
 >
Àn
 - 1) {

63 
vp
->
m_°›
.
˙o
 = 
Àn
 - 1;

64 
vp
->
m_föÆ
.
˙o
 = vp->
m_°¨t
.cno ? vp->m_start.cno - 1 : 0;

66 
vp
->
m_föÆ
.
˙o
 = vp->
m_°¨t
.cno;

68 i‡(
	`cut
(
•
,

69 
	`F_ISSET
(
vp
, 
VC_BUFFER
Ë? &vp->
buf„r
 : 
NULL
,

70 &
vp
->
m_°¨t
, &vp->
m_°›
, 0))

72  (
	`dñ
(
•
, &
vp
->
m_°¨t
, &vp->
m_°›
, 0));

73 
	}
}

83 
	$v_Xch¨
(
•
, 
vp
)

84 
SCR
 *
•
;

85 
VICMD
 *
vp
;

87 
u_l⁄g
 
˙t
;

89 i‡(
vp
->
m_°¨t
.
˙o
 == 0) {

90 
	`v_sﬁ
(
•
);

94 
˙t
 = 
	`F_ISSET
(
vp
, 
VC_C1SET
Ë? vp->
cou¡
 : 1;

95 i‡(
˙t
 >
vp
->
m_°¨t
.
˙o
)

96 
vp
->
m_°¨t
.
˙o
 = 0;

98 
vp
->
m_°¨t
.
˙o
 -
˙t
;

99 --
vp
->
m_°›
.
˙o
;

100 
vp
->
m_föÆ
.
˙o
 = vp->
m_°¨t
.cno;

102 i‡(
	`cut
(
•
,

103 
	`F_ISSET
(
vp
, 
VC_BUFFER
Ë? &vp->
buf„r
 : 
NULL
,

104 &
vp
->
m_°¨t
, &vp->
m_°›
, 0))

106  (
	`dñ
(
•
, &
vp
->
m_°¨t
, &vp->
m_°›
, 0));

107 
	}
}

	@vi/v_yank.c

10 
	~"c⁄fig.h
"

12 #i‚de‡
löt


13 c⁄° 
	gsccsid
[] = "@(#)v_yank.c 10.9 (Berkeley) 5/19/96";

16 
	~<sys/ty≥s.h
>

17 
	~<sys/queue.h
>

18 
	~<sys/time.h
>

20 
	~<bô°rög.h
>

21 
	~<limôs.h
>

22 
	~<°dio.h
>

24 
	~"../comm⁄/comm⁄.h
"

25 
	~"vi.h
"

45 
	$v_y™k
(
•
, 
vp
)

46 
SCR
 *
•
;

47 
VICMD
 *
vp
;

49 
size_t
 
Àn
;

51 i‡(
	`cut
(
•
,

52 
	`F_ISSET
(
vp
, 
VC_BUFFER
Ë? &vp->
buf„r
 : 
NULL
, &vp->
m_°¨t
,

53 &
vp
->
m_°›
, 
	`F_ISSET
(vp, 
VM_LMODE
Ë? 
CUT_LINEMODE
 : 0))

55 
•
->
Ωéöes
[
L_YANKED
] +(
vp
->
m_°›
.
 o
 - vp->
m_°¨t
.lno) + 1;

62 i‡(
	`db_gë
(
•
, 
vp
->
m_föÆ
.
 o
, 
DBG_FATAL
, 
NULL
, &
Àn
))

73 i‡(!
	`F_ISSET
(
vp
, 
VM_LMODE
)) {

74 
	`F_CLR
(
vp
, 
VM_RCM_MASK
);

75 
	`F_SET
(
vp
, 
VM_RCM_SET
);

78 i‡(
vp
->
m_föÆ
.
˙o
 >
Àn
)

79 
vp
->
m_föÆ
.
˙o
 = 
Àn
 ?Üen - 1 : 0;

82 
	}
}

	@vi/v_z.c

10 
	~"c⁄fig.h
"

12 #i‚de‡
löt


13 c⁄° 
	gsccsid
[] = "@(#)v_z.c 10.10 (Berkeley) 5/16/96";

16 
	~<sys/ty≥s.h
>

17 
	~<sys/queue.h
>

18 
	~<sys/time.h
>

20 
	~<bô°rög.h
>

21 
	~<limôs.h
>

22 
	~<°dio.h
>

24 
	~"../comm⁄/comm⁄.h
"

25 
	~"vi.h
"

34 
	$v_z
(
•
, 
vp
)

35 
SCR
 *
•
;

36 
VICMD
 *
vp
;

38 
ª˙o_t
 
 o
;

39 
u_öt
 
vÆue
;

45 i‡(
	`F_ISSET
(
vp
, 
VC_C1SET
)) {

46 
 o
 = 
vp
->
cou¡
;

47 i‡(!
	`db_exi°
(
•
, 
 o
Ë&& 
	`db_œ°
(sp, &lno))

50 
 o
 = 
vp
->
m_°¨t
.lno;

53 
vp
->
m_föÆ
.
 o
 =Üno;

54 
vp
->
m_föÆ
.
˙o
 = vp->
m_°¨t
.cno;

66 i‡(
	`F_ISSET
(
vp
, 
VC_C2SET
Ë&& vp->
cou¡2
 != 0) {

67 i‡(
vp
->
cou¡2
 > 
	`O_VAL
(
•
, 
O_WINDOW
))

68 
vp
->
cou¡2
 = 
	`O_VAL
(
•
, 
O_WINDOW
);

69 i‡(
	`vs_¸ñ
(
•
, 
vp
->
cou¡2
))

73 
vp
->
ch¨a˘î
) {

75 i‡(
	`vs_sm_fûl
(
•
, 
 o
, 
P_BOTTOM
))

79 i‡(
	`vs_sm_fûl
(
•
, 
 o
, 
P_MIDDLE
))

88 i‡(
	`F_ISSET
(
vp
, 
VC_C1SET
)) {

89 i‡(
	`vs_sm_fûl
(
•
, 
 o
, 
P_TOP
))

91 i‡(
	`vs_sm_posôi⁄
(
•
, &
vp
->
m_föÆ
, 0, 
P_TOP
))

94 i‡(
	`vs_sm_s¸ﬁl
(
•
, &
vp
->
m_föÆ
, sp->
t_rows
, 
Z_PLUS
))

108 i‡(
	`F_ISSET
(
vp
, 
VC_C1SET
)) {

109 i‡(
	`vs_sm_fûl
(
•
, 
 o
, 
P_BOTTOM
))

111 i‡(
	`vs_sm_posôi⁄
(
•
, &
vp
->
m_föÆ
, 0, 
P_TOP
))

113 i‡(
	`vs_sm_fûl
(
•
, 
vp
->
m_föÆ
.
 o
, 
P_BOTTOM
))

116 i‡(
	`vs_sm_s¸ﬁl
(
•
, &
vp
->
m_föÆ
, sp->
t_rows
, 
Z_CARAT
))

120 
vÆue
 = 
	`KEY_VAL
(
•
, 
vp
->
ch¨a˘î
);

121 i‡(
vÆue
 !
K_CR
 && vÆuê!
K_NL
) {

122 
	`v_emsg
(
•
, 
vp
->
kp
->
ußge
, 
VIM_USAGE
);

125 i‡(
	`vs_sm_fûl
(
•
, 
 o
, 
P_TOP
))

130 
	}
}

139 
	$vs_¸ñ
(
•
, 
cou¡
)

140 
SCR
 *
•
;

141 
cou¡
;

143 
•
->
t_mörows
 = sp->
t_rows
 = 
cou¡
;

144 i‡(
•
->
t_rows
 > sp->
rows
 - 1)

145 
•
->
t_mörows
 = sp->
t_rows
 = sp->
rows
 - 1;

146 
TMAP
 = 
HMAP
 + (
•
->
t_rows
 - 1);

147 
	`F_SET
(
•
, 
SC_SCR_REDRAW
);

149 
	}
}

	@vi/v_zexit.c

10 
	~"c⁄fig.h
"

12 #i‚de‡
löt


13 c⁄° 
	gsccsid
[] = "@(#)v_zexit.c 10.6 (Berkeley) 4/27/96";

16 
	~<sys/ty≥s.h
>

17 
	~<sys/queue.h
>

18 
	~<sys/time.h
>

20 
	~<bô°rög.h
>

21 
	~<limôs.h
>

22 
	~<°dio.h
>

23 
	~<°rög.h
>

25 
	~"../comm⁄/comm⁄.h
"

26 
	~"vi.h
"

35 
	$v_zexô
(
•
, 
vp
)

36 
SCR
 *
•
;

37 
VICMD
 *
vp
;

40 i‡(
	`F_ISSET
(
•
->
ï
, 
F_MODIFIED
) &&

41 
	`fûe_wrôe
(
•
, 
NULL
, NULL, NULL, 
FS_ALL
))

45 i‡(
	`fûe_m3
(
•
, 0))

49 i‡(
	`ex_ncheck
(
•
, 0))

52 
	`F_SET
(
•
, 
SC_EXIT
);

54 
	}
}

	@vi/vi.c

10 
	~"c⁄fig.h
"

12 #i‚de‡
löt


13 c⁄° 
	gsccsid
[] = "@(#)vi.c 10.57 (Berkeley) 10/13/96";

16 
	~<sys/ty≥s.h
>

17 
	~<sys/queue.h
>

18 
	~<sys/time.h
>

20 
	~<bô°rög.h
>

21 
	~<˘y≥.h
>

22 
	~<î∫o.h
>

23 
	~<limôs.h
>

24 
	~<°dio.h
>

25 
	~<°dlib.h
>

26 
	~<°rög.h
>

27 
	~<uni°d.h
>

29 
	~"../comm⁄/comm⁄.h
"

30 
	~"vi.h
"

33 
	mGC_ERR
, 
	mGC_ERR_NOFLUSH
, 
	mGC_EVENT
, 
	mGC_FATAL
, 
	mGC_INTERRUPT
, 
	mGC_OK


34 } 
	tg¸ë_t
;

36 
VIKEYS
 const

37 *
v_Æüs
 
__P
((
SCR
 *, 
VICMD
 *, 
VIKEYS
 const *));

38 
g¸ë_t
 
v_cmd
 
__P
((
SCR
 *, 
VICMD
 *, VICMD *, VICMD *, *, *));

39 
v_cou¡
 
__P
((
SCR
 *, 
ARG_CHAR_T
, 
u_l⁄g
 *));

40 
v_dtoh
 
__P
((
SCR
 *));

41 
v_öô
 
__P
((
SCR
 *));

42 
g¸ë_t
 
v_key
 
__P
((
SCR
 *, , 
EVENT
 *, 
u_öt32_t
));

43 
v_keyw‹d
 
__P
((
SCR
 *));

44 
v_mŸi⁄
 
__P
((
SCR
 *, 
VICMD
 *, VICMD *, *));

46 #i‡
deföed
(
DEBUG
Ë&& deföed(
COMLOG
)

47 
v_comlog
 
__P
((
SCR
 *, 
VICMD
 *));

55 
	#DOT
 (&
	`VIP
(
•
)->
sdŸ
)

	)

56 
	#DOTMOTION
 (&
	`VIP
(
•
)->
sdŸmŸi⁄
)

	)

65 
	$vi
(
•p
)

66 
SCR
 **
•p
;

68 
GS
 *
gp
;

69 
MARK
 
abs
;

70 
SCR
 *
√xt
, *
•
;

71 
VICMD
 
cmd
, *
vp
;

72 
VI_PRIVATE
 *
vù
;

73 
comcou¡
, 
m≠≥d
, 
rvÆ
;

76 
•
 = *
•p
;

77 
gp
 = 
•
->gp;

80 
vp
 = &
cmd
;

81 
	`mem£t
(
vp
, 0, (
VICMD
));

84 
	`F_SET
(
vp
, 
VM_RCM_SET
);

87 i‡(
	`v_öô
(
•
))

91 ()
•
->
gp
->
	`s¸_ª«me
(•, sp->
‰p
->
«me
, 1);

93 
vù
 = 
	`VIP
(
•
), 
rvÆ
 = 0;;) {

95 i‡(!
	`MAPPED_KEYS_WAITING
(
•
Ë&& 
	`vs_ªsﬁve
(•, 
NULL
, 0))

96 
ªt
;

102 i‡(
	`F_ISSET
(
vù
, 
VIP_S_REFRESH
))

103 
	`F_CLR
(
vù
, 
VIP_S_REFRESH
);

105 
•
->
showmode
 = 
SM_COMMAND
;

106 i‡(
	`vs_ª‰esh
(
•
, 0))

107 
ªt
;

111 i‡(
	`F_ISSET
(
vp
, 
VM_RCM_SET
 | 
VM_RCM_SETFNB
 | 
VM_RCM_SETNNB
)) {

112 
	`F_CLR
(
vù
, 
VIP_RCM_LAST
);

113 ()
	`vs_cﬁumn
(
•
, &•->
rcm
);

121 i‡(
	`MAPPED_KEYS_WAITING
(
•
))

122 
m≠≥d
 = 1;

124 i‡(
	`log_curs‹
(
•
))

125 
îr
;

126 
m≠≥d
 = 0;

134 i‡(
	`EXCMD_RUNNING
(
gp
)) {

135 
vp
->
kp
 = &
vikeys
[':'];

136 
ex_c⁄töue
;

140 
	`mem£t
(
vp
, 0, (
VICMD
));

155 
	`v_cmd
(
•
, 
DOT
, 
vp
, 
NULL
, &
comcou¡
, &
m≠≥d
)) {

156 
GC_ERR
:

157 
îr
;

158 
GC_ERR_NOFLUSH
:

159 
gc_îr_noÊush
;

160 
GC_EVENT
:

161 i‡(
	`v_evít_exec
(
•
, 
vp
))

162 
îr
;

163 
gc_evít
;

164 
GC_FATAL
:

165 
ªt
;

166 
GC_INTERRUPT
:

167 
öå
;

168 
GC_OK
:

173 i‡(
	`F_ISSET
(
vp
->
kp
, 
V_SECURE
Ë&& 
	`O_ISSET
(
•
, 
O_SECURE
)) {

174 
	`ex_emsg
(
•
, 
	`KEY_NAME
(•, 
vp
->
key
), 
EXM_SECURE
);

175 
îr
;

183 i‡(
	`F_ISSET
(
vp
, 
VC_ISDOT
Ë&& 
comcou¡
)

184 
DOTMOTION
->
cou¡
 = 1;

187 
	`F_SET
(
vp
, vp->
kp
->
Êags
);

190 i‡(
	`F_ISSET
(
vp
, 
V_ABS
 | 
V_ABS_C
 | 
V_ABS_L
)) {

191 
abs
.
 o
 = 
•
->lno;

192 
abs
.
˙o
 = 
•
->cno;

201 
vp
->
m_°¨t
.
 o
 = vp->
m_°›
. ÿvp->
m_föÆ
. ÿ
•
->lno;

202 
vp
->
m_°¨t
.
˙o
 = vp->
m_°›
.˙ÿvp->
m_föÆ
.˙ÿ
•
->cno;

208 i‡(
	`F_ISSET
(
vp
, 
V_MOTION
) &&

209 
	`v_mŸi⁄
(
•
, 
DOTMOTION
, 
vp
, &
m≠≥d
)) {

210 i‡(
	`INTERRUPTED
(
•
))

211 
öå
;

212 
îr
;

225 i‡(
	`F_ISSET
(
vp
, 
VC_C1SET
Ë&& F_ISSET(vp, 
VM_LMODE
))

226 
vp
->
m_°›
.
 o
 +vp->
cou¡
 - 1;

229 ++
•
->
c˙t
;

231 #i‡
	`deföed
(
DEBUG
Ë&& deföed(
COMLOG
)

232 
	`v_comlog
(
•
, 
vp
);

235 
ex_c⁄töue
: i‡(
vp
->
kp
->
	`func
(
•
, vp))

236 
îr
;

237 
gc_evít
:

238 #ifde‡
DEBUG


240 i‡(
	`F_ISSET
(
gp
, 
G_TMP_INUSE
)) {

241 
	`F_CLR
(
gp
, 
G_TMP_INUSE
);

242 
	`msgq
(
•
, 
M_ERR
,

252 i‡(
	`F_ISSET
(
•
, 
SC_EXIT
 | 
SC_EXIT_FORCE
)) {

253 i‡(
	`fûe_íd
(
•
, 
NULL
, 
	`F_ISSET
(•, 
SC_EXIT_FORCE
)))

254 
ªt
;

255 i‡(
	`vs_disˇrd
(
•
, &
√xt
))

256 
ªt
;

257 i‡(
√xt
 =
NULL
 && 
	`vs_sw≠
(
•
, &next, NULL))

258 
ªt
;

259 *
•p
 = 
√xt
;

260 i‡(
	`s¸ìn_íd
(
•
))

261 
ªt
;

262 i‡(
√xt
 =
NULL
)

266 
•
 = 
√xt
;

267 
vù
 = 
	`VIP
(
•
);

268 ()
•
->
gp
->
	`s¸_ª«me
(•, sp->
‰p
->
«me
, 1);

271 
	`F_SET
(
vù
, 
VIP_CUR_INVALID
);

284 i‡(
	`F_ISSET
(
vp
, 
V_DOT
Ë&& !
m≠≥d
) {

285 *
DOT
 = 
cmd
;

286 
	`F_SET
(
DOT
, 
VC_ISDOT
);

293 i‡(
	`F_ISSET
(
vp
, 
VC_C1RESET
))

294 
	`F_SET
(
DOT
, 
VC_C1SET
);

297 
	`F_CLR
(
DOT
, 
VM_COMMASK
 | 
VM_RCM_MASK
);

319 
	`F_ISSET
(
vp
, 
VM_RCM_MASK
)) {

321 
VM_RCM_SET
:

323 
VM_RCM
:

324 
vp
->
m_föÆ
.
˙o
 = 
	`vs_rcm
(
•
,

325 
vp
->
m_föÆ
.
 o
, 
	`F_ISSET
(
vù
, 
VIP_RCM_LAST
));

327 
VM_RCM_SETLAST
:

328 
	`F_SET
(
vù
, 
VIP_RCM_LAST
);

330 
VM_RCM_SETFNB
:

331 
vp
->
m_föÆ
.
˙o
 = 0;

333 
VM_RCM_SETNNB
:

334 i‡(
	`n⁄bœnk
(
•
, 
vp
->
m_föÆ
.
 o
, &vp->m_föÆ.
˙o
))

335 
îr
;

338 
	`ab‹t
();

342 
•
->
 o
 = 
vp
->
m_föÆ
.lno;

343 
•
->
˙o
 = 
vp
->
m_föÆ
.cno;

349 i‡((
	`F_ISSET
(
vp
, 
V_ABS
) ||

350 
	`F_ISSET
(
vp
, 
V_ABS_L
Ë&& 
•
->
 o
 !
abs
.lno ||

351 
	`F_ISSET
(
vp
, 
V_ABS_C
) &&

352 (
•
->
 o
 !
abs
. ÿ|| sp->
˙o
 !=ábs.cno)) &&

353 
	`m¨k_£t
(
•
, 
ABSMARK1
, &
abs
, 1))

354 
îr
;

357 
îr
: i‡(
	`v_evít_Êush
(
•
, 
CH_MAPPED
))

358 
	`msgq
(
•
, 
M_BERR
,

366 
gc_îr_noÊush
: i‡(
	`INTERRUPTED
(
•
)) {

367 
öå
: 
	`CLR_INTERRUPT
(
•
);

368 i‡(
	`v_evít_Êush
(
•
, 
CH_MAPPED
))

369 
	`msgq
(
•
, 
M_ERR
,

372 
	`msgq
(
•
, 
M_ERR
, "236|Interrupted");

376 i‡(
	`F_ISSET
(
•
, 
SC_SSWITCH
)) {

377 
	`F_CLR
(
•
, 
SC_SSWITCH
);

383 
	`F_SET
(
•
, 
SC_STATUS
);

386 
•
 = sp->
√xtdi•
;

387 
vù
 = 
	`VIP
(
•
);

388 ()
•
->
gp
->
	`s¸_ª«me
(•, sp->
‰p
->
«me
, 1);

391 
	`F_SET
(
vù
, 
VIP_CUR_INVALID
);

394 i‡(
	`vs_ª‰esh
(
•
, 1))

399 i‡(
	`F_ISSET
(
•
, 
SC_FSWITCH
)) {

400 
	`F_CLR
(
•
, 
SC_FSWITCH
);

401 ()
•
->
gp
->
	`s¸_ª«me
(•, sp->
‰p
->
«me
, 1);

405 i‡(
	`F_ISSET
(
gp
, 
G_SRESTART
Ë|| F_ISSET(
•
, 
SC_EX
)) {

406 *
•p
 = 
•
;

407 
	`v_dtoh
(
•
);

412 
ªt
: 
rvÆ
 = 1;

413  (
rvÆ
);

414 
	}
}

416 
	#KEY
(
key
, 
ec_Êags
) { \

417 i‡((
g¸ë
 = 
	`v_key
(
•
, 0, &
ev
, 
ec_Êags
)Ë!
GC_OK
) \

418  (
g¸ë
); \

419 i‡(
ev
.
e_vÆue
 =
K_ESCAPE
) \

420 
esc
; \

421 i‡(
	`F_ISSET
(&
ev
.
e_ch
, 
CH_MAPPED
)) \

422 *
m≠≥dp
 = 1; \

423 
key
 = 
ev
.
e_c
; \

424 }

	)

435 
VIKEYS
 c⁄° 
	gtmŸi⁄
 = {

436 
v_mulˇ£
, 
V_CNT
|
V_DOT
|
V_MOTION
|
VM_RCM_SET
,

454 
g¸ë_t


455 
	$v_cmd
(
•
, 
dp
, 
vp
, 
ismŸi⁄
, 
comcou¡p
, 
m≠≥dp
)

456 
SCR
 *
•
;

457 
VICMD
 *
dp
, *
vp
;

458 
VICMD
 *
ismŸi⁄
;

459 *
comcou¡p
, *
m≠≥dp
;

461 íum { 
COMMANDMODE
, 
ISPARTIAL
, 
NOTPARTIAL
 } 
˝¨t
;

462 
EVENT
 
ev
;

463 
VIKEYS
 c⁄° *
kp
;

464 
g¸ë_t
 
g¸ë
;

465 
u_öt
 
Êags
;

466 
CHAR_T
 
key
;

467 *
s
;

481 
˝¨t
 = 
ismŸi⁄
 =
NULL
 ? 
COMMANDMODE
 : 
ISPARTIAL
;

482 i‡((
g¸ë
 =

483 
	`v_key
(
•
, 
ismŸi⁄
 =
NULL
, &
ev
, 
EC_MAPCOMMAND
)Ë!
GC_OK
) {

484 i‡(
g¸ë
 =
GC_EVENT
)

485 
vp
->
ev
 =Év;

486  (
g¸ë
);

488 i‡(
ev
.
e_vÆue
 =
K_ESCAPE
)

489 
esc
;

490 i‡(
	`F_ISSET
(&
ev
.
e_ch
, 
CH_MAPPED
))

491 *
m≠≥dp
 = 1;

492 
key
 = 
ev
.
e_c
;

494 i‡(
ismŸi⁄
 =
NULL
)

495 
˝¨t
 = 
NOTPARTIAL
;

498 i‡(
key
 == '"') {

499 
˝¨t
 = 
ISPARTIAL
;

500 i‡(
ismŸi⁄
 !
NULL
) {

501 
	`v_emsg
(
•
, 
NULL
, 
VIM_COMBUF
);

502  (
GC_ERR
);

504 
	`KEY
(
vp
->
buf„r
, 0);

505 
	`F_SET
(
vp
, 
VC_BUFFER
);

507 
	`KEY
(
key
, 
EC_MAPCOMMAND
);

514 i‡(
	`isdigô
(
key
) && key != '0') {

515 i‡(
	`v_cou¡
(
•
, 
key
, &
vp
->
cou¡
))

516  (
GC_ERR
);

517 
	`F_SET
(
vp
, 
VC_C1SET
);

518 *
comcou¡p
 = 1;

520 
	`KEY
(
key
, 
EC_MAPCOMMAND
);

522 *
comcou¡p
 = 0;

525 i‡(
key
 == '"') {

526 
˝¨t
 = 
ISPARTIAL
;

527 i‡(
	`F_ISSET
(
vp
, 
VC_BUFFER
)) {

528 
	`msgq
(
•
, 
M_ERR
, "234|Only one buffer may be specified");

529  (
GC_ERR
);

531 i‡(
ismŸi⁄
 !
NULL
) {

532 
	`v_emsg
(
•
, 
NULL
, 
VIM_COMBUF
);

533  (
GC_ERR
);

535 
	`KEY
(
vp
->
buf„r
, 0);

536 
	`F_SET
(
vp
, 
VC_BUFFER
);

538 
	`KEY
(
key
, 
EC_MAPCOMMAND
);

542 
˝¨t
 = 
ISPARTIAL
;

543 i‡(
key
 > 
MAXVIKEY
) {

544 
	`v_emsg
(
•
, 
	`KEY_NAME
(•, 
key
), 
VIM_NOCOM
);

545  (
GC_ERR
);

547 
kp
 = &
vikeys
[
vp
->
key
 = key];

553 i‡(
vp
->
key
 ='D' && 
	`F_ISSET
(vp, 
VC_C1SET
)) {

554 *
comcou¡p
 = 0;

555 
vp
->
cou¡
 = 0;

556 
	`F_CLR
(
vp
, 
VC_C1SET
);

560 i‡(
kp
->
func
 =
NULL
 && (k∞
	`v_Æüs
(
•
, 
vp
, kp)) == NULL)

561  (
GC_ERR
);

564 i‡(
key
 ='~' && 
	`O_ISSET
(
•
, 
O_TILDEOP
))

565 
kp
 = &
tmŸi⁄
;

567 
vp
->
kp
 = kp;

576 i‡(
kp
->
func
 =
NULL
) {

577 i‡(
key
 != '.') {

578 
	`v_emsg
(
•
, 
	`KEY_NAME
(•, 
key
),

579 
ev
.
e_vÆue
 =
K_ESCAPE
 ? 
VIM_NOCOM_B
 : 
VIM_NOCOM
);

580  (
GC_ERR
);

584 i‡(
dp
 =
NULL
)

585 
ußge
;

594 i‡(
	`VIP
(
•
)->
u_c˙t
 =•->
c˙t
) {

595 
vp
->
kp
 = &
vikeys
['u'];

596 
	`F_SET
(
vp
, 
VC_ISDOT
);

597  (
GC_OK
);

601 i‡(!
	`F_ISSET
(
dp
, 
VC_ISDOT
)) {

602 
	`msgq
(
•
, 
M_ERR
, "208|No commandÅoÑepeat");

603  (
GC_ERR
);

607 i‡(
	`F_ISSET
(
vp
, 
VC_C1SET
)) {

608 
	`F_SET
(
dp
, 
VC_C1SET
);

609 
dp
->
cou¡
 = 
vp
->count;

611 i‡(
	`F_ISSET
(
vp
, 
VC_BUFFER
))

612 
dp
->
buf„r
 = 
vp
->buffer;

614 *
vp
 = *
dp
;

615  (
GC_OK
);

619 
Êags
 = 
kp
->flags;

622 i‡(
	`F_ISSET
(
vp
, 
VC_C1SET
Ë&& !
	`LF_ISSET
(
V_CNT
))

623 
ußge
;

626 i‡(
ismŸi⁄
 =
NULL
) {

628 i‡(!
	`LF_ISSET
(
V_OBUF
Ë&& 
	`F_ISSET
(
vp
, 
VC_BUFFER
))

629 
ußge
;

632 i‡(
	`LF_ISSET
(
V_RBUF
)) {

633 
	`KEY
(
vp
->
buf„r
, 0);

634 
	`F_SET
(
vp
, 
VC_BUFFER
);

643 i‡(
vp
->
key
 == '[' || vp->key == ']' || vp->key == 'Z') {

656 
	`KEY
(
key
, 0);

658 i‡(
vp
->
key
 != key) {

659 
ußge
: i‡(
ismŸi⁄
 =
NULL
)

660 
s
 = 
kp
->
ußge
;

661 i‡(
ismŸi⁄
->
key
 ='~' && 
	`O_ISSET
(
•
, 
O_TILDEOP
))

662 
s
 = 
tmŸi⁄
.
ußge
;

664 
s
 = 
vikeys
[
ismŸi⁄
->
key
].
ußge
;

665 
	`v_emsg
(
•
, 
s
, 
VIM_USAGE
);

666  (
GC_ERR
);

670 i‡(
vp
->
key
 == 'z') {

671 
	`KEY
(
vp
->
ch¨a˘î
, 0);

672 i‡(
	`isdigô
(
vp
->
ch¨a˘î
)) {

673 i‡(
	`v_cou¡
(
•
, 
vp
->
ch¨a˘î
, &vp->
cou¡2
))

674  (
GC_ERR
);

675 
	`F_SET
(
vp
, 
VC_C2SET
);

676 
	`KEY
(
vp
->
ch¨a˘î
, 0);

684 i‡(
ismŸi⁄
 !
NULL
 && ismŸi⁄->
key
 !key && !
	`LF_ISSET
(
V_MOVE
)) {

685 
	`msgq
(
•
, 
M_ERR
, "210|%s mayÇot be usedásá motion command",

686 
	`KEY_NAME
(
•
, 
key
));

687  (
GC_ERR
);

691 i‡(
	`LF_ISSET
(
V_CHAR
))

692 
	`KEY
(
vp
->
ch¨a˘î
, 0);

695 i‡(
	`F_ISSET
(
kp
, 
V_KEYW
Ë&& 
	`v_keyw‹d
(
•
))

696  (
GC_ERR
);

698  (
GC_OK
);

700 
esc
: 
˝¨t
) {

701 
COMMANDMODE
:

702 
	`msgq
(
•
, 
M_BERR
, "211|Already in command mode");

703  (
GC_ERR_NOFLUSH
);

704 
ISPARTIAL
:

706 
NOTPARTIAL
:

707 ()
•
->
gp
->
	`s¸_bñl
(sp);

710  (
GC_ERR
);

711 
	}
}

719 
	$v_mŸi⁄
(
•
, 
dm
, 
vp
, 
m≠≥dp
)

720 
SCR
 *
•
;

721 
VICMD
 *
dm
, *
vp
;

722 *
m≠≥dp
;

724 
VICMD
 
mŸi⁄
;

725 
size_t
 
Àn
;

726 
u_l⁄g
 
˙t
;

727 
u_öt
 
Êags
;

728 
tûde_ª£t
, 
nŸu£d
;

735 i‡(
	`F_ISSET
(
vp
, 
VC_ISDOT
)) {

736 
mŸi⁄
 = *
dm
;

737 
	`F_SET
(&
mŸi⁄
, 
VC_ISDOT
);

738 
	`F_CLR
(&
mŸi⁄
, 
VM_COMMASK
);

740 
	`mem£t
(&
mŸi⁄
, 0, (
VICMD
));

741 i‡(
	`v_cmd
(
•
, 
NULL
, &
mŸi⁄
, 
vp
, &
nŸu£d
, 
m≠≥dp
Ë!
GC_OK
)

751 
˙t
 = 
mŸi⁄
.
cou¡
 = 
	`F_ISSET
(&mŸi⁄, 
VC_C1SET
) ? motion.count : 1;

752 i‡(
	`F_ISSET
(
vp
, 
VC_C1SET
)) {

753 
mŸi⁄
.
cou¡
 *
vp
->count;

754 
	`F_SET
(&
mŸi⁄
, 
VC_C1SET
);

761 
	`F_CLR
(
vp
, 
VC_C1SET
);

762 
	`F_SET
(
vp
, 
VC_C1RESET
);

771 i‡(
vp
->
key
 =
mŸi⁄
.key) {

772 
	`F_SET
(
vp
, 
VM_LDOUBLE
 | 
VM_LMODE
);

775 
vp
->
m_°¨t
.
 o
 = 
•
->lno;

776 
vp
->
m_°¨t
.
˙o
 = 0;

785 
vp
->
m_°›
.
 o
 = 
•
-> ÿ+ 
mŸi⁄
.
cou¡
 - 1;

786 i‡(
	`db_gë
(
•
, 
vp
->
m_°›
.
 o
, 0, 
NULL
, &
Àn
)) {

787 i‡(
vp
->
m_°›
.
 o
 != 1 ||

788 
vp
->
key
 != 'c' && vp->key != '!') {

789 
	`v_emsg
(
•
, 
NULL
, 
VIM_EMPTY
);

792 
vp
->
m_°›
.
˙o
 = 0;

794 
vp
->
m_°›
.
˙o
 = 
Àn
 ?Üen - 1 : 0;

801 
mŸi⁄
.
rkp
 = 
vp
->
kp
;

808 i‡(
vp
->
kp
 =&
tmŸi⁄
) {

809 
tûde_ª£t
 = 1;

810 
vp
->
kp
 = &
vikeys
['y'];

812 
tûde_ª£t
 = 0;

829 
Êags
 = 
	`F_ISSET
(
vp
, 
VM_RCM_MASK
);

830 i‡(
	`LF_ISSET
(
VM_RCM_SET
)) {

831 
	`LF_SET
(
VM_RCM
);

832 
	`LF_CLR
(
VM_RCM_SET
);

834 
	`F_CLR
(
vp
, 
VM_RCM_MASK
);

835 
	`F_SET
(&
mŸi⁄
, mŸi⁄.
kp
->
Êags
 & ~
VM_RCM_MASK
);

843 
mŸi⁄
.
m_föÆ
.
 o
 =

844 
mŸi⁄
.
m_°›
.
 o
 = mŸi⁄.
m_°¨t
. ÿ
•
->lno;

845 
mŸi⁄
.
m_föÆ
.
˙o
 =

846 
mŸi⁄
.
m_°›
.
˙o
 = mŸi⁄.
m_°¨t
.˙ÿ
•
->cno;

849 i‡((
mŸi⁄
.
kp
->
func
)(
•
, &motion))

858 i‡(!
	`db_exi°
(
•
, 
vp
->
m_°›
.
 o
)) {

859 i‡(
vp
->
m_°›
.
 o
 != 1 ||

860 
vp
->
key
 != 'c' && vp->key != '!') {

861 
	`v_emsg
(
•
, 
NULL
, 
VIM_EMPTY
);

864 
vp
->
m_°›
.
˙o
 = 0;

871 i‡(
tûde_ª£t
)

872 
vp
->
kp
 = &
tmŸi⁄
;

881 
	`F_SET
(
vp
, 
	`F_ISSET
(&
mŸi⁄
, 
VM_COMMASK
 | 
VM_RCM_MASK
));

887 i‡(!
	`F_ISSET
(
vp
, 
VM_RCM_MASK
))

888 
	`F_SET
(
vp
, 
Êags
);

895 
vp
->
rkp
 = 
mŸi⁄
.
kp
;

903 i‡(
mŸi⁄
.
m_°¨t
.
 o
 > mŸi⁄.
m_°›
.lno ||

904 
mŸi⁄
.
m_°¨t
.
 o
 =mŸi⁄.
m_°›
.lno &&

905 
mŸi⁄
.
m_°¨t
.
˙o
 > mŸi⁄.
m_°›
.cno) {

906 
vp
->
m_°¨t
 = 
mŸi⁄
.
m_°›
;

907 
vp
->
m_°›
 = 
mŸi⁄
.
m_°¨t
;

909 
vp
->
m_°¨t
 = 
mŸi⁄
.m_start;

910 
vp
->
m_°›
 = 
mŸi⁄
.m_stop;

912 
vp
->
m_föÆ
 = 
mŸi⁄
.m_final;

920 i‡(
	`F_ISSET
(
vp
->
kp
, 
V_DOT
)) {

921 *
dm
 = 
mŸi⁄
;

922 
dm
->
cou¡
 = 
˙t
;

925 
	}
}

932 
	$v_öô
(
•
)

933 
SCR
 *
•
;

935 
GS
 *
gp
;

936 
VI_PRIVATE
 *
vù
;

938 
gp
 = 
•
->gp;

939 
vù
 = 
	`VIP
(
•
);

942 i‡(
gp
->
	`s¸_s¸ìn
(
•
, 
SC_VI
))

944 ()
gp
->
	`s¸_©å
(
•
, 
SA_ALTERNATE
, 1);

946 
	`F_CLR
(
•
, 
SC_EX
 | 
SC_SCR_EX
);

947 
	`F_SET
(
•
, 
SC_VI
);

959 
•
->
rows
 = 
vù
->
§ows
 = 
	`O_VAL
(•, 
O_LINES
);

960 
•
->
cﬁs
 = 
	`O_VAL
(•, 
O_COLUMNS
);

961 
•
->
t_rows
 = sp->
t_mörows
 = 
	`O_VAL
(•, 
O_WINDOW
);

962 i‡(
•
->
rows
 != 1) {

963 i‡(
•
->
t_rows
 > sp->
rows
 - 1) {

964 
•
->
t_mörows
 = sp->
t_rows
 = sp->
rows
 - 1;

965 
	`msgq
(
•
, 
M_INFO
,

967 
•
->
t_rows
);

969 
•
->
t_maxrows
 = sp->
rows
 - 1;

971 
•
->
t_maxrows
 = 1;

972 
•
->
woff
 = 0;

975 
	`CALLOC_RET
(
•
, 
HMAP
, 
SMAP
 *, 
	`SIZE_HMAP
(sp), (SMAP));

976 
TMAP
 = 
HMAP
 + (
•
->
t_rows
 - 1);

977 
HMAP
->
 o
 = 
•
->lno;

978 
HMAP
->
coff
 = 0;

979 
HMAP
->
soff
 = 1;

987 
	`F_SET
(
•
, 
SC_SCR_REFORMAT
 | 
SC_SCR_CENTER
);

990 
	`F_SET
(
vù
, 
VIP_CUR_INVALID
);

993 
	`F_SET
(
vù
, 
VIP_N_EX_PAINT
);

996 
	}
}

1003 
	$v_dtoh
(
•
)

1004 
SCR
 *
•
;

1006 
GS
 *
gp
;

1007 
SCR
 *
t•
;

1008 
hiddí
;

1011 
hiddí
 = 0, 
gp
 = 
•
->gp;

1012 (
t•
 = 
gp
->
dq
.
cqh_fú°
Ë!(*)&gp->dq; ++
hiddí
) {

1013 i‡(
	`_HMAP
(
t•
Ë!
NULL
) {

1014 
	`‰ì
(
	`_HMAP
(
t•
));

1015 
	`_HMAP
(
t•
Ë
NULL
;

1017 
	`CIRCLEQ_REMOVE
(&
gp
->
dq
, 
t•
, 
q
);

1018 
	`CIRCLEQ_INSERT_TAIL
(&
gp
->
hq
, 
t•
, 
q
);

1022 
	`CIRCLEQ_REMOVE
(&
gp
->
hq
, 
•
, 
q
);

1023 
	`CIRCLEQ_INSERT_TAIL
(&
gp
->
dq
, 
•
, 
q
);

1030 i‡(
hiddí
 > 1)

1031 
	`msgq
(
•
, 
M_INFO
,

1033 
hiddí
 - 1);

1034 
	}
}

1041 
	$v_keyw‹d
(
•
)

1042 
SCR
 *
•
;

1044 
VI_PRIVATE
 *
vù
;

1045 
size_t
 
beg
, 
íd
, 
Àn
;

1046 
moved
, 
°©e
;

1047 *
p
;

1049 i‡(
	`db_gë
(
•
, sp->
 o
, 
DBG_FATAL
, &
p
, &
Àn
))

1067 
moved
 = 0,

1068 
beg
 = 
•
->
˙o
; beg < 
Àn
 && 
	`is•a˚
(
p
[beg]); 
moved
 = 1, ++beg);

1069 i‡(
beg
 >
Àn
) {

1070 
	`msgq
(
•
, 
M_BERR
, "212|CursorÇot iná word");

1073 i‡(
moved
) {

1074 
•
->
˙o
 = 
beg
;

1075 ()
	`vs_ª‰esh
(
•
, 0);

1079 
°©e
 = 
	`öw‹d
(
p
[
beg
]),

1080 
íd
 = 
beg
; ++íd < 
Àn
 && 
°©e
 =
	`öw‹d
(
p
[end]););

1082 
vù
 = 
	`VIP
(
•
);

1083 
Àn
 = (
íd
 - 
beg
);

1084 
	`BINC_RET
(
•
, 
vù
->
keyw
, vù->
kÀn
, 
Àn
);

1085 
	`memmove
(
vù
->
keyw
, 
p
 + 
beg
, 
Àn
);

1086 
vù
->
keyw
[
Àn
] = '\0';

1088 
	}
}

1094 
VIKEYS
 const *

1095 
	$v_Æüs
(
•
, 
vp
, 
kp
)

1096 
SCR
 *
•
;

1097 
VICMD
 *
vp
;

1098 
VIKEYS
 c⁄° *
kp
;

1100 
CHAR_T
 
push
;

1102 
vp
->
key
) {

1104 
push
 = '$';

1105 
vp
->
key
 = 'c';

1108 
push
 = '$';

1109 
vp
->
key
 = 'd';

1112 
push
 = '_';

1113 
vp
->
key
 = 'c';

1116 
push
 = '_';

1117 
vp
->
key
 = 'y';

1120  (
kp
);

1122  (
	`v_evít_push
(
•
,

1123 
NULL
, &
push
, 1, 
CH_NOMAP
 | 
CH_QUOTED
Ë? NULL : &
vikeys
[
vp
->
key
]);

1124 
	}
}

1131 
	$v_cou¡
(
•
, 
fkey
, 
cou¡p
)

1132 
SCR
 *
•
;

1133 
ARG_CHAR_T
 
fkey
;

1134 
u_l⁄g
 *
cou¡p
;

1136 
EVENT
 
ev
;

1137 
u_l⁄g
 
cou¡
, 
tc
;

1139 
ev
.
e_c
 = 
fkey
;

1140 
cou¡
 = 
tc
 = 0;

1146 
tc
 = 
cou¡
 * 10 + 
ev
.
e_c
 - '0';

1147 i‡(
cou¡
 > 
tc
) {

1150 i‡(
	`v_key
(
•
, 0, &
ev
,

1151 
EC_MAPCOMMAND
 | 
EC_MAPNODIGIT
Ë!
GC_OK
)

1153 } 
	`isdigô
(
ev
.
e_c
));

1154 
	`msgq
(
•
, 
M_ERR
,

1155 "235|NumbîÜ¨gîÅh™ %lu", 
ULONG_MAX
);

1158 
cou¡
 = 
tc
;

1159 i‡(
	`v_key
(
•
, 0, &
ev
, 
EC_MAPCOMMAND
 | 
EC_MAPNODIGIT
Ë!
GC_OK
)

1161 } 
	`isdigô
(
ev
.
e_c
));

1162 *
cou¡p
 = 
cou¡
;

1164 
	}
}

1170 
g¸ë_t


1171 
	$v_key
(
•
, 
comm™d_evíts
, 
evp
, 
ec_Êags
)

1172 
SCR
 *
•
;

1173 
comm™d_evíts
;

1174 
EVENT
 *
evp
;

1175 
u_öt32_t
 
ec_Êags
;

1177 
u_öt32_t
 
quŸe
;

1179 
quŸe
 = 0;;) {

1180 i‡(
	`v_evít_gë
(
•
, 
evp
, 0, 
ec_Êags
 | 
quŸe
))

1181  (
GC_FATAL
);

1182 
quŸe
 = 0;

1184 
evp
->
e_evít
) {

1185 
E_CHARACTER
:

1193 i‡(
evp
->
e_vÆue
 =
K_VLNEXT
) {

1194 
quŸe
 = 
EC_QUOTED
;

1197  (
GC_OK
);

1198 
E_ERR
:

1199 
E_EOF
:

1200  (
GC_FATAL
);

1201 
E_INTERRUPT
:

1211 ()
•
->
gp
->
	`s¸_bñl
(sp);

1212  (
GC_INTERRUPT
);

1213 
E_REPAINT
:

1214 i‡(
	`vs_ª∑öt
(
•
, 
evp
))

1215  (
GC_FATAL
);

1217 
E_WRESIZE
:

1218  (
GC_ERR
);

1219 
E_QUIT
:

1220 
E_WRITE
:

1221 i‡(
comm™d_evíts
)

1222  (
GC_EVENT
);

1225 
	`v_evít_îr
(
•
, 
evp
);

1226  (
GC_ERR
);

1230 
	}
}

1232 #i‡
deföed
(
DEBUG
Ë&& deföed(
COMLOG
)

1238 
	$v_comlog
(
•
, 
vp
)

1239 
SCR
 *
•
;

1240 
VICMD
 *
vp
;

1242 
	`TRACE
(
•
, "vcmd: %c", 
vp
->
key
);

1243 i‡(
	`F_ISSET
(
vp
, 
VC_BUFFER
))

1244 
	`TRACE
(
•
, " buf„r: %c", 
vp
->
buf„r
);

1245 i‡(
	`F_ISSET
(
vp
, 
VC_C1SET
))

1246 
	`TRACE
(
•
, " c1: %lu", 
vp
->
cou¡
);

1247 i‡(
	`F_ISSET
(
vp
, 
VC_C2SET
))

1248 
	`TRACE
(
•
, " c2: %lu", 
vp
->
cou¡2
);

1249 
	`TRACE
(
•
, " fœgs: 0x%x\n", 
vp
->
Êags
);

1250 
	}
}

	@vi/vi.h

13 
	#öw‹d
(
ch
Ë(
	`iß um
(chË|| (chË='_')

	)

15 
_vikeys
 
	tVIKEYS
;

18 
	s_vicmd
 {

19 
CHAR_T
 
	mkey
;

20 
CHAR_T
 
	mbuf„r
;

21 
CHAR_T
 
	mch¨a˘î
;

22 
u_l⁄g
 
	mcou¡
;

23 
u_l⁄g
 
	mcou¡2
;

24 
EVENT
 
	mev
;

26 
	#ISCMD
(
p
, 
key
Ë(’Ë=&
vikeys
[key])

	)

27 
VIKEYS
 c⁄° *
	mkp
;

28 
	#ISMOTION
(
vp
Ë(vp->
rkp
 !
NULL
 && 
	`F_ISSET
(vp->rkp, 
V_MOTION
))

	)

29 
VIKEYS
 c⁄° *
	mrkp
;

52 
	#VM_CMDFAILED
 0x00000001

	)

53 
	#VM_CUTREQ
 0x00000002

	)

54 
	#VM_LDOUBLE
 0x00000004

	)

55 
	#VM_LMODE
 0x00000008

	)

56 
	#VM_COMMASK
 0x0000000‡

	)

62 
	#VM_RCM
 0x00000010

	)

63 
	#VM_RCM_SET
 0x00000020

	)

64 
	#VM_RCM_SETFNB
 0x00000040

	)

65 
	#VM_RCM_SETLAST
 0x00000080

	)

66 
	#VM_RCM_SETNNB
 0x00000100

	)

67 
	#VM_RCM_MASK
 0x000001f0

	)

70 
	#VC_BUFFER
 0x00000200

	)

71 
	#VC_C1RESET
 0x00000400

	)

72 
	#VC_C1SET
 0x00000800

	)

73 
	#VC_C2SET
 0x00001000

	)

74 
	#VC_ISDOT
 0x00002000

	)

75 
u_öt32_t
 
	mÊags
;

122 
MARK
 
	mm_°¨t
;

123 
MARK
 
	mm_°›
;

124 
MARK
 
	mm_föÆ
;

125 } 
	tVICMD
;

128 
	s_vikeys
 {

129 (*
	mfunc
Ë
__P
((
SCR
 *, 
VICMD
 *));

130 
	#V_ABS
 0x00004000

	)

131 
	#V_ABS_C
 0x00008000

	)

132 
	#V_ABS_L
 0x00010000

	)

133 
	#V_CHAR
 0x00020000

	)

134 
	#V_CNT
 0x00040000

	)

135 
	#V_DOT
 0x00080000

	)

136 
	#V_KEYW
 0x00100000

	)

137 
	#V_MOTION
 0x00200000

	)

138 
	#V_MOVE
 0x00400000

	)

139 
	#V_OBUF
 0x00800000

	)

140 
	#V_RBUF
 0x01000000

	)

141 
	#V_SECURE
 0x02000000

	)

142 
u_öt32_t
 
	mÊags
;

143 *
	mußge
;

144 *
	mhñp
;

146 
	#MAXVIKEY
 126

	)

147 
VIKEYS
 c⁄° 
vikeys
[
MAXVIKEY
 + 1];

148 
VIKEYS
 c⁄° 
tmŸi⁄
;

151 
	s_vcs
 {

152 
ª˙o_t
 
	mcs_ o
;

153 
size_t
 
	mcs_˙o
;

154 
CHAR_T
 *
	mcs_bp
;

155 
size_t
 
	mcs_Àn
;

156 
CHAR_T
 
	mcs_ch
;

157 
	#CS_EMP
 1

	)

158 
	#CS_EOF
 2

	)

159 
	#CS_EOL
 3

	)

160 
	#CS_SOF
 4

	)

161 
	mcs_Êags
;

162 } 
	tVCS
;

164 
cs_bbœnk
 
__P
((
SCR
 *, 
VCS
 *));

165 
cs_fbœnk
 
__P
((
SCR
 *, 
VCS
 *));

166 
cs_f•a˚
 
__P
((
SCR
 *, 
VCS
 *));

167 
cs_öô
 
__P
((
SCR
 *, 
VCS
 *));

168 
cs_√xt
 
__P
((
SCR
 *, 
VCS
 *));

169 
cs_¥ev
 
__P
((
SCR
 *, 
VCS
 *));

199 
	s_sm≠
 {

200 
ª˙o_t
 
	m o
;

201 
size_t
 
	mcoff
;

202 
size_t
 
	msoff
;

205 
size_t
 
	mc_sboff
;

206 
size_t
 
	mc_eboff
;

207 
u_öt8_t
 
	mc_scoff
;

208 
u_öt8_t
 
	mc_e˛í
;

209 
u_öt8_t
 
	mc_ecsize
;

210 } 
	tSMAP
;

212 
	#SMAP_CACHE
(
smp
Ë((smp)->
c_ecsize
 !0)

	)

213 
	#SMAP_FLUSH
(
smp
Ë((smp)->
c_ecsize
 = 0)

	)

216 íum { 
	mCNOTSET
, 
	mFSEARCH
, 
	mfSEARCH
, 
	mTSEARCH
, 
	mtSEARCH
 } 
	tcdú_t
;

218 íum { 
	mAB_NOTSET
, 
	mAB_NOTWORD
, 
	mAB_INWORD
 } 
	tabb_t
;

219 íum { 
	mQ_NOTSET
, 
	mQ_BNEXT
, 
	mQ_BTHIS
, 
	mQ_VNEXT
, 
	mQ_VTHIS
 } 
	tquŸe_t
;

222 
	s_vi_¥iv©e
 {

223 
VICMD
 
	mcmd
;

224 
VICMD
 
	mmŸi⁄
;

231 
VICMD
 
	msdŸ
;

232 
VICMD
 
	msdŸmŸi⁄
;

234 
CHAR_T
 *
	mkeyw
;

235 
size_t
 
	mkÀn
;

236 
size_t
 
	mkeywÀn
;

238 
CHAR_T
 
	mæa°
;

239 
e_key_t
 
	mrvÆue
;

241 
EVENT
 *
	mªp
;

242 
size_t
 
	mªp_Àn
;

243 
size_t
 
	mªp_˙t
;

245 
mty≥_t
 
	mmty≥
;

246 
size_t
 
	mlöecou¡
;

247 
size_t
 
	mlc⁄töue
;

248 
size_t
 
	mtŸÆcou¡
;

251 
	mbusy_ªf
;

252 
	mbusy_ch
;

253 
size_t
 
	mbusy_fx
;

254 
size_t
 
	mbusy_ﬁdy
;

255 
size_t
 
	mbusy_ﬁdx
;

256 
timevÆ
 
	mbusy_tv
;

258 *
	mps
;

260 
u_l⁄g
 
	mu_c˙t
;

262 
CHAR_T
 
	mœ°ckey
;

263 
cdú_t
 
	mc£¨chdú
;

265 
SMAP
 *
	mh_sm≠
;

266 
SMAP
 *
	mt_sm≠
;

272 
ª˙o_t
 
	msv_tm_ o
;

273 
size_t
 
	msv_tm_coff
;

274 
size_t
 
	msv_tm_soff
;

275 
size_t
 
	msv_t_maxrows
;

276 
size_t
 
	msv_t_mörows
;

277 
size_t
 
	msv_t_rows
;

278 
	#SIZE_HMAP
(
•
Ë(
	`VIP
(•)->
§ows
 + 1)

	)

287 
	#_HMAP
(
•
Ë(
	`VIP
(•)->
h_sm≠
)

	)

288 
	#HMAP
 
	`_HMAP
(
•
)

	)

289 
	#_TMAP
(
•
Ë(
	`VIP
(•)->
t_sm≠
)

	)

290 
	#TMAP
 
	`_TMAP
(
•
)

	)

292 
ª˙o_t
 
	mss_ o
;

293 
size_t
 
	mss_s¸ìns
;

294 
	#VI_SCR_CFLUSH
(
vù
Ëvù->
ss_ o
 = 
OOBLNO


	)

296 
size_t
 
	m§ows
;

297 
ª˙o_t
 
	mﬁno
;

298 
size_t
 
	mo˙o
;

299 
size_t
 
	msc_cﬁ
;

300 
SMAP
 *
	msc_sm≠
;

302 
	#VIP_CUR_INVALID
 0x0001

	)

303 
	#VIP_DIVIDER
 0x0002

	)

304 
	#VIP_N_EX_PAINT
 0x0004

	)

305 
	#VIP_N_EX_REDRAW
 0x0008

	)

306 
	#VIP_N_REFRESH
 0x0010

	)

307 
	#VIP_N_RENUMBER
 0x0020

	)

308 
	#VIP_RCM_LAST
 0x0040

	)

309 
	#VIP_S_MODELINE
 0x0080

	)

310 
	#VIP_S_REFRESH
 0x0100

	)

311 
u_öt16_t
 
	mÊags
;

312 } 
	tVI_PRIVATE
;

315 
	#VIP
(
•
Ë((
VI_PRIVATE
 *)((•)->
vi_¥iv©e
))

	)

317 
	#O_NUMBER_FMT
 "%7lu "

	)

318 
	#O_NUMBER_LENGTH
 8

	)

319 
	#SCREEN_COLS
(
•
) \

320 ((
	`O_ISSET
(
•
, 
O_NUMBER
Ë? (•)->
cﬁs
 - 
O_NUMBER_LENGTH
 : (•)->cﬁs))

	)

327 
	#LASTLINE
(
•
) \

328 ((
•
)->
t_maxrows
 < (•)->
rows
 ? (•)->t_maxrow†: (•)->row†- 1)

	)

334 
	#IS_SMALL
(
•
Ë((•)->
t_mörows
 !(•)->
t_maxrows
)

	)

335 
	#IS_ONELINE
(
•
Ë((•)->
rows
 =1)

	)

337 
	#HALFTEXT
(
•
) \

338 ((
•
)->
t_rows
 =1 ? 1 : (•)->t_row†/ 2)

	)

339 
	#HALFSCREEN
(
•
) \

340 ((
•
)->
t_maxrows
 =1 ? 1 : (•)->t_maxrow†/ 2)

	)

352 
	#TAB_OFF
(
c
Ë
	`COL_OFF
((c), 
	`O_VAL
(
•
, 
O_TABSTOP
))

	)

355 
	#IS_SPLIT
(
•
) \

356 ((
•
)->
q
.
cqe_√xt
 !(*)&(•)->
gp
->
dq
 || \

357 (
•
)->
q
.
cqe_¥ev
 !(*)&(•)->
gp
->
dq
)

	)

360 íum { 
	mA_DECREASE
, 
	mA_INCREASE
, 
	mA_SET
 } 
	tadj_t
;

363 íum { 
	mP_BOTTOM
, 
	mP_FILL
, 
	mP_MIDDLE
, 
	mP_TOP
 } 
	tpos_t
;

367 
	mCNTRL_B
, 
	mCNTRL_D
, 
	mCNTRL_E
, 
	mCNTRL_F
,

368 
	mCNTRL_U
, 
	mCNTRL_Y
, 
	mZ_CARAT
, 
	mZ_PLUS


369 } 
	ts¸ﬁl_t
;

373 
	mVIM_COMBUF
, 
	mVIM_EMPTY
, 
	mVIM_EOF
, 
	mVIM_EOL
,

374 
	mVIM_NOCOM
, 
	mVIM_NOCOM_B
, 
	mVIM_USAGE
, 
	mVIM_WRESIZE


375 } 
	tvim_t
;

377 
	~"vi_exã∫.h
"

	@vi/vs_line.c

10 
	~"c⁄fig.h
"

12 #i‚de‡
löt


13 c⁄° 
	gsccsid
[] = "@(#)vs_line.c 10.19 (Berkeley) 9/26/96";

16 
	~<sys/ty≥s.h
>

17 
	~<sys/queue.h
>

18 
	~<sys/time.h
>

20 
	~<bô°rög.h
>

21 
	~<limôs.h
>

22 
	~<°dio.h
>

23 
	~<°rög.h
>

25 
	~"../comm⁄/comm⁄.h
"

26 
	~"vi.h
"

28 #ifde‡
VISIBLE_TAB_CHARS


29 
	#TABCH
 '-'

	)

31 
	#TABCH
 ' '

	)

41 
	$vs_löe
(
•
, 
smp
, 
yp
, 
xp
)

42 
SCR
 *
•
;

43 
SMAP
 *
smp
;

44 
size_t
 *
xp
, *
yp
;

46 
CHAR_T
 *
kp
;

47 
GS
 *
gp
;

48 
SMAP
 *
tsmp
;

49 
size_t
 
chÀn
, 
˙o_˙t
, 
cﬁs_≥r_s¸ìn
, 
Àn
, 
∆í
;

50 
size_t
 
off£t_ö_ch¨
, 
off£t_ö_löe
, 
ﬁdx
, 
ﬁdy
;

51 
size_t
 
s˙o
, 
skù_cﬁs
, 
skù_s¸ìns
;

52 
ch
, 
d√
, 
is_ˇched
, 
is_∑πül
, 
is_èb
;

53 
li°_èb
, 
li°_dﬁœr
;

54 *
p
, *
cbp
, *
ecbp
, 
cbuf
[128];

56 #i‡
	`deföed
(
DEBUG
) && 0

57 
	`TRACE
(
•
, "vs_line:Ñow %u:Üine: %u off: %u\n",

58 
smp
 - 
HMAP
, smp->
 o
, smp->
off
);

64 i‡(!
	`F_ISSET
(
•
, 
SC_TINPUT_INFO
Ë&& 
	`VIP
(•)->
tŸÆcou¡
 > 1)

66 i‡(
	`F_ISSET
(
•
, 
SC_SCR_EXWROTE
Ë&& 
smp
 - 
HMAP
 !
	`LASTLINE
(sp))

75 
is_ˇched
 = 
	`SMAP_CACHE
(
smp
);

76 i‡(
yp
 =
NULL
 && 
is_ˇched
)

89 
gp
 = 
•
->gp;

90 ()
gp
->
	`s¸_curs‹
(
•
, &
ﬁdy
, &
ﬁdx
);

91 ()
gp
->
	`s¸_move
(
•
, 
smp
 - 
HMAP
, 0);

94 
d√
 = 
	`db_gë
(
•
, 
smp
->
 o
, 0, &
p
, &
Àn
);

108 
cﬁs_≥r_s¸ìn
 = 
•
->
cﬁs
;

109 i‡(
	`O_ISSET
(
•
, 
O_LEFTRIGHT
)) {

110 
skù_s¸ìns
 = 0;

111 
skù_cﬁs
 = 
smp
->
coff
;

113 
skù_s¸ìns
 = 
smp
->
soff
 - 1;

114 
skù_cﬁs
 = 
skù_s¸ìns
 * 
cﬁs_≥r_s¸ìn
;

117 
li°_èb
 = 
	`O_ISSET
(
•
, 
O_LIST
);

118 i‡(
	`F_ISSET
(
•
, 
SC_TINPUT_INFO
))

119 
li°_dﬁœr
 = 0;

121 
li°_dﬁœr
 = 
li°_èb
;

138 i‡(
	`O_ISSET
(
•
, 
O_NUMBER
)) {

139 
cﬁs_≥r_s¸ìn
 -
O_NUMBER_LENGTH
;

140 i‡((!
d√
 || 
smp
->
 o
 =1Ë&& 
skù_cﬁs
 == 0) {

141 
∆í
 = 
	`¢¥ötf
(
cbuf
,

142 (
cbuf
), 
O_NUMBER_FMT
, 
smp
->
 o
);

143 ()
gp
->
	`s¸_add°r
(
•
, 
cbuf
, 
∆í
);

153 i‡(
d√
 || 
Àn
 == 0) {

155 i‡(
yp
 !
NULL
 && 
smp
->
 o
 =
•
->lno) {

156 *
yp
 = 
smp
 - 
HMAP
;

157 *
xp
 = 
•
->
cﬁs
 - 
cﬁs_≥r_s¸ìn
;

161 i‡(
is_ˇched
)

162 
ªt1
;

165 
smp
->
c_sboff
 = smp->
c_eboff
 = 0;

166 
smp
->
c_scoff
 = smp->
c_e˛í
 = 0;

172 i‡(
skù_cﬁs
 == 0)

173 i‡(
d√
) {

174 i‡(
smp
->
 o
 == 1) {

175 i‡(
li°_dﬁœr
) {

176 
ch
 = '$';

177 
em±y
;

180 
ch
 = '~';

181 
em±y
;

184 i‡(
li°_dﬁœr
) {

185 
ch
 = '$';

186 
em±y
: ()
gp
->
	`s¸_add°r
(
•
,

187 
	`KEY_NAME
(
•
, 
ch
), 
	`KEY_LEN
(sp, ch));

190 ()
gp
->
	`s¸_˛π€ﬁ
(
•
);

191 ()
gp
->
	`s¸_move
(
•
, 
ﬁdy
, 
ﬁdx
);

212 i‡(
skù_cﬁs
 == 0) {

213 
smp
->
c_sboff
 = 
off£t_ö_löe
 = 0;

214 
smp
->
c_scoff
 = 
off£t_ö_ch¨
 = 0;

215 
p
 = &p[
off£t_ö_löe
];

216 
di•œy
;

220 i‡(
is_ˇched
) {

221 
off£t_ö_löe
 = 
smp
->
c_sboff
;

222 
off£t_ö_ch¨
 = 
smp
->
c_scoff
;

223 
p
 = &p[
off£t_ö_löe
];

226 i‡(
	`O_ISSET
(
•
, 
O_LEFTRIGHT
Ë|| 
skù_cﬁs
 > 
cﬁs_≥r_s¸ìn
)

227 
cﬁs_≥r_s¸ìn
 = 
•
->
cﬁs
;

228 
di•œy
;

232 i‡(
smp
 !
HMAP
 &&

233 
	`SMAP_CACHE
(
tsmp
 = 
smp
 - 1Ë&&Åsmp->
 o
 == smp->lno) {

234 i‡(
tsmp
->
c_e˛í
 !tsmp->
c_ecsize
) {

235 
off£t_ö_löe
 = 
tsmp
->
c_eboff
;

236 
off£t_ö_ch¨
 = 
tsmp
->
c_e˛í
;

238 
off£t_ö_löe
 = 
tsmp
->
c_eboff
 + 1;

239 
off£t_ö_ch¨
 = 0;

243 
smp
->
c_sboff
 = 
off£t_ö_löe
;

244 
smp
->
c_scoff
 = 
off£t_ö_ch¨
;

245 
p
 = &p[
off£t_ö_löe
];

248 i‡(
	`O_ISSET
(
•
, 
O_LEFTRIGHT
Ë|| 
skù_cﬁs
 > 
cﬁs_≥r_s¸ìn
)

249 
cﬁs_≥r_s¸ìn
 = 
•
->
cﬁs
;

250 
di•œy
;

253 
s˙o
 = 0;

254 
off£t_ö_löe
 = 0;

255 
off£t_ö_ch¨
 = 0;

258 i‡(
	`O_ISSET
(
•
, 
O_LEFTRIGHT
)) {

259 ; 
off£t_ö_löe
 < 
Àn
; ++offset_in_line) {

260 
chÀn
 = (
ch
 = *(
u_ch¨
 *)
p
++Ë='\t' && !
li°_èb
 ?

261 
	`TAB_OFF
(
s˙o
Ë: 
	`KEY_LEN
(
•
, 
ch
);

262 i‡((
s˙o
 +
chÀn
Ë>
skù_cﬁs
)

267 
cﬁs_≥r_s¸ìn
 = 
•
->
cﬁs
;

270 i‡(
s˙o
 !
skù_cﬁs
) {

271 
smp
->
c_sboff
 = 
off£t_ö_löe
;

272 
smp
->
c_scoff
 =

273 
off£t_ö_ch¨
 = 
chÀn
 - (
s˙o
 - 
skù_cﬁs
);

274 --
p
;

276 
smp
->
c_sboff
 = ++
off£t_ö_löe
;

277 
smp
->
c_scoff
 = 0;

283 ; 
off£t_ö_löe
 < 
Àn
; ++offset_in_line) {

284 
chÀn
 = (
ch
 = *(
u_ch¨
 *)
p
++Ë='\t' && !
li°_èb
 ?

285 
	`TAB_OFF
(
s˙o
Ë: 
	`KEY_LEN
(
•
, 
ch
);

286 i‡((
s˙o
 +
chÀn
Ë< 
cﬁs_≥r_s¸ìn
)

288 
s˙o
 -
cﬁs_≥r_s¸ìn
;

291 
cﬁs_≥r_s¸ìn
 = 
•
->
cﬁs
;

297 i‡(--
skù_s¸ìns
 == 0)

302 i‡(
s˙o
 != 0) {

303 
smp
->
c_sboff
 = 
off£t_ö_löe
;

304 
smp
->
c_scoff
 = 
off£t_ö_ch¨
 = 
chÀn
 - 
s˙o
;

305 --
p
;

307 
smp
->
c_sboff
 = ++
off£t_ö_löe
;

308 
smp
->
c_scoff
 = 0;

312 
di•œy
:

320 i‡(
yp
 =
NULL
 ||

321 
smp
->
 o
 !
•
-> ÿ|| sp->
˙o
 < 
off£t_ö_löe
 ||

322 
off£t_ö_löe
 + 
cﬁs_≥r_s¸ìn
 < 
•
->
˙o
) {

323 
˙o_˙t
 = 0;

325 i‡(
is_ˇched
)

326 
ªt1
;

328 
˙o_˙t
 = (
•
->
˙o
 - 
off£t_ö_löe
) + 1;

331 
ecbp
 = (
cbp
 = 
cbuf
) + (cbuf) - 1;

332 
is_∑πül
 = 0, 
s˙o
 = 0;

333 
off£t_ö_löe
 < 
Àn
; ++off£t_ö_löe, 
off£t_ö_ch¨
 = 0) {

334 i‡((
ch
 = *(
u_ch¨
 *)
p
++Ë='\t' && !
li°_èb
) {

335 
s˙o
 +
chÀn
 = 
	`TAB_OFF
(s˙oË- 
off£t_ö_ch¨
;

336 
is_èb
 = 1;

338 
s˙o
 +
chÀn
 = 
	`KEY_LEN
(
•
, 
ch
Ë- 
off£t_ö_ch¨
;

339 
is_èb
 = 0;

350 i‡(
s˙o
 >
cﬁs_≥r_s¸ìn
) {

351 i‡(
is_èb
 == 1) {

352 
chÀn
 -
s˙o
 - 
cﬁs_≥r_s¸ìn
;

353 
smp
->
c_ecsize
 = smp->
c_e˛í
 = 
chÀn
;

354 
s˙o
 = 
cﬁs_≥r_s¸ìn
;

356 
smp
->
c_ecsize
 = 
chÀn
;

357 
chÀn
 -
s˙o
 - 
cﬁs_≥r_s¸ìn
;

358 
smp
->
c_e˛í
 = 
chÀn
;

360 i‡(
s˙o
 > 
cﬁs_≥r_s¸ìn
)

361 
is_∑πül
 = 1;

363 
smp
->
c_eboff
 = 
off£t_ö_löe
;

366 
off£t_ö_löe
 = 
Àn
;

377 i‡(
˙o_˙t
 &&

378 --
˙o_˙t
 =0 && (
	`F_ISSET
(
•
, 
SC_TINPUT
Ë|| !
is_∑πül
)) {

379 *
yp
 = 
smp
 - 
HMAP
;

380 i‡(
	`F_ISSET
(
•
, 
SC_TINPUT
))

381 *
xp
 = 
s˙o
 - 
chÀn
;

383 *
xp
 = 
s˙o
 - 1;

384 i‡(
	`O_ISSET
(
•
, 
O_NUMBER
) &&

385 !
	`F_ISSET
(
•
, 
SC_TINPUT_INFO
Ë&& 
skù_cﬁs
 == 0)

386 *
xp
 +
O_NUMBER_LENGTH
;

389 i‡(
is_ˇched
)

390 
ªt1
;

394 i‡(
is_ˇched
)

397 
	#FLUSH
 { \

398 *
cbp
 = '\0'; \

399 ()
gp
->
	`s¸_add°r
(
•
, 
cbuf
, 
cbp
 - cbuf); \

400 
cbp
 = 
cbuf
; \

401 }

	)

409 i‡(
is_èb
)

410 
chÀn
--) {

411 i‡(
cbp
 >
ecbp
)

412 
FLUSH
;

413 *
cbp
++ = 
TABCH
;

416 i‡(
cbp
 + 
chÀn
 >
ecbp
)

417 
FLUSH
;

418 
kp
 = 
	`KEY_NAME
(
•
, 
ch
Ë+ 
off£t_ö_ch¨
; 
chÀn
--;)

419 *
cbp
++ = *
kp
++;

423 i‡(
s˙o
 < 
cﬁs_≥r_s¸ìn
) {

425 
smp
->
c_ecsize
 = smp->
c_e˛í
 = 
	`KEY_LEN
(
•
, 
ch
);

426 
smp
->
c_eboff
 = 
Àn
 - 1;

433 i‡(
li°_dﬁœr
) {

434 ++
s˙o
;

436 
chÀn
 = 
	`KEY_LEN
(
•
, '$');

437 i‡(
cbp
 + 
chÀn
 >
ecbp
)

438 
FLUSH
;

439 
kp
 = 
	`KEY_NAME
(
•
, '$'); 
chÀn
--;)

440 *
cbp
++ = *
kp
++;

444 i‡(
s˙o
 < 
cﬁs_≥r_s¸ìn
)

445 ()
gp
->
	`s¸_˛π€ﬁ
(
•
);

449 i‡(
cbp
 > 
cbuf
)

450 
FLUSH
;

452 
ªt1
: ()
gp
->
	`s¸_move
(
•
, 
ﬁdy
, 
ﬁdx
);

454 
	}
}

463 
	$vs_numbî
(
•
)

464 
SCR
 *
•
;

466 
GS
 *
gp
;

467 
SMAP
 *
smp
;

468 
VI_PRIVATE
 *
vù
;

469 
size_t
 
Àn
, 
ﬁdy
, 
ﬁdx
;

470 
exi°
;

471 
nbuf
[10];

473 
gp
 = 
•
->gp;

474 
vù
 = 
	`VIP
(
•
);

477 i‡(
	`F_ISSET
(
•
, 
SC_TINPUT_INFO
))

489 
exi°
 = 
	`db_exi°
(
•
, 
TMAP
->
 o
 + 1);

491 ()
gp
->
	`s¸_curs‹
(
•
, &
ﬁdy
, &
ﬁdx
);

492 
smp
 = 
HMAP
; sm∞<
TMAP
; ++smp) {

494 i‡(
	`O_ISSET
(
•
, 
O_LEFTRIGHT
)) {

495 i‡(
smp
->
coff
 != 0)

498 i‡(
smp
->
soff
 != 1)

505 i‡(
smp
->
 o
 !1 && !
exi°
 && !
	`db_exi°
(
•
, smp->lno))

508 ()
gp
->
	`s¸_move
(
•
, 
smp
 - 
HMAP
, 0);

509 
Àn
 = 
	`¢¥ötf
(
nbuf
, “buf), 
O_NUMBER_FMT
, 
smp
->
 o
);

510 ()
gp
->
	`s¸_add°r
(
•
, 
nbuf
, 
Àn
);

512 ()
gp
->
	`s¸_move
(
•
, 
ﬁdy
, 
ﬁdx
);

514 
	}
}

	@vi/vs_msg.c

10 
	~"c⁄fig.h
"

12 #i‚de‡
löt


13 c⁄° 
	gsccsid
[] = "@(#)vs_msg.c 10.77 (Berkeley) 10/13/96";

16 
	~<sys/ty≥s.h
>

17 
	~<sys/queue.h
>

18 
	~<sys/time.h
>

20 
	~<bô°rög.h
>

21 
	~<˘y≥.h
>

22 
	~<°dio.h
>

23 
	~<°dlib.h
>

24 
	~<°rög.h
>

25 
	~<uni°d.h
>

27 
	~"../comm⁄/comm⁄.h
"

28 
	~"vi.h
"

31 
	mSCROLL_W
,

32 
	mSCROLL_W_EX
,

33 
	mSCROLL_W_QUIT


38 } 
	tsw_t
;

40 
vs_dividî
 
__P
((
SCR
 *));

41 
vs_msgßve
 
__P
((
SCR
 *, 
mty≥_t
, *, 
size_t
));

42 
vs_ouçut
 
__P
((
SCR
 *, 
mty≥_t
, const *, ));

43 
vs_s¸ﬁl
 
__P
((
SCR
 *, *, 
sw_t
));

44 
vs_waô
 
__P
((
SCR
 *, *, 
sw_t
));

59 
	$vs_busy
(
•
, 
msg
, 
bty≥
)

60 
SCR
 *
•
;

61 c⁄° *
msg
;

62 
busy_t
 
bty≥
;

64 
GS
 *
gp
;

65 
VI_PRIVATE
 *
vù
;

66 c⁄° 
Êagc
[] = "|/-\\";

67 
timevÆ
 
tv
;

68 
size_t
 
Àn
, 
nŸu£d
;

69 c⁄° *
p
;

72 i‡(
	`F_ISSET
(
•
, 
SC_EX
 | 
SC_SCR_EXWROTE
))

75 
gp
 = 
•
->gp;

76 
vù
 = 
	`VIP
(
•
);

84 
bty≥
) {

85 
BUSY_ON
:

86 ++
vù
->
busy_ªf
;

87 i‡(
vù
->
tŸÆcou¡
 !0 || vù->
busy_ªf
 != 1)

91 
vù
->
busy_ch
 = 0;

92 ()
	`gëtimeofday
(&
vù
->
busy_tv
, 
NULL
);

95 ()
gp
->
	`s¸_curs‹
(
•
, &
vù
->
busy_ﬁdy
, &vù->
busy_ﬁdx
);

98 
p
 = 
	`msg_ˇt
(
•
, 
msg
, &
Àn
);

99 ()
gp
->
	`s¸_move
(
•
, 
	`LASTLINE
(sp), 0);

100 ()
gp
->
	`s¸_add°r
(
•
, 
p
, 
Àn
);

101 ()
gp
->
	`s¸_curs‹
(
•
, &
nŸu£d
, &
vù
->
busy_fx
);

102 ()
gp
->
	`s¸_˛π€ﬁ
(
•
);

103 ()
gp
->
	`s¸_move
(
•
, 
	`LASTLINE
(•), 
vù
->
busy_fx
);

105 
BUSY_OFF
:

106 i‡(
vù
->
busy_ªf
 == 0)

108 --
vù
->
busy_ªf
;

114 i‡(
vù
->
tŸÆcou¡
 =0 && vù->
busy_ªf
 == 0) {

115 ()
gp
->
	`s¸_move
(
•
, 
	`LASTLINE
(sp), 0);

116 ()
gp
->
	`s¸_˛π€ﬁ
(
•
);

118 ()
gp
->
	`s¸_move
(
•
, 
vù
->
busy_ﬁdy
, vù->
busy_ﬁdx
);

120 
BUSY_UPDATE
:

121 i‡(
vù
->
tŸÆcou¡
 !0 || vù->
busy_ªf
 == 0)

125 ()
	`gëtimeofday
(&
tv
, 
NULL
);

126 i‡(((
tv
.
tv_£c
 - 
vù
->
busy_tv
.tv_sec) * 1000000 +

127 (
tv
.
tv_u£c
 - 
vù
->
busy_tv
.tv_usec)) < 125000)

129 
vù
->
busy_tv
 = 
tv
;

132 i‡(
vù
->
busy_ch
 =(
Êagc
) - 1)

133 
vù
->
busy_ch
 = 0;

134 ()
gp
->
	`s¸_move
(
•
, 
	`LASTLINE
(•), 
vù
->
busy_fx
);

135 ()
gp
->
	`s¸_add°r
(
•
, 
Êagc
 + 
vù
->
busy_ch
++, 1);

136 ()
gp
->
	`s¸_move
(
•
, 
	`LASTLINE
(•), 
vù
->
busy_fx
);

139 ()
gp
->
	`s¸_ª‰esh
(
•
, 0);

140 
	}
}

149 
	$vs_home
(
•
)

150 
SCR
 *
•
;

152 ()
•
->
gp
->
	`s¸_move
(•, 
	`LASTLINE
(sp), 0);

153 ()
•
->
gp
->
	`s¸_ª‰esh
(sp, 0);

154 
	}
}

163 
	$vs_upd©e
(
•
, 
m1
, 
m2
)

164 
SCR
 *
•
;

165 c⁄° *
m1
, *
m2
;

167 
GS
 *
gp
;

168 
size_t
 
Àn
, 
mÀn
, 
ﬁdx
, 
ﬁdy
;

170 
gp
 = 
•
->gp;

180 i‡(
	`F_ISSET
(
•
, 
SC_SCR_EXWROTE
)) {

181 ()
	`ex_¥ötf
(
•
,

182 "%s\n", 
m1
 =
NULL
? "" : m1, 
m2
 == NULL ? "" : m2);

183 ()
	`ex_fÊush
(
•
);

190 ()
gp
->
	`s¸_curs‹
(
•
, &
ﬁdy
, &
ﬁdx
);

193 ()
gp
->
	`s¸_move
(
•
, 
	`LASTLINE
(sp), 0);

194 ()
gp
->
	`s¸_˛π€ﬁ
(
•
);

200 i‡(
m1
 !
NULL
) {

201 
mÀn
 = 
Àn
 = 
	`°æí
(
m1
);

202 i‡(
Àn
 > 
•
->
cﬁs
 - 2)

203 
mÀn
 = 
Àn
 = 
•
->
cﬁs
 - 2;

204 ()
gp
->
	`s¸_add°r
(
•
, 
m1
, 
mÀn
);

206 
Àn
 = 0;

207 i‡(
m2
 !
NULL
) {

208 
mÀn
 = 
	`°æí
(
m2
);

209 i‡(
Àn
 + 
mÀn
 > 
•
->
cﬁs
 - 2)

210 
mÀn
 = (
•
->
cﬁs
 - 2Ë- 
Àn
;

211 ()
gp
->
	`s¸_add°r
(
•
, 
m2
, 
mÀn
);

214 ()
gp
->
	`s¸_move
(
•
, 
ﬁdy
, 
ﬁdx
);

215 ()
gp
->
	`s¸_ª‰esh
(
•
, 0);

216 
	}
}

231 
	$vs_msg
(
•
, 
mty≥
, 
löe
, 
Àn
)

232 
SCR
 *
•
;

233 
mty≥_t
 
mty≥
;

234 *
löe
;

235 
size_t
 
Àn
;

237 
GS
 *
gp
;

238 
VI_PRIVATE
 *
vù
;

239 
size_t
 
maxcﬁs
, 
ﬁdx
, 
ﬁdy
, 
∑ddög
;

240 c⁄° *
e
, *
s
, *
t
;

242 
gp
 = 
•
->gp;

243 
vù
 = 
	`VIP
(
•
);

251 i‡(
	`F_ISSET
(
•
, 
SC_TINPUT_INFO
Ë|| F_ISSET(
gp
, 
G_BELLSCHED
))

252 i‡(
	`F_ISSET
(
•
, 
SC_SCR_VI
)) {

253 
	`F_CLR
(
gp
, 
G_BELLSCHED
);

254 ()
gp
->
	`s¸_bñl
(
•
);

256 
	`F_SET
(
gp
, 
G_BELLSCHED
);

263 i‡(
	`F_ISSET
(
•
, 
SC_TINPUT_INFO
))

281 i‡(
	`F_ISSET
(
•
, 
SC_EX
 | 
SC_SCR_EXWROTE
)) {

282 i‡(!
	`F_ISSET
(
•
, 
SC_SCR_EX
))

283 i‡(
	`F_ISSET
(
•
, 
SC_SCR_EXWROTE
)) {

284 i‡(
•
->
gp
->
	`s¸_s¸ìn
(•, 
SC_EX
))

287 i‡(
	`ex_öô
(
•
))

290 i‡(
mty≥
 =
M_ERR
)

291 ()
gp
->
	`s¸_©å
(
•
, 
SA_INVERSE
, 1);

292 ()
	`¥ötf
("%.*s", ()
Àn
, 
löe
);

293 i‡(
mty≥
 =
M_ERR
)

294 ()
gp
->
	`s¸_©å
(
•
, 
SA_INVERSE
, 0);

295 ()
	`fÊush
(
°dout
);

297 
	`F_CLR
(
•
, 
SC_EX_WAIT_NO
);

299 i‡(!
	`F_ISSET
(
•
, 
SC_SCR_EX
))

300 ()
•
->
gp
->
	`s¸_s¸ìn
(•, 
SC_VI
);

305 i‡(!
	`F_ISSET
(
•
, 
SC_SCR_VI
)) {

306 ()
	`vs_msgßve
(
•
, 
mty≥
, 
löe
, 
Àn
);

311 ()
gp
->
	`s¸_curs‹
(
•
, &
ﬁdy
, &
ﬁdx
);

314 i‡(
mty≥
 =
M_NONE
) {

315 
	`vs_ouçut
(
•
, 
mty≥
, 
löe
, 
Àn
);

316 
ªt
;

323 i‡(
löe
[
Àn
 - 1] == '\n')

324 --
Àn
;

343 i‡(
	`IS_ONELINE
(
•
))

344 ()
	`msg_cmsg
(
•
, 
CMSG_CONT_S
, &
∑ddög
);

346 
∑ddög
 = 0;

347 
∑ddög
 += 2;

349 
maxcﬁs
 = 
•
->
cﬁs
 - 1;

350 i‡(
vù
->
lc⁄töue
 != 0)

351 i‡(
Àn
 + 
vù
->
lc⁄töue
 + 
∑ddög
 > 
maxcﬁs
)

352 
	`vs_ouçut
(
•
, 
vù
->
mty≥
, ".\n", 2);

354 
	`vs_ouçut
(
•
, 
vù
->
mty≥
, ";", 1);

355 
	`vs_ouçut
(
•
, 
M_NONE
, " ", 1);

357 
vù
->
mty≥
 = mtype;

358 
s
 = 
löe
;; s = 
t
) {

359 ; 
Àn
 > 0 && 
	`isbœnk
(*
s
); --len, ++s);

360 i‡(
Àn
 == 0)

362 i‡(
Àn
 + 
vù
->
lc⁄töue
 > 
maxcﬁs
) {

363 
e
 = 
s
 + (
maxcﬁs
 - 
vù
->
lc⁄töue
);

364 
e
 > 
s
 && !
	`isbœnk
(*e); --e);

365 i‡(
e
 =
s
)

366 
e
 = 
t
 = 
s
 + (
maxcﬁs
 - 
vù
->
lc⁄töue
);

368 
t
 = 
e
; 
	`isbœnk
(e[-1]); --e);

370 
e
 = 
t
 = 
s
 + 
Àn
;

376 
Àn
 -
t
 - 
s
;

377 i‡(
Àn
 =0 && (
e
 - 
s
) > 1 && s[(e - s) - 1] == '.')

378 --
e
;

379 
	`vs_ouçut
(
•
, 
mty≥
, 
s
, 
e
 - s);

381 i‡(
Àn
 != 0)

382 
	`vs_ouçut
(
•
, 
M_NONE
, "\n", 1);

384 i‡(
	`INTERRUPTED
(
•
))

388 
ªt
: ()
gp
->
	`s¸_move
(
•
, 
ﬁdy
, 
ﬁdx
);

389 ()
gp
->
	`s¸_ª‰esh
(
•
, 0);

390 
	}
}

397 
	$vs_ouçut
(
•
, 
mty≥
, 
löe
, 
Œí
)

398 
SCR
 *
•
;

399 
mty≥_t
 
mty≥
;

400 c⁄° *
löe
;

401 
Œí
;

403 
CHAR_T
 *
kp
;

404 
GS
 *
gp
;

405 
VI_PRIVATE
 *
vù
;

406 
size_t
 
chÀn
, 
nŸu£d
;

407 
ch
, 
Àn
, 
æí
, 
éí
;

408 c⁄° *
p
, *
t
;

409 *
cbp
, *
ecbp
, 
cbuf
[128];

411 
gp
 = 
•
->gp;

412 
vù
 = 
	`VIP
(
•
);

413 
p
 = 
löe
, 
æí
 = 
Œí
;Ülen > 0;) {

415 i‡((
p
 = 
	`memchr
(
löe
, '\n', 
Œí
)Ë=
NULL
)

416 
Àn
 = 
Œí
;

418 
Àn
 = 
p
 - 
löe
;

424 i‡(
Àn
 + 
vù
->
lc⁄töue
 > 
•
->
cﬁs
)

425 
Àn
 = 
•
->
cﬁs
 - 
vù
->
lc⁄töue
;

433 i‡(
vù
->
lc⁄töue
 == 0) {

434 i‡(!
	`IS_ONELINE
(
•
)) {

435 i‡(
vù
->
tŸÆcou¡
 == 1) {

436 ()
gp
->
	`s¸_move
(
•
,

437 
	`LASTLINE
(
•
) - 1, 0);

438 ()
gp
->
	`s¸_˛π€ﬁ
(
•
);

439 ()
	`vs_dividî
(
•
);

440 
	`F_SET
(
vù
, 
VIP_DIVIDER
);

441 ++
vù
->
tŸÆcou¡
;

442 ++
vù
->
löecou¡
;

444 i‡(
vù
->
tŸÆcou¡
 =
•
->
t_maxrows
 &&

445 
	`F_ISSET
(
vù
, 
VIP_DIVIDER
)) {

446 --
vù
->
tŸÆcou¡
;

447 --
vù
->
löecou¡
;

448 
	`F_CLR
(
vù
, 
VIP_DIVIDER
);

451 i‡(
vù
->
tŸÆcou¡
 != 0)

452 
	`vs_s¸ﬁl
(
•
, 
NULL
, 
SCROLL_W_QUIT
);

454 ()
gp
->
	`s¸_move
(
•
, 
	`LASTLINE
(sp), 0);

455 ++
vù
->
tŸÆcou¡
;

456 ++
vù
->
löecou¡
;

458 i‡(
	`INTERRUPTED
(
•
))

461 ()
gp
->
	`s¸_move
(
•
, 
	`LASTLINE
(•), 
vù
->
lc⁄töue
);

464 i‡(
mty≥
 =
M_ERR
)

465 ()
gp
->
	`s¸_©å
(
•
, 
SA_INVERSE
, 1);

468 
	#FLUSH
 { \

469 *
cbp
 = '\0'; \

470 ()
gp
->
	`s¸_add°r
(
•
, 
cbuf
, 
cbp
 - cbuf); \

471 
cbp
 = 
cbuf
; \

472 }

	)

473 
ecbp
 = (
cbp
 = 
cbuf
) + (cbuf) - 1;

474 
t
 = 
löe
, 
éí
 = 
Àn
;Ålen--; ++t) {

475 
ch
 = *
t
;

483 i‡(
ch
 == '\t')

484 
ch
 = ' ';

485 
chÀn
 = 
	`KEY_LEN
(
•
, 
ch
);

486 i‡(
cbp
 + 
chÀn
 >
ecbp
)

487 
FLUSH
;

488 
kp
 = 
	`KEY_NAME
(
•
, 
ch
); 
chÀn
--;)

489 *
cbp
++ = *
kp
++;

491 i‡(
cbp
 > 
cbuf
)

492 
FLUSH
;

493 i‡(
mty≥
 =
M_ERR
)

494 ()
gp
->
	`s¸_©å
(
•
, 
SA_INVERSE
, 0);

497 ()
gp
->
	`s¸_˛π€ﬁ
(
•
);

500 
vù
->
lc⁄töue
 = 0;

503 
löe
 +
Àn
;

504 
Œí
 -
Àn
;

505 i‡(
p
 !
NULL
) {

506 ++
löe
;

507 --
Œí
;

512 i‡(
p
 =
NULL
)

513 
gp
->
	`s¸_curs‹
(
•
, &
nŸu£d
, &
vù
->
lc⁄töue
);

514 
	}
}

526 
	$vs_ex_ªsﬁve
(
•
, 
c⁄töuï
)

527 
SCR
 *
•
;

528 *
c⁄töuï
;

530 
EVENT
 
ev
;

531 
GS
 *
gp
;

532 
VI_PRIVATE
 *
vù
;

533 
sw_t
 
wty≥
;

535 
gp
 = 
•
->gp;

536 
vù
 = 
	`VIP
(
•
);

537 *
c⁄töuï
 = 0;

540 
	`F_SET
(
vù
, 
VIP_CUR_INVALID
);

543 i‡(
vù
->
lc⁄töue
 != 0) {

544 
	`vs_ouçut
(
•
, 
vù
->
mty≥
, ".", 1);

545 
vù
->
lc⁄töue
 = 0;

547 
vù
->
mty≥
 = 
M_NONE
;

565 i‡(
	`F_ISSET
(
•
, 
SC_SCR_EXWROTE
)) {

566 i‡(
•
->
gp
->
	`s¸_s¸ìn
(•, 
SC_VI
))

569 i‡(!
	`F_ISSET
(
•
, 
SC_EX_WAIT_YES
Ë&& 
vù
->
tŸÆcou¡
 < 2) {

570 
	`F_CLR
(
•
, 
SC_EX_WAIT_NO
);

575 
	`F_CLR
(
•
, 
SC_EX_WAIT_YES
);

582 i‡(!
	`F_ISSET
(
•
, 
SC_EX_WAIT_NO
Ë&& !
	`INTERRUPTED
(sp)) {

583 
wty≥
 = 
	`F_ISSET
(
•
, 
SC_EXIT
 | 
SC_EXIT_FORCE
 |

584 
SC_FSWITCH
 | 
SC_SSWITCH
Ë? 
SCROLL_W
 : 
SCROLL_W_EX
;

585 i‡(
	`F_ISSET
(
•
, 
SC_SCR_EXWROTE
))

586 
	`vs_waô
(
•
, 
c⁄töuï
, 
wty≥
);

588 
	`vs_s¸ﬁl
(
•
, 
c⁄töuï
, 
wty≥
);

589 i‡(*
c⁄töuï
)

594 i‡(
	`F_ISSET
(
•
, 
SC_SCR_EXWROTE
))

595 
	`F_SET
(
vù
, 
VIP_N_EX_PAINT
);

601 i‡(
•
->
q
.
cqe_√xt
 !(*)&•->
gp
->
dq
)

602 
	`F_SET
(
•
, 
SC_SCR_REDRAW
);

605 i‡(
	`F_ISSET
(
vù
, 
VIP_N_EX_REDRAW
))

606 
	`F_SET
(
•
, 
SC_SCR_REFORMAT
);

609 ()
gp
->
	`s¸_©å
(
•
, 
SA_ALTERNATE
, 1);

615 
	`F_CLR
(
•
, 
SC_SCR_EXWROTE
 | 
SC_EX_WAIT_NO
);

626 i‡(
vù
->
tŸÆcou¡
 > 1) {

628 
ev
.
e_evít
 = 
E_REPAINT
;

629 
ev
.
e_Êno
 = 
vù
->
tŸÆcou¡
 >=

630 
•
->
rows
 ? 1 : sp->row†- 
vù
->
tŸÆcou¡
;

631 
ev
.
e_éno
 = 
•
->
rows
;

634 
vù
->
löecou¡
 = vù->
lc⁄töue
 = vù->
tŸÆcou¡
 = 0;

637 ()
	`vs_ª∑öt
(
•
, &
ev
);

640 
vù
->
löecou¡
 = vù->
lc⁄töue
 = vù->
tŸÆcou¡
 = 0;

643 
	}
}

652 
	$vs_ªsﬁve
(
•
, 
c•
, 
f‹˚waô
)

653 
SCR
 *
•
, *
c•
;

654 
f‹˚waô
;

656 
EVENT
 
ev
;

657 
GS
 *
gp
;

658 
MSGS
 *
mp
;

659 
VI_PRIVATE
 *
vù
;

660 
size_t
 
ﬁdy
, 
ﬁdx
;

661 
ªdøw
;

670 
gp
 = 
•
->gp;

671 
vù
 = 
	`VIP
(
•
);

672 i‡(
c•
 =
NULL
)

673 
c•
 = 
•
;

676 ()
gp
->
	`s¸_curs‹
(
c•
, &
ﬁdy
, &
ﬁdx
);

679 i‡(
	`F_ISSET
(
gp
, 
G_BELLSCHED
)) {

680 
	`F_CLR
(
gp
, 
G_BELLSCHED
);

681 ()
gp
->
	`s¸_bñl
(
•
);

685 i‡(
	`F_ISSET
(
•
, 
SC_STATUS
)) {

686 
	`F_CLR
(
•
, 
SC_STATUS
);

687 
	`msgq_°©us
(
•
, sp->
 o
, 
MSTAT_TRUNCATE
);

691 
	`mod_Ωt
(
•
);

699 i‡(
gp
->
msgq
.
lh_fú°
 !
NULL
) {

700 i‡(!
	`F_ISSET
(
•
, 
SC_SCR_VI
Ë&& 
	`vs_ª‰esh
(sp, 1))

702 (
mp
 = 
gp
->
msgq
.
lh_fú°
Ë!
NULL
) {

703 
gp
->
	`s¸_msg
(
•
, 
mp
->
mty≥
, mp->
buf
, mp->
Àn
);

704 
	`LIST_REMOVE
(
mp
, 
q
);

705 
	`‰ì
(
mp
->
buf
);

706 
	`‰ì
(
mp
);

708 
	`F_SET
(
vù
, 
VIP_CUR_INVALID
);

711 
vù
->
tŸÆcou¡
) {

713 
ªdøw
 = 0;

720 i‡(
f‹˚waô
)

721 
	`vs_s¸ﬁl
(
•
, 
NULL
, 
SCROLL_W
);

723 
	`F_SET
(
vù
, 
VIP_S_MODELINE
);

725 
ªdøw
 = 0;

732 
	`vs_s¸ﬁl
(
•
, 
NULL
, 
SCROLL_W
);

734 
ev
.
e_evít
 = 
E_REPAINT
;

735 
ev
.
e_Êno
 = 
vù
->
tŸÆcou¡
 >=

736 
•
->
rows
 ? 1 : sp->row†- 
vù
->
tŸÆcou¡
;

737 
ev
.
e_éno
 = 
•
->
rows
;

739 
ªdøw
 = 1;

744 
vù
->
löecou¡
 = vù->
lc⁄töue
 = vù->
tŸÆcou¡
 = 0;

747 i‡(
ªdøw
)

748 ()
	`vs_ª∑öt
(
•
, &
ev
);

751 ()
gp
->
	`s¸_move
(
c•
, 
ﬁdy
, 
ﬁdx
);

754 
	}
}

761 
	$vs_s¸ﬁl
(
•
, 
c⁄töuï
, 
wty≥
)

762 
SCR
 *
•
;

763 *
c⁄töuï
;

764 
sw_t
 
wty≥
;

766 
GS
 *
gp
;

767 
VI_PRIVATE
 *
vù
;

769 
gp
 = 
•
->gp;

770 
vù
 = 
	`VIP
(
•
);

771 i‡(!
	`IS_ONELINE
(
•
)) {

777 ()
gp
->
	`s¸_move
(
•
, 
vù
->
tŸÆcou¡
 <

778 
•
->
rows
 ? 
	`LASTLINE
(•Ë- 
vù
->
tŸÆcou¡
 : 0, 0);

779 ()
gp
->
	`s¸_dñëñn
(
•
);

782 i‡(
•
->
q
.
cqe_√xt
 !(*)&•->
gp
->
dq
) {

783 ()
gp
->
	`s¸_move
(
•
, 
	`LASTLINE
(sp), 0);

784 ()
gp
->
	`s¸_ö£π 
(
•
);

787 i‡(
wty≥
 =
SCROLL_W_QUIT
 && 
vù
->
löecou¡
 < 
•
->
t_maxrows
)

789 
	`vs_waô
(
•
, 
c⁄töuï
, 
wty≥
);

790 
	}
}

797 
	$vs_waô
(
•
, 
c⁄töuï
, 
wty≥
)

798 
SCR
 *
•
;

799 *
c⁄töuï
;

800 
sw_t
 
wty≥
;

802 
EVENT
 
ev
;

803 
VI_PRIVATE
 *
vù
;

804 c⁄° *
p
;

805 
GS
 *
gp
;

806 
size_t
 
Àn
;

808 
gp
 = 
•
->gp;

809 
vù
 = 
	`VIP
(
•
);

811 ()
gp
->
	`s¸_move
(
•
, 
	`LASTLINE
(sp), 0);

812 i‡(
	`IS_ONELINE
(
•
))

813 
p
 = 
	`msg_cmsg
(
•
, 
CMSG_CONT_S
, &
Àn
);

815 
wty≥
) {

816 
SCROLL_W_QUIT
:

817 
p
 = 
	`msg_cmsg
(
•
, 
CMSG_CONT_Q
, &
Àn
);

819 
SCROLL_W_EX
:

820 
p
 = 
	`msg_cmsg
(
•
, 
CMSG_CONT_EX
, &
Àn
);

822 
SCROLL_W
:

823 
p
 = 
	`msg_cmsg
(
•
, 
CMSG_CONT
, &
Àn
);

826 
	`ab‹t
();

829 ()
gp
->
	`s¸_add°r
(
•
, 
p
, 
Àn
);

831 ++
vù
->
tŸÆcou¡
;

832 
vù
->
löecou¡
 = 0;

834 ()
gp
->
	`s¸_˛π€ﬁ
(
•
);

835 ()
gp
->
	`s¸_ª‰esh
(
•
, 0);

838 i‡(
c⁄töuï
 !
NULL
)

839 *
c⁄töuï
 = 0;

841 i‡(
	`v_evít_gë
(
•
, &
ev
, 0, 0))

843 i‡(
ev
.
e_evít
 =
E_CHARACTER
)

845 i‡(
ev
.
e_evít
 =
E_INTERRUPT
) {

846 
ev
.
e_c
 = 
CH_QUIT
;

847 
	`F_SET
(
gp
, 
G_INTERRUPTED
);

850 ()
gp
->
	`s¸_bñl
(
•
);

852 
wty≥
) {

853 
SCROLL_W_QUIT
:

854 i‡(
ev
.
e_c
 =
CH_QUIT
)

855 
	`F_SET
(
gp
, 
G_INTERRUPTED
);

857 
SCROLL_W_EX
:

858 i‡(
ev
.
e_c
 =':' && 
c⁄töuï
 !
NULL
)

859 *
c⁄töuï
 = 1;

861 
SCROLL_W
:

864 
	}
}

871 
	$vs_dividî
(
•
)

872 
SCR
 *
•
;

874 
GS
 *
gp
;

875 
size_t
 
Àn
;

877 
	#DIVIDESTR
 "+=+=+=+=+=+=+=+"

	)

878 
Àn
 =

879 (
DIVIDESTR
Ë- 1 > 
•
->
cﬁs
 ? sp->cols : (DIVIDESTR) - 1;

880 
gp
 = 
•
->gp;

881 ()
gp
->
	`s¸_©å
(
•
, 
SA_INVERSE
, 1);

882 ()
gp
->
	`s¸_add°r
(
•
, 
DIVIDESTR
, 
Àn
);

883 ()
gp
->
	`s¸_©å
(
•
, 
SA_INVERSE
, 0);

884 
	}
}

891 
	$vs_msgßve
(
•
, 
mt
, 
p
, 
Àn
)

892 
SCR
 *
•
;

893 
mty≥_t
 
mt
;

894 *
p
;

895 
size_t
 
Àn
;

897 
GS
 *
gp
;

898 
MSGS
 *
mp_c
, *
mp_n
;

907 
	`CALLOC_GOTO
(
•
, 
mp_n
, 
MSGS
 *, 1, (MSGS));

908 
	`MALLOC_GOTO
(
•
, 
mp_n
->
buf
, *, 
Àn
);

910 
	`memmove
(
mp_n
->
buf
, 
p
, 
Àn
);

911 
mp_n
->
Àn
 =Üen;

912 
mp_n
->
mty≥
 = 
mt
;

914 
gp
 = 
•
->gp;

915 i‡((
mp_c
 = 
gp
->
msgq
.
lh_fú°
Ë=
NULL
) {

916 
	`LIST_INSERT_HEAD
(&
gp
->
msgq
, 
mp_n
, 
q
);

918 ; 
mp_c
->
q
.
À_√xt
 !
NULL
; mp_c = mp_c->q.le_next);

919 
	`LIST_INSERT_AFTER
(
mp_c
, 
mp_n
, 
q
);

923 
Æloc_îr
:

924 i‡(
mp_n
 !
NULL
)

925 
	`‰ì
(
mp_n
);

926 ()
	`Ârötf
(
°dîr
, "%.*s\n", ()
Àn
, 
p
);

927 
	}
}

	@vi/vs_refresh.c

10 
	~"c⁄fig.h
"

12 #i‚de‡
löt


13 c⁄° 
	gsccsid
[] = "@(#)vs_refresh.c 10.44 (Berkeley) 10/13/96";

16 
	~<sys/ty≥s.h
>

17 
	~<sys/queue.h
>

18 
	~<sys/time.h
>

20 
	~<bô°rög.h
>

21 
	~<˘y≥.h
>

22 
	~<limôs.h
>

23 
	~<°dio.h
>

24 
	~<°dlib.h
>

25 
	~<°rög.h
>

27 
	~"../comm⁄/comm⁄.h
"

28 
	~"vi.h
"

30 
	#UPDATE_CURSOR
 0x01

	)

31 
	#UPDATE_SCREEN
 0x02

	)

33 
vs_modñöe
 
__P
((
SCR
 *));

34 
vs_∑öt
 
__P
((
SCR
 *, 
u_öt
));

43 
	$vs_ª∑öt
(
•
, 
evp
)

44 
SCR
 *
•
;

45 
EVENT
 *
evp
;

47 
SMAP
 *
smp
;

49 ; 
evp
->
e_Êno
 <evp->
e_éno
; ++evp->e_flno) {

50 
smp
 = 
HMAP
 + 
evp
->
e_Êno
 - 1;

51 
	`SMAP_FLUSH
(
smp
);

52 i‡(
	`vs_löe
(
•
, 
smp
, 
NULL
, NULL))

56 
	}
}

65 
	$vs_ª‰esh
(
•
, 
f‹˚∑öt
)

66 
SCR
 *
•
;

67 
f‹˚∑öt
;

69 
GS
 *
gp
;

70 
SCR
 *
t•
;

71 
√ed_ª‰esh
;

72 
u_öt
 
¥iv_∑öt
, 
pub_∑öt
;

74 
gp
 = 
•
->gp;

82 i‡(
	`F_ISSET
(
•
, 
SC_SCR_REDRAW
))

83 
t•
 = 
gp
->
dq
.
cqh_fú°
;

84 
t•
 !(*)&
gp
->
dq
;Å• =Å•->
q
.
cqe_√xt
)

85 i‡(
t•
 !
•
)

86 
	`F_SET
(
t•
, 
SC_SCR_REDRAW
 | 
SC_STATUS
);

97 
pub_∑öt
 = 
SC_SCR_REFORMAT
 | 
SC_SCR_REDRAW
;

98 
¥iv_∑öt
 = 
VIP_CUR_INVALID
 | 
VIP_N_REFRESH
;

99 i‡(
	`O_ISSET
(
•
, 
O_NUMBER
))

100 
¥iv_∑öt
 |
VIP_N_RENUMBER
;

101 
t•
 = 
gp
->
dq
.
cqh_fú°
;

102 
t•
 !(*)&
gp
->
dq
;Å• =Å•->
q
.
cqe_√xt
)

103 i‡(
t•
 !
•
 && !
	`F_ISSET
—•, 
SC_EXIT
 | 
SC_EXIT_FORCE
) &&

104 (
	`F_ISSET
(
t•
, 
pub_∑öt
) ||

105 
	`F_ISSET
(
	`VIP
(
t•
), 
¥iv_∑öt
))) {

106 ()
	`vs_∑öt
(
t•
,

107 (
	`F_ISSET
(
	`VIP
(
t•
), 
VIP_CUR_INVALID
) ?

108 
UPDATE_CURSOR
 : 0Ë| 
UPDATE_SCREEN
);

109 
	`F_SET
(
	`VIP
(
•
), 
VIP_CUR_INVALID
);

119 i‡(
	`vs_∑öt
(
•
, 
UPDATE_CURSOR
 | (!
f‹˚∑öt
 &&

120 
	`F_ISSET
(
•
, 
SC_SCR_VI
Ë&& 
	`KEYS_WAITING
(•Ë? 0 : 
UPDATE_SCREEN
)))

137 
√ed_ª‰esh
 = 0, 
t•
 = 
gp
->
dq
.
cqh_fú°
;

138 
t•
 !(*)&
gp
->
dq
;Å• =Å•->
q
.
cqe_√xt
)

139 i‡(
	`F_ISSET
(
t•
, 
SC_STATUS
)) {

140 
√ed_ª‰esh
 = 1;

141 
	`vs_ªsﬁve
(
t•
, 
•
, 0);

143 i‡(
√ed_ª‰esh
)

144 ()
gp
->
	`s¸_ª‰esh
(
•
, 0);

150 
	`F_SET
(
•
, 
SC_SCR_VI
);

152 
	}
}

165 
	$vs_∑öt
(
•
, 
Êags
)

166 
SCR
 *
•
;

167 
u_öt
 
Êags
;

169 
GS
 *
gp
;

170 
SMAP
 *
smp
, 
tmp
;

171 
VI_PRIVATE
 *
vù
;

172 
ª˙o_t
 
œ°löe
, 
l˙t
;

173 
size_t
 
cwtŸÆ
, 
˙t
, 
Àn
, 
nŸu£d
, 
off
, 
y
;

174 
ch
, 
did∑öt
, 
i£m±y
, 
À·right_w¨p
;

175 *
p
;

177 
	#LNO
 
•
->
 o


	)

178 
	#OLNO
 
vù
->
ﬁno


	)

179 
	#CNO
 
•
->
˙o


	)

180 
	#OCNO
 
vù
->
o˙o


	)

181 
	#SCNO
 
vù
->
sc_cﬁ


	)

183 
gp
 = 
•
->gp;

184 
vù
 = 
	`VIP
(
•
);

185 
did∑öt
 = 
À·right_w¨p
 = 0;

194 i‡(
	`F_ISSET
(
•
, 
SC_SCR_REFORMAT
)) {

196 
	`VI_SCR_CFLUSH
(
vù
);

199 i‡(
	`F_ISSET
(
•
, 
SC_SCR_TOP
)) {

200 i‡(
	`vs_sm_fûl
(
•
, 
LNO
, 
P_TOP
))

203 i‡(
	`F_ISSET
(
•
, 
SC_SCR_CENTER
)) {

204 i‡(
	`vs_sm_fûl
(
•
, 
LNO
, 
P_MIDDLE
))

207 i‡(
	`vs_sm_fûl
(
•
, 
OOBLNO
, 
P_TOP
))

209 
	`F_SET
(
•
, 
SC_SCR_REDRAW
);

250 i‡(
	`IS_SMALL
(
•
))

251 i‡(
LNO
 < 
HMAP
->
 o
) {

252 
l˙t
 = 
	`vs_sm_∆öes
(
•
, 
HMAP
, 
LNO
, sp->
t_maxrows
);

253 i‡(
l˙t
 <
	`HALFSCREEN
(
•
))

254 ; 
l˙t
 && 
•
->
t_rows
 !•->
t_maxrows
;

255 --
l˙t
, ++
•
->
t_rows
) {

256 ++
TMAP
;

257 i‡(
	`vs_sm_1down
(
•
))

261 
smÆl_fûl
;

262 } i‡(
LNO
 > 
TMAP
->
 o
) {

263 
l˙t
 = 
	`vs_sm_∆öes
(
•
, 
TMAP
, 
LNO
, sp->
t_maxrows
);

264 i‡(
l˙t
 <
	`HALFSCREEN
(
•
))

265 ; 
l˙t
 && 
•
->
t_rows
 !•->
t_maxrows
;

266 --
l˙t
, ++
•
->
t_rows
) {

267 i‡(
	`vs_sm_√xt
(
•
, 
TMAP
, TMAP + 1))

269 ++
TMAP
;

270 i‡(
	`vs_löe
(
•
, 
TMAP
, 
NULL
, NULL))

274 
smÆl_fûl
: ()
gp
->
	`s¸_move
(
•
, 
	`LASTLINE
(sp), 0);

275 ()
gp
->
	`s¸_˛π€ﬁ
(
•
);

276 ; 
•
->
t_rows
 > sp->
t_mörows
;

277 --
•
->
t_rows
, --
TMAP
) {

278 ()
gp
->
	`s¸_move
(
•
, 
TMAP
 - 
HMAP
, 0);

279 ()
gp
->
	`s¸_˛π€ﬁ
(
•
);

281 i‡(
	`vs_sm_fûl
(
•
, 
LNO
, 
P_FILL
))

283 
	`F_SET
(
•
, 
SC_SCR_REDRAW
);

284 
adju°
;

291 i‡(
LNO
 >
HMAP
->
 o
) {

293 i‡(
LNO
 <
TMAP
->
 o
)

294 
adju°
;

295 i‡(
	`F_ISSET
(
•
, 
SC_SCR_TOP
))

296 
t›
;

297 i‡(
	`F_ISSET
(
•
, 
SC_SCR_CENTER
))

298 
middÀ
;

304 
l˙t
 = 
	`vs_sm_∆öes
(
•
, 
TMAP
, 
LNO
, 
	`HALFTEXT
(sp));

305 i‡(
l˙t
 < 
	`HALFTEXT
(
•
)) {

306 
l˙t
--)

307 i‡(
	`vs_sm_1up
(
•
))

309 
adju°
;

311 
bŸtom
;

317 i‡(
	`F_ISSET
(
•
, 
SC_SCR_TOP
))

318 
t›
;

319 i‡(
	`F_ISSET
(
•
, 
SC_SCR_CENTER
))

320 
middÀ
;

325 
l˙t
 = 
	`vs_sm_∆öes
(
•
, 
HMAP
, 
LNO
, 
	`HALFTEXT
(sp));

326 i‡(
l˙t
 < 
	`HALFTEXT
(
•
)) {

332 i‡(
	`db_exi°
(
•
, 
HMAP
->
 o
)) {

333 
l˙t
--)

334 i‡(
	`vs_sm_1down
(
•
))

336 
adju°
;

343 
bŸtom
: i‡(
	`db_œ°
(
•
, &
œ°löe
))

345 
tmp
.
 o
 = 
LNO
;

346 
tmp
.
coff
 = 
HMAP
->coff;

347 
tmp
.
soff
 = 1;

348 
l˙t
 = 
	`vs_sm_∆öes
(
•
, &
tmp
, 
œ°löe
, sp->
t_rows
);

349 i‡(
l˙t
 < 
	`HALFTEXT
(
•
)) {

350 i‡(
	`vs_sm_fûl
(
•
, 
œ°löe
, 
P_BOTTOM
))

352 
	`F_SET
(
•
, 
SC_SCR_REDRAW
);

353 
adju°
;

356 
middÀ
;

364 
tmp
.
 o
 = 1;

365 
tmp
.
coff
 = 
HMAP
->coff;

366 
tmp
.
soff
 = 1;

367 
l˙t
 = 
	`vs_sm_∆öes
(
•
, &
tmp
, 
LNO
, 
	`HALFTEXT
(sp));

368 i‡(
l˙t
 < 
	`HALFTEXT
(
•
)) {

369 i‡(
	`vs_sm_fûl
(
•
, 1, 
P_TOP
))

372 
middÀ
: i‡(
	`vs_sm_fûl
(
•
, 
LNO
, 
P_MIDDLE
))

375 
t›
: i‡(
	`vs_sm_fûl
(
•
, 
LNO
, 
P_TOP
))

378 
	`F_SET
(
•
, 
SC_SCR_REDRAW
);

395 
adju°
: i‡(!
	`O_ISSET
(
•
, 
O_LEFTRIGHT
) &&

396 (
LNO
 =
HMAP
->
 o
 || LNO =
TMAP
->lno)) {

397 
˙t
 = 
	`vs_s¸ìns
(
•
, 
LNO
, &
CNO
);

398 i‡(
LNO
 =
HMAP
->
 o
 && 
˙t
 < HMAP->
soff
)

399 i‡((
HMAP
->
soff
 - 
˙t
Ë> 
	`HALFTEXT
(
•
)) {

400 
HMAP
->
soff
 = 
˙t
;

401 
	`vs_sm_fûl
(
•
, 
OOBLNO
, 
P_TOP
);

402 
	`F_SET
(
•
, 
SC_SCR_REDRAW
);

404 
˙t
 < 
HMAP
->
soff
)

405 i‡(
	`vs_sm_1down
(
•
))

407 i‡(
LNO
 =
TMAP
->
 o
 && 
˙t
 > TMAP->
soff
)

408 i‡((
˙t
 - 
TMAP
->
soff
Ë> 
	`HALFTEXT
(
•
)) {

409 
TMAP
->
soff
 = 
˙t
;

410 
	`vs_sm_fûl
(
•
, 
OOBLNO
, 
P_BOTTOM
);

411 
	`F_SET
(
•
, 
SC_SCR_REDRAW
);

413 
˙t
 > 
TMAP
->
soff
)

414 i‡(
	`vs_sm_1up
(
•
))

424 i‡(
	`F_ISSET
(
•
, 
SC_SCR_REDRAW
)) {

425 i‡(
	`O_ISSET
(
•
, 
O_LEFTRIGHT
))

426 
¶ow
;

427 
∑öt
;

433 i‡(!
	`LF_ISSET
(
UPDATE_CURSOR
))

434 
numbî
;

451 i‡(
	`F_ISSET
(
vù
, 
VIP_CUR_INVALID
Ë|| 
LNO
 !
OLNO
)

452 
¶ow
;

455 i‡(
CNO
 =
OCNO
)

456 
Á°
;

464 i‡(
	`db_egë
(
•
, 
LNO
, &
p
, &
Àn
, &
i£m±y
)) {

465 i‡(
i£m±y
)

466 
¶ow
;

470 #ifde‡
DEBUG


472 i‡(
CNO
 >
Àn
 &&Üen != 0) {

473 
	`msgq
(
•
, 
M_ERR
, "Error: %s/%d: cno (%u) >=Üen (%u)",

474 
	`èû
(
__FILE__
), 
__LINE__
, 
CNO
, 
Àn
);

483 i‡(
CNO
 < 
OCNO
) {

492 
p
 +
OCNO
;

493 
˙t
 = (
OCNO
 - 
CNO
) + 1;

494 i‡(
OCNO
 >
Àn
)

495 
¶ow
;

503 i‡(
SCNO
 + 1 + 
MAX_CHARACTER_COLUMNS
 < 
˙t
)

504 
¶ow
;

510 
cwtŸÆ
 = 0; 
˙t
--; cwtŸÆ +
	`KEY_LEN
(
•
, 
ch
))

511 i‡((
ch
 = *(
u_ch¨
 *)
p
--) == '\t')

512 
¶ow
;

518 
cwtŸÆ
 -= 1;

524 i‡(
	`KEY_LEN
(
•
, 
ch
) > 1)

525 
cwtŸÆ
 -
	`KEY_LEN
(
•
, 
ch
) - 1;

532 i‡(
SCNO
 < 
cwtŸÆ
)

533 
¶ow
;

534 
SCNO
 -
cwtŸÆ
;

541 
p
 +
OCNO
 + 1;

542 
˙t
 = 
CNO
 - 
OCNO
;

549 
cwtŸÆ
 = 
SCNO
; 
˙t
--;) {

550 i‡((
ch
 = *(
u_ch¨
 *)
p
++) == '\t')

551 
¶ow
;

552 i‡((
cwtŸÆ
 +
	`KEY_LEN
(
•
, 
ch
)Ë>
	`SCREEN_COLS
(sp))

560 
SCNO
 = 
cwtŸÆ
;

563 i‡(
SCNO
 >
	`SCREEN_COLS
(
•
))

564 
¶ow
;

572 
Á°
: ()
gp
->
	`s¸_curs‹
(
•
, &
y
, &
nŸu£d
);

573 
d⁄e_curs‹
;

580 
¶ow
: 
smp
 = 
HMAP
; smp->
 o
 !
LNO
; ++smp);

592 i‡(
	`O_ISSET
(
•
, 
O_LEFTRIGHT
)) {

597 
˙t
 = 
	`vs_cﬁumns
(
•
, 
NULL
, 
LNO
, &
CNO
, NULL);

598 i‡(
	`O_ISSET
(
•
, 
O_NUMBER
))

599 
˙t
 -
O_NUMBER_LENGTH
;

602 
off
 = 
smp
->
coff
;

603 i‡(
off
 >
˙t
) {

605 i‡(
off
 >
	`O_VAL
(
•
, 
O_SIDESCROLL
))

606 
off
 -
	`O_VAL
(
•
, 
O_SIDESCROLL
);

608 
off
 = 0;

611 } 
off
 >
˙t
);

612 
shi·ed
;

616 i‡(
off
 =0 && of‡+ 
	`SCREEN_COLS
(
•
Ë< 
˙t
 ||

617 
off
 !0 && of‡+ 
•
->
cﬁs
 < 
˙t
) {

619 
off
 +
	`O_VAL
(
•
, 
O_SIDESCROLL
);

620 } 
off
 + 
•
->
cﬁs
 < 
˙t
);

622 
shi·ed
:

623 i‡(
	`F_ISSET
(
•
, 
SC_TINPUT_INFO
))

624 
smp
->
coff
 = 
off
;

626 
smp
 = 
HMAP
; sm∞<
TMAP
; ++smp)

627 
smp
->
coff
 = 
off
;

628 
À·right_w¨p
 = 1;

630 
∑öt
;

637 i‡(
	`F_ISSET
(
•
, 
SC_SCR_REDRAW
))

638 
∑öt
;

645 
y
 = -1,

646 
vù
->
sc_sm≠
 = 
NULL
; 
smp
 <
TMAP
 && smp->
 o
 =
LNO
; ++smp) {

647 i‡(
	`vs_löe
(
•
, 
smp
, &
y
, &
SCNO
))

649 i‡(
y
 != -1) {

650 
vù
->
sc_sm≠
 = 
smp
;

654 
d⁄e_curs‹
;

664 
∑öt
: 
smp
 = 
HMAP
; sm∞<
TMAP
; ++smp)

665 
	`SMAP_FLUSH
(
smp
);

666 
y
 = -1, 
vù
->
sc_sm≠
 = 
NULL
, 
smp
 = 
HMAP
; sm∞<
TMAP
; ++smp) {

667 i‡(
	`vs_löe
(
•
, 
smp
, &
y
, &
SCNO
))

669 i‡(
y
 !-1 && 
vù
->
sc_sm≠
 =
NULL
)

670 
vù
->
sc_sm≠
 = 
smp
;

676 i‡(
	`F_ISSET
(
•
, 
SC_SCR_REDRAW
Ë&& 
	`IS_SMALL
(sp))

677 
˙t
 = 
•
->
t_rows
; c¡ <•->
t_maxrows
; ++cnt) {

678 ()
gp
->
	`s¸_move
(
•
, 
˙t
, 0);

679 ()
gp
->
	`s¸_˛π€ﬁ
(
•
);

682 
did∑öt
 = 1;

684 
d⁄e_curs‹
:

690 #ifde‡
DEBUG


691 i‡(
vù
->
sc_sm≠
 =
NULL
)

692 
	`ab‹t
();

694 i‡(
vù
->
sc_sm≠
 =
NULL
) {

695 
	`F_SET
(
•
, 
SC_SCR_REFORMAT
);

696  (
	`vs_∑öt
(
•
, 
Êags
));

703 
OCNO
 = 
CNO
;

704 
OLNO
 = 
LNO
;

713 
numbî
: i‡(
	`O_ISSET
(
•
, 
O_NUMBER
) &&

714 
	`F_ISSET
(
vù
, 
VIP_N_RENUMBER
Ë&& !
did∑öt
 && 
	`vs_numbî
(
•
))

722 i‡(
À·right_w¨p
)

723 
	`LF_SET
(
UPDATE_CURSOR
 | 
UPDATE_SCREEN
);

725 i‡(
	`LF_ISSET
(
UPDATE_SCREEN
Ë&& !
	`IS_ONELINE
(
•
) &&

726 !
	`F_ISSET
(
vù
, 
VIP_S_MODELINE
Ë&& !F_ISSET(
•
, 
SC_TINPUT_INFO
))

727 
	`vs_modñöe
(
•
);

729 i‡(
	`LF_ISSET
(
UPDATE_CURSOR
)) {

730 ()
gp
->
	`s¸_move
(
•
, 
y
, 
SCNO
);

740 i‡(
À·right_w¨p
)

741 ()
	`vs_cﬁumn
(
•
, &•->
rcm
);

744 i‡(
	`LF_ISSET
(
UPDATE_SCREEN
))

745 ()
gp
->
	`s¸_ª‰esh
(
•
, 
	`F_ISSET
(
vù
, 
VIP_N_EX_PAINT
));

748 
	`F_CLR
(
•
, 
SC_SCR_CENTER
 | 
SC_SCR_REDRAW
 | 
SC_SCR_REFORMAT
 | 
SC_SCR_TOP
);

749 
	`F_CLR
(
vù
, 
VIP_CUR_INVALID
 |

750 
VIP_N_EX_PAINT
 | 
VIP_N_REFRESH
 | 
VIP_N_RENUMBER
 | 
VIP_S_MODELINE
);

754 #unde‡
LNO


755 #unde‡
OLNO


756 #unde‡
CNO


757 #unde‡
OCNO


758 #unde‡
SCNO


759 
	}
}

766 
	$vs_modñöe
(
•
)

767 
SCR
 *
•
;

769 * c⁄° 
modes
[] = {

776 
GS
 *
gp
;

777 
size_t
 
cﬁs
, 
curcﬁ
, 
cuæí
, 
ídpoöt
, 
Àn
, 
midpoöt
;

778 c⁄° *
t
;

779 
ñlùsis
;

780 *
p
, 
buf
[20];

782 
gp
 = 
•
->gp;

797 ()
gp
->
	`s¸_move
(
•
, 
	`LASTLINE
(sp), 0);

800 
cuæí
 = 0;

801 i‡(
	`IS_SPLIT
(
•
)) {

802 
p
 = 
•
->
‰p
->
«me
; *p != '\0'; ++p);

803 
ñlùsis
 = 0, 
cﬁs
 = 
•
->cﬁ†/ 2; --
p
 > sp->
‰p
->
«me
;) {

804 i‡(*
p
 == '/') {

805 ++
p
;

808 i‡((
cuæí
 +
	`KEY_LEN
(
•
, *
p
)Ë> 
cﬁs
) {

809 
ñlùsis
 = 3;

810 
cuæí
 +=

811 
	`KEY_LEN
(
•
, '.') * 3 + KEY_LEN(sp, ' ');

812 
cuæí
 > 
cﬁs
) {

813 ++
p
;

814 
cuæí
 -
	`KEY_LEN
(
•
, *
p
);

819 i‡(
ñlùsis
) {

820 
ñlùsis
--)

821 ()
gp
->
	`s¸_add°r
(
•
,

822 
	`KEY_NAME
(
•
, '.'), 
	`KEY_LEN
(sp, '.'));

823 ()
gp
->
	`s¸_add°r
(
•
,

824 
	`KEY_NAME
(
•
, ' '), 
	`KEY_LEN
(sp, ' '));

826 ; *
p
 != '\0'; ++p)

827 ()
gp
->
	`s¸_add°r
(
•
,

828 
	`KEY_NAME
(
•
, *
p
), 
	`KEY_LEN
(sp, *p));

832 ()
gp
->
	`s¸_˛π€ﬁ
(
•
);

845 
cﬁs
 = 
•
->cols - 1;

846 i‡(
	`O_ISSET
(
•
, 
O_RULER
)) {

847 
	`vs_cﬁumn
(
•
, &
curcﬁ
);

848 
Àn
 =

849 
	`¢¥ötf
(
buf
, (buf), "%lu,%lu", 
•
->
 o
, 
curcﬁ
 + 1);

851 
midpoöt
 = (
cﬁs
 - ((
Àn
 + 1) / 2)) / 2;

852 i‡(
cuæí
 < 
midpoöt
) {

853 ()
gp
->
	`s¸_move
(
•
, 
	`LASTLINE
(•), 
midpoöt
);

854 
cuæí
 +
Àn
;

855 } i‡(
cuæí
 + 2 + 
Àn
 < 
cﬁs
) {

856 ()
gp
->
	`s¸_add°r
(
•
, " ", 2);

857 
cuæí
 +2 + 
Àn
;

859 ()
gp
->
	`s¸_add°r
(
•
, 
buf
, 
Àn
);

867 
	#MODESIZE
 9

	)

868 
ídpoöt
 = 
cﬁs
;

869 i‡(
	`O_ISSET
(
•
, 
O_SHOWMODE
)) {

870 i‡(
	`F_ISSET
(
•
->
ï
, 
F_MODIFIED
))

871 --
ídpoöt
;

872 
t
 = 
	`msg_ˇt
(
•
, 
modes
[•->
showmode
], &
Àn
);

873 
ídpoöt
 -
Àn
;

876 i‡(
ídpoöt
 > 
cuæí
 + 2) {

877 ()
gp
->
	`s¸_move
(
•
, 
	`LASTLINE
(•), 
ídpoöt
);

878 i‡(
	`O_ISSET
(
•
, 
O_SHOWMODE
)) {

879 i‡(
	`F_ISSET
(
•
->
ï
, 
F_MODIFIED
))

880 ()
gp
->
	`s¸_add°r
(
•
,

881 
	`KEY_NAME
(
•
, '*'), 
	`KEY_LEN
(sp, '*'));

882 ()
gp
->
	`s¸_add°r
(
•
, 
t
, 
Àn
);

885 
	}
}

	@vi/vs_relative.c

10 
	~"c⁄fig.h
"

12 #i‚de‡
löt


13 c⁄° 
	gsccsid
[] = "@(#)vs_relative.c 10.11 (Berkeley) 5/13/96";

16 
	~<sys/ty≥s.h
>

17 
	~<sys/queue.h
>

18 
	~<sys/time.h
>

20 
	~<bô°rög.h
>

21 
	~<limôs.h
>

22 
	~<°dio.h
>

23 
	~<°rög.h
>

25 
	~"../comm⁄/comm⁄.h
"

26 
	~"vi.h
"

35 
	$vs_cﬁumn
(
•
, 
cﬁp
)

36 
SCR
 *
•
;

37 
size_t
 *
cﬁp
;

39 
VI_PRIVATE
 *
vù
;

41 
vù
 = 
	`VIP
(
•
);

43 *
cﬁp
 = (
	`O_ISSET
(
•
, 
O_LEFTRIGHT
) ?

44 
vù
->
sc_sm≠
->
coff
 : (vù->sc_sm≠->
soff
 - 1Ë* 
•
->
cﬁs
) +

45 
vù
->
sc_cﬁ
 - (
	`O_ISSET
(
•
, 
O_NUMBER
Ë? 
O_NUMBER_LENGTH
 : 0);

47 
	}
}

57 
size_t


58 
	$vs_s¸ìns
(
•
, 
 o
, 
˙›
)

59 
SCR
 *
•
;

60 
ª˙o_t
 
 o
;

61 
size_t
 *
˙›
;

63 
size_t
 
cﬁs
, 
s¸ìns
;

66 i‡(
	`O_ISSET
(
•
, 
O_LEFTRIGHT
))

75 i‡(
˙›
 =
NULL
) {

76 i‡(
	`VIP
(
•
)->
ss_ o
 =
 o
)

77  (
	`VIP
(
•
)->
ss_s¸ìns
);

78 } i‡(*
˙›
 == 0)

82 
cﬁs
 = 
	`vs_cﬁumns
(
•
, 
NULL
, 
 o
, 
˙›
, NULL);

84 
s¸ìns
 = (
cﬁs
 / 
•
->cols + (cols % sp->cols ? 1 : 0));

85 i‡(
s¸ìns
 == 0)

86 
s¸ìns
 = 1;

89 i‡(
˙›
 =
NULL
) {

90 
	`VIP
(
•
)->
ss_ o
 = 
 o
;

91 
	`VIP
(
•
)->
ss_s¸ìns
 = 
s¸ìns
;

93  (
s¸ìns
);

94 
	}
}

103 
size_t


104 
	$vs_cﬁumns
(
•
, 
Õ
, 
 o
, 
˙›
, 
difÂ
)

105 
SCR
 *
•
;

106 *
Õ
;

107 
ª˙o_t
 
 o
;

108 
size_t
 *
˙›
, *
difÂ
;

110 
size_t
 
chÀn
, 
˙o
, 
curoff
, 
œ°
, 
Àn
, 
s˙o
;

111 
ch
, 
À·right
, 
li°£t
;

112 *
p
;

115 i‡(
Õ
 =
NULL
) {

116 ()
	`db_gë
(
•
, 
 o
, 0, &
Õ
, &
Àn
);

117 i‡(
Àn
 == 0)

118 
d⁄e
;

122 i‡(
Õ
 =
NULL
) {

123 
d⁄e
: i‡(
difÂ
 !
NULL
)

124 *
difÂ
 = 0;

129 
li°£t
 = 
	`O_ISSET
(
•
, 
O_LIST
);

130 
À·right
 = 
	`O_ISSET
(
•
, 
O_LEFTRIGHT
);

136 
p
 = 
Õ
;

137 
curoff
 = 
s˙o
 = 0;

140 i‡(
	`O_ISSET
(
•
, 
O_NUMBER
))

141 
s˙o
 +
O_NUMBER_LENGTH
;

144 
	#CHLEN
(
vÆ
Ë(
ch
 = *(
u_ch¨
 *)
p
++) == '\t' && \

145 !
li°£t
 ? 
	`TAB_OFF
(
vÆ
Ë: 
	`KEY_LEN
(
•
, 
ch
);

	)

154 
	#TAB_RESET
 { \

155 
curoff
 +
chÀn
; \

156 i‡(!
À·right
 && 
curoff
 >
•
->
cﬁs
) \

157 i‡(
ch
 == '\t') { \

158 
curoff
 = 0; \

159 
s˙o
 -s˙ÿ% 
•
->
cﬁs
; \

161 
curoff
 -
•
->
cﬁs
; \

162 }

	)

163 i‡(
˙›
 =
NULL
)

164 
Àn
--) {

165 
chÀn
 = 
	`CHLEN
(
curoff
);

166 
œ°
 = 
s˙o
;

167 
s˙o
 +
chÀn
;

168 
TAB_RESET
;

171 
˙o
 = *
˙›
;; --cno) {

172 
chÀn
 = 
	`CHLEN
(
curoff
);

173 
œ°
 = 
s˙o
;

174 
s˙o
 +
chÀn
;

175 
TAB_RESET
;

176 i‡(
˙o
 == 0)

181 i‡(
li°£t
 && 
˙›
 =
NULL
)

182 
s˙o
 +
	`KEY_LEN
(
•
, '$');

189 i‡(
difÂ
 !
NULL
)

190 *
difÂ
 = 
s˙o
 - 
œ°
;

191  (
s˙o
);

192 
	}
}

202 
size_t


203 
	$vs_rcm
(
•
, 
 o
, 
i¶a°
)

204 
SCR
 *
•
;

205 
ª˙o_t
 
 o
;

206 
i¶a°
;

208 
size_t
 
Àn
;

211 i‡(
i¶a°
) {

212 i‡(
	`db_gë
(
•
, 
 o
, 0, 
NULL
, &
Àn
) ||Üen == 0)

214  (
Àn
 - 1);

218 i‡(
•
->
rcm
 == 0)

221  (
	`vs_cﬁpos
(
•
, 
 o
, sp->
rcm
));

222 
	}
}

231 
size_t


232 
	$vs_cﬁpos
(
•
, 
 o
, 
˙o
)

233 
SCR
 *
•
;

234 
ª˙o_t
 
 o
;

235 
size_t
 
˙o
;

237 
size_t
 
chÀn
, 
curoff
, 
Àn
, 
Œí
, 
off
, 
s˙o
;

238 
ch
, 
À·right
, 
li°£t
;

239 *
Õ
, *
p
;

242 ()
	`db_gë
(
•
, 
 o
, 0, &
Õ
, &
Œí
);

245 i‡(
Õ
 =
NULL
 || 
Œí
 == 0)

249 
li°£t
 = 
	`O_ISSET
(
•
, 
O_LIST
);

250 
À·right
 = 
	`O_ISSET
(
•
, 
O_LEFTRIGHT
);

253 
off
 = 
˙o
 / 
•
->
cﬁs
;

254 
˙o
 %
•
->
cﬁs
;

255 
s˙o
 = 0, 
p
 = 
Õ
, 
Àn
 = 
Œí
; 
off
--;) {

256 ; 
Àn
 && 
s˙o
 < 
•
->
cﬁs
; --len)

257 
s˙o
 +
	`CHLEN
(scno);

263 i‡(
Àn
 == 0)

264  (
Œí
 - 1);

272 i‡(
À·right
 && 
ch
 == '\t')

273 
s˙o
 = 0;

275 
s˙o
 -
•
->
cﬁs
;

279 
curoff
 = 
s˙o
; 
Àn
--;) {

280 
chÀn
 = 
	`CHLEN
(
curoff
);

294 i‡((
s˙o
 +
chÀn
Ë>
˙o
) {

295 
off
 = 
p
 - 
Õ
;

296  (
s˙o
 =
˙o
 ?

297 (
off
 < 
Œí
 - 1 ? off :Ülen - 1) : off - 1);

300 
TAB_RESET
;

304  (
Œí
 - 1);

305 
	}
}

	@vi/vs_smap.c

10 
	~"c⁄fig.h
"

12 #i‚de‡
löt


13 c⁄° 
	gsccsid
[] = "@(#)vs_smap.c 10.25 (Berkeley) 7/12/96";

16 
	~<sys/ty≥s.h
>

17 
	~<sys/queue.h
>

18 
	~<sys/time.h
>

20 
	~<bô°rög.h
>

21 
	~<limôs.h
>

22 
	~<°dio.h
>

23 
	~<°dlib.h
>

24 
	~<°rög.h
>

26 
	~"../comm⁄/comm⁄.h
"

27 
	~"vi.h
"

29 
vs_dñëñn
 
__P
((
SCR
 *, ));

30 
vs_ö£π 
 
__P
((
SCR
 *, ));

31 
vs_sm_dñëe
 
__P
((
SCR
 *, 
ª˙o_t
));

32 
vs_sm_down
 
__P
((
SCR
 *, 
MARK
 *, 
ª˙o_t
, 
s¸ﬁl_t
, 
SMAP
 *));

33 
vs_sm_îa£
 
__P
((
SCR
 *));

34 
vs_sm_ö£π
 
__P
((
SCR
 *, 
ª˙o_t
));

35 
vs_sm_ª£t
 
__P
((
SCR
 *, 
ª˙o_t
));

36 
vs_sm_up
 
__P
((
SCR
 *, 
MARK
 *, 
ª˙o_t
, 
s¸ﬁl_t
, 
SMAP
 *));

45 
	$vs_ch™ge
(
•
, 
 o
, 
›
)

46 
SCR
 *
•
;

47 
ª˙o_t
 
 o
;

48 
 ›_t
 
›
;

50 
VI_PRIVATE
 *
vù
;

51 
SMAP
 *
p
;

52 
size_t
 
˙t
, 
ﬁdy
, 
ﬁdx
;

54 
vù
 = 
	`VIP
(
•
);

67 i‡((
›
 =
LINE_APPEND
 && 
 o
 =0 || o∞=
LINE_INSERT
 &&Üno == 1) &&

68 !
	`db_exi°
(
•
, 2)) {

69 
 o
 = 1;

70 
›
 = 
LINE_RESET
;

74 i‡(
›
 =
LINE_APPEND
) {

75 ++
 o
;

76 
›
 = 
LINE_INSERT
;

80 i‡(
 o
 > 
TMAP
->lno)

88 i‡(
 o
 < 
HMAP
->lno) {

89 
›
) {

90 
LINE_APPEND
:

91 
	`ab‹t
();

93 
LINE_DELETE
:

94 
p
 = 
HMAP
, 
˙t
 = 
•
->
t_rows
; cnt--; ++p)

95 --
p
->
 o
;

96 i‡(
•
->
 o
 >=Üno)

97 --
•
->
 o
;

98 
	`F_SET
(
vù
, 
VIP_N_RENUMBER
);

100 
LINE_INSERT
:

101 
p
 = 
HMAP
, 
˙t
 = 
•
->
t_rows
; cnt--; ++p)

102 ++
p
->
 o
;

103 i‡(
•
->
 o
 >=Üno)

104 ++
•
->
 o
;

105 
	`F_SET
(
vù
, 
VIP_N_RENUMBER
);

107 
LINE_RESET
:

113 
	`F_SET
(
vù
, 
VIP_N_REFRESH
);

119 
	`VI_SCR_CFLUSH
(
vù
);

120 i‡(
•
->
 o
 ==Üno)

121 
	`F_SET
(
vù
, 
VIP_CUR_INVALID
);

128 i‡(!
	`F_ISSET
(
•
, 
SC_TINPUT_INFO
) &&

129 (
	`F_ISSET
(
•
, 
SC_SCR_EXWROTE
Ë|| 
	`VIP
(•)->
tŸÆcou¡
 > 1)) {

130 
	`F_SET
(
vù
, 
VIP_N_EX_REDRAW
);

135 ()
•
->
gp
->
	`s¸_curs‹
(•, &
ﬁdy
, &
ﬁdx
);

137 
›
) {

138 
LINE_DELETE
:

139 i‡(
	`vs_sm_dñëe
(
•
, 
 o
))

141 
	`F_SET
(
vù
, 
VIP_N_RENUMBER
);

143 
LINE_INSERT
:

144 i‡(
	`vs_sm_ö£π
(
•
, 
 o
))

146 
	`F_SET
(
vù
, 
VIP_N_RENUMBER
);

148 
LINE_RESET
:

149 i‡(
	`vs_sm_ª£t
(
•
, 
 o
))

153 
	`ab‹t
();

156 ()
•
->
gp
->
	`s¸_move
(•, 
ﬁdy
, 
ﬁdx
);

158 
	}
}

175 
	$vs_sm_fûl
(
•
, 
 o
, 
pos
)

176 
SCR
 *
•
;

177 
ª˙o_t
 
 o
;

178 
pos_t
 
pos
;

180 
SMAP
 *
p
, 
tmp
;

181 
size_t
 
˙t
;

184 
p
 = 
HMAP
, 
˙t
 = 
•
->
t_rows
; cnt--; ++p)

185 
	`SMAP_FLUSH
(
p
);

195 
	`F_SET
(
•
, 
SC_SCR_REDRAW
);

197 
pos
) {

198 
P_FILL
:

199 
tmp
.
 o
 = 1;

200 
tmp
.
coff
 = 0;

201 
tmp
.
soff
 = 1;

204 i‡(
	`vs_sm_∆öes
(
•
,

205 &
tmp
, 
 o
, 
	`HALFTEXT
(
•
)) <= HALFTEXT(sp)) {

206 
 o
 = 1;

207 
t›
;

211 i‡(
	`db_œ°
(
•
, &
tmp
.
 o
))

213 
tmp
.
coff
 = 0;

214 
tmp
.
soff
 = 
	`vs_s¸ìns
(
•
,Åmp.
 o
, 
NULL
);

215 i‡(
	`vs_sm_∆öes
(
•
,

216 &
tmp
, 
 o
, 
	`HALFTEXT
(
•
)) <= HALFTEXT(sp)) {

217 
TMAP
->
 o
 = 
tmp
.lno;

218 
TMAP
->
coff
 = 
tmp
.coff;

219 
TMAP
->
soff
 = 
tmp
.soff;

220 
bŸtom
;

222 
middÀ
;

223 
P_TOP
:

224 i‡(
 o
 !
OOBLNO
) {

225 
t›
: 
HMAP
->
 o
 =Üno;

226 
HMAP
->
coff
 = 0;

227 
HMAP
->
soff
 = 1;

230 
p
 = 
HMAP
, 
˙t
 = 
•
->
t_rows
; --cnt; ++p)

231 i‡(
	`vs_sm_√xt
(
•
, 
p
,Ö + 1))

232 
îr
;

234 
P_MIDDLE
:

236 
middÀ
: 
p
 = 
HMAP
 + 
•
->
t_rows
 / 2;

237 
p
->
 o
 =Üno;

238 
p
->
coff
 = 0;

239 
p
->
soff
 = 1;

240 ; 
p
 > 
HMAP
; --p)

241 i‡(
	`vs_sm_¥ev
(
•
, 
p
,Ö - 1)) {

242 
 o
 = 1;

243 
t›
;

247 
p
 = 
HMAP
 + 
•
->
t_rows
 / 2;

248 ; 
p
 < 
TMAP
; ++p)

249 i‡(
	`vs_sm_√xt
(
•
, 
p
,Ö + 1))

250 
îr
;

252 
P_BOTTOM
:

253 i‡(
 o
 !
OOBLNO
) {

254 
TMAP
->
 o
 =Üno;

255 
TMAP
->
coff
 = 0;

256 
TMAP
->
soff
 = 
	`vs_s¸ìns
(
•
, 
 o
, 
NULL
);

259 
bŸtom
: 
p
 = 
TMAP
;Ö > 
HMAP
; --p)

260 i‡(
	`vs_sm_¥ev
(
•
, 
p
,Ö - 1)) {

261 
 o
 = 1;

262 
t›
;

266 
	`ab‹t
();

274 
îr
: 
HMAP
->
 o
 = 1;

275 
HMAP
->
coff
 = 0;

276 
HMAP
->
soff
 = 1;

277 
p
 = 
HMAP
;Ö < 
TMAP
; ++p)

278 i‡(
	`vs_sm_√xt
(
•
, 
p
,Ö + 1))

281 
	}
}

290 
	#HANDLE_WEIRDNESS
(
˙t
) { \

291 i‡(
˙t
 >
•
->
t_rows
) { \

292 
	`F_SET
(
•
, 
SC_SCR_REFORMAT
); \

295 }

	)

302 
	$vs_sm_dñëe
(
•
, 
 o
)

303 
SCR
 *
•
;

304 
ª˙o_t
 
 o
;

306 
SMAP
 *
p
, *
t
;

307 
size_t
 
˙t_‹ig
;

313 
p
 = 
HMAP
;Ö->
 o
 !=Üno; ++p);

314 i‡(
	`O_ISSET
(
•
, 
O_LEFTRIGHT
))

315 
˙t_‹ig
 = 1;

317 
˙t_‹ig
 = 1, 
t
 = 
p
 + 1;

318 
t
 <
TMAP
 &&Å->
 o
 = o; ++
˙t_‹ig
, ++t);

320 
	`HANDLE_WEIRDNESS
(
˙t_‹ig
);

323 ()
•
->
gp
->
	`s¸_move
(•, 
p
 - 
HMAP
, 0);

324 i‡(
	`vs_dñëñn
(
•
, 
˙t_‹ig
))

328 
	`memmove
(
p
,Ö + 
˙t_‹ig
, (((
TMAP
 -ÖË- c¡_‹igË+ 1Ë* (
SMAP
));

331 
t
 = 
TMAP
 - 
˙t_‹ig
; 
p
 <=Å; ++p)

332 --
p
->
 o
;

335 
p
 = 
TMAP
 - 
˙t_‹ig
;;) {

336 i‡(
p
 < 
TMAP
 && 
	`vs_sm_√xt
(
•
,Ö,Ö + 1))

339 i‡(
	`vs_löe
(
•
, ++
p
, 
NULL
, NULL))

341 i‡(
p
 =
TMAP
)

345 
	}
}

352 
	$vs_sm_ö£π
(
•
, 
 o
)

353 
SCR
 *
•
;

354 
ª˙o_t
 
 o
;

356 
SMAP
 *
p
, *
t
;

357 
size_t
 
˙t_‹ig
, 
˙t
, 
coff
;

360 
coff
 = 
HMAP
->coff;

366 
p
 = 
HMAP
;Ö->
 o
 !=Üno; ++p);

368 
˙t_‹ig
 = 
	`vs_s¸ìns
(
•
, 
 o
, 
NULL
);

369 
	`HANDLE_WEIRDNESS
(
˙t_‹ig
);

375 
˙t
 = (
TMAP
 - 
p
) + 1;

376 i‡(
˙t_‹ig
 > 
˙t
)

377 
˙t_‹ig
 = 
˙t
;

380 ()
•
->
gp
->
	`s¸_move
(•, 
p
 - 
HMAP
, 0);

381 i‡(
	`vs_ö£π 
(
•
, 
˙t_‹ig
))

385 
	`memmove
(
p
 + 
˙t_‹ig
,Ö, (((
TMAP
 -ÖË- c¡_‹igË+ 1Ë* (
SMAP
));

388 
t
 = 
p
 + 
˙t_‹ig
;Å <
TMAP
; ++t)

389 ++
t
->
 o
;

392 
˙t
 = 1, 
t
 = 
p
; c¡ <
˙t_‹ig
; ++t, ++cnt) {

393 
t
->
 o
 =Üno;

394 
t
->
coff
 = coff;

395 
t
->
soff
 = 
˙t
;

396 
	`SMAP_FLUSH
(
t
);

397 i‡(
	`vs_löe
(
•
, 
t
, 
NULL
, NULL))

401 
	}
}

408 
	$vs_sm_ª£t
(
•
, 
 o
)

409 
SCR
 *
•
;

410 
ª˙o_t
 
 o
;

412 
SMAP
 *
p
, *
t
;

413 
size_t
 
˙t_‹ig
, 
˙t_√w
, 
˙t
, 
diff
;

420 
p
 = 
HMAP
;Ö->
 o
 !=Üno; ++p);

421 i‡(
	`O_ISSET
(
•
, 
O_LEFTRIGHT
)) {

422 
t
 = 
p
;

423 
˙t_‹ig
 = 
˙t_√w
 = 1;

425 
˙t_‹ig
 = 0,

426 
t
 = 
p
;Å <
TMAP
 &&Å->
 o
 = o; ++
˙t_‹ig
, ++t);

427 
˙t_√w
 = 
	`vs_s¸ìns
(
•
, 
 o
, 
NULL
);

430 
	`HANDLE_WEIRDNESS
(
˙t_‹ig
);

432 i‡(
˙t_‹ig
 =
˙t_√w
) {

434 
	`SMAP_FLUSH
(
p
);

435 i‡(
	`vs_löe
(
•
, 
p
, 
NULL
, NULL))

437 } ++
p
 < 
t
);

441 i‡(
˙t_‹ig
 < 
˙t_√w
) {

443 
diff
 = 
˙t_√w
 - 
˙t_‹ig
;

449 
˙t
 = (
TMAP
 - 
p
) + 1;

450 i‡(
diff
 > 
˙t
)

451 
diff
 = 
˙t
;

454 i‡(
˙t
 > 1) {

455 ()
•
->
gp
->
	`s¸_move
(•, 
p
 - 
HMAP
, 0);

456 i‡(
	`vs_ö£π 
(
•
, 
diff
))

460 
	`memmove
(
p
 + 
diff
,Ö,

461 (((
TMAP
 - 
p
Ë- 
diff
Ë+ 1Ë* (
SMAP
));

465 
˙t
 = 1, 
t
 = 
p
; 
˙t_√w
-- &&Å <
TMAP
; ++t, ++cnt) {

466 
t
->
 o
 =Üno;

467 
t
->
soff
 = 
˙t
;

468 
	`SMAP_FLUSH
(
t
);

469 i‡(
	`vs_löe
(
•
, 
t
, 
NULL
, NULL))

474 
diff
 = 
˙t_‹ig
 - 
˙t_√w
;

477 ()
•
->
gp
->
	`s¸_move
(•, 
p
 - 
HMAP
, 0);

478 i‡(
	`vs_dñëñn
(
•
, 
diff
))

482 
	`memmove
(
p
,Ö + 
diff
, (((
TMAP
 -ÖË- diffË+ 1Ë* (
SMAP
));

485 
˙t
 = 1, 
t
 = 
p
; 
˙t_√w
--; ++t, ++cnt) {

486 
t
->
 o
 =Üno;

487 
t
->
soff
 = 
˙t
;

488 
	`SMAP_FLUSH
(
t
);

489 i‡(
	`vs_löe
(
•
, 
t
, 
NULL
, NULL))

494 
t
 = 
TMAP
 - 
diff
;;) {

495 i‡(
t
 < 
TMAP
 && 
	`vs_sm_√xt
(
•
,Å,Å + 1))

498 i‡(
	`vs_löe
(
•
, ++
t
, 
NULL
, NULL))

500 i‡(
t
 =
TMAP
)

505 
	}
}

515 
	$vs_sm_s¸ﬁl
(
•
, 
Ω
, 
cou¡
, 
scmd
)

516 
SCR
 *
•
;

517 
MARK
 *
Ω
;

518 
ª˙o_t
 
cou¡
;

519 
s¸ﬁl_t
 
scmd
;

521 
SMAP
 *
smp
;

528 
	`F_SET
(
	`VIP
(
•
), 
VIP_CUR_INVALID
);

531 i‡(
	`vs_sm_curs‹
(
•
, &
smp
))

534 
scmd
) {

535 
CNTRL_B
:

536 
CNTRL_U
:

537 
CNTRL_Y
:

538 
Z_CARAT
:

539 i‡(
	`vs_sm_down
(
•
, 
Ω
, 
cou¡
, 
scmd
, 
smp
))

542 
CNTRL_D
:

543 
CNTRL_E
:

544 
CNTRL_F
:

545 
Z_PLUS
:

546 i‡(
	`vs_sm_up
(
•
, 
Ω
, 
cou¡
, 
scmd
, 
smp
))

550 
	`ab‹t
();

564 i‡(
scmd
 !
CNTRL_E
 && scmd !
CNTRL_Y
 &&

565 
Ω
->
˙o
 =0 && 
	`n⁄bœnk
(
•
,Ñp->
 o
, &rp->cno))

569 
	}
}

576 
	$vs_sm_up
(
•
, 
Ω
, 
cou¡
, 
scmd
, 
smp
)

577 
SCR
 *
•
;

578 
MARK
 *
Ω
;

579 
s¸ﬁl_t
 
scmd
;

580 
ª˙o_t
 
cou¡
;

581 
SMAP
 *
smp
;

583 
curs‹_£t
, 
ech™ged
, 
z£t
;

584 
SMAP
 *
ssmp
, 
s1
, 
s2
;

597 i‡(
	`vs_sm_√xt
(
•
, 
TMAP
, &
s1
))

599 i‡(
s1
.
 o
 > 
TMAP
-> ÿ&& !
	`db_exi°
(
•
, s1.lno)) {

600 i‡(
scmd
 =
CNTRL_E
 || scmd =
Z_PLUS
 || 
smp
 =
TMAP
) {

601 
	`v_eof
(
•
, 
NULL
);

604 i‡(
	`vs_sm_√xt
(
•
, 
smp
, &
s1
))

606 i‡(
s1
.
 o
 > 
smp
-> ÿ&& !
	`db_exi°
(
•
, s1.lno)) {

607 
	`v_eof
(
•
, 
NULL
);

623 
curs‹_£t
 = 0;

624 i‡(
	`IS_SMALL
(
•
)) {

625 i‡(
cou¡
 >
•
->
t_maxrows
 || 
scmd
 =
CNTRL_F
) {

626 
s1
 = 
TMAP
[0];

627 i‡(
	`vs_sm_îa£
(
•
))

629 ; 
cou¡
--; 
s1
 = 
s2
) {

630 i‡(
	`vs_sm_√xt
(
•
, &
s1
, &
s2
))

632 i‡(
s2
.
 o
 !
s1
. ÿ&& !
	`db_exi°
(
•
, s2.lno))

635 
TMAP
[0] = 
s2
;

636 i‡(
	`vs_sm_fûl
(
•
, 
OOBLNO
, 
P_BOTTOM
))

638  (
	`vs_sm_posôi⁄
(
•
, 
Ω
, 0, 
P_TOP
));

640 
curs‹_£t
 = 
scmd
 =
CNTRL_E
 || 
	`vs_sm_curs‹
(
•
, &
ssmp
);

641 ; 
cou¡
 &&

642 
•
->
t_rows
 !•->
t_maxrows
; --
cou¡
, ++sp->t_rows) {

643 i‡(
	`vs_sm_√xt
(
•
, 
TMAP
, &
s1
))

645 i‡(
TMAP
->
 o
 !
s1
. ÿ&& !
	`db_exi°
(
•
, s1.lno))

647 *++
TMAP
 = 
s1
;

649 i‡(
	`vs_löe
(
•
, 
TMAP
, 
NULL
, NULL))

652 i‡(!
curs‹_£t
)

653 ++
ssmp
;

655 i‡(!
curs‹_£t
) {

656 
Ω
->
 o
 = 
ssmp
->lno;

657 
Ω
->
˙o
 = 
ssmp
->
c_sboff
;

659 i‡(
cou¡
 == 0)

663 
ech™ged
 = 
z£t
 = 0; 
cou¡
; --count) {

665 i‡(
	`vs_sm_√xt
(
•
, 
TMAP
, &
s1
))

669 i‡(
TMAP
->
 o
 !
s1
. ÿ&& !
	`db_exi°
(
•
, s1.lno))

673 i‡(
	`vs_sm_1up
(
•
))

675 
scmd
) {

676 
CNTRL_E
:

677 i‡(
smp
 > 
HMAP
)

678 --
smp
;

680 
ech™ged
 = 1;

682 
Z_PLUS
:

683 i‡(
z£t
) {

684 i‡(
smp
 > 
HMAP
)

685 --
smp
;

687 
smp
 = 
TMAP
;

688 
z£t
 = 1;

696 i‡(
curs‹_£t
)

699 
scmd
) {

700 
CNTRL_E
:

707 i‡(
ech™ged
) {

708 
Ω
->
 o
 = 
smp
->lno;

709 
Ω
->
˙o
 = 
	`vs_cﬁpos
(
•
, 
smp
->
 o
,

710 (
	`O_ISSET
(
•
, 
O_LEFTRIGHT
) ?

711 
smp
->
coff
 : (smp->
soff
 - 1Ë* 
•
->
cﬁs
) +

712 
•
->
rcm
 % sp->
cﬁs
);

715 
CNTRL_F
:

720 i‡(!
cou¡
) {

721 
smp
 = 
HMAP
;

725 
CNTRL_D
:

732 ; 
cou¡
; --cou¡, ++
smp
)

733 i‡(
smp
 =
TMAP
 || !
	`db_exi°
(
•
, smp[1].
 o
))

736 
Z_PLUS
:

740 
	`ab‹t
();

743 i‡(!
	`SMAP_CACHE
(
smp
Ë&& 
	`vs_löe
(
•
, smp, 
NULL
, NULL))

745 
Ω
->
 o
 = 
smp
->lno;

746 
Ω
->
˙o
 = 
smp
->
c_sboff
;

748 
	}
}

757 
	$vs_sm_1up
(
•
)

758 
SCR
 *
•
;

764 ()
•
->
gp
->
	`s¸_move
(sp, 0, 0);

765 i‡(
	`vs_dñëñn
(
•
, 1))

769 i‡(
	`IS_ONELINE
(
•
)) {

770 i‡(
	`vs_sm_√xt
(
•
, 
TMAP
, TMAP))

773 
	`memmove
(
HMAP
, HMAP + 1, (
•
->
rows
 - 1Ë* (
SMAP
));

774 i‡(
	`vs_sm_√xt
(
•
, 
TMAP
 - 1, TMAP))

778  (
	`vs_löe
(
•
, 
TMAP
, 
NULL
, NULL));

779 
	}
}

787 
	$vs_dñëñn
(
•
, 
˙t
)

788 
SCR
 *
•
;

789 
˙t
;

791 
GS
 *
gp
;

792 
size_t
 
ﬁdy
, 
ﬁdx
;

794 
gp
 = 
•
->gp;

795 i‡(
	`IS_ONELINE
(
•
))

796 ()
gp
->
	`s¸_˛π€ﬁ
(
•
);

798 ()
gp
->
	`s¸_curs‹
(
•
, &
ﬁdy
, &
ﬁdx
);

799 
˙t
--) {

800 ()
gp
->
	`s¸_dñëñn
(
•
);

801 ()
gp
->
	`s¸_move
(
•
, 
	`LASTLINE
(sp), 0);

802 ()
gp
->
	`s¸_ö£π 
(
•
);

803 ()
gp
->
	`s¸_move
(
•
, 
ﬁdy
, 
ﬁdx
);

807 
	}
}

814 
	$vs_sm_down
(
•
, 
Ω
, 
cou¡
, 
scmd
, 
smp
)

815 
SCR
 *
•
;

816 
MARK
 *
Ω
;

817 
ª˙o_t
 
cou¡
;

818 
SMAP
 *
smp
;

819 
s¸ﬁl_t
 
scmd
;

821 
SMAP
 *
ssmp
, 
s1
, 
s2
;

822 
curs‹_£t
, 
ych™ged
, 
z£t
;

825 i‡(
HMAP
->
 o
 == 1 &&

826 (
	`O_ISSET
(
•
, 
O_LEFTRIGHT
Ë|| 
HMAP
->
soff
 == 1) &&

827 (
scmd
 =
CNTRL_Y
 || scmd =
Z_CARAT
 || 
smp
 =
HMAP
)) {

828 
	`v_sof
(
•
, 
NULL
);

843 
curs‹_£t
 = 
scmd
 =
CNTRL_Y
;

844 i‡(
	`IS_SMALL
(
•
)) {

845 i‡(
cou¡
 >
•
->
t_maxrows
 || 
scmd
 =
CNTRL_B
) {

846 
s1
 = 
HMAP
[0];

847 i‡(
	`vs_sm_îa£
(
•
))

849 ; 
cou¡
--; 
s1
 = 
s2
) {

850 i‡(
	`vs_sm_¥ev
(
•
, &
s1
, &
s2
))

852 i‡(
s2
.
 o
 == 1 &&

853 (
	`O_ISSET
(
•
, 
O_LEFTRIGHT
Ë|| 
s2
.
soff
 == 1))

856 
HMAP
[0] = 
s2
;

857 i‡(
	`vs_sm_fûl
(
•
, 
OOBLNO
, 
P_TOP
))

859  (
	`vs_sm_posôi⁄
(
•
, 
Ω
, 0, 
P_BOTTOM
));

861 
curs‹_£t
 = 
scmd
 =
CNTRL_Y
 || 
	`vs_sm_curs‹
(
•
, &
ssmp
);

862 ; 
cou¡
 &&

863 
•
->
t_rows
 !•->
t_maxrows
; --
cou¡
, ++sp->t_rows) {

864 i‡(
HMAP
->
 o
 == 1 &&

865 (
	`O_ISSET
(
•
, 
O_LEFTRIGHT
Ë|| 
HMAP
->
soff
 == 1))

867 ++
TMAP
;

868 i‡(
	`vs_sm_1down
(
•
))

871 i‡(!
curs‹_£t
) {

872 
Ω
->
 o
 = 
ssmp
->lno;

873 
Ω
->
˙o
 = 
ssmp
->
c_sboff
;

875 i‡(
cou¡
 == 0)

879 
ych™ged
 = 
z£t
 = 0; 
cou¡
; --count) {

881 i‡(
HMAP
->
 o
 == 1 &&

882 (
	`O_ISSET
(
•
, 
O_LEFTRIGHT
Ë|| 
HMAP
->
soff
 == 1))

886 i‡(
	`vs_sm_1down
(
•
))

888 
scmd
) {

889 
CNTRL_Y
:

890 i‡(
smp
 < 
TMAP
)

891 ++
smp
;

893 
ych™ged
 = 1;

895 
Z_CARAT
:

896 i‡(
z£t
) {

897 i‡(
smp
 < 
TMAP
)

898 ++
smp
;

900 
smp
 = 
HMAP
;

901 
z£t
 = 1;

909 i‡(
scmd
 !
CNTRL_Y
 && 
curs‹_£t
)

912 
scmd
) {

913 
CNTRL_B
:

919 i‡(!
cou¡
) {

920 
smp
 = 
TMAP
; sm∞> 
HMAP
; --smp)

921 i‡(
	`db_exi°
(
•
, 
smp
->
 o
))

926 
CNTRL_U
:

931 i‡(
cou¡
 < 
smp
 - 
HMAP
)

932 
smp
 -
cou¡
;

934 
smp
 = 
HMAP
;

936 
CNTRL_Y
:

943 i‡(
ych™ged
) {

944 
Ω
->
 o
 = 
smp
->lno;

945 
Ω
->
˙o
 = 
	`vs_cﬁpos
(
•
, 
smp
->
 o
,

946 (
	`O_ISSET
(
•
, 
O_LEFTRIGHT
) ?

947 
smp
->
coff
 : (smp->
soff
 - 1Ë* 
•
->
cﬁs
) +

948 
•
->
rcm
 % sp->
cﬁs
);

951 
Z_CARAT
:

955 
	`ab‹t
();

958 i‡(!
	`SMAP_CACHE
(
smp
Ë&& 
	`vs_löe
(
•
, smp, 
NULL
, NULL))

960 
Ω
->
 o
 = 
smp
->lno;

961 
Ω
->
˙o
 = 
smp
->
c_sboff
;

963 
	}
}

970 
	$vs_sm_îa£
(
•
)

971 
SCR
 *
•
;

973 
GS
 *
gp
;

975 
gp
 = 
•
->gp;

976 ()
gp
->
	`s¸_move
(
•
, 
	`LASTLINE
(sp), 0);

977 ()
gp
->
	`s¸_˛π€ﬁ
(
•
);

978 ; 
•
->
t_rows
 > sp->
t_mörows
; --•->t_rows, --
TMAP
) {

979 ()
gp
->
	`s¸_move
(
•
, 
TMAP
 - 
HMAP
, 0);

980 ()
gp
->
	`s¸_˛π€ﬁ
(
•
);

983 
	}
}

992 
	$vs_sm_1down
(
•
)

993 
SCR
 *
•
;

999 ()
•
->
gp
->
	`s¸_move
(sp, 0, 0);

1000 i‡(
	`vs_ö£π 
(
•
, 1))

1004 i‡(
	`IS_ONELINE
(
•
)) {

1005 i‡(
	`vs_sm_¥ev
(
•
, 
HMAP
, HMAP))

1008 
	`memmove
(
HMAP
 + 1, HMAP, (
•
->
rows
 - 1Ë* (
SMAP
));

1009 i‡(
	`vs_sm_¥ev
(
•
, 
HMAP
 + 1, HMAP))

1013  (
	`vs_löe
(
•
, 
HMAP
, 
NULL
, NULL));

1014 
	}
}

1022 
	$vs_ö£π 
(
•
, 
˙t
)

1023 
SCR
 *
•
;

1024 
˙t
;

1026 
GS
 *
gp
;

1027 
size_t
 
ﬁdy
, 
ﬁdx
;

1029 
gp
 = 
•
->gp;

1030 i‡(
	`IS_ONELINE
(
•
)) {

1031 ()
gp
->
	`s¸_move
(
•
, 
	`LASTLINE
(sp), 0);

1032 ()
gp
->
	`s¸_˛π€ﬁ
(
•
);

1034 ()
gp
->
	`s¸_curs‹
(
•
, &
ﬁdy
, &
ﬁdx
);

1035 
˙t
--) {

1036 ()
gp
->
	`s¸_move
(
•
, 
	`LASTLINE
(sp) - 1, 0);

1037 ()
gp
->
	`s¸_dñëñn
(
•
);

1038 ()
gp
->
	`s¸_move
(
•
, 
ﬁdy
, 
ﬁdx
);

1039 ()
gp
->
	`s¸_ö£π 
(
•
);

1043 
	}
}

1052 
	$vs_sm_√xt
(
•
, 
p
, 
t
)

1053 
SCR
 *
•
;

1054 
SMAP
 *
p
, *
t
;

1056 
size_t
 
l˙t
;

1058 
	`SMAP_FLUSH
(
t
);

1059 i‡(
	`O_ISSET
(
•
, 
O_LEFTRIGHT
)) {

1060 
t
->
 o
 = 
p
->lno + 1;

1061 
t
->
coff
 = 
p
->coff;

1063 
l˙t
 = 
	`vs_s¸ìns
(
•
, 
p
->
 o
, 
NULL
);

1064 i‡(
l˙t
 =
p
->
soff
) {

1065 
t
->
 o
 = 
p
->lno + 1;

1066 
t
->
soff
 = 1;

1068 
t
->
 o
 = 
p
->lno;

1069 
t
->
soff
 = 
p
->soff + 1;

1073 
	}
}

1082 
	$vs_sm_¥ev
(
•
, 
p
, 
t
)

1083 
SCR
 *
•
;

1084 
SMAP
 *
p
, *
t
;

1086 
	`SMAP_FLUSH
(
t
);

1087 i‡(
	`O_ISSET
(
•
, 
O_LEFTRIGHT
)) {

1088 
t
->
 o
 = 
p
->lno - 1;

1089 
t
->
coff
 = 
p
->coff;

1091 i‡(
p
->
soff
 != 1) {

1092 
t
->
 o
 = 
p
->lno;

1093 
t
->
soff
 = 
p
->soff - 1;

1095 
t
->
 o
 = 
p
->lno - 1;

1096 
t
->
soff
 = 
	`vs_s¸ìns
(
•
,Å->
 o
, 
NULL
);

1099  (
t
->
 o
 == 0);

1100 
	}
}

1109 
	$vs_sm_curs‹
(
•
, 
smµ
)

1110 
SCR
 *
•
;

1111 
SMAP
 **
smµ
;

1113 
SMAP
 *
p
;

1116 i‡(
•
->
 o
 < 
HMAP
-> ÿ|| sp-> ÿ> 
TMAP
->lno)

1120 
p
 = 
HMAP
;Ö->
 o
 !
•
->lno; ++p);

1123 ; 
p
 <
TMAP
; ++p) {

1125 i‡(
p
 !
TMAP
 && (∞+ 1)->
 o
 !=Ö->lno) {

1126 *
smµ
 = 
p
;

1129 i‡(!
	`SMAP_CACHE
(
p
Ë&& 
	`vs_löe
(
•
,Ö, 
NULL
, NULL))

1131 i‡(
p
->
c_eboff
 >
•
->
˙o
) {

1132 *
smµ
 = 
p
;

1139 
	}
}

1150 
	$vs_sm_posôi⁄
(
•
, 
Ω
, 
˙t
, 
pos
)

1151 
SCR
 *
•
;

1152 
MARK
 *
Ω
;

1153 
u_l⁄g
 
˙t
;

1154 
pos_t
 
pos
;

1156 
SMAP
 *
smp
;

1157 
ª˙o_t
 
œ°
;

1159 
pos
) {

1160 
P_TOP
:

1167 i‡(
˙t
 > 
TMAP
 - 
HMAP
)

1168 
sof
;

1169 
smp
 = 
HMAP
 + 
˙t
;

1170 i‡(
˙t
 && !
	`db_exi°
(
•
, 
smp
->
 o
)) {

1171 
sof
: 
	`msgq
(
•
, 
M_BERR
, "220|MovementÖastÅheÉnd-of-screen");

1175 
P_MIDDLE
:

1182 i‡(!
	`db_exi°
(
•
, 
TMAP
->
 o
)) {

1183 i‡(
	`db_œ°
(
•
, &
œ°
))

1185 
smp
 = 
TMAP
; smp->
 o
 > 
œ°
 && sm∞> 
HMAP
; --smp);

1186 i‡(
smp
 > 
HMAP
)

1187 
smp
 -(sm∞- 
HMAP
) / 2;

1189 
smp
 = (
HMAP
 + (
TMAP
 - HMAPË/ 2Ë+ 
˙t
;

1191 
P_BOTTOM
:

1198 i‡(
˙t
 > 
TMAP
 - 
HMAP
)

1199 
eof
;

1200 
smp
 = 
TMAP
 - 
˙t
;

1201 i‡(!
	`db_exi°
(
•
, 
smp
->
 o
)) {

1202 i‡(
	`db_œ°
(
•
, &
œ°
))

1204 ; 
smp
->
 o
 > 
œ°
 && sm∞> 
HMAP
; --smp);

1205 i‡(
˙t
 > 
smp
 - 
HMAP
) {

1206 
eof
: 
	`msgq
(
•
, 
M_BERR
,

1210 
smp
 -
˙t
;

1214 
	`ab‹t
();

1218 i‡(!
	`SMAP_CACHE
(
smp
Ë&& 
	`vs_löe
(
•
, smp, 
NULL
, NULL))

1220 
Ω
->
 o
 = 
smp
->lno;

1221 
Ω
->
˙o
 = 
smp
->
c_sboff
;

1224 
	}
}

1233 
ª˙o_t


1234 
	$vs_sm_∆öes
(
•
, 
‰om_•
, 
to_ o
, 
max
)

1235 
SCR
 *
•
;

1236 
SMAP
 *
‰om_•
;

1237 
ª˙o_t
 
to_ o
;

1238 
size_t
 
max
;

1240 
ª˙o_t
 
 o
, 
l˙t
;

1242 i‡(
	`O_ISSET
(
•
, 
O_LEFTRIGHT
))

1243  (
‰om_•
->
 o
 > 
to_ o
 ?

1244 
‰om_•
->
 o
 - 
to_ o
 :Åo_lno - from_sp->lno);

1246 i‡(
‰om_•
->
 o
 =
to_ o
)

1247  (
‰om_•
->
soff
 - 1);

1249 i‡(
‰om_•
->
 o
 > 
to_ o
) {

1250 
l˙t
 = 
‰om_•
->
soff
 - 1;

1251 
 o
 = 
‰om_•
-> o; -- ÿ>
to_ o
 && 
l˙t
 <
max
;)

1252 
l˙t
 +
	`vs_s¸ìns
(
•
, 
 o
, 
NULL
);

1254 
 o
 = 
‰om_•
->lno;

1255 
l˙t
 = (
	`vs_s¸ìns
(
•
, 
 o
, 
NULL
Ë- 
‰om_•
->
soff
) + 1;

1256 ; ++
 o
 < 
to_ o
 && 
l˙t
 <
max
;)

1257 
l˙t
 +
	`vs_s¸ìns
(
•
, 
 o
, 
NULL
);

1259  (
l˙t
);

1260 
	}
}

	@vi/vs_split.c

10 
	~"c⁄fig.h
"

12 #i‚de‡
löt


13 c⁄° 
	gsccsid
[] = "@(#)vs_split.c 10.31 (Berkeley) 10/13/96";

16 
	~<sys/ty≥s.h
>

17 
	~<sys/queue.h
>

18 
	~<sys/time.h
>

20 
	~<bô°rög.h
>

21 
	~<î∫o.h
>

22 
	~<limôs.h
>

23 
	~<°dio.h
>

24 
	~<°dlib.h
>

25 
	~<°rög.h
>

27 
	~"../comm⁄/comm⁄.h
"

28 
	~"vi.h
"

30 
SCR
 *
vs_gëbg
 
__P
((SCR *, *));

39 
	$vs_•lô
(
•
, 
√w
, 
c˛
)

40 
SCR
 *
•
, *
√w
;

41 
c˛
;

43 
GS
 *
gp
;

44 
SMAP
 *
smp
;

45 
size_t
 
hÆf
;

46 
issmÆls¸ìn
, 
•lôup
;

48 
gp
 = 
•
->gp;

52 i‡(
•
->
rows
 < 4) {

53 
	`msgq
(
•
, 
M_ERR
,

59 
	`vs_ªsﬁve
(
•
, 
NULL
, 1);

61 
hÆf
 = 
•
->
rows
 / 2;

62 i‡(
c˛
 && 
hÆf
 > 6)

63 
hÆf
 = 6;

66 
	`CALLOC
(
•
, 
	`_HMAP
(
√w
), 
SMAP
 *, 
	`SIZE_HMAP
(sp), (SMAP));

67 i‡(
	`_HMAP
(
√w
Ë=
NULL
)

69 
	`_HMAP
(
√w
)->
 o
 = 
•
->lno;

70 
	`_HMAP
(
√w
)->
coff
 = 0;

71 
	`_HMAP
(
√w
)->
soff
 = 1;

77 
issmÆls¸ìn
 = 
	`IS_SMALL
(
•
);

80 
√w
->
cﬁs
 = 
•
->cols;

92 
•lôup
 =

93 !
c˛
 && (
	`vs_sm_curs‹
(
•
, &
smp
Ë? 0 : (sm∞- 
HMAP
Ë+ 1Ë>
hÆf
;

94 i‡(
•lôup
) {

95 
√w
->
rows
 = 
•
->row†- 
hÆf
;

96 
√w
->
woff
 = 
•
->woff;

97 
•
->
rows
 = 
hÆf
;

98 
•
->
woff
 +
√w
->
rows
;

100 
	`CIRCLEQ_INSERT_BEFORE
(&
gp
->
dq
, 
•
, 
√w
, 
q
);

106 
	`memmove
(
	`_HMAP
(
•
), _HMAP(•Ë+ 
√w
->
rows
,

107 (
•
->
t_maxrows
 - 
√w
->
rows
Ë* (
SMAP
));

109 
√w
->
rows
 = 
hÆf
;

110 
•
->
rows
 -
hÆf
;

111 
√w
->
woff
 = 
•
->wof‡+ sp->
rows
;

113 
	`CIRCLEQ_INSERT_AFTER
(&
gp
->
dq
, 
•
, 
√w
, 
q
);

117 
•
->
t_maxrows
 = 
	`IS_ONELINE
(•Ë? 1 : sp->
rows
 - 1;

118 
√w
->
t_maxrows
 = 
	`IS_ONELINE
“ewË? 1 :Çew->
rows
 - 1;

127 i‡(
issmÆls¸ìn
) {

129 i‡(
•lôup
)

130 
•
->
t_rows
 -
√w
->
rows
;

133 i‡(
•
->
t_rows
 > sp->
t_maxrows
)

134 
•
->
t_rows
 = sp->
t_maxrows
;

135 i‡(
•
->
t_mörows
 > sp->
t_maxrows
)

136 
•
->
t_mörows
 = sp->
t_maxrows
;

139 
√w
->
t_mörows
 =Çew->
t_rows
 = 
	`O_VAL
(
•
, 
O_WINDOW
);

140 i‡(
√w
->
t_rows
 >Çew->
t_maxrows
)

141 
√w
->
t_rows
 =Çew->
t_maxrows
;

142 i‡(
√w
->
t_mörows
 >Çew->
t_maxrows
)

143 
√w
->
t_mörows
 =Çew->
t_maxrows
;

145 
•
->
t_mörows
 = sp->
t_rows
 = 
	`IS_ONELINE
(•Ë? 1 : sp->
rows
 - 1;

153 
√w
->
t_mörows
 =Çew->
t_rows
 = 
	`O_VAL
(
•
, 
O_WINDOW
);

154 i‡(
√w
->
t_rows
 >Çew->
rows
 - 1)

155 
√w
->
t_mörows
 =Çew->
t_rows
 =

156 
	`IS_ONELINE
(
√w
Ë? 1 :Çew->
rows
 - 1;

160 
	`_TMAP
(
•
Ë
	`IS_ONELINE
(sp) ?

161 
	`_HMAP
(
•
Ë: _HMAP(•Ë+ (•->
t_rows
 - 1);

162 
	`_TMAP
(
√w
Ë
	`IS_ONELINE
(new) ?

163 
	`_HMAP
(
√w
Ë: _HMAP“ewË+ (√w->
t_rows
 - 1);

166 i‡((
•
->
defs¸ﬁl
 = sp->
t_maxrows
 / 2) == 0)

167 
•
->
defs¸ﬁl
 = 1;

168 i‡((
√w
->
defs¸ﬁl
 =Çew->
t_maxrows
 / 2) == 0)

169 
√w
->
defs¸ﬁl
 = 1;

186 
	`F_SET
(
√w
,

187 
SC_SCR_REFORMAT
 | 
SC_STATUS
 |

188 
	`F_ISSET
(
•
, 
SC_EX
 | 
SC_VI
 | 
SC_SCR_VI
 | 
SC_SCR_EX
));

190 
	}
}

200 
	$vs_disˇrd
(
•
, 
•p
)

201 
SCR
 *
•
, **
•p
;

203 
SCR
 *
n•
;

204 
dú_t
 
dú
;

213 i‡(
•
->
‰p
 !
NULL
) {

214 
•
->
‰p
->
 o
 = sp->lno;

215 
•
->
‰p
->
˙o
 = sp->cno;

216 
	`F_SET
(
•
->
‰p
, 
FR_CURSORSET
);

224 i‡((
n•
 = 
•
->
q
.
cqe_¥ev
Ë!(*)&•->
gp
->
dq
) {

225 
n•
->
rows
 +
•
->rows;

226 
•
 = 
n•
;

227 
dú
 = 
FORWARD
;

228 } i‡((
n•
 = 
•
->
q
.
cqe_√xt
Ë!(*)&•->
gp
->
dq
) {

229 
n•
->
woff
 = 
•
->woff;

230 
n•
->
rows
 +
•
->rows;

231 
•
 = 
n•
;

232 
dú
 = 
BACKWARD
;

234 
•
 = 
NULL
;

236 i‡(
•p
 !
NULL
)

237 *
•p
 = 
•
;

238 i‡(
•
 =
NULL
)

250 i‡(!
	`IS_SMALL
(
•
))

251 
•
->
t_rows
 = sp->
t_mörows
 = sp->
rows
 - 1;

252 
•
->
t_maxrows
 = sp->
rows
 - 1;

253 
•
->
defs¸ﬁl
 = sp->
t_maxrows
 / 2;

254 *(
HMAP
 + (
•
->
t_rows
 - 1)Ë*
TMAP
;

255 
TMAP
 = 
HMAP
 + (
•
->
t_rows
 - 1);

265 
dú
) {

266 
FORWARD
:

267 
	`vs_sm_fûl
(
•
, 
OOBLNO
, 
P_TOP
);

269 
BACKWARD
:

270 
	`vs_sm_fûl
(
•
, 
OOBLNO
, 
P_BOTTOM
);

273 
	`ab‹t
();

276 
	`F_SET
(
•
, 
SC_STATUS
);

278 
	}
}

287 
	$vs_fg
(
•
, 
n•p
, 
«me
, 
√ws¸ìn
)

288 
SCR
 *
•
, **
n•p
;

289 
CHAR_T
 *
«me
;

290 
√ws¸ìn
;

292 
GS
 *
gp
;

293 
SCR
 *
n•
;

295 
gp
 = 
•
->gp;

297 i‡(
√ws¸ìn
)

299 
n•
 = 
	`vs_gëbg
(
•
, 
«me
);

302 i‡(
	`vs_sw≠
(
•
, &
n•
, 
«me
))

305 i‡((*
n•p
 = 
n•
Ë=
NULL
) {

306 
	`msgq_°r
(
•
, 
M_ERR
, 
«me
,

307 
«me
 =
NULL
 ?

313 i‡(
√ws¸ìn
) {

315 
	`CIRCLEQ_REMOVE
(&
gp
->
hq
, 
n•
, 
q
);

318 i‡(
	`vs_•lô
(
•
, 
n•
, 0)) {

319 
	`CIRCLEQ_INSERT_TAIL
(&
gp
->
hq
, 
n•
, 
q
);

324 
	`CIRCLEQ_REMOVE
(&
gp
->
dq
, 
•
, 
q
);

325 
	`CIRCLEQ_INSERT_TAIL
(&
gp
->
hq
, 
•
, 
q
);

328 
	}
}

337 
	$vs_bg
(
•
)

338 
SCR
 *
•
;

340 
GS
 *
gp
;

341 
SCR
 *
n•
;

343 
gp
 = 
•
->gp;

346 i‡(
	`vs_disˇrd
(
•
, &
n•
))

348 i‡(
n•
 =
NULL
) {

349 
	`msgq
(
•
, 
M_ERR
,

355 
	`CIRCLEQ_REMOVE
(&
gp
->
dq
, 
•
, 
q
);

356 
	`CIRCLEQ_INSERT_TAIL
(&
gp
->
hq
, 
•
, 
q
);

359 
	`‰ì
(
	`_HMAP
(
•
));

360 
	`_HMAP
(
•
Ë
NULL
;

363 
•
->
√xtdi•
 = 
n•
;

364 
	`F_SET
(
•
, 
SC_SSWITCH
);

367 
	}
}

376 
	$vs_sw≠
(
•
, 
n•p
, 
«me
)

377 
SCR
 *
•
, **
n•p
;

378 *
«me
;

380 
GS
 *
gp
;

381 
SCR
 *
n•
;

383 
gp
 = 
•
->gp;

386 i‡((*
n•p
 = 
n•
 = 
	`vs_gëbg
(
•
, 
«me
)Ë=
NULL
)

396 i‡(
•
->
‰p
 !
NULL
) {

397 
•
->
‰p
->
 o
 = sp->lno;

398 
•
->
‰p
->
˙o
 = sp->cno;

399 
	`F_SET
(
•
->
‰p
, 
FR_CURSORSET
);

403 
•
->
√xtdi•
 = 
n•
;

404 
	`F_SET
(
•
, 
SC_SSWITCH
);

407 
	`VIP
(
n•
)->
§ows
 = VIP(
•
)->srows;

410 
n•
->
cﬁs
 = 
•
->cols;

411 
n•
->
rows
 = 
•
->rows;

412 
n•
->
woff
 = 
•
->woff;

421 i‡(
	`IS_SMALL
(
n•
)) {

422 
n•
->
t_mörows
 =Ç•->
t_rows
 = 
	`O_VAL
“•, 
O_WINDOW
);

423 i‡(
n•
->
t_rows
 > 
•
->
t_maxrows
)

424 
n•
->
t_rows
 =Ç•->
t_maxrows
;

425 i‡(
n•
->
t_mörows
 > 
•
->
t_maxrows
)

426 
n•
->
t_mörows
 =Ç•->
t_maxrows
;

428 
n•
->
t_rows
 =Ç•->
t_maxrows
 =Ç•->
t_mörows
 =Ç•->
rows
 - 1;

431 
n•
->
defs¸ﬁl
 =Ç•->
t_maxrows
 / 2;

434 
	`CALLOC_RET
(
n•
, 
	`_HMAP
“•), 
SMAP
 *, 
	`SIZE_HMAP
(nsp), (SMAP));

435 
	`_TMAP
(
n•
Ë
	`_HMAP
“•Ë+ (n•->
t_rows
 - 1);

438 i‡(
	`vs_sm_fûl
(
n•
,Ç•->
 o
, 
P_FILL
))

447 
	`CIRCLEQ_REMOVE
(&
gp
->
hq
, 
n•
, 
q
);

448 
	`CIRCLEQ_INSERT_AFTER
(&
gp
->
dq
, 
•
, 
n•
, 
q
);

454 
	`F_SET
(
	`VIP
(
n•
), 
VIP_CUR_INVALID
);

457 
	`F_SET
(
n•
, 
SC_SCR_REDRAW
 | 
SC_STATUS
);

459 
	}
}

468 
	$vs_ªsize
(
•
, 
cou¡
, 
adj
)

469 
SCR
 *
•
;

470 
cou¡
;

471 
adj_t
 
adj
;

473 
GS
 *
gp
;

474 
SCR
 *
g
, *
s
;

475 
size_t
 
g_off
, 
s_off
;

477 
gp
 = 
•
->gp;

483 i‡(
cou¡
 == 0)

485 i‡(
adj
 =
A_SET
) {

486 i‡(
•
->
t_maxrows
 =
cou¡
)

488 i‡(
•
->
t_maxrows
 > 
cou¡
) {

489 
adj
 = 
A_DECREASE
;

490 
cou¡
 = 
•
->
t_maxrows
 - count;

492 
adj
 = 
A_INCREASE
;

493 
cou¡
 = cou¡ - 
•
->
t_maxrows
;

497 
g_off
 = 
s_off
 = 0;

498 i‡(
adj
 =
A_DECREASE
) {

499 i‡(
cou¡
 < 0)

500 
cou¡
 = -count;

501 
s
 = 
•
;

502 i‡(
s
->
t_maxrows
 < 
MINIMUM_SCREEN_ROWS
 + 
cou¡
)

503 
toosmÆl
;

504 i‡((
g
 = 
•
->
q
.
cqe_¥ev
Ë=(*)&
gp
->
dq
) {

505 i‡((
g
 = 
•
->
q
.
cqe_√xt
Ë=(*)&
gp
->
dq
)

506 
toobig
;

507 
g_off
 = -
cou¡
;

509 
s_off
 = 
cou¡
;

511 
g
 = 
•
;

512 i‡((
s
 = 
•
->
q
.
cqe_√xt
Ë!(*)&
gp
->
dq
)

513 i‡(
s
->
t_maxrows
 < 
MINIMUM_SCREEN_ROWS
 + 
cou¡
)

514 
s
 = 
NULL
;

516 
s_off
 = 
cou¡
;

518 
s
 = 
NULL
;

519 i‡(
s
 =
NULL
) {

520 i‡((
s
 = 
•
->
q
.
cqe_¥ev
Ë=(*)&
gp
->
dq
) {

521 
toobig
: 
	`msgq
(
•
, 
M_BERR
, 
adj
 =
A_DECREASE
 ?

526 i‡(
s
->
t_maxrows
 < 
MINIMUM_SCREEN_ROWS
 + 
cou¡
) {

527 
toosmÆl
: 
	`msgq
(
•
, 
M_BERR
,

529 
MINIMUM_SCREEN_ROWS
);

532 
g_off
 = -
cou¡
;

541 
s
->
rows
 +-
cou¡
;

542 
s
->
woff
 +
s_off
;

543 
g
->
rows
 +
cou¡
;

544 
g
->
woff
 +
g_off
;

546 
g
->
t_rows
 +
cou¡
;

547 i‡(
g
->
t_mörows
 =g->
t_maxrows
)

548 
g
->
t_mörows
 +
cou¡
;

549 
g
->
t_maxrows
 +
cou¡
;

550 
	`_TMAP
(
g
Ë+
cou¡
;

551 
	`F_SET
(
g
, 
SC_SCR_REFORMAT
 | 
SC_STATUS
);

553 
s
->
t_rows
 -
cou¡
;

554 
s
->
t_maxrows
 -
cou¡
;

555 i‡(
s
->
t_mörows
 > s->
t_maxrows
)

556 
s
->
t_mörows
 = s->
t_maxrows
;

557 
	`_TMAP
(
s
Ë-
cou¡
;

558 
	`F_SET
(
s
, 
SC_SCR_REFORMAT
 | 
SC_STATUS
);

561 
	}
}

568 
SCR
 *

569 
	$vs_gëbg
(
•
, 
«me
)

570 
SCR
 *
•
;

571 *
«me
;

573 
GS
 *
gp
;

574 
SCR
 *
n•
;

575 *
p
;

577 
gp
 = 
•
->gp;

580 i‡(
«me
 =
NULL
) {

581 
n•
 = 
gp
->
hq
.
cqh_fú°
;

582  (
n•
 =(*)&
gp
->
hq
 ? 
NULL
 :Çsp);

586 
n•
 = 
gp
->
hq
.
cqh_fú°
;

587 
n•
 !(*)&
gp
->
hq
;Ç• =Ç•->
q
.
cqe_√xt
)

588 i‡(!
	`°rcmp
(
n•
->
‰p
->
«me
,Çame))

590 i‡(
n•
 !(*)&
gp
->
hq
)

591  (
n•
);

594 
n•
 = 
gp
->
hq
.
cqh_fú°
;

595 
n•
 !(*)&
gp
->
hq
;Ç• =Ç•->
q
.
cqe_√xt
) {

596 i‡((
p
 = 
	`°ºchr
(
n•
->
‰p
->
«me
, '/')Ë=
NULL
)

597 
p
 = 
n•
->
‰p
->
«me
;

599 ++
p
;

600 i‡(!
	`°rcmp
(
p
, 
«me
))

603 i‡(
n•
 !(*)&
gp
->
hq
)

604  (
n•
);

606  (
NULL
);

607 
	}
}

	@
1
.
0
262
3916
build/acconfig.h
build/config.h
build/pathnames.h
build/port.h
catalog/dump.c
cl/cl.h
cl/cl_bsd.c
cl/cl_funcs.c
cl/cl_main.c
cl/cl_read.c
cl/cl_screen.c
cl/cl_term.c
clib/bsearch.c
clib/env.c
clib/gethostname.c
clib/getopt.c
clib/memchr.c
clib/memmove.c
clib/memset.c
clib/mkstemp.c
clib/mmap.c
clib/snprintf.c
clib/strdup.c
clib/strerror.c
clib/strpbrk.c
clib/strsep.c
clib/strtol.c
clib/strtoul.c
clib/vsnprintf.c
common/api.c
common/args.h
common/common.h
common/cut.c
common/cut.h
common/delete.c
common/exf.c
common/exf.h
common/gs.h
common/key.c
common/key.h
common/line.c
common/log.c
common/log.h
common/main.c
common/mark.c
common/mark.h
common/mem.h
common/msg.c
common/msg.h
common/options.c
common/options.h
common/options_f.c
common/put.c
common/recover.c
common/screen.c
common/screen.h
common/search.c
common/seq.c
common/seq.h
common/util.c
common/util.h
curses/addbytes.c
curses/addch.c
curses/box.c
curses/clear.c
curses/clrtobot.c
curses/clrtoeol.c
curses/cr_put.c
curses/ctrace.c
curses/cur_hash.c
curses/curses.c
curses/curses.h
curses/delch.c
curses/deleteln.c
curses/delwin.c
curses/erase.c
curses/fullname.c
curses/getch.c
curses/getstr.c
curses/id_subwins.c
curses/idlok.c
curses/initscr.c
curses/insch.c
curses/insertln.c
curses/longname.c
curses/move.c
curses/mvwin.c
curses/newwin.c
curses/overlay.c
curses/overwrite.c
curses/putchar.c
curses/refresh.c
curses/scroll.c
curses/setterm.c
curses/standout.c
curses/toucholap.c
curses/touchwin.c
curses/tscroll.c
curses/tstp.c
curses/tty.c
curses/unctrl.c
curses/waddnstr.c
db/btree/bt_close.c
db/btree/bt_conv.c
db/btree/bt_debug.c
db/btree/bt_delete.c
db/btree/bt_get.c
db/btree/bt_open.c
db/btree/bt_overflow.c
db/btree/bt_page.c
db/btree/bt_put.c
db/btree/bt_search.c
db/btree/bt_seq.c
db/btree/bt_split.c
db/btree/bt_utils.c
db/btree/btree.h
db/btree/extern.h
db/db/db.c
db/include/db.h
db/include/mpool.h
db/mpool/mpool.c
db/recno/extern.h
db/recno/rec_close.c
db/recno/rec_delete.c
db/recno/rec_get.c
db/recno/rec_open.c
db/recno/rec_put.c
db/recno/rec_search.c
db/recno/rec_seq.c
db/recno/rec_utils.c
db/recno/recno.h
ex/ex.c
ex/ex.h
ex/ex_abbrev.c
ex/ex_append.c
ex/ex_args.c
ex/ex_argv.c
ex/ex_at.c
ex/ex_bang.c
ex/ex_cd.c
ex/ex_cmd.c
ex/ex_cscope.c
ex/ex_delete.c
ex/ex_display.c
ex/ex_edit.c
ex/ex_equal.c
ex/ex_file.c
ex/ex_filter.c
ex/ex_global.c
ex/ex_init.c
ex/ex_join.c
ex/ex_map.c
ex/ex_mark.c
ex/ex_mkexrc.c
ex/ex_move.c
ex/ex_open.c
ex/ex_perl.c
ex/ex_preserve.c
ex/ex_print.c
ex/ex_put.c
ex/ex_quit.c
ex/ex_read.c
ex/ex_screen.c
ex/ex_script.c
ex/ex_set.c
ex/ex_shell.c
ex/ex_shift.c
ex/ex_source.c
ex/ex_stop.c
ex/ex_subst.c
ex/ex_tag.c
ex/ex_tcl.c
ex/ex_txt.c
ex/ex_undo.c
ex/ex_usage.c
ex/ex_util.c
ex/ex_version.c
ex/ex_visual.c
ex/ex_write.c
ex/ex_yank.c
ex/ex_z.c
ex/script.h
ex/tag.h
ex/version.h
include/bitstring.h
include/cl_extern.h
include/com_extern.h
include/ex_def.h
include/ex_extern.h
include/ip_extern.h
include/options_def.h
include/perl_extern.h
include/sys/queue.h
include/tcl_extern.h
include/tk_extern.h
include/vi_extern.h
ip/ip.h
ip/ip_funcs.c
ip/ip_main.c
ip/ip_read.c
ip/ip_screen.c
ip/ip_term.c
ip_cl/ip_cl.c
perl_api/perlsfio.c
regex/cclass.h
regex/cname.h
regex/engine.c
regex/regcomp.c
regex/regerror.c
regex/regex.h
regex/regex2.h
regex/regexec.c
regex/regfree.c
regex/utils.h
tcl_api/tcl.c
tk/tk_funcs.c
tk/tk_main.c
tk/tk_read.c
tk/tk_screen.c
tk/tk_term.c
tk/tk_util.c
tk/tki.h
vi/getc.c
vi/v_at.c
vi/v_ch.c
vi/v_cmd.c
vi/v_delete.c
vi/v_ex.c
vi/v_increment.c
vi/v_init.c
vi/v_itxt.c
vi/v_left.c
vi/v_mark.c
vi/v_match.c
vi/v_paragraph.c
vi/v_put.c
vi/v_redraw.c
vi/v_replace.c
vi/v_right.c
vi/v_screen.c
vi/v_scroll.c
vi/v_search.c
vi/v_section.c
vi/v_sentence.c
vi/v_status.c
vi/v_txt.c
vi/v_ulcase.c
vi/v_undo.c
vi/v_util.c
vi/v_word.c
vi/v_xchar.c
vi/v_yank.c
vi/v_z.c
vi/v_zexit.c
vi/vi.c
vi/vi.h
vi/vs_line.c
vi/vs_msg.c
vi/vs_refresh.c
vi/vs_relative.c
vi/vs_smap.c
vi/vs_split.c
